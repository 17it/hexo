{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/images/flutter/flutter plugin 2.png","path":"images/flutter/flutter plugin 2.png","modified":0,"renderable":0},{"_id":"source/images/flutter/flutter plugin.png","path":"images/flutter/flutter plugin.png","modified":0,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"source/images/flutter/flutter plugin 3.png","path":"images/flutter/flutter plugin 3.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1655206529772},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1655206529772},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1655206529772},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1655206529772},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1655206529772},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1655206529772},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1655206529772},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1655206529772},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1655206529772},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1655206529778},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1655206529772},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1655206529772},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1655206529772},{"_id":"themes/next/_config.yml","hash":"609e8aa247e320526dec02e3ae54b2a12823389f","modified":1655278977204},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1655206529772},{"_id":"source/_posts/Aliyun+Nginx部署网站.md","hash":"5a653b3fe0dfbe67f20388aee8b0492f690a6d45","modified":1655281052148},{"_id":"source/_posts/Html5-ReplaceState实现详情页到列表页的无刷新且回到上次位置.md","hash":"69dec6a843e551da52389cff33c109e69ffb371f","modified":1655281018516},{"_id":"source/_posts/Hello-world.md","hash":"50dee5dd9a4b7090b7a5c86379fa63f7e6b09a8f","modified":1655281024860},{"_id":"source/_posts/H5页面实现直播.md","hash":"1d86abd62239689d961f9e16b21e84c35b9e6f55","modified":1655281035484},{"_id":"source/_posts/JS奇技淫巧.md","hash":"546c29773f76c2d4dfcb5621d3b6553d516de231","modified":1655281002720},{"_id":"source/_posts/Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客.md","hash":"f7bd7a65d4d0176a48d50ca63d0ecc6827c39500","modified":1655280992302},{"_id":"source/_posts/Mac下搭安卓模拟器的艰辛之路.md","hash":"dfe0e67b7895e0bced61b610ccc40095fb6583bf","modified":1655282294721},{"_id":"source/_posts/JavaScript学习笔记.md","hash":"4e0ea1d98c7a65aabed6c589e77f1ffa15fa4072","modified":1655281010735},{"_id":"source/_posts/centos搭建rabbitmq（一）.md","hash":"a0c597ad6336d6024b441d7be2822f21264db401","modified":1655281457156},{"_id":"source/_posts/Vue-cli快速搭建Vue.md","hash":"4b79ef79f90901124c2894a1721109c6beea9067","modified":1655280975721},{"_id":"source/_posts/Linux-CentOS-7.2.x下安装mysql.md","hash":"1dbb44ea2f2233f009d94f93a4529818e5777668","modified":1655280987019},{"_id":"source/_posts/centos搭建rabbitmq（二）.md","hash":"5aaa451b2024dc78c959326f195ea89d33581a39","modified":1655281465581},{"_id":"source/_posts/flutter插件开发实践.md","hash":"dbfec4475244dbd17e0b1414322b8e2c79dda79f","modified":1655281693289},{"_id":"source/_posts/lbz客户端与H5交互sdk.md","hash":"726667de935544ee3dcd065484b4c997179fce98","modified":1655281257876},{"_id":"source/_posts/proxy代理.md","hash":"f147b9d2fdb9b8cd1bbc677fd0c4e9f8aa756d88","modified":1655281733365},{"_id":"source/_posts/yarn和npm对比.md","hash":"9b40c97a3078ce9e766709340707d13eebad3b1c","modified":1655281709414},{"_id":"source/_posts/习题.md","hash":"ad0df88155d06961bee27c8698caf2b1431501e4","modified":1655281616624},{"_id":"source/_posts/从0开始搭建日志分析系统（一）.md","hash":"542aabc0b04aba336f9b1f3444040d08abbcbce2","modified":1655281235024},{"_id":"source/_posts/从0开始搭建日志分析系统（二）.md","hash":"464a996cee72719b69a397cbd50f7822e0621b16","modified":1655281240775},{"_id":"source/_posts/从0开始搭建日志分析系统（三）.md","hash":"cde8f8b5035cc36790877f567dbcbe06f95f79a3","modified":1655281235022},{"_id":"source/_posts/多table滚动联动.md","hash":"f83e08fa5834adff9ccd1c67f0d72670f54faf75","modified":1655281753024},{"_id":"source/_posts/全国省市县三级地址联动js.md","hash":"22c894e0ea3bdf23eeb3fd1fe5140122df0f4794","modified":1655280965458},{"_id":"source/_posts/几种JS里数组去重方法比较.md","hash":"55ad09c8aaf639dec955bc4df1f4ba83a295be35","modified":1655281627374},{"_id":"source/_posts/原生JS的debounce和throttle.md","hash":"d89c8c4985bf40de5331b81c1b2bf56ca0e794bc","modified":1655280948256},{"_id":"source/_posts/字节跳动面试题.md","hash":"29ddca21e5822ecbe03d48789527ba1a26d82601","modified":1655281669985},{"_id":"source/_posts/实用-css容器垂直水平居中.md","hash":"46093ab4ff5cd915470f07d005960d8922b6a9e6","modified":1655281197579},{"_id":"source/_posts/微信开发本地调试.md","hash":"c9e071f3bdb017e8e14df5e8a46ebd29becaace4","modified":1655281544038},{"_id":"source/_posts/正则.md","hash":"9896a76dcc02cffbae03c5a31993ef6e01dd441a","modified":1655281768124},{"_id":"source/_posts/谈谈css里面的一些小知识.md","hash":"d987f2fe810876e3dde78be84519cd1c2fd85439","modified":1655280515064},{"_id":"source/_posts/让js文件支持cmd、node、script标签方式引用.md","hash":"fc61d41f888d9df95b6897eba981e214d8858fce","modified":1655281506449},{"_id":"source/_posts/水滴筹笔试题.md","hash":"d7f66975a5720bd8d87f14ae76c28941996ea4a8","modified":1655281649810},{"_id":"source/_posts/谈谈node_env.md","hash":"906dacaf49614c6ba8d86d8b561ed1bef5402f94","modified":1655281527845},{"_id":"source/_posts/浅谈js中对象的赋值、深拷贝、浅拷贝.md","hash":"17a3afa0543986851672958c22316e9b417ddc87","modified":1655281490558},{"_id":"source/about/index.md","hash":"41269c2ec88852b71704061281a1baa2154371d1","modified":1655206529764},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1655206529772},{"_id":"source/categories/index.md","hash":"dde4b9500347f8a73dd240a3181119f19d4804c6","modified":1655206529764},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1655206529772},{"_id":"source/tags/index.md","hash":"0c83d49df17ca9395fa7a6a98b9cd47b0253d497","modified":1655206529765},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1655206529773},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1655206529773},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1655206529773},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1655206529773},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1655206529773},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1655206529773},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1655206529773},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1655206529773},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1655206529773},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1655206529773},{"_id":"themes/next/languages/ru.yml","hash":"7462c3017dae88e5f80ff308db0b95baf960c83f","modified":1655206529773},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1655206529773},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1655206529773},{"_id":"themes/next/layout/_layout.swig","hash":"909d68b164227fe7601d82e2303bf574eb754172","modified":1655206529773},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1655206529777},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655206529777},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1655206529777},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1655206529778},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655206529778},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1655206529778},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1655206529778},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1655206529778},{"_id":"themes/next/layout/schedule.swig","hash":"234dc8c3b9e276e7811c69011efd5d560519ef19","modified":1655206529778},{"_id":"themes/next/source/404.html","hash":"e8728b9385b48586d717e81f40e61102e0b90b6a","modified":1655206529778},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1655206529795},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1655206529795},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1655206529795},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529784},{"_id":"source/_posts/proxy代理/图片2.png","hash":"3f48c99846d5673821822842045463bf90034195","modified":1655206529761},{"_id":"source/_posts/proxy代理/图片1.png","hash":"a784ca97804bbb16cba21f3602b6a409a28f699d","modified":1655206529761},{"_id":"source/_posts/proxy代理/图片4.png","hash":"6c548309423c3ac7ce6ed16e58bca5ec811736b1","modified":1655206529762},{"_id":"source/_posts/正则/图片1.png","hash":"73f734c8dfe362576c0b26da117bfd4d3727d071","modified":1655206529764},{"_id":"source/images/flutter/flutter plugin 2.png","hash":"6ec73d7d2be1c97622e2fb17d916b3d6e17759b3","modified":1655206529765},{"_id":"source/images/flutter/flutter plugin.png","hash":"2848310ca5315225b4666fa6ab63a395cdd83da4","modified":1655206529765},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1655206529773},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1655206529773},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1655206529773},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1655206529774},{"_id":"themes/next/layout/_macro/post.swig","hash":"640b431eccbbd27f10c6781f33db5ea9a6e064de","modified":1655280419917},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1655206529774},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1655206529774},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1655206529774},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1655206529774},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1655206529774},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1655206529774},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1655206529774},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1655206529774},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"26d95dfc5220d041841fa4ac66adb53d768b23d5","modified":1655278780799},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1655206529774},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1655206529775},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1655206529775},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9de352a32865869e7ed6863db271c46db5853e5a","modified":1655206529775},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1655206529777},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1655206529777},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1655206529777},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1655206529777},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1655206529778},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1655206529778},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1655206529778},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1655206529778},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1655206529778},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1655206529778},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1655206529784},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1655206529784},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1655206529785},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1655206529785},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1655206529784},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1655206529785},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1655206529785},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1655206529785},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1655206529785},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1655206529785},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1655206529785},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1655206529785},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1655206529785},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1655206529785},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1655206529784},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529775},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529775},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529782},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529782},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529782},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529784},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655206529784},{"_id":"source/_posts/proxy代理/图片3.png","hash":"b48e8a092e1b01042003d68463f83ca844bb0b19","modified":1655206529762},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1655206529774},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1655206529774},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1655206529774},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1655206529774},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1655206529774},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1655206529775},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1655206529775},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1655206529775},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1655206529775},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1655206529775},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1655206529775},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1655206529775},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1655206529776},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1655206529776},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1655206529777},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1655206529777},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1655206529777},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1655206529777},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1655206529777},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1655206529777},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1655206529777},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1655206529785},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1655206529785},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1655206529785},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1655206529786},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1655206529786},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1655206529786},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1655206529786},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1655206529786},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1655206529786},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1655206529788},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1655206529789},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1655206529789},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1655206529789},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1655206529789},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1655206529789},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1655206529789},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1655206529789},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1655206529789},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1655206529792},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1655206529792},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"5b38ae00297ffc07f433c632c3dbf7bde4cdf39a","modified":1655206529792},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1655206529794},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1655206529794},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1655206529795},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1655206529795},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1655206529795},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1655206529782},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1655206529782},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1655206529782},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1655206529784},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1655206529784},{"_id":"themes/next/source/css/_variables/base.styl","hash":"28a7f84242ca816a6452a0a79669ca963d824607","modified":1655206529784},{"_id":"source/images/flutter/flutter plugin 3.png","hash":"c6e842e6252b52a369b7e50b95fa8eedd1612add","modified":1655206529765},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1655206529786},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1655206529792},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1655206529777},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1655206529777},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1655206529786},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1655206529789},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1655206529789},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1655206529789},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1655206529789},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1655206529790},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1655206529790},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1655206529790},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1655206529794},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1655206529794},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1655206529782},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1655206529781},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1655206529782},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1655206529782},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1655206529782},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1655206529782},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1655206529782},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1655206529784},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1655206529784},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1655206529784},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1655206529784},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1655206529784},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1655206529788},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1655206529792},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1655206529791},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1655206529795},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1655206529788},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1655206529788},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1655206529779},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"c196401747019d389da09b7a0fe7f27e3a0ec01f","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1655206529780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1655206529781},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1655206529782},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1655206529782},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1655206529782},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1655206529782},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1655206529782},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1655206529783},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1655206529783},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1655206529790},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1655206529791},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1655206529791},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1655206529787},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1655206529794},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1655206529791},{"_id":"source/_posts/M1芯片Mac隐私权限不显示应用的解决办法.md","hash":"28d6a37f0563fef6c14e2ef78308836e960531a2","modified":1655282258083},{"_id":"public/about/index.html","hash":"42a19ad575265a394b0b3130d089569047b4c2b8","modified":1657219566546},{"_id":"public/categories/index.html","hash":"a12c77c8da246ba0b823ae437095354c543858c7","modified":1657219566546},{"_id":"public/tags/index.html","hash":"42a736bf61252cb9808e56ed99fcd4d7c242ac12","modified":1657219566546},{"_id":"public/2022/06/14/M1芯片Mac隐私权限不显示应用的解决办法/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/让js文件支持cmd、node、script标签方式引用/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/谈谈css里面的一些小知识/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/谈谈node_env/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/水滴筹笔试题/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/浅谈js中对象的赋值、深拷贝、浅拷贝/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/多table滚动联动/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/几种JS里数组去重方法比较/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/全国省市县三级地址联动js/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/原生JS的debounce和throttle/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/字节跳动面试题/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/实用-css容器垂直水平居中/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/微信开发本地调试/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/yarn和npm对比/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/习题/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/正则/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/从0开始搭建日志分析系统（三）/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/从0开始搭建日志分析系统（二）/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/从0开始搭建日志分析系统（一）/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/flutter插件开发实践/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/lbz客户端与H5交互sdk/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/proxy代理/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Aliyun+Nginx部署网站/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Html5-ReplaceState实现详情页到列表页的无刷新且回到上次位置/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/H5页面实现直播/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Hello-world/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/JS奇技淫巧/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/JavaScript学习笔记/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Mac下搭安卓模拟器的艰辛之路/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/centos搭建rabbitmq（一）/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Vue-cli快速搭建Vue/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/Linux-CentOS-7.2.x下安装mysql/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/2022/06/14/centos搭建rabbitmq（二）/index.html","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1655278123375},{"_id":"public/index.html","hash":"367c571ef190288d000ce22baf71d6dc406b921d","modified":1657219566546},{"_id":"public/page/2/index.html","hash":"0ac8aed74fdcfcd6bb4f10653cad09b1e8ec6df9","modified":1657219566546},{"_id":"public/page/3/index.html","hash":"ebb88e055206ae3af7edffe4899508442b3ce009","modified":1657219566546},{"_id":"public/page/4/index.html","hash":"5f2ec2173688f7e29ead95297c16288f15837dae","modified":1657219566546},{"_id":"public/categories/Nginx/index.html","hash":"a09020ea36fb85bbee6cba6e04d6cef167ef3aee","modified":1657219566546},{"_id":"public/categories/H5/index.html","hash":"5ab4c478f4ebf9ce90595be54a3097f3e4055bd1","modified":1657219566546},{"_id":"public/categories/JS/index.html","hash":"9d0fb969015788d654e84317340fe077a0b722bb","modified":1657219566546},{"_id":"public/categories/Linux/index.html","hash":"f13df5b61d1e6d2da766e0b8edfd94b85897b7d8","modified":1657219566546},{"_id":"public/categories/Mac/index.html","hash":"7780b604573448ff14c3faa7dc2d905eef820f7c","modified":1657219566546},{"_id":"public/categories/flutter/index.html","hash":"fe61119980f0135e0d8b4955c00d22da1a21ed26","modified":1657219566546},{"_id":"public/categories/web/index.html","hash":"f6c9e4710c62c53f2a0791be9a2a1b31a126ab6c","modified":1657219566546},{"_id":"public/categories/NODE-JS/index.html","hash":"5b9d8fc18d3a9dfb9e33400bee9d22f368198461","modified":1657219566546},{"_id":"public/categories/前端/index.html","hash":"d606988a3edfbcb766658297e8f9b03a8ae1d314","modified":1657219566546},{"_id":"public/categories/前端实用/index.html","hash":"e506098714237af614075b2a39b5acd6c037fc97","modified":1657219566546},{"_id":"public/categories/VUE-JS/index.html","hash":"7a484e10eab5248e53c456d8ee8fe924f25ff857","modified":1657219566546},{"_id":"public/categories/CSS/index.html","hash":"54a26b2a09d67873997f200e009c31047d241650","modified":1657219566546},{"_id":"public/archives/index.html","hash":"c078180fc53c2e13bdc1decb08217cda7441541c","modified":1657219566546},{"_id":"public/archives/page/2/index.html","hash":"5a1ddf684c19a7deb344193907bd371999e0da96","modified":1657219566546},{"_id":"public/archives/page/3/index.html","hash":"d1cfa708a408dbd661c1c0054bb87f0fd2abff91","modified":1657219566546},{"_id":"public/archives/page/4/index.html","hash":"f9e703bd52757383c629b1b2413b624c38bc0ec7","modified":1657219566546},{"_id":"public/archives/2022/index.html","hash":"de935290c93a9116bb50a53215acdab89187156b","modified":1657219566546},{"_id":"public/archives/2022/page/2/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/archives/2022/page/4/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/archives/2022/page/3/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/archives/2022/06/index.html","hash":"e195b2a7517a66be3aaadd3569e93c9d2d425fda","modified":1657219566546},{"_id":"public/archives/2022/06/page/2/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/archives/2022/06/page/4/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/archives/2022/06/page/3/index.html","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1655278123375},{"_id":"public/tags/Aliyun/index.html","hash":"7b06962a2538e31e6139dcae549170bfecbdab05","modified":1657219566546},{"_id":"public/tags/Nginx/index.html","hash":"d0044fb2d2e61edc512e8b3b33b02fc714b6d33d","modified":1657219566546},{"_id":"public/tags/JS/index.html","hash":"c169779fa917225eefa531a79933c27030d4d675","modified":1657219566546},{"_id":"public/tags/H5/index.html","hash":"6d21dadbbb0c96dfe970843b48cb4f41c6ddf577","modified":1657219566546},{"_id":"public/tags/JS/page/2/index.html","hash":"fc52854c89fdb12d274b1d74d0e2703e0495387f","modified":1657219566546},{"_id":"public/tags/Linux/index.html","hash":"98206980647061786a385b898384f60fc4fe1413","modified":1657219566546},{"_id":"public/tags/hexo/index.html","hash":"0df6ea8e647de45c71e71fe1b7ebcdbe2ed3300f","modified":1657219566546},{"_id":"public/tags/Mac/index.html","hash":"69aa53d34e7f131dd74b0902fd0744e5e9fd5b20","modified":1657219566546},{"_id":"public/tags/模拟器/index.html","hash":"5d26e87ffadad5ad572e408d2579c5281b7cf4f8","modified":1657219566546},{"_id":"public/tags/NodeJS/index.html","hash":"ebc94ee53b1cc399272eb7eda13429370fa9e21a","modified":1657219566546},{"_id":"public/tags/RabbitMQ/index.html","hash":"da7d904364dacb0d8afb4a1893abdfffe93c1c7c","modified":1657219566546},{"_id":"public/tags/Vue/index.html","hash":"3789ad2bbd3b9f4b53b7a439a0dc68abf59200c2","modified":1657219566546},{"_id":"public/tags/Vue-cli/index.html","hash":"37cee58ed1f2ccba7f11330d06ccde7bf3230670","modified":1657219566546},{"_id":"public/tags/mysql/index.html","hash":"9c610061e29a089631db0336d068a368b50ab4b5","modified":1657219566546},{"_id":"public/tags/Navicat/index.html","hash":"724dd3ea11204e6a7d50deb02ff187e27bcacd72","modified":1657219566546},{"_id":"public/tags/flutter/index.html","hash":"10a1a877405715d2bf774e664487f00cb9ad15f6","modified":1657219566546},{"_id":"public/tags/amqplib/index.html","hash":"b31d1d6d65ee4303aa0e26541b665eb573c5f10d","modified":1657219566546},{"_id":"public/tags/IOS/index.html","hash":"0fd224968cc5873e4811a795ae626202591ef942","modified":1657219566546},{"_id":"public/tags/plugin/index.html","hash":"5d8e46ca99dcb9c517ffe60777119bd42f72bcb9","modified":1657219566546},{"_id":"public/tags/Android/index.html","hash":"eb6de8d2f1f9ca0a9579d997f2c77df18e73a120","modified":1657219566546},{"_id":"public/tags/sdk/index.html","hash":"aecbcdae645b0ee801b4b3fc0e65c2eadedaf52d","modified":1657219566546},{"_id":"public/tags/proxy/index.html","hash":"4b615d69476c272ddbd1bef6a0444bdabf478137","modified":1657219566546},{"_id":"public/tags/web/index.html","hash":"3507b36471436738377fb225ea73c74b5d4f8fd1","modified":1657219566546},{"_id":"public/tags/NODE/index.html","hash":"e1d51d903445a6a53e1b8220e0d58f7d3169851d","modified":1657219566546},{"_id":"public/tags/前端/index.html","hash":"e045c326b6f8d12d13f1908aedd3342a96308892","modified":1657219566546},{"_id":"public/tags/其他/index.html","hash":"22a26e9f5c2e3316d022a96c42dc8d2133fee292","modified":1657219566546},{"_id":"public/tags/css/index.html","hash":"8efd3332db69befd78ae982e8fce1b2d3c83651b","modified":1657219566546},{"_id":"public/tags/垂直居中/index.html","hash":"15eef1b1403328517c480fae008fa49a3b58d670","modified":1657219566546},{"_id":"public/tags/VUE/index.html","hash":"bac6981aa0b0c27a8fcc06d91c63e1f97c4e1963","modified":1657219566546},{"_id":"public/tags/CSS/index.html","hash":"bec6654dae780f8ab3063fe8de7f266214c2c031","modified":1657219566546},{"_id":"source/_posts/乐必中项目打包上线流程.md","hash":"4f6ac8e5e5402820f6697d8991c148d45e2dfa7a","modified":1655281872353},{"_id":"source/_posts/letv.md","hash":"14f3d6270bcf2115de63b1a42cfd68e9a952ead7","modified":1655282195010},{"_id":"public/categories/Macos/index.html","hash":"2675ed70dace2e9132474b1810751b676ab24fb7","modified":1657219566546},{"_id":"public/archives/2017/page/2/index.html","hash":"46f444a508735538691f68f19db5f6e9425ac305","modified":1657219566546},{"_id":"public/archives/2017/03/page/2/index.html","hash":"8ae18040089d33ce4bccde8843a2a717118c1172","modified":1657219566546},{"_id":"public/archives/2017/04/index.html","hash":"aee76aee2d7fffc33e3890e09a6a66eb595f491c","modified":1657219566546},{"_id":"public/archives/2017/07/index.html","hash":"587b2441cb7be4e0b7c4409755e474096ef35db9","modified":1657219566546},{"_id":"public/archives/2018/page/2/index.html","hash":"decf909ca762f70df6ac45535182045d1b8c86ab","modified":1657219566546},{"_id":"public/archives/2018/01/index.html","hash":"fad2e57d66b06b6c02a9d6b53d8d75a778ea70b4","modified":1657219566546},{"_id":"public/archives/2018/03/index.html","hash":"3291132d29011e5c885ad01c8afcb60b79a34ad0","modified":1657219566546},{"_id":"public/archives/2018/06/index.html","hash":"78e01d9aecf56f582fba93400e047a56a7c227d2","modified":1657219566546},{"_id":"public/archives/2018/09/index.html","hash":"f353a363bfaceaa9afca746b44db230dd1ebb8c5","modified":1657219566546},{"_id":"public/archives/2018/10/index.html","hash":"792da1726ffc7f60c8e8d6f664e2f11106312043","modified":1657219566546},{"_id":"public/archives/2018/11/index.html","hash":"96255b098a618cb2e6381870c70888dc5e46b032","modified":1657219566546},{"_id":"public/archives/2019/index.html","hash":"775387228d6c36e2e39f337f3d424b6c15ff7f1d","modified":1657219566546},{"_id":"public/archives/2019/07/index.html","hash":"8b04ff149271d29e740dde95399940603138cf2e","modified":1657219566546},{"_id":"public/archives/2019/09/index.html","hash":"cfd34e3978b7b0308517ad209e31fc1ebac32a42","modified":1657219566546},{"_id":"public/archives/2019/10/index.html","hash":"0a179c55431a24c088ea267a819af059111bbcd1","modified":1657219566546},{"_id":"public/archives/2020/index.html","hash":"0c1d963ea872a071462d42bd0ca568f520822eb8","modified":1657219566546},{"_id":"public/archives/2020/08/index.html","hash":"d8341c1b09a3b2e8dce20ebf6caf780499828ea5","modified":1657219566546},{"_id":"public/archives/2020/09/index.html","hash":"16890e06fc81cf2bd93289d6d9d6aa9ae7a1b554","modified":1657219566546},{"_id":"public/archives/2021/index.html","hash":"5c5f338e2528af042185f576a3f509170be669ed","modified":1657219566546},{"_id":"public/archives/2021/03/index.html","hash":"aec9bbde7d4d60b10ff69e415ed204aeec9311b1","modified":1657219566546},{"_id":"public/categories/Lbz/index.html","hash":"910ec2fbf53c80f3bef32eb1dd6f4c725bbf2798","modified":1657219566546},{"_id":"public/tags/Macos/index.html","hash":"40acf1ece0a66458341498d148a4e30e032f5d94","modified":1657219566546},{"_id":"public/tags/打包/index.html","hash":"4cba0feb07940db5db2f604e9ece963ded0f1b74","modified":1657219566546},{"_id":"public/archives/2021/12/index.html","hash":"977b01ad9a452300044b87644a0b7f87ccb64bb4","modified":1657219566546},{"_id":"public/tags/dialry/index.html","hash":"9bdec7528aaac895e53854829052c62a604e20c0","modified":1657219566546},{"_id":"public/tags/Lbz/index.html","hash":"c1b04fd50f1960f460abe111a6bad0bb33a9a438","modified":1657219566546},{"_id":"public/2022/06/15/M1芯片Mac隐私权限不显示应用的解决办法/index.html","hash":"c8e2182bf056fadd2893b99dddeb62c2bcf350e2","modified":1657219566546},{"_id":"public/2021/03/16/proxy代理/index.html","hash":"7c49b3a11cc422f7ff239aa1e7fa4f282c8dd60a","modified":1657219566546},{"_id":"public/2020/09/08/yarn和npm对比/index.html","hash":"24ca28d8e7b0cbdf9d65adfb53bd9f242baab4c0","modified":1657219566546},{"_id":"public/2020/08/24/flutter插件开发实践/index.html","hash":"b026c78d411f2cbd3bb75e2d35044663044c1cdf","modified":1657219566546},{"_id":"public/2019/10/17/字节跳动面试题/index.html","hash":"048c66da214c6b77b07f9cb9a3471af338080ce0","modified":1657219566546},{"_id":"public/2019/10/09/水滴筹笔试题/index.html","hash":"2b5b85913e4833ae5a66475b2d91cdda5f8ebe8c","modified":1657219566546},{"_id":"public/2019/09/20/习题/index.html","hash":"abc3c29c586ca49b974c1bb24eadb8bcf567798e","modified":1657219566546},{"_id":"public/2019/09/20/几种JS里数组去重方法比较/index.html","hash":"954f5baf8fe2dc351b360c8e0e00eced76e79226","modified":1657219566546},{"_id":"public/2019/07/18/Mac下搭安卓模拟器的艰辛之路/index.html","hash":"757464c2eac0353e0b52a7a3291617fe8848d013","modified":1657219566546},{"_id":"public/2018/11/02/微信开发本地调试/index.html","hash":"be2489d20b478d4bcee1c9d115639cfa3df62a62","modified":1657219566546},{"_id":"public/2018/10/28/谈谈node_env/index.html","hash":"1c6cf754813f16fb4097bc9b6378d92b3c1f1061","modified":1657219566546},{"_id":"public/2018/10/08/让js文件支持cmd、node、script标签方式引用/index.html","hash":"d0d7b895e3aeffb66119040fe0b89e929e8bce9d","modified":1657219566546},{"_id":"public/2018/10/08/浅谈js中对象的赋值、深拷贝、浅拷贝/index.html","hash":"771c16b376db3c56d45eaf31233027324023e936","modified":1657219566546},{"_id":"public/2018/09/03/centos搭建rabbitmq（一）/index.html","hash":"075569025e7eb3146bf80c57f3a3536106077747","modified":1657219566546},{"_id":"public/2018/09/03/centos搭建rabbitmq（二）/index.html","hash":"8b8cc2dd4c0a438b2f32c28304551011d29f6680","modified":1657219566546},{"_id":"public/2018/06/22/乐必中项目打包上线流程/index.html","hash":"4239db0220db46c0fada0617664b83d08918ccbd","modified":1657219566546},{"_id":"public/2018/03/13/lbz客户端与H5交互sdk/index.html","hash":"349748c035a251883971736c814254fcdd16c777","modified":1657219566546},{"_id":"public/2018/01/09/从0开始搭建日志分析系统（三）/index.html","hash":"7be540a4fb32d73e16bd6e8c4d059fcc61e8108e","modified":1657219566546},{"_id":"public/2018/01/09/从0开始搭建日志分析系统（二）/index.html","hash":"d831ddc975cbb55effe60fdcb8dbfedce5434fa5","modified":1657219566546},{"_id":"public/2018/01/09/从0开始搭建日志分析系统（一）/index.html","hash":"e6ff74c43c7fd3a32e25df6334591ef0573ac0a6","modified":1657219566546},{"_id":"public/2017/07/18/实用-css容器垂直水平居中/index.html","hash":"3a4937565913ab2d5848b9c1ed2fed5b01ff6811","modified":1657219566546},{"_id":"public/2017/04/17/letv/index.html","hash":"f2b219514d5a51365b8727cafa56be3fe34af2bf","modified":1657219566546},{"_id":"public/2017/03/05/Aliyun+Nginx部署网站/index.html","hash":"f9bcf1d698071c5f8424ccb58cccc64ebda78787","modified":1657219566546},{"_id":"public/2017/03/05/Html5-ReplaceState实现详情页到列表页的无刷新且回到上次位置/index.html","hash":"aaefaff306f1036f0fa5263643142f028c151dc1","modified":1657219566546},{"_id":"public/2021/12/10/多table滚动联动/index.html","hash":"e1a924c35a84de6d4c8110c53e7113e2b39ec014","modified":1657219566546},{"_id":"public/2021/12/10/正则/index.html","hash":"6c0c3e5d54e03c79dec2743fe108b655a7dad3af","modified":1657219566546},{"_id":"public/2017/03/05/JS奇技淫巧/index.html","hash":"f2d276d54b124c69f0981f78a4163752ccadff42","modified":1657219566546},{"_id":"public/2017/03/05/H5页面实现直播/index.html","hash":"b643315493e5cbc4c245c61b077b152788d2a88b","modified":1657219566546},{"_id":"public/2017/03/05/Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客/index.html","hash":"14f874b553f4d38892477df40b724365ed491caf","modified":1657219566546},{"_id":"public/2017/03/05/JavaScript学习笔记/index.html","hash":"eed8cbd1ff7c1bb00e507f5434c7111cef9ad1b0","modified":1657219566546},{"_id":"public/2017/03/05/Vue-cli快速搭建Vue/index.html","hash":"d85085273c9de3070614b02c74d0e955fb274243","modified":1657219566546},{"_id":"public/2017/03/05/Linux-CentOS-7.2.x下安装mysql/index.html","hash":"0fbb0d3b59d89db45b26e10bd3473696a6d61b61","modified":1657219566546},{"_id":"public/2017/03/05/原生JS的debounce和throttle/index.html","hash":"bac8ae994de44da6e984fe99c1080e8959355f35","modified":1657219566546},{"_id":"public/2017/03/05/全国省市县三级地址联动js/index.html","hash":"f8136a8e7cb80fe87eb8e0c9e63dc99225b39915","modified":1657219566546},{"_id":"public/2017/03/05/谈谈css里面的一些小知识/index.html","hash":"0131296666b0f2d076b7f77cfa12e18d9397cc7c","modified":1657219566546},{"_id":"public/archives/2017/index.html","hash":"44ff8b8ec9c630367c95837259ee151a9653d25f","modified":1657219566546},{"_id":"public/archives/2017/03/index.html","hash":"488b16f66954a2499261a1f6f6ff6bf655088ba8","modified":1657219566546},{"_id":"public/archives/2018/index.html","hash":"1cadefc258f0c529f92e28e11765991753f5799a","modified":1657219566546},{"_id":"public/2017/03/05/Hello-world/index.html","hash":"03b4ad0aad606eae257a4b1c3df102b7ba14f91b","modified":1657219566546},{"_id":"public/2021/12/10/正则/图片1.png","hash":"73f734c8dfe362576c0b26da117bfd4d3727d071","modified":1655282346940},{"_id":"source/_posts/husky+lint-staged实现代码提交前校验.md","hash":"8e0e8c231a64fdcc858957b28ffaf3ccaddc1dd3","modified":1657215396882},{"_id":"source/.DS_Store","hash":"cd4ee09695509e83ada0d98dfd3149e437002171","modified":1655283065829},{"_id":"source/_posts/eslint实践.md","hash":"af0a18e618d4357fc474aed9146c205996cbe764","modified":1657218611755},{"_id":"source/_posts/stylelint实践.md","hash":"4d6e70be0ac07990934309083dca12c9c6d23f22","modified":1657217628528},{"_id":"source/_posts/uni-app项目往cli模式迁移.md","hash":"6b9d4b562cf77a42f0b1cc1d53402e11ae23cf70","modified":1657219450037},{"_id":"source/_posts/uni-app引用原生小程序组件.md","hash":"d744df5e1e84448b910b751114403e6eab28c5c0","modified":1657218903204},{"_id":"public/categories/NODE-CSS/index.html","hash":"108a3b849acb44099df72d9bcab1982524852d6f","modified":1657219566546},{"_id":"public/categories/GIT/index.html","hash":"39689ae83db4b069f116b944a24fc0f3c81a78bf","modified":1657219566546},{"_id":"public/categories/UniApp-小程序/index.html","hash":"55dadceb9562a79ff4313ecd5dfea356f938b56c","modified":1657219566546},{"_id":"public/archives/page/5/index.html","hash":"1d196e0d2ca58e9a01d3f9f5f5d4753c91adc031","modified":1657219566546},{"_id":"public/archives/2022/07/index.html","hash":"fbcaf3c8b3120915cb38c24df02477c6d7980766","modified":1657219566546},{"_id":"public/tags/CI-CD/index.html","hash":"fafe22cb064b380ca7f93ad57921654e1c682c65","modified":1657219566546},{"_id":"public/tags/GIT/index.html","hash":"5d34c58b9e833757df65b215d04656becdc8ea00","modified":1657219566546},{"_id":"public/tags/UniApp/index.html","hash":"b4bfdb2416964f805473b87c1c21dcfb0a175b0f","modified":1657219566546},{"_id":"public/page/5/index.html","hash":"df12af7aec7cd52672959822234de2d5c1634432","modified":1657219566546},{"_id":"public/2022/07/08/eslint实践/index.html","hash":"71c8cc3f04fca8789f144769eaad77e86f8d2014","modified":1657219566546},{"_id":"public/2022/07/08/husky+lint-staged实现代码提交前校验/index.html","hash":"3416c357296feb49cbf521895de8bb712a9f0e0f","modified":1657219566546},{"_id":"public/2022/07/08/stylelint实践/index.html","hash":"e508ebe7bee9023733c6631d872dafcfc1de9543","modified":1657219566546},{"_id":"public/2022/07/08/uni-app项目往cli模式迁移/index.html","hash":"0875bb2ccf60638fb92d940f342038b62bcb40df","modified":1657219566546},{"_id":"public/2022/07/08/uni-app引用原生小程序组件/index.html","hash":"ec8faf3765880593c80a403deab0b4c751519271","modified":1657219566546},{"_id":"public/tags/小程序/index.html","hash":"721639e45c2b3ca83f821fbf6d12cfdf4f89884f","modified":1657219566546}],"Category":[{"name":"Nginx","_id":"cl4e3ayw00002k4rqv2u6ipsx"},{"name":"H5","_id":"cl4e3ayw30007k4rq5q27pri6"},{"name":"JS","_id":"cl4e3ayw6000jk4rq3qg4w01h"},{"name":"Linux","_id":"cl4e3aywa000pk4rqgiis00zt"},{"name":"Mac","_id":"cl4e3aywb000wk4rqhokjgazd"},{"name":"flutter","_id":"cl4e3aywe001ek4rqcuyu2xuj"},{"name":"web","_id":"cl4e3aywf001ik4rqcvs4didy"},{"name":"NODE JS","_id":"cl4e3aywf001mk4rqd2z5bo4z"},{"name":"前端","_id":"cl4e3aywg001rk4rq2aohxrj8"},{"name":"前端实用","_id":"cl4e3az0r003uk4rqxbp54yl1"},{"name":"VUE JS","_id":"cl4e3az0u0043k4rqiqf0epuv"},{"name":"CSS","_id":"cl4e3az0v004bk4rqffsbt131"},{"name":"Macos","_id":"cl4fa14ue0000kprqc23148n6"},{"name":"lbz","_id":"cl4fbs9tg0002zfrqe2f51s1d"},{"name":"Lbz","_id":"cl4fc376s0000jnrqhckd2kj4"},{"name":"GIT","_id":"cl5bb2bra0005bks6b8v7fq8v"},{"name":"NODE CSS","_id":"cl5bb7xnm000fbks643ri2vtj"},{"name":"UniApp 小程序","_id":"cl5bdb2pn000mbks6fp3mgh64"}],"Data":[],"Page":[{"title":"关于","date":"2017-04-05T06:22:48.000Z","_content":"\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-04-05 14:22:48\n---\n\n","updated":"2022-06-14T11:35:29.764Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl4e3az080035k4rq49dis7vz","content":"","excerpt":"","more":""},{"title":"分类","date":"2017-04-05T03:08:40.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-04-05 11:08:40\ntype: \"categories\"\n---\n","updated":"2022-06-14T11:35:29.764Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl4e3az090037k4rq93rsh49m","content":"","excerpt":"","more":""},{"title":"标签","date":"2017-04-05T03:02:12.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-04-05 11:02:12\ntype: \"tags\"\n---\n","updated":"2022-06-14T11:35:29.765Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl4e3az0d003ak4rqk0x4j55w","content":"","excerpt":"","more":""}],"Post":[{"title":"Aliyun+Nginx部署网站","date":"2017-03-04T16:00:00.000Z","_content":"\n从零开始基于阿里云服务器和nginx搭建网站\n<!-- more -->\n\n### 一、购买 阿里云ECS 云服务器\n+ 选择 Linux CentOS 类型的\n+ Mac下可以直接使用ssh连接服务器：ssh root@47.92.67.199，然后输入密码\n - windows下可以使用软件 SecureCRT\n\n### 二、注册域名（阿里云网站上）\n1、注册\n2、阿里云管理控制台-域名与网站-云解析DNS-解析-新手引导设置-设置网站解析（设置邮箱解析-可选）\n3、备案（比较耗时）\n\n### 三、服务器安装 nginx\n指导网站：<http://www.cnblogs.com/liaolongjun/p/5664005.html>\n#### 安装nginx\n```bash\nyum install nginx\n```\n#### 启动nginx\n```bash\nservice nginx start\n```\n#### 访问nginx\n+ Linux: curl 127.0.0.1\n+ Windows | Mac: 浏览器打开 127.0.0.1\n\n#### 绑定域名\n```js\nserver{\n\tlisten    8001;\n\tserver_name    17it.ren;\n\tlocation /\n\t{\n\t\tproxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_pass http://127.0.0.1:14802;\n    }\n}\nserver{\n\tlisten    8002;\n\tserver_name    17it.xyz;\n\tlocation /\n\t{\n\t\tproxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_pass http://127.0.0.1:14804;\n    }\n}\n```\n#### 重启nginx\n```bash\nserver nginx restart\n```\n#### 访问测试\n可依次访问上面绑定的地址： <17it.ren> <17it.xyz>\n\n\n** .tk .ga域名都是免费的 **\n** 然后空间的话，国内的有主机屋，国外的有三蛋 **\n\n","source":"_posts/Aliyun+Nginx部署网站.md","raw":"---\ntitle: Aliyun+Nginx部署网站\ndate: 2017-03-05\ncategories: Nginx\ntags: \n    - Aliyun\n    - Nginx\n#description: \n---\n\n从零开始基于阿里云服务器和nginx搭建网站\n<!-- more -->\n\n### 一、购买 阿里云ECS 云服务器\n+ 选择 Linux CentOS 类型的\n+ Mac下可以直接使用ssh连接服务器：ssh root@47.92.67.199，然后输入密码\n - windows下可以使用软件 SecureCRT\n\n### 二、注册域名（阿里云网站上）\n1、注册\n2、阿里云管理控制台-域名与网站-云解析DNS-解析-新手引导设置-设置网站解析（设置邮箱解析-可选）\n3、备案（比较耗时）\n\n### 三、服务器安装 nginx\n指导网站：<http://www.cnblogs.com/liaolongjun/p/5664005.html>\n#### 安装nginx\n```bash\nyum install nginx\n```\n#### 启动nginx\n```bash\nservice nginx start\n```\n#### 访问nginx\n+ Linux: curl 127.0.0.1\n+ Windows | Mac: 浏览器打开 127.0.0.1\n\n#### 绑定域名\n```js\nserver{\n\tlisten    8001;\n\tserver_name    17it.ren;\n\tlocation /\n\t{\n\t\tproxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_pass http://127.0.0.1:14802;\n    }\n}\nserver{\n\tlisten    8002;\n\tserver_name    17it.xyz;\n\tlocation /\n\t{\n\t\tproxy_set_header Host $host;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header X-Forwarded-For $remote_addr;\n        proxy_pass http://127.0.0.1:14804;\n    }\n}\n```\n#### 重启nginx\n```bash\nserver nginx restart\n```\n#### 访问测试\n可依次访问上面绑定的地址： <17it.ren> <17it.xyz>\n\n\n** .tk .ga域名都是免费的 **\n** 然后空间的话，国内的有主机屋，国外的有三蛋 **\n\n","slug":"Aliyun+Nginx部署网站","published":1,"updated":"2022-06-15T08:17:32.148Z","_id":"cl4e3ayvu0000k4rqg4ve5aiv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从零开始基于阿里云服务器和nginx搭建网站</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、购买-阿里云ECS-云服务器\"><a href=\"#一、购买-阿里云ECS-云服务器\" class=\"headerlink\" title=\"一、购买 阿里云ECS 云服务器\"></a>一、购买 阿里云ECS 云服务器</h3><ul>\n<li>选择 Linux CentOS 类型的</li>\n<li>Mac下可以直接使用ssh连接服务器：ssh <a href=\"mailto:&#x72;&#x6f;&#x6f;&#116;&#64;&#52;&#x37;&#x2e;&#x39;&#x32;&#46;&#54;&#x37;&#x2e;&#x31;&#x39;&#57;\">&#x72;&#x6f;&#x6f;&#116;&#64;&#52;&#x37;&#x2e;&#x39;&#x32;&#46;&#54;&#x37;&#x2e;&#x31;&#x39;&#57;</a>，然后输入密码</li>\n</ul>\n<ul>\n<li>windows下可以使用软件 SecureCRT</li>\n</ul>\n<h3 id=\"二、注册域名（阿里云网站上）\"><a href=\"#二、注册域名（阿里云网站上）\" class=\"headerlink\" title=\"二、注册域名（阿里云网站上）\"></a>二、注册域名（阿里云网站上）</h3><p>1、注册<br>2、阿里云管理控制台-域名与网站-云解析DNS-解析-新手引导设置-设置网站解析（设置邮箱解析-可选）<br>3、备案（比较耗时）</p>\n<h3 id=\"三、服务器安装-nginx\"><a href=\"#三、服务器安装-nginx\" class=\"headerlink\" title=\"三、服务器安装 nginx\"></a>三、服务器安装 nginx</h3><p>指导网站：<a href=\"http://www.cnblogs.com/liaolongjun/p/5664005.html\">http://www.cnblogs.com/liaolongjun/p/5664005.html</a></p>\n<h4 id=\"安装nginx\"><a href=\"#安装nginx\" class=\"headerlink\" title=\"安装nginx\"></a>安装nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service nginx start</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问nginx\"><a href=\"#访问nginx\" class=\"headerlink\" title=\"访问nginx\"></a>访问nginx</h4><ul>\n<li>Linux: curl 127.0.0.1</li>\n<li>Windows | Mac: 浏览器打开 127.0.0.1</li>\n</ul>\n<h4 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">\tlisten    <span class=\"number\">8001</span>;</span><br><span class=\"line\">\tserver_name    17it.<span class=\"property\">ren</span>;</span><br><span class=\"line\">\tlocation /</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tproxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Real</span>-<span class=\"title class_\">Ip</span> $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">        proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:14802;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server&#123;</span><br><span class=\"line\">\tlisten    <span class=\"number\">8002</span>;</span><br><span class=\"line\">\tserver_name    17it.<span class=\"property\">xyz</span>;</span><br><span class=\"line\">\tlocation /</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tproxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Real</span>-<span class=\"title class_\">Ip</span> $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">        proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:14804;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"重启nginx\"><a href=\"#重启nginx\" class=\"headerlink\" title=\"重启nginx\"></a>重启nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server nginx restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问测试\"><a href=\"#访问测试\" class=\"headerlink\" title=\"访问测试\"></a>访问测试</h4><p>可依次访问上面绑定的地址： &lt;17it.ren&gt; &lt;17it.xyz&gt;</p>\n<p>** .tk .ga域名都是免费的 **<br>** 然后空间的话，国内的有主机屋，国外的有三蛋 **</p>\n","site":{"data":{}},"excerpt":"<p>从零开始基于阿里云服务器和nginx搭建网站</p>","more":"<h3 id=\"一、购买-阿里云ECS-云服务器\"><a href=\"#一、购买-阿里云ECS-云服务器\" class=\"headerlink\" title=\"一、购买 阿里云ECS 云服务器\"></a>一、购买 阿里云ECS 云服务器</h3><ul>\n<li>选择 Linux CentOS 类型的</li>\n<li>Mac下可以直接使用ssh连接服务器：ssh <a href=\"mailto:&#x72;&#x6f;&#x6f;&#116;&#64;&#52;&#x37;&#x2e;&#x39;&#x32;&#46;&#54;&#x37;&#x2e;&#x31;&#x39;&#57;\">&#x72;&#x6f;&#x6f;&#116;&#64;&#52;&#x37;&#x2e;&#x39;&#x32;&#46;&#54;&#x37;&#x2e;&#x31;&#x39;&#57;</a>，然后输入密码</li>\n</ul>\n<ul>\n<li>windows下可以使用软件 SecureCRT</li>\n</ul>\n<h3 id=\"二、注册域名（阿里云网站上）\"><a href=\"#二、注册域名（阿里云网站上）\" class=\"headerlink\" title=\"二、注册域名（阿里云网站上）\"></a>二、注册域名（阿里云网站上）</h3><p>1、注册<br>2、阿里云管理控制台-域名与网站-云解析DNS-解析-新手引导设置-设置网站解析（设置邮箱解析-可选）<br>3、备案（比较耗时）</p>\n<h3 id=\"三、服务器安装-nginx\"><a href=\"#三、服务器安装-nginx\" class=\"headerlink\" title=\"三、服务器安装 nginx\"></a>三、服务器安装 nginx</h3><p>指导网站：<a href=\"http://www.cnblogs.com/liaolongjun/p/5664005.html\">http://www.cnblogs.com/liaolongjun/p/5664005.html</a></p>\n<h4 id=\"安装nginx\"><a href=\"#安装nginx\" class=\"headerlink\" title=\"安装nginx\"></a>安装nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service nginx start</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问nginx\"><a href=\"#访问nginx\" class=\"headerlink\" title=\"访问nginx\"></a>访问nginx</h4><ul>\n<li>Linux: curl 127.0.0.1</li>\n<li>Windows | Mac: 浏览器打开 127.0.0.1</li>\n</ul>\n<h4 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">\tlisten    <span class=\"number\">8001</span>;</span><br><span class=\"line\">\tserver_name    17it.<span class=\"property\">ren</span>;</span><br><span class=\"line\">\tlocation /</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tproxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Real</span>-<span class=\"title class_\">Ip</span> $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">        proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:14802;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server&#123;</span><br><span class=\"line\">\tlisten    <span class=\"number\">8002</span>;</span><br><span class=\"line\">\tserver_name    17it.<span class=\"property\">xyz</span>;</span><br><span class=\"line\">\tlocation /</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tproxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Real</span>-<span class=\"title class_\">Ip</span> $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">        proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:14804;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"重启nginx\"><a href=\"#重启nginx\" class=\"headerlink\" title=\"重启nginx\"></a>重启nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server nginx restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问测试\"><a href=\"#访问测试\" class=\"headerlink\" title=\"访问测试\"></a>访问测试</h4><p>可依次访问上面绑定的地址： &lt;17it.ren&gt; &lt;17it.xyz&gt;</p>\n<p>** .tk .ga域名都是免费的 **<br>** 然后空间的话，国内的有主机屋，国外的有三蛋 **</p>"},{"title":"H5 ReplaceState详情页到列表页的无刷新","date":"2017-03-04T16:00:00.000Z","_content":"\n最近遇到一个用户体验问题，即从详情页回到列表页的时候，需要记住用户上次的位置，并且不刷新。\n最开始返回使用的是 history.Go(-1)，发现并不好使，也许在有些浏览器下有效果。折腾半天，突然看到HTML5里新加的 window.history.replaceState的方法，以下是亲自实践。\n<!-- more -->\n### 假设前提\n#### 列表页位list.html\n+ 获取列表的方法 getList()\n+ 支持分页\n+ 构建列表的方法dealWithResult()\n+ 到详情页的方法 viewDetail()\n+ 一个全局变量data，用来累加存储列表数据\n\n#### 详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面\n\n### 方法实现\n1.在viewDetail方法里面处理，记住当前页码、当前滚动条的位置、当前列表显示的所有数据\n```js\nvar statedata = {}; \nstatedata.curPage = curPage; //当前页码\nstatedata.data = data; //列表所有的数据  \nstatedata.sh = function () { //当前滚动条位置\n  var scrollTop = 0;\n  if (document.documentElement && document.documentElement.scrollTop) {\n    scrollTop = document.documentElement.scrollTop;\n  }else if (document.body) {\n    scrollTop = document.body.scrollTop;\n  }             \n  return scrollTop;\n}();\n```\n2.替换state，不推荐使用 history.pushState方法，因为pushState每次都会加入一条数据，导致在列表页返回的时候会一直返回上一个state,不能退出列表页\n```js\n  history.replaceState(statedata , \"\", \"list.html\");\n  // 跳转到详情页\n  window.location.href = 'detail.html?id=';\n```\n3.在list.html的onload里面处理\n```js\n// 判断如果有history.state.data，说明是从详情页返回的\nif(!!(window.history.state && window.history.state.data)) {\n  $(\"#loading\").hide(); \n  $(\"#nomore\").hide(); $(\"#loadmore\").show(); //隐藏loading，显示加载更多（为了分页）\n  dealWithResult(window.history.state); //根据记录的数据显示列表\n  curPage = window.history.state.curPage; \n  statedata  = window.history.state; //把页面和data赋值给全局变量\n  window.history.replaceState({}, \"\", \"list.html\"); //清空state，防止列表页点返回的时候会回到上一个state\n}else{\n  getList(); //没有window.history.state.data，说明不是从详情页来的，则调用ajax从服务器获取数据\n}\n```\n4.在dealWithResult方法里处理：\n```js\nfunction dealWithResult(listdata){\n  // 构建列表  略\n  // 判断如果是详情页回来，获取上次的滚动条位置，等列表构建完成后，用js设置当前滚动条位置为上次的位置\n  if (!!(window.history.state && window.history.state.data)) {\n    // 延迟 0.5秒滚动，防止页面中列表还没构建完成，保险起见（其实在执行这里之前，列表页已经构建完成）\n    setTimeout(window.scroll(0, window.history.state.sh || 0), 500);\n    // 此处用window.scroll方法，不用window.scrollBy，因为window.scrollBy会乱跳\n  }\n}\n```\n5.在getList方法里需要给全局变量statedata赋值\n```js\nif (curPage == 1) { \n  statedata = data; \n} else { // data为ajax调用接口返回的数据\n  var s = statedata.data;\n  //如果当前页码不是1，则把返回的结果累加到statedata里面\n  for (var t in data.data) {\n    s.push(data.data[t]);\n  }\n  statedata.data = s;\n}\n```\n","source":"_posts/Html5-ReplaceState实现详情页到列表页的无刷新且回到上次位置.md","raw":"---\ntitle: H5 ReplaceState详情页到列表页的无刷新\ndate: 2017-03-05\ncategories: H5\ntags: \n    - H5\n#description: \n---\n\n最近遇到一个用户体验问题，即从详情页回到列表页的时候，需要记住用户上次的位置，并且不刷新。\n最开始返回使用的是 history.Go(-1)，发现并不好使，也许在有些浏览器下有效果。折腾半天，突然看到HTML5里新加的 window.history.replaceState的方法，以下是亲自实践。\n<!-- more -->\n### 假设前提\n#### 列表页位list.html\n+ 获取列表的方法 getList()\n+ 支持分页\n+ 构建列表的方法dealWithResult()\n+ 到详情页的方法 viewDetail()\n+ 一个全局变量data，用来累加存储列表数据\n\n#### 详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面\n\n### 方法实现\n1.在viewDetail方法里面处理，记住当前页码、当前滚动条的位置、当前列表显示的所有数据\n```js\nvar statedata = {}; \nstatedata.curPage = curPage; //当前页码\nstatedata.data = data; //列表所有的数据  \nstatedata.sh = function () { //当前滚动条位置\n  var scrollTop = 0;\n  if (document.documentElement && document.documentElement.scrollTop) {\n    scrollTop = document.documentElement.scrollTop;\n  }else if (document.body) {\n    scrollTop = document.body.scrollTop;\n  }             \n  return scrollTop;\n}();\n```\n2.替换state，不推荐使用 history.pushState方法，因为pushState每次都会加入一条数据，导致在列表页返回的时候会一直返回上一个state,不能退出列表页\n```js\n  history.replaceState(statedata , \"\", \"list.html\");\n  // 跳转到详情页\n  window.location.href = 'detail.html?id=';\n```\n3.在list.html的onload里面处理\n```js\n// 判断如果有history.state.data，说明是从详情页返回的\nif(!!(window.history.state && window.history.state.data)) {\n  $(\"#loading\").hide(); \n  $(\"#nomore\").hide(); $(\"#loadmore\").show(); //隐藏loading，显示加载更多（为了分页）\n  dealWithResult(window.history.state); //根据记录的数据显示列表\n  curPage = window.history.state.curPage; \n  statedata  = window.history.state; //把页面和data赋值给全局变量\n  window.history.replaceState({}, \"\", \"list.html\"); //清空state，防止列表页点返回的时候会回到上一个state\n}else{\n  getList(); //没有window.history.state.data，说明不是从详情页来的，则调用ajax从服务器获取数据\n}\n```\n4.在dealWithResult方法里处理：\n```js\nfunction dealWithResult(listdata){\n  // 构建列表  略\n  // 判断如果是详情页回来，获取上次的滚动条位置，等列表构建完成后，用js设置当前滚动条位置为上次的位置\n  if (!!(window.history.state && window.history.state.data)) {\n    // 延迟 0.5秒滚动，防止页面中列表还没构建完成，保险起见（其实在执行这里之前，列表页已经构建完成）\n    setTimeout(window.scroll(0, window.history.state.sh || 0), 500);\n    // 此处用window.scroll方法，不用window.scrollBy，因为window.scrollBy会乱跳\n  }\n}\n```\n5.在getList方法里需要给全局变量statedata赋值\n```js\nif (curPage == 1) { \n  statedata = data; \n} else { // data为ajax调用接口返回的数据\n  var s = statedata.data;\n  //如果当前页码不是1，则把返回的结果累加到statedata里面\n  for (var t in data.data) {\n    s.push(data.data[t]);\n  }\n  statedata.data = s;\n}\n```\n","slug":"Html5-ReplaceState实现详情页到列表页的无刷新且回到上次位置","published":1,"updated":"2022-06-15T08:16:58.516Z","_id":"cl4e3ayvz0001k4rq3lslezm3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近遇到一个用户体验问题，即从详情页回到列表页的时候，需要记住用户上次的位置，并且不刷新。<br>最开始返回使用的是 history.Go(-1)，发现并不好使，也许在有些浏览器下有效果。折腾半天，突然看到HTML5里新加的 window.history.replaceState的方法，以下是亲自实践。</p>\n<span id=\"more\"></span>\n<h3 id=\"假设前提\"><a href=\"#假设前提\" class=\"headerlink\" title=\"假设前提\"></a>假设前提</h3><h4 id=\"列表页位list-html\"><a href=\"#列表页位list-html\" class=\"headerlink\" title=\"列表页位list.html\"></a>列表页位list.html</h4><ul>\n<li>获取列表的方法 getList()</li>\n<li>支持分页</li>\n<li>构建列表的方法dealWithResult()</li>\n<li>到详情页的方法 viewDetail()</li>\n<li>一个全局变量data，用来累加存储列表数据</li>\n</ul>\n<h4 id=\"详情页是-detail-html-，我们不需要在detail页面做任何动作，只需要修改list页面\"><a href=\"#详情页是-detail-html-，我们不需要在detail页面做任何动作，只需要修改list页面\" class=\"headerlink\" title=\"详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面\"></a>详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面</h4><h3 id=\"方法实现\"><a href=\"#方法实现\" class=\"headerlink\" title=\"方法实现\"></a>方法实现</h3><p>1.在viewDetail方法里面处理，记住当前页码、当前滚动条的位置、当前列表显示的所有数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> statedata = &#123;&#125;; </span><br><span class=\"line\">statedata.<span class=\"property\">curPage</span> = curPage; <span class=\"comment\">//当前页码</span></span><br><span class=\"line\">statedata.<span class=\"property\">data</span> = data; <span class=\"comment\">//列表所有的数据  </span></span><br><span class=\"line\">statedata.<span class=\"property\">sh</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">//当前滚动条位置</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span> &amp;&amp; <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>) &#123;</span><br><span class=\"line\">    scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>) &#123;</span><br><span class=\"line\">    scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  &#125;             </span><br><span class=\"line\">  <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;();</span><br></pre></td></tr></table></figure>\n<p>2.替换state，不推荐使用 history.pushState方法，因为pushState每次都会加入一条数据，导致在列表页返回的时候会一直返回上一个state,不能退出列表页</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">replaceState</span>(statedata , <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;list.html&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 跳转到详情页</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;detail.html?id=&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>3.在list.html的onload里面处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断如果有history.state.data，说明是从详情页返回的</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!!(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span> &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>)) &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&quot;#loading&quot;</span>).<span class=\"title function_\">hide</span>(); </span><br><span class=\"line\">  $(<span class=\"string\">&quot;#nomore&quot;</span>).<span class=\"title function_\">hide</span>(); $(<span class=\"string\">&quot;#loadmore&quot;</span>).<span class=\"title function_\">show</span>(); <span class=\"comment\">//隐藏loading，显示加载更多（为了分页）</span></span><br><span class=\"line\">  <span class=\"title function_\">dealWithResult</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>); <span class=\"comment\">//根据记录的数据显示列表</span></span><br><span class=\"line\">  curPage = <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">curPage</span>; </span><br><span class=\"line\">  statedata  = <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>; <span class=\"comment\">//把页面和data赋值给全局变量</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"title function_\">replaceState</span>(&#123;&#125;, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;list.html&quot;</span>); <span class=\"comment\">//清空state，防止列表页点返回的时候会回到上一个state</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">getList</span>(); <span class=\"comment\">//没有window.history.state.data，说明不是从详情页来的，则调用ajax从服务器获取数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4.在dealWithResult方法里处理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dealWithResult</span>(<span class=\"params\">listdata</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 构建列表  略</span></span><br><span class=\"line\">  <span class=\"comment\">// 判断如果是详情页回来，获取上次的滚动条位置，等列表构建完成后，用js设置当前滚动条位置为上次的位置</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!!(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span> &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 延迟 0.5秒滚动，防止页面中列表还没构建完成，保险起见（其实在执行这里之前，列表页已经构建完成）</span></span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"variable language_\">window</span>.<span class=\"title function_\">scroll</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">sh</span> || <span class=\"number\">0</span>), <span class=\"number\">500</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 此处用window.scroll方法，不用window.scrollBy，因为window.scrollBy会乱跳</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.在getList方法里需要给全局变量statedata赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (curPage == <span class=\"number\">1</span>) &#123; </span><br><span class=\"line\">  statedata = data; </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// data为ajax调用接口返回的数据</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = statedata.<span class=\"property\">data</span>;</span><br><span class=\"line\">  <span class=\"comment\">//如果当前页码不是1，则把返回的结果累加到statedata里面</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> data.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">    s.<span class=\"title function_\">push</span>(data.<span class=\"property\">data</span>[t]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  statedata.<span class=\"property\">data</span> = s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>最近遇到一个用户体验问题，即从详情页回到列表页的时候，需要记住用户上次的位置，并且不刷新。<br>最开始返回使用的是 history.Go(-1)，发现并不好使，也许在有些浏览器下有效果。折腾半天，突然看到HTML5里新加的 window.history.replaceState的方法，以下是亲自实践。</p>","more":"<h3 id=\"假设前提\"><a href=\"#假设前提\" class=\"headerlink\" title=\"假设前提\"></a>假设前提</h3><h4 id=\"列表页位list-html\"><a href=\"#列表页位list-html\" class=\"headerlink\" title=\"列表页位list.html\"></a>列表页位list.html</h4><ul>\n<li>获取列表的方法 getList()</li>\n<li>支持分页</li>\n<li>构建列表的方法dealWithResult()</li>\n<li>到详情页的方法 viewDetail()</li>\n<li>一个全局变量data，用来累加存储列表数据</li>\n</ul>\n<h4 id=\"详情页是-detail-html-，我们不需要在detail页面做任何动作，只需要修改list页面\"><a href=\"#详情页是-detail-html-，我们不需要在detail页面做任何动作，只需要修改list页面\" class=\"headerlink\" title=\"详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面\"></a>详情页是 detail.html ，我们不需要在detail页面做任何动作，只需要修改list页面</h4><h3 id=\"方法实现\"><a href=\"#方法实现\" class=\"headerlink\" title=\"方法实现\"></a>方法实现</h3><p>1.在viewDetail方法里面处理，记住当前页码、当前滚动条的位置、当前列表显示的所有数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> statedata = &#123;&#125;; </span><br><span class=\"line\">statedata.<span class=\"property\">curPage</span> = curPage; <span class=\"comment\">//当前页码</span></span><br><span class=\"line\">statedata.<span class=\"property\">data</span> = data; <span class=\"comment\">//列表所有的数据  </span></span><br><span class=\"line\">statedata.<span class=\"property\">sh</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">//当前滚动条位置</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span> &amp;&amp; <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>) &#123;</span><br><span class=\"line\">    scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>) &#123;</span><br><span class=\"line\">    scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">  &#125;             </span><br><span class=\"line\">  <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;();</span><br></pre></td></tr></table></figure>\n<p>2.替换state，不推荐使用 history.pushState方法，因为pushState每次都会加入一条数据，导致在列表页返回的时候会一直返回上一个state,不能退出列表页</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">replaceState</span>(statedata , <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;list.html&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 跳转到详情页</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&#x27;detail.html?id=&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>3.在list.html的onload里面处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断如果有history.state.data，说明是从详情页返回的</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!!(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span> &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>)) &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&quot;#loading&quot;</span>).<span class=\"title function_\">hide</span>(); </span><br><span class=\"line\">  $(<span class=\"string\">&quot;#nomore&quot;</span>).<span class=\"title function_\">hide</span>(); $(<span class=\"string\">&quot;#loadmore&quot;</span>).<span class=\"title function_\">show</span>(); <span class=\"comment\">//隐藏loading，显示加载更多（为了分页）</span></span><br><span class=\"line\">  <span class=\"title function_\">dealWithResult</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>); <span class=\"comment\">//根据记录的数据显示列表</span></span><br><span class=\"line\">  curPage = <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">curPage</span>; </span><br><span class=\"line\">  statedata  = <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>; <span class=\"comment\">//把页面和data赋值给全局变量</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"title function_\">replaceState</span>(&#123;&#125;, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;list.html&quot;</span>); <span class=\"comment\">//清空state，防止列表页点返回的时候会回到上一个state</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">getList</span>(); <span class=\"comment\">//没有window.history.state.data，说明不是从详情页来的，则调用ajax从服务器获取数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4.在dealWithResult方法里处理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dealWithResult</span>(<span class=\"params\">listdata</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 构建列表  略</span></span><br><span class=\"line\">  <span class=\"comment\">// 判断如果是详情页回来，获取上次的滚动条位置，等列表构建完成后，用js设置当前滚动条位置为上次的位置</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!!(<span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span> &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">data</span>)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 延迟 0.5秒滚动，防止页面中列表还没构建完成，保险起见（其实在执行这里之前，列表页已经构建完成）</span></span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"variable language_\">window</span>.<span class=\"title function_\">scroll</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">history</span>.<span class=\"property\">state</span>.<span class=\"property\">sh</span> || <span class=\"number\">0</span>), <span class=\"number\">500</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 此处用window.scroll方法，不用window.scrollBy，因为window.scrollBy会乱跳</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.在getList方法里需要给全局变量statedata赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (curPage == <span class=\"number\">1</span>) &#123; </span><br><span class=\"line\">  statedata = data; </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// data为ajax调用接口返回的数据</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = statedata.<span class=\"property\">data</span>;</span><br><span class=\"line\">  <span class=\"comment\">//如果当前页码不是1，则把返回的结果累加到statedata里面</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> data.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">    s.<span class=\"title function_\">push</span>(data.<span class=\"property\">data</span>[t]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  statedata.<span class=\"property\">data</span> = s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2017-03-04T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/Hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-03-05\ncategories: \n#description: \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"Hello-world","published":1,"updated":"2022-06-15T08:17:04.860Z","_id":"cl4e3ayw10004k4rqartrghqg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"H5页面实现直播","date":"2017-03-04T16:00:00.000Z","_content":"\n实现在H5页面上进行直播的功能\n<!-- more -->\n\n### 准备\n+ 百度开放云账号：https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list\n+ 手机推流软件：\n - 安卓（Yasea）\n - iOS（EZwebplayer）\n\n### 步骤\n1.步骤1\n\t在百度云后台新建直播，然后复制推流地址\n2.步骤2\n\t手机安装对应推流软件，输入推流地址，并推流\n3.步骤3\n\t百度云后台查看视频地址，调用百度云播放器播放\n","source":"_posts/H5页面实现直播.md","raw":"---\ntitle: H5页面实现直播\ndate: 2017-03-05\ncategories: H5\ntags: \n    - H5\n#description: \n---\n\n实现在H5页面上进行直播的功能\n<!-- more -->\n\n### 准备\n+ 百度开放云账号：https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list\n+ 手机推流软件：\n - 安卓（Yasea）\n - iOS（EZwebplayer）\n\n### 步骤\n1.步骤1\n\t在百度云后台新建直播，然后复制推流地址\n2.步骤2\n\t手机安装对应推流软件，输入推流地址，并推流\n3.步骤3\n\t百度云后台查看视频地址，调用百度云播放器播放\n","slug":"H5页面实现直播","published":1,"updated":"2022-06-15T08:17:15.484Z","_id":"cl4e3ayw20005k4rqd8xdmpd0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>实现在H5页面上进行直播的功能</p>\n<span id=\"more\"></span>\n\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ul>\n<li>百度开放云账号：<a href=\"https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list\">https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list</a></li>\n<li>手机推流软件：</li>\n</ul>\n<ul>\n<li>安卓（Yasea）</li>\n<li>iOS（EZwebplayer）</li>\n</ul>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><p>1.步骤1<br>    在百度云后台新建直播，然后复制推流地址<br>2.步骤2<br>    手机安装对应推流软件，输入推流地址，并推流<br>3.步骤3<br>    百度云后台查看视频地址，调用百度云播放器播放</p>\n","site":{"data":{}},"excerpt":"<p>实现在H5页面上进行直播的功能</p>","more":"<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ul>\n<li>百度开放云账号：<a href=\"https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list\">https://console.bce.baidu.com/lss/?_=1471506806951#/lss/v2/session/list</a></li>\n<li>手机推流软件：</li>\n</ul>\n<ul>\n<li>安卓（Yasea）</li>\n<li>iOS（EZwebplayer）</li>\n</ul>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><p>1.步骤1<br>    在百度云后台新建直播，然后复制推流地址<br>2.步骤2<br>    手机安装对应推流软件，输入推流地址，并推流<br>3.步骤3<br>    百度云后台查看视频地址，调用百度云播放器播放</p>"},{"title":"JS奇技淫巧","date":"2017-03-04T16:00:00.000Z","_content":"\n一些js的常用技巧\n<!-- more -->\n\n#### if(){}else if(){}else... 太复杂？switch代码太多？试试 && 和 object\n```js\nvar add_level = (add_step==5 && 1) \n\t\t|| (add_step==10 && 2) \n\t\t|| (add_step==12 && 3) \n\t\t|| (add_step==15 && 4) \n\t\t|| 0; //通过&&运算符来取值\nvar add_level={'5':1,'10':2,'12':3,'15':4}[add_step] || 0; //通过对象的属性来取值\n```\n\n** && 符号拓展 ：**\n1.参与方法执行   \n```js\nflag == true && function(){ \n\t//do something ; \n}(); \n// 相当于 \nif(flag == true){ \n\tfunction(){\n\t// do something;\n\t} \n}\n```\n2.取值：\n```js\nvar a = {};\na.name = \"n\"; \nvar b = a && a.name ; // 相当于 if(a && a.name){ b = a.name ;}\nvar b = a.name && a ; // 相当于 if(a && a.name){ b = a;}\nvar b = a && a.age ; // b = undefined,相当于 if(a && a.age){ b = a.age; }\n```\n\n#### 转成相应进制，如14进制（注意两者的区别）\n1.parseInt(string,radix)\n```js\nparseInt(\"14sad\",14) = 18; // 基数为14进制，结果即 1*14的一次方 + 4*14的0次方 = 18\n```\n2.parseInt().toString(radix)\n```js\nparseInt(\"14das\").toString(14) = “10”; // 转成14进制后的字符串\n```\n\n#### JS中0、\"\"、null、false、undefined、NaN 都会判为false，其他都为true\n+ 运用 || 或 && 的时候特别注意0，如：\n\n```js\na = 0；b = a || 3；结果 b = 3; \n// 因为会认为 a 是 false ；\n```\n+ 再比如 ：\n\n```js\nc = a && alert(\"有值\"); // 结果不会弹框\n```\n\n** 拓展：**\n如果要判断是否有值，需要排除值为0的情况，可以  \n```js\nif(!(a === null || typeof a == \"undefined\" || a == \"\")){ alert(\"有值\"); }\n// 注意是全等 === null\n```\n","source":"_posts/JS奇技淫巧.md","raw":"---\ntitle: JS奇技淫巧\ndate: 2017-03-05\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n一些js的常用技巧\n<!-- more -->\n\n#### if(){}else if(){}else... 太复杂？switch代码太多？试试 && 和 object\n```js\nvar add_level = (add_step==5 && 1) \n\t\t|| (add_step==10 && 2) \n\t\t|| (add_step==12 && 3) \n\t\t|| (add_step==15 && 4) \n\t\t|| 0; //通过&&运算符来取值\nvar add_level={'5':1,'10':2,'12':3,'15':4}[add_step] || 0; //通过对象的属性来取值\n```\n\n** && 符号拓展 ：**\n1.参与方法执行   \n```js\nflag == true && function(){ \n\t//do something ; \n}(); \n// 相当于 \nif(flag == true){ \n\tfunction(){\n\t// do something;\n\t} \n}\n```\n2.取值：\n```js\nvar a = {};\na.name = \"n\"; \nvar b = a && a.name ; // 相当于 if(a && a.name){ b = a.name ;}\nvar b = a.name && a ; // 相当于 if(a && a.name){ b = a;}\nvar b = a && a.age ; // b = undefined,相当于 if(a && a.age){ b = a.age; }\n```\n\n#### 转成相应进制，如14进制（注意两者的区别）\n1.parseInt(string,radix)\n```js\nparseInt(\"14sad\",14) = 18; // 基数为14进制，结果即 1*14的一次方 + 4*14的0次方 = 18\n```\n2.parseInt().toString(radix)\n```js\nparseInt(\"14das\").toString(14) = “10”; // 转成14进制后的字符串\n```\n\n#### JS中0、\"\"、null、false、undefined、NaN 都会判为false，其他都为true\n+ 运用 || 或 && 的时候特别注意0，如：\n\n```js\na = 0；b = a || 3；结果 b = 3; \n// 因为会认为 a 是 false ；\n```\n+ 再比如 ：\n\n```js\nc = a && alert(\"有值\"); // 结果不会弹框\n```\n\n** 拓展：**\n如果要判断是否有值，需要排除值为0的情况，可以  \n```js\nif(!(a === null || typeof a == \"undefined\" || a == \"\")){ alert(\"有值\"); }\n// 注意是全等 === null\n```\n","slug":"JS奇技淫巧","published":1,"updated":"2022-06-15T08:16:42.720Z","_id":"cl4e3ayw20006k4rquulgmw0p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一些js的常用技巧</p>\n<span id=\"more\"></span>\n\n<h4 id=\"if-else-if-else…-太复杂？switch代码太多？试试-amp-amp-和-object\"><a href=\"#if-else-if-else…-太复杂？switch代码太多？试试-amp-amp-和-object\" class=\"headerlink\" title=\"if(){}else if(){}else… 太复杂？switch代码太多？试试 &amp;&amp; 和 object\"></a>if(){}else if(){}else… 太复杂？switch代码太多？试试 &amp;&amp; 和 object</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add_level = (add_step==<span class=\"number\">5</span> &amp;&amp; <span class=\"number\">1</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">10</span> &amp;&amp; <span class=\"number\">2</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">12</span> &amp;&amp; <span class=\"number\">3</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">15</span> &amp;&amp; <span class=\"number\">4</span>) </span><br><span class=\"line\">\t\t|| <span class=\"number\">0</span>; <span class=\"comment\">//通过&amp;&amp;运算符来取值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> add_level=&#123;<span class=\"string\">&#x27;5&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;10&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;12&#x27;</span>:<span class=\"number\">3</span>,<span class=\"string\">&#x27;15&#x27;</span>:<span class=\"number\">4</span>&#125;[add_step] || <span class=\"number\">0</span>; <span class=\"comment\">//通过对象的属性来取值</span></span><br></pre></td></tr></table></figure>\n\n<p>** &amp;&amp; 符号拓展 ：**<br>1.参与方法执行   </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag == <span class=\"literal\">true</span> &amp;&amp; <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"comment\">//do something ; </span></span><br><span class=\"line\">&#125;(); </span><br><span class=\"line\"><span class=\"comment\">// 相当于 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(flag == <span class=\"literal\">true</span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// do something;</span></span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.取值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;&#125;;</span><br><span class=\"line\">a.<span class=\"property\">name</span> = <span class=\"string\">&quot;n&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a &amp;&amp; a.<span class=\"property\">name</span> ; <span class=\"comment\">// 相当于 if(a &amp;&amp; a.name)&#123; b = a.name ;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.<span class=\"property\">name</span> &amp;&amp; a ; <span class=\"comment\">// 相当于 if(a &amp;&amp; a.name)&#123; b = a;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a &amp;&amp; a.<span class=\"property\">age</span> ; <span class=\"comment\">// b = undefined,相当于 if(a &amp;&amp; a.age)&#123; b = a.age; &#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"转成相应进制，如14进制（注意两者的区别）\"><a href=\"#转成相应进制，如14进制（注意两者的区别）\" class=\"headerlink\" title=\"转成相应进制，如14进制（注意两者的区别）\"></a>转成相应进制，如14进制（注意两者的区别）</h4><p>1.parseInt(string,radix)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;14sad&quot;</span>,<span class=\"number\">14</span>) = <span class=\"number\">18</span>; <span class=\"comment\">// 基数为14进制，结果即 1*14的一次方 + 4*14的0次方 = 18</span></span><br></pre></td></tr></table></figure>\n<p>2.parseInt().toString(radix)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;14das&quot;</span>).<span class=\"title function_\">toString</span>(<span class=\"number\">14</span>) = “<span class=\"number\">10</span>”; <span class=\"comment\">// 转成14进制后的字符串</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JS中0、””、null、false、undefined、NaN-都会判为false，其他都为true\"><a href=\"#JS中0、””、null、false、undefined、NaN-都会判为false，其他都为true\" class=\"headerlink\" title=\"JS中0、””、null、false、undefined、NaN 都会判为false，其他都为true\"></a>JS中0、””、null、false、undefined、NaN 都会判为false，其他都为true</h4><ul>\n<li>运用 || 或 &amp;&amp; 的时候特别注意0，如：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">0</span>；b = a || <span class=\"number\">3</span>；结果 b = <span class=\"number\">3</span>; </span><br><span class=\"line\"><span class=\"comment\">// 因为会认为 a 是 false ；</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>再比如 ：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = a &amp;&amp; <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;有值&quot;</span>); <span class=\"comment\">// 结果不会弹框</span></span><br></pre></td></tr></table></figure>\n\n<p>** 拓展：**<br>如果要判断是否有值，需要排除值为0的情况，可以  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!(a === <span class=\"literal\">null</span> || <span class=\"keyword\">typeof</span> a == <span class=\"string\">&quot;undefined&quot;</span> || a == <span class=\"string\">&quot;&quot;</span>))&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;有值&quot;</span>); &#125;</span><br><span class=\"line\"><span class=\"comment\">// 注意是全等 === null</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>一些js的常用技巧</p>","more":"<h4 id=\"if-else-if-else…-太复杂？switch代码太多？试试-amp-amp-和-object\"><a href=\"#if-else-if-else…-太复杂？switch代码太多？试试-amp-amp-和-object\" class=\"headerlink\" title=\"if(){}else if(){}else… 太复杂？switch代码太多？试试 &amp;&amp; 和 object\"></a>if(){}else if(){}else… 太复杂？switch代码太多？试试 &amp;&amp; 和 object</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add_level = (add_step==<span class=\"number\">5</span> &amp;&amp; <span class=\"number\">1</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">10</span> &amp;&amp; <span class=\"number\">2</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">12</span> &amp;&amp; <span class=\"number\">3</span>) </span><br><span class=\"line\">\t\t|| (add_step==<span class=\"number\">15</span> &amp;&amp; <span class=\"number\">4</span>) </span><br><span class=\"line\">\t\t|| <span class=\"number\">0</span>; <span class=\"comment\">//通过&amp;&amp;运算符来取值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> add_level=&#123;<span class=\"string\">&#x27;5&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;10&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;12&#x27;</span>:<span class=\"number\">3</span>,<span class=\"string\">&#x27;15&#x27;</span>:<span class=\"number\">4</span>&#125;[add_step] || <span class=\"number\">0</span>; <span class=\"comment\">//通过对象的属性来取值</span></span><br></pre></td></tr></table></figure>\n\n<p>** &amp;&amp; 符号拓展 ：**<br>1.参与方法执行   </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag == <span class=\"literal\">true</span> &amp;&amp; <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"comment\">//do something ; </span></span><br><span class=\"line\">&#125;(); </span><br><span class=\"line\"><span class=\"comment\">// 相当于 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(flag == <span class=\"literal\">true</span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// do something;</span></span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.取值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;&#125;;</span><br><span class=\"line\">a.<span class=\"property\">name</span> = <span class=\"string\">&quot;n&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a &amp;&amp; a.<span class=\"property\">name</span> ; <span class=\"comment\">// 相当于 if(a &amp;&amp; a.name)&#123; b = a.name ;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.<span class=\"property\">name</span> &amp;&amp; a ; <span class=\"comment\">// 相当于 if(a &amp;&amp; a.name)&#123; b = a;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a &amp;&amp; a.<span class=\"property\">age</span> ; <span class=\"comment\">// b = undefined,相当于 if(a &amp;&amp; a.age)&#123; b = a.age; &#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"转成相应进制，如14进制（注意两者的区别）\"><a href=\"#转成相应进制，如14进制（注意两者的区别）\" class=\"headerlink\" title=\"转成相应进制，如14进制（注意两者的区别）\"></a>转成相应进制，如14进制（注意两者的区别）</h4><p>1.parseInt(string,radix)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;14sad&quot;</span>,<span class=\"number\">14</span>) = <span class=\"number\">18</span>; <span class=\"comment\">// 基数为14进制，结果即 1*14的一次方 + 4*14的0次方 = 18</span></span><br></pre></td></tr></table></figure>\n<p>2.parseInt().toString(radix)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;14das&quot;</span>).<span class=\"title function_\">toString</span>(<span class=\"number\">14</span>) = “<span class=\"number\">10</span>”; <span class=\"comment\">// 转成14进制后的字符串</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JS中0、””、null、false、undefined、NaN-都会判为false，其他都为true\"><a href=\"#JS中0、””、null、false、undefined、NaN-都会判为false，其他都为true\" class=\"headerlink\" title=\"JS中0、””、null、false、undefined、NaN 都会判为false，其他都为true\"></a>JS中0、””、null、false、undefined、NaN 都会判为false，其他都为true</h4><ul>\n<li>运用 || 或 &amp;&amp; 的时候特别注意0，如：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">0</span>；b = a || <span class=\"number\">3</span>；结果 b = <span class=\"number\">3</span>; </span><br><span class=\"line\"><span class=\"comment\">// 因为会认为 a 是 false ；</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>再比如 ：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = a &amp;&amp; <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;有值&quot;</span>); <span class=\"comment\">// 结果不会弹框</span></span><br></pre></td></tr></table></figure>\n\n<p>** 拓展：**<br>如果要判断是否有值，需要排除值为0的情况，可以  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!(a === <span class=\"literal\">null</span> || <span class=\"keyword\">typeof</span> a == <span class=\"string\">&quot;undefined&quot;</span> || a == <span class=\"string\">&quot;&quot;</span>))&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;有值&quot;</span>); &#125;</span><br><span class=\"line\"><span class=\"comment\">// 注意是全等 === null</span></span><br></pre></td></tr></table></figure>"},{"title":"Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客","date":"2017-03-04T16:00:00.000Z","_content":"\nLinux-CentOS-7.2.x上从0开始搭建自己的hexo博客\n<!-- more -->\n\n### 一、环境准备：\n\n+ 1、安装nodejs\n - a、启用epel软件库（执行成功后就可以使用yum命令安装扩展软件源中的所有软件了）\n```bash\nyum install epel-release\n```\n - b、yum安装npm，这步本身也会安装nodejs\n```bash\nsudo yum install npm \n```\n\n+ 2、安装Git\n**sudo yum install git - 不使用，因为yum安装的git版本是1.7.1太老了，使用方法2 （centos6之前需要安装依赖包）**\n使用以下步骤安装最新版本的git：\n  + a、更新yum系统：\n```bash\nsudo yum update\n```\n  + b、安装依赖包：\n```bash\nsudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n```\n  + c、下载git源码并解压缩\n```bash\nwget https://github.com/git/git/archive/v2.3.0.zip\nunzip v2.3.0.zip\ncd git-2.3.0\n```\n  + d、编译安装 - 安装在“/usr/local/git”目录下\n```bash\nmake prefix=/usr/local/git all\nsudo make prefix=/usr/local/git install\n```\n  + e、查看是否安装成功及版本号\n```bash\ngit --vsesion\n```\n  + *f、如果之前有安装git，这时候可能版本号还是之前旧的，因为她默认使用了/usr/bin下面的git。此时请继续往下看至步骤h*\n```bash\nwhereis git // 查看git所在路径会出现类似：git: /usr/bin/git /usr/local/git /usr/share/man/man1/git.1.gz\n```\n  + *g、把编译安装的git路径放在环境变量里，替换/usr/bin下面的*\n```bash\nsudo vim /etc/profile\nexport PATH=/usr/local/git/bin:$PATH // 在文件的最后一行，添加左边的内容\n```\n  + *h、使用source命令应用修改*\n```bash\nsource /etc/profile\n```\n\n  + i、配置Git\n```bash\ngit config —global user.name “tangyongming\"\ngit config —global user.email “790356596@qq.com”\n```\n\n### 二、安装hexo\n```bash\nnpm install -g hexo-cli\n```\n\n### 三、建站\n+ 1、新建所需文件\n```bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n+ 2、_config.yml 配置网站\n<http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html> \n+ 3、进入博客根目录，执行命令\n```bash\nhexo new hello-hexo\n```\n完成后会在 source/_posts目录下多出一个文件  hello-hexo.md，可以编辑它，按照markdown的语法\n+ 4、生成静态页面\n```bash\nhexo g //会生成public目录，里面有生成的静态文件\n```\n+ 5、浏览博客效果\n```bash\ncd 到根目录，执行 hexo s // 等同于执行 hexo server\n```\n访问博客，一般默认地址是 http://localhost:4000/\n\n### 四、至此，可以本地访问了，接下来是时候把他部署了\n\n- 1、部署到github上\n  + a、安装自动部署到github的插件\n```bash\ncnpm install hexo-deployer-git --save\n```\n  + b、_config.yml中配置\n```bash\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://17it.github.io\nroot: /\n        \n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/17it/17it.github.io.git\n  branch: master\n```\n  + c、生成静态文件\n```bash\nhexo g\n```\n  + d、发布\n```bash\nhexo deploy // 发布到github\n```\n+ 2、部署到自己的域名\n待续。。。\n\n\n\n","source":"_posts/Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客.md","raw":"---\ntitle: Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客\ndate: 2017-03-05\ncategories: Linux\ntags: \n    - Linux\n    - hexo\n#description: \n---\n\nLinux-CentOS-7.2.x上从0开始搭建自己的hexo博客\n<!-- more -->\n\n### 一、环境准备：\n\n+ 1、安装nodejs\n - a、启用epel软件库（执行成功后就可以使用yum命令安装扩展软件源中的所有软件了）\n```bash\nyum install epel-release\n```\n - b、yum安装npm，这步本身也会安装nodejs\n```bash\nsudo yum install npm \n```\n\n+ 2、安装Git\n**sudo yum install git - 不使用，因为yum安装的git版本是1.7.1太老了，使用方法2 （centos6之前需要安装依赖包）**\n使用以下步骤安装最新版本的git：\n  + a、更新yum系统：\n```bash\nsudo yum update\n```\n  + b、安装依赖包：\n```bash\nsudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n```\n  + c、下载git源码并解压缩\n```bash\nwget https://github.com/git/git/archive/v2.3.0.zip\nunzip v2.3.0.zip\ncd git-2.3.0\n```\n  + d、编译安装 - 安装在“/usr/local/git”目录下\n```bash\nmake prefix=/usr/local/git all\nsudo make prefix=/usr/local/git install\n```\n  + e、查看是否安装成功及版本号\n```bash\ngit --vsesion\n```\n  + *f、如果之前有安装git，这时候可能版本号还是之前旧的，因为她默认使用了/usr/bin下面的git。此时请继续往下看至步骤h*\n```bash\nwhereis git // 查看git所在路径会出现类似：git: /usr/bin/git /usr/local/git /usr/share/man/man1/git.1.gz\n```\n  + *g、把编译安装的git路径放在环境变量里，替换/usr/bin下面的*\n```bash\nsudo vim /etc/profile\nexport PATH=/usr/local/git/bin:$PATH // 在文件的最后一行，添加左边的内容\n```\n  + *h、使用source命令应用修改*\n```bash\nsource /etc/profile\n```\n\n  + i、配置Git\n```bash\ngit config —global user.name “tangyongming\"\ngit config —global user.email “790356596@qq.com”\n```\n\n### 二、安装hexo\n```bash\nnpm install -g hexo-cli\n```\n\n### 三、建站\n+ 1、新建所需文件\n```bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n+ 2、_config.yml 配置网站\n<http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html> \n+ 3、进入博客根目录，执行命令\n```bash\nhexo new hello-hexo\n```\n完成后会在 source/_posts目录下多出一个文件  hello-hexo.md，可以编辑它，按照markdown的语法\n+ 4、生成静态页面\n```bash\nhexo g //会生成public目录，里面有生成的静态文件\n```\n+ 5、浏览博客效果\n```bash\ncd 到根目录，执行 hexo s // 等同于执行 hexo server\n```\n访问博客，一般默认地址是 http://localhost:4000/\n\n### 四、至此，可以本地访问了，接下来是时候把他部署了\n\n- 1、部署到github上\n  + a、安装自动部署到github的插件\n```bash\ncnpm install hexo-deployer-git --save\n```\n  + b、_config.yml中配置\n```bash\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://17it.github.io\nroot: /\n        \n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/17it/17it.github.io.git\n  branch: master\n```\n  + c、生成静态文件\n```bash\nhexo g\n```\n  + d、发布\n```bash\nhexo deploy // 发布到github\n```\n+ 2、部署到自己的域名\n待续。。。\n\n\n\n","slug":"Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客","published":1,"updated":"2022-06-15T08:16:32.302Z","_id":"cl4e3ayw30009k4rq3tb9w6c1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、环境准备：\"><a href=\"#一、环境准备：\" class=\"headerlink\" title=\"一、环境准备：\"></a>一、环境准备：</h3><ul>\n<li>1、安装nodejs</li>\n</ul>\n<ul>\n<li>a、启用epel软件库（执行成功后就可以使用yum命令安装扩展软件源中的所有软件了）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br></pre></td></tr></table></figure></li>\n<li>b、yum安装npm，这步本身也会安装nodejs<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install npm </span><br></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>2、安装Git<br><strong>sudo yum install git - 不使用，因为yum安装的git版本是1.7.1太老了，使用方法2 （centos6之前需要安装依赖包）</strong><br>使用以下步骤安装最新版本的git：<ul>\n<li><p>a、更新yum系统：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure></li>\n<li><p>b、安装依赖包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure></li>\n<li><p>c、下载git源码并解压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/git/git/archive/v2.3.0.zip</span><br><span class=\"line\">unzip v2.3.0.zip</span><br><span class=\"line\"><span class=\"built_in\">cd</span> git-2.3.0</span><br></pre></td></tr></table></figure></li>\n<li><p>d、编译安装 - 安装在“&#x2F;usr&#x2F;local&#x2F;git”目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make prefix=/usr/local/git all</span><br><span class=\"line\">sudo make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure></li>\n<li><p>e、查看是否安装成功及版本号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --vsesion</span><br></pre></td></tr></table></figure></li>\n<li><p><em>f、如果之前有安装git，这时候可能版本号还是之前旧的，因为她默认使用了&#x2F;usr&#x2F;bin下面的git。此时请继续往下看至步骤h</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis git // 查看git所在路径会出现类似：git: /usr/bin/git /usr/local/git /usr/share/man/man1/git.1.gz</span><br></pre></td></tr></table></figure></li>\n<li><p><em>g、把编译安装的git路径放在环境变量里，替换&#x2F;usr&#x2F;bin下面的</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/local/git/bin:<span class=\"variable\">$PATH</span> // 在文件的最后一行，添加左边的内容</span><br></pre></td></tr></table></figure></li>\n<li><p><em>h、使用source命令应用修改</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>i、配置Git</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config —global user.name “tangyongming<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">git config —global user.email “790356596@qq.com”</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、安装hexo\"><a href=\"#二、安装hexo\" class=\"headerlink\" title=\"二、安装hexo\"></a>二、安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、建站\"><a href=\"#三、建站\" class=\"headerlink\" title=\"三、建站\"></a>三、建站</h3><ul>\n<li>1、新建所需文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>2、_config.yml 配置网站<br><a href=\"http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html\">http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html</a> </li>\n<li>3、进入博客根目录，执行命令<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new hello-hexo</span><br></pre></td></tr></table></figure>\n完成后会在 source&#x2F;_posts目录下多出一个文件  hello-hexo.md，可以编辑它，按照markdown的语法</li>\n<li>4、生成静态页面<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g //会生成public目录，里面有生成的静态文件</span><br></pre></td></tr></table></figure></li>\n<li>5、浏览博客效果<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> 到根目录，执行 hexo s // 等同于执行 hexo server</span><br></pre></td></tr></table></figure>\n访问博客，一般默认地址是 <a href=\"http://localhost:4000/\">http://localhost:4000/</a></li>\n</ul>\n<h3 id=\"四、至此，可以本地访问了，接下来是时候把他部署了\"><a href=\"#四、至此，可以本地访问了，接下来是时候把他部署了\" class=\"headerlink\" title=\"四、至此，可以本地访问了，接下来是时候把他部署了\"></a>四、至此，可以本地访问了，接下来是时候把他部署了</h3><ul>\n<li>1、部署到github上<ul>\n<li>a、安装自动部署到github的插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>b、_config.yml中配置<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class=\"line\">url: https://17it.github.io</span><br><span class=\"line\">root: /</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repo: https://github.com/17it/17it.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></li>\n<li>c、生成静态文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure></li>\n<li>d、发布<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy // 发布到github</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>2、部署到自己的域名<br>待续。。。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Linux-CentOS-7.2.x上从0开始搭建自己的hexo博客</p>","more":"<h3 id=\"一、环境准备：\"><a href=\"#一、环境准备：\" class=\"headerlink\" title=\"一、环境准备：\"></a>一、环境准备：</h3><ul>\n<li>1、安装nodejs</li>\n</ul>\n<ul>\n<li>a、启用epel软件库（执行成功后就可以使用yum命令安装扩展软件源中的所有软件了）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br></pre></td></tr></table></figure></li>\n<li>b、yum安装npm，这步本身也会安装nodejs<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install npm </span><br></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>2、安装Git<br><strong>sudo yum install git - 不使用，因为yum安装的git版本是1.7.1太老了，使用方法2 （centos6之前需要安装依赖包）</strong><br>使用以下步骤安装最新版本的git：<ul>\n<li><p>a、更新yum系统：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure></li>\n<li><p>b、安装依赖包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure></li>\n<li><p>c、下载git源码并解压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/git/git/archive/v2.3.0.zip</span><br><span class=\"line\">unzip v2.3.0.zip</span><br><span class=\"line\"><span class=\"built_in\">cd</span> git-2.3.0</span><br></pre></td></tr></table></figure></li>\n<li><p>d、编译安装 - 安装在“&#x2F;usr&#x2F;local&#x2F;git”目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make prefix=/usr/local/git all</span><br><span class=\"line\">sudo make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure></li>\n<li><p>e、查看是否安装成功及版本号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --vsesion</span><br></pre></td></tr></table></figure></li>\n<li><p><em>f、如果之前有安装git，这时候可能版本号还是之前旧的，因为她默认使用了&#x2F;usr&#x2F;bin下面的git。此时请继续往下看至步骤h</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis git // 查看git所在路径会出现类似：git: /usr/bin/git /usr/local/git /usr/share/man/man1/git.1.gz</span><br></pre></td></tr></table></figure></li>\n<li><p><em>g、把编译安装的git路径放在环境变量里，替换&#x2F;usr&#x2F;bin下面的</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/local/git/bin:<span class=\"variable\">$PATH</span> // 在文件的最后一行，添加左边的内容</span><br></pre></td></tr></table></figure></li>\n<li><p><em>h、使用source命令应用修改</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>i、配置Git</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config —global user.name “tangyongming<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">git config —global user.email “790356596@qq.com”</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、安装hexo\"><a href=\"#二、安装hexo\" class=\"headerlink\" title=\"二、安装hexo\"></a>二、安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、建站\"><a href=\"#三、建站\" class=\"headerlink\" title=\"三、建站\"></a>三、建站</h3><ul>\n<li>1、新建所需文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>2、_config.yml 配置网站<br><a href=\"http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html\">http://www.cnblogs.com/xiaoxuetu/p/hexo-guide.html</a> </li>\n<li>3、进入博客根目录，执行命令<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new hello-hexo</span><br></pre></td></tr></table></figure>\n完成后会在 source&#x2F;_posts目录下多出一个文件  hello-hexo.md，可以编辑它，按照markdown的语法</li>\n<li>4、生成静态页面<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g //会生成public目录，里面有生成的静态文件</span><br></pre></td></tr></table></figure></li>\n<li>5、浏览博客效果<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> 到根目录，执行 hexo s // 等同于执行 hexo server</span><br></pre></td></tr></table></figure>\n访问博客，一般默认地址是 <a href=\"http://localhost:4000/\">http://localhost:4000/</a></li>\n</ul>\n<h3 id=\"四、至此，可以本地访问了，接下来是时候把他部署了\"><a href=\"#四、至此，可以本地访问了，接下来是时候把他部署了\" class=\"headerlink\" title=\"四、至此，可以本地访问了，接下来是时候把他部署了\"></a>四、至此，可以本地访问了，接下来是时候把他部署了</h3><ul>\n<li>1、部署到github上<ul>\n<li>a、安装自动部署到github的插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>b、_config.yml中配置<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class=\"line\">url: https://17it.github.io</span><br><span class=\"line\">root: /</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repo: https://github.com/17it/17it.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></li>\n<li>c、生成静态文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure></li>\n<li>d、发布<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy // 发布到github</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>2、部署到自己的域名<br>待续。。。</li>\n</ul>"},{"title":"Mac下搭安卓模拟器的艰辛之路","date":"2019-07-17T16:00:00.000Z","_content":"\n需要在mac上搭建安卓模拟器，用来测试。\n<!-- more -->\n\n### 前车之鉴：\n毫无疑问，首先想到的是用Android Studio里面的avd manager创建模拟器。兴致勃勃的折腾了半天，安装JDK、配置JAVA环境、安装Android Studio、配置gradle、下载安卓SDK。\n最坑的就是下载安卓SDK，选了大概5个安卓版本的SDK，下载完后，一下子把磁盘干掉130G。\n    坑一：安装完后，用avd新建模拟器，一路next，装完启动。然后把APP拖进去安装，直接报错，安装不上，提示『INSTALL_FAILED_NO_MATCHING_ABIS』，百度半天，知道大概是因为mac\n的CPU是x86的，刚新建模拟器的时候默认选的是x86的镜像。然而APP运行需要arm支持，所以安装不上。\n    坑二：重新建一个模拟器，在选择System Image那一步，选『other image』，也就是ABI那一列为\"armxxxxx\"的镜像。新建完，启动。直接提示『﻿Running an x86 based Android Virtual Device (AVD) is 10x faster.We strongly recommend creating a new AVD.』\n意思就是基于x86的镜像会比刚选的arm的镜像快10倍，估算了下，也就是10s和1s的区别，将就用吧。一边吃瓜一边等开机，结果。。。10分钟过去了，还没开完机。。。好不容易开机了，APP安装进去，运行卡的要死，操作一下，基本都不动了。。。欲哭无泪啊\n    备注：在windows电脑上，应该不会存在上面的问题。\n\n### 摸索之路：\n用AS里的avd建模拟器的方法算是废弃了，找了半天，看都推荐用 Genymotion ,说速度超快，接下来进入正题...\n## 一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\n## 二、注册Genymotion账号\n## 三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\n至此，安装完成，新建模拟器，运行，果然很流畅。但还是会有之前那个问题，也就是arm和x86兼容性。但较AS好的点是，可以用ARM Translation进行补丁，建模拟器的时候不用选arm的镜像（好像新建的过程中也没地方可选arm的镜像）。\n于是把文章中的ARM Translation下载，拖拽到模拟器里安装，然后重启模拟器，安装自己的APP。果然就能安装上了，一阵窃喜。\n但但但但是，运行APP就一直出现\"xx应用已停止\"的提示，也就是说虽然能安装，但是用不了，shit...\n思索良久，想着会不会是ARM Translation版本的问题，直到看到了一篇文章，确认了这个想法。重新下载了模拟器版本对应的ARM Translation，然后就一切大吉了。\n\n反思：既然Genymotion模拟器能用ARM-Translation进行兼容，按道理AS里面也应该可以借鉴，但没找到哪里可以进行设置，后续继续研究...\n\n### 参考文章：\n1.mac下AS的搭建以及环境配置： https://blog.csdn.net/weixin_28774815/article/details/81334687\n2.Genymotion的安装、使用和注意事项： https://imququ.com/post/genymotion.html\n3.Genymotion-ARM-Translation各版本下载： https://blog.csdn.net/GHY2016/article/details/83422620\n","source":"_posts/Mac下搭安卓模拟器的艰辛之路.md","raw":"---\ntitle: Mac下搭安卓模拟器的艰辛之路\ndate: 2019-07-18\ncategories: Mac\ntags: \n    - Mac\n    - 模拟器\n#description: \n---\n\n需要在mac上搭建安卓模拟器，用来测试。\n<!-- more -->\n\n### 前车之鉴：\n毫无疑问，首先想到的是用Android Studio里面的avd manager创建模拟器。兴致勃勃的折腾了半天，安装JDK、配置JAVA环境、安装Android Studio、配置gradle、下载安卓SDK。\n最坑的就是下载安卓SDK，选了大概5个安卓版本的SDK，下载完后，一下子把磁盘干掉130G。\n    坑一：安装完后，用avd新建模拟器，一路next，装完启动。然后把APP拖进去安装，直接报错，安装不上，提示『INSTALL_FAILED_NO_MATCHING_ABIS』，百度半天，知道大概是因为mac\n的CPU是x86的，刚新建模拟器的时候默认选的是x86的镜像。然而APP运行需要arm支持，所以安装不上。\n    坑二：重新建一个模拟器，在选择System Image那一步，选『other image』，也就是ABI那一列为\"armxxxxx\"的镜像。新建完，启动。直接提示『﻿Running an x86 based Android Virtual Device (AVD) is 10x faster.We strongly recommend creating a new AVD.』\n意思就是基于x86的镜像会比刚选的arm的镜像快10倍，估算了下，也就是10s和1s的区别，将就用吧。一边吃瓜一边等开机，结果。。。10分钟过去了，还没开完机。。。好不容易开机了，APP安装进去，运行卡的要死，操作一下，基本都不动了。。。欲哭无泪啊\n    备注：在windows电脑上，应该不会存在上面的问题。\n\n### 摸索之路：\n用AS里的avd建模拟器的方法算是废弃了，找了半天，看都推荐用 Genymotion ,说速度超快，接下来进入正题...\n## 一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\n## 二、注册Genymotion账号\n## 三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\n至此，安装完成，新建模拟器，运行，果然很流畅。但还是会有之前那个问题，也就是arm和x86兼容性。但较AS好的点是，可以用ARM Translation进行补丁，建模拟器的时候不用选arm的镜像（好像新建的过程中也没地方可选arm的镜像）。\n于是把文章中的ARM Translation下载，拖拽到模拟器里安装，然后重启模拟器，安装自己的APP。果然就能安装上了，一阵窃喜。\n但但但但是，运行APP就一直出现\"xx应用已停止\"的提示，也就是说虽然能安装，但是用不了，shit...\n思索良久，想着会不会是ARM Translation版本的问题，直到看到了一篇文章，确认了这个想法。重新下载了模拟器版本对应的ARM Translation，然后就一切大吉了。\n\n反思：既然Genymotion模拟器能用ARM-Translation进行兼容，按道理AS里面也应该可以借鉴，但没找到哪里可以进行设置，后续继续研究...\n\n### 参考文章：\n1.mac下AS的搭建以及环境配置： https://blog.csdn.net/weixin_28774815/article/details/81334687\n2.Genymotion的安装、使用和注意事项： https://imququ.com/post/genymotion.html\n3.Genymotion-ARM-Translation各版本下载： https://blog.csdn.net/GHY2016/article/details/83422620\n","slug":"Mac下搭安卓模拟器的艰辛之路","published":1,"updated":"2022-06-15T08:38:14.721Z","_id":"cl4e3ayw4000bk4rqfkrfycv9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>需要在mac上搭建安卓模拟器，用来测试。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"前车之鉴：\"><a href=\"#前车之鉴：\" class=\"headerlink\" title=\"前车之鉴：\"></a>前车之鉴：</h3><p>毫无疑问，首先想到的是用Android Studio里面的avd manager创建模拟器。兴致勃勃的折腾了半天，安装JDK、配置JAVA环境、安装Android Studio、配置gradle、下载安卓SDK。<br>最坑的就是下载安卓SDK，选了大概5个安卓版本的SDK，下载完后，一下子把磁盘干掉130G。<br>    坑一：安装完后，用avd新建模拟器，一路next，装完启动。然后把APP拖进去安装，直接报错，安装不上，提示『INSTALL_FAILED_NO_MATCHING_ABIS』，百度半天，知道大概是因为mac<br>的CPU是x86的，刚新建模拟器的时候默认选的是x86的镜像。然而APP运行需要arm支持，所以安装不上。<br>    坑二：重新建一个模拟器，在选择System Image那一步，选『other image』，也就是ABI那一列为”armxxxxx”的镜像。新建完，启动。直接提示『﻿Running an x86 based Android Virtual Device (AVD) is 10x faster.We strongly recommend creating a new AVD.』<br>意思就是基于x86的镜像会比刚选的arm的镜像快10倍，估算了下，也就是10s和1s的区别，将就用吧。一边吃瓜一边等开机，结果。。。10分钟过去了，还没开完机。。。好不容易开机了，APP安装进去，运行卡的要死，操作一下，基本都不动了。。。欲哭无泪啊<br>    备注：在windows电脑上，应该不会存在上面的问题。</p>\n<h3 id=\"摸索之路：\"><a href=\"#摸索之路：\" class=\"headerlink\" title=\"摸索之路：\"></a>摸索之路：</h3><p>用AS里的avd建模拟器的方法算是废弃了，找了半天，看都推荐用 Genymotion ,说速度超快，接下来进入正题…</p>\n<h2 id=\"一、下载安装VirtualBox（版本-VirtualBox-6-0-10-132072-OSX-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"><a href=\"#一、下载安装VirtualBox（版本-VirtualBox-6-0-10-132072-OSX-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\" class=\"headerlink\" title=\"一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"></a>一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）</h2><h2 id=\"二、注册Genymotion账号\"><a href=\"#二、注册Genymotion账号\" class=\"headerlink\" title=\"二、注册Genymotion账号\"></a>二、注册Genymotion账号</h2><h2 id=\"三、下载安装Genymotion（版本-genymotion-3-0-2-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"><a href=\"#三、下载安装Genymotion（版本-genymotion-3-0-2-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\" class=\"headerlink\" title=\"三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"></a>三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）</h2><p>至此，安装完成，新建模拟器，运行，果然很流畅。但还是会有之前那个问题，也就是arm和x86兼容性。但较AS好的点是，可以用ARM Translation进行补丁，建模拟器的时候不用选arm的镜像（好像新建的过程中也没地方可选arm的镜像）。<br>于是把文章中的ARM Translation下载，拖拽到模拟器里安装，然后重启模拟器，安装自己的APP。果然就能安装上了，一阵窃喜。<br>但但但但是，运行APP就一直出现”xx应用已停止”的提示，也就是说虽然能安装，但是用不了，shit…<br>思索良久，想着会不会是ARM Translation版本的问题，直到看到了一篇文章，确认了这个想法。重新下载了模拟器版本对应的ARM Translation，然后就一切大吉了。</p>\n<p>反思：既然Genymotion模拟器能用ARM-Translation进行兼容，按道理AS里面也应该可以借鉴，但没找到哪里可以进行设置，后续继续研究…</p>\n<h3 id=\"参考文章：\"><a href=\"#参考文章：\" class=\"headerlink\" title=\"参考文章：\"></a>参考文章：</h3><p>1.mac下AS的搭建以及环境配置： <a href=\"https://blog.csdn.net/weixin_28774815/article/details/81334687\">https://blog.csdn.net/weixin_28774815/article/details/81334687</a><br>2.Genymotion的安装、使用和注意事项： <a href=\"https://imququ.com/post/genymotion.html\">https://imququ.com/post/genymotion.html</a><br>3.Genymotion-ARM-Translation各版本下载： <a href=\"https://blog.csdn.net/GHY2016/article/details/83422620\">https://blog.csdn.net/GHY2016/article/details/83422620</a></p>\n","site":{"data":{}},"excerpt":"<p>需要在mac上搭建安卓模拟器，用来测试。</p>","more":"<h3 id=\"前车之鉴：\"><a href=\"#前车之鉴：\" class=\"headerlink\" title=\"前车之鉴：\"></a>前车之鉴：</h3><p>毫无疑问，首先想到的是用Android Studio里面的avd manager创建模拟器。兴致勃勃的折腾了半天，安装JDK、配置JAVA环境、安装Android Studio、配置gradle、下载安卓SDK。<br>最坑的就是下载安卓SDK，选了大概5个安卓版本的SDK，下载完后，一下子把磁盘干掉130G。<br>    坑一：安装完后，用avd新建模拟器，一路next，装完启动。然后把APP拖进去安装，直接报错，安装不上，提示『INSTALL_FAILED_NO_MATCHING_ABIS』，百度半天，知道大概是因为mac<br>的CPU是x86的，刚新建模拟器的时候默认选的是x86的镜像。然而APP运行需要arm支持，所以安装不上。<br>    坑二：重新建一个模拟器，在选择System Image那一步，选『other image』，也就是ABI那一列为”armxxxxx”的镜像。新建完，启动。直接提示『﻿Running an x86 based Android Virtual Device (AVD) is 10x faster.We strongly recommend creating a new AVD.』<br>意思就是基于x86的镜像会比刚选的arm的镜像快10倍，估算了下，也就是10s和1s的区别，将就用吧。一边吃瓜一边等开机，结果。。。10分钟过去了，还没开完机。。。好不容易开机了，APP安装进去，运行卡的要死，操作一下，基本都不动了。。。欲哭无泪啊<br>    备注：在windows电脑上，应该不会存在上面的问题。</p>\n<h3 id=\"摸索之路：\"><a href=\"#摸索之路：\" class=\"headerlink\" title=\"摸索之路：\"></a>摸索之路：</h3><p>用AS里的avd建模拟器的方法算是废弃了，找了半天，看都推荐用 Genymotion ,说速度超快，接下来进入正题…</p>\n<h2 id=\"一、下载安装VirtualBox（版本-VirtualBox-6-0-10-132072-OSX-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"><a href=\"#一、下载安装VirtualBox（版本-VirtualBox-6-0-10-132072-OSX-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\" class=\"headerlink\" title=\"一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"></a>一、下载安装VirtualBox（版本 VirtualBox-6.0.10-132072-OSX.dmg，仅做备注，怕以后最新版本出现不兼容的问题）</h2><h2 id=\"二、注册Genymotion账号\"><a href=\"#二、注册Genymotion账号\" class=\"headerlink\" title=\"二、注册Genymotion账号\"></a>二、注册Genymotion账号</h2><h2 id=\"三、下载安装Genymotion（版本-genymotion-3-0-2-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"><a href=\"#三、下载安装Genymotion（版本-genymotion-3-0-2-dmg，仅做备注，怕以后最新版本出现不兼容的问题）\" class=\"headerlink\" title=\"三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）\"></a>三、下载安装Genymotion（版本 genymotion-3.0.2.dmg，仅做备注，怕以后最新版本出现不兼容的问题）</h2><p>至此，安装完成，新建模拟器，运行，果然很流畅。但还是会有之前那个问题，也就是arm和x86兼容性。但较AS好的点是，可以用ARM Translation进行补丁，建模拟器的时候不用选arm的镜像（好像新建的过程中也没地方可选arm的镜像）。<br>于是把文章中的ARM Translation下载，拖拽到模拟器里安装，然后重启模拟器，安装自己的APP。果然就能安装上了，一阵窃喜。<br>但但但但是，运行APP就一直出现”xx应用已停止”的提示，也就是说虽然能安装，但是用不了，shit…<br>思索良久，想着会不会是ARM Translation版本的问题，直到看到了一篇文章，确认了这个想法。重新下载了模拟器版本对应的ARM Translation，然后就一切大吉了。</p>\n<p>反思：既然Genymotion模拟器能用ARM-Translation进行兼容，按道理AS里面也应该可以借鉴，但没找到哪里可以进行设置，后续继续研究…</p>\n<h3 id=\"参考文章：\"><a href=\"#参考文章：\" class=\"headerlink\" title=\"参考文章：\"></a>参考文章：</h3><p>1.mac下AS的搭建以及环境配置： <a href=\"https://blog.csdn.net/weixin_28774815/article/details/81334687\">https://blog.csdn.net/weixin_28774815/article/details/81334687</a><br>2.Genymotion的安装、使用和注意事项： <a href=\"https://imququ.com/post/genymotion.html\">https://imququ.com/post/genymotion.html</a><br>3.Genymotion-ARM-Translation各版本下载： <a href=\"https://blog.csdn.net/GHY2016/article/details/83422620\">https://blog.csdn.net/GHY2016/article/details/83422620</a></p>"},{"title":"JavaScript学习笔记","date":"2017-03-04T16:00:00.000Z","_content":"\nJS的一些学习笔记\n<!-- more -->\n\n### 一、ECMAScript 类型：\n+ 原始类型：Undefined,Null,Bollean,Number,String\n+ 引用类型：Object\n\n### 二、函数：\n```js\nfunction a(){} //定义,不自动执行\n```\n```js\nvar a = function(){} //定义,不自动执行\n```\n```js\nvar a = function(){}(); //立即执行\n注意：function a(){}(); //错误的\n```\n```js\n(function a(){}）(); //立即执行\n```\n```js\n(function(){})(); //同上一样,立即执行\n```\n```js\n(function(){}()); //上边的”美观“写法,立即执行\n```\n```js\n!function(){}(); //立即执行,装B写法\n```\n```js\n+function(){}(); //立即执行,装B写法\n```\n```js\ntrue && function(){}(); //立即执行,装B写法\n```\n\n### 三、函数闭包：\n```js\nvar Circle = function(r){\n\tthis.r = r;\n}\nCircle.PI = 3.1415926;\nCircle.prototype.area = funtion(){\n\treturn this.PI * this.r * this.r;\n}\n调用：\nvar c = new Circle(1.0); \nalert(c.area()); \n或者:\n\t(new Circle()).area(1.0);\n```\n```js\nvar Circle = function(){ \n\tvar obj = {};\n\tobj.PI=3.1415926;\n\tobj.area=function(r){\n\t\treturn this.PI * r * r;\n\t}\n\treturn obj;\n}\n或者：\nvar Circle = function(){ \n\treturn{ \n\t\tPI:3.1415926,\n\t\tarea:function(r){\n\t\t\treturn this.PI * r * r;\n\t\t}\n\t}\n}\n调用：\nvar c = new Circle(1.0); \nalert(c.area());\n或者:\n\t (new Circle()).area(1.0);\n改进版：\nvar Circle = (function(){ \n\tvar obj = {};\n\tobj.PI=3.1415926;\n\tobj.area=function(r){\n\t\treturn this.PI * r * r;}return obj;\n\t}());\n调用： \nCircle.area(1);\n```\n```js\nvar Circle = new Object();  \nCircle.PI = 3.14159;  \nCircle.Area = function(r) {  \n\treturn this.PI * r * r;  \n} \n调用：\nalert( Circle.Area( 1.0 ) ); \n```\n```js\nvar Circle={\n\t\"PI\":3.1415926,\n\t\"area\":function(r){\n\t\treturn this.PI * r * r\n\t}\n}\n调用：\nalert(Circle.Area(1.0));\n```\n```js\nvar Circle = new Function(\"this.PI=3.1415926;this.area=function(r){return r * r * this.PI}\");\n调用：\nalert((new Circle()).area(1.0));\n```\n\n### 四、函数的prototype和直接赋值的方法的区别：\n```js\nvar ff = function(){ \n\tthis.PI = 3.1415926; \n}\nff.showD = function(){ \n\talert(this.PI); \n}\nff.prototype.showE = function (){ \n\talert(this.PI); \n}\n调用：\nff.showD(); //undefined\n(new ff()).showE(); //3.1415926\n错误写法 :\nff.showE(); //报错\n(new ff()).showD(); //报错\n```\n解释：\n1、不使用prototype属性定义的对象方法，是静态方法，只能直接用类名进行调用！另外，此静态方法中无法使用this变量来调用对象其他的属性！\n2、使用prototype属性定义的对象方法，是非静态方法，只有在实例化后才能使用！其方法内部可以this来引用对象自身中的其他属性！\n\n### 五、直接用in判断对象是否有该属性\n```js\nvar dd = {\"aa\":\"1\",\"bb\":\"2\"}\n\"aa\" in dd //true;\n\"cc\" in dd //false;\n```\n\n### 六、js方法里面，带空格的处理\n动态拼接html的时候，如以下方法会报错\n```HTML \n<a id=\"test\" onclick=fun(\" 你好 有空格\",\"en这个没空格\")></a>\n```\n+ escape 函数 和unescape函数\n+ 不把参数拼接在html中的函数中，拼为该元素的属性，如：\n\n```HTML\n<a id=\"test\" data-name=\" 你好 有空格\" onclick=\"fun(this)\"></a>\n```\n\n### 七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each  \n```js\nvar a = {\"a\":\"a\",\"b\":\"b\",\"c\":\"c\"},b = [\"a\",\"b\",\"c\"];\nfor(var t in a){console.log(t);} //输出 0,1,2\nfor(var t in b){console.log(t);} //输出 a,b,c\nfor(var t in a){console.log(a[t]);} //输出 a,b,c\nfor(var t in b){console.log(a[t]);} //输出 a,b,c\n\n$.each(a,function(k,v){console.log(k+\",\"+v);})//输出 a,a ， b,b ，c,c\n$.each(b,function(k,v){console.log(k+\",\"+v);})//输出 0,a ， 1,b ，2,c \n```\n*备注：但是直接用下标取值的时候对象不行；能 b[0],不能 a[0]*\n\n** 拓展：**\n\n1.原生JS循环数组还能用 forEach (注意：输出参数和$.each的参数输出相反)\n\n```js\na = [\"a\",\"b\",\"c\"],\nb = [\"a\", \"b\", \"c\"];\na.forEach(function(k,v){\n\tconsole.log(k+\",\"+v)\n})\n// 输出 a,0 ， b,1 ，c,2 \n```\n2.$.each后面还能加参数，如果加入参数，则输出的是 自定义的参数，用this输出当前循环的对象\n```js\n$.each(b,function(k,v){console.log(k+\",\"+v);}) //输出 0,a ， 1,b ，2,c\n$.each(b,function(k,v){console.log(k+\",\"+v);},[\"1\",\"2\"]) //输出 1,2 ，1,2 ，1,2\n$.each(b,function(k,v){console.log(this +\",\"+ k+\",\"+v);}) //输出 a,0,a ， b,1,b ，c,2,c\n```\n具体参考：http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html\n\n### 八、js四种取整方法的比较 \nMath.floor VS Math.round VS parseInt VS |0 VS >>0 VS ~~ VS >>>0\nparseInt最慢，其他差不多（Math.round 是四舍五入，其他方法都是直接取整）\n详情参照：<http://jsperf.com/math-floor-vs-math-round-vs-parseint/42>\n","source":"_posts/JavaScript学习笔记.md","raw":"---\ntitle: JavaScript学习笔记\ndate: 2017-03-05\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\nJS的一些学习笔记\n<!-- more -->\n\n### 一、ECMAScript 类型：\n+ 原始类型：Undefined,Null,Bollean,Number,String\n+ 引用类型：Object\n\n### 二、函数：\n```js\nfunction a(){} //定义,不自动执行\n```\n```js\nvar a = function(){} //定义,不自动执行\n```\n```js\nvar a = function(){}(); //立即执行\n注意：function a(){}(); //错误的\n```\n```js\n(function a(){}）(); //立即执行\n```\n```js\n(function(){})(); //同上一样,立即执行\n```\n```js\n(function(){}()); //上边的”美观“写法,立即执行\n```\n```js\n!function(){}(); //立即执行,装B写法\n```\n```js\n+function(){}(); //立即执行,装B写法\n```\n```js\ntrue && function(){}(); //立即执行,装B写法\n```\n\n### 三、函数闭包：\n```js\nvar Circle = function(r){\n\tthis.r = r;\n}\nCircle.PI = 3.1415926;\nCircle.prototype.area = funtion(){\n\treturn this.PI * this.r * this.r;\n}\n调用：\nvar c = new Circle(1.0); \nalert(c.area()); \n或者:\n\t(new Circle()).area(1.0);\n```\n```js\nvar Circle = function(){ \n\tvar obj = {};\n\tobj.PI=3.1415926;\n\tobj.area=function(r){\n\t\treturn this.PI * r * r;\n\t}\n\treturn obj;\n}\n或者：\nvar Circle = function(){ \n\treturn{ \n\t\tPI:3.1415926,\n\t\tarea:function(r){\n\t\t\treturn this.PI * r * r;\n\t\t}\n\t}\n}\n调用：\nvar c = new Circle(1.0); \nalert(c.area());\n或者:\n\t (new Circle()).area(1.0);\n改进版：\nvar Circle = (function(){ \n\tvar obj = {};\n\tobj.PI=3.1415926;\n\tobj.area=function(r){\n\t\treturn this.PI * r * r;}return obj;\n\t}());\n调用： \nCircle.area(1);\n```\n```js\nvar Circle = new Object();  \nCircle.PI = 3.14159;  \nCircle.Area = function(r) {  \n\treturn this.PI * r * r;  \n} \n调用：\nalert( Circle.Area( 1.0 ) ); \n```\n```js\nvar Circle={\n\t\"PI\":3.1415926,\n\t\"area\":function(r){\n\t\treturn this.PI * r * r\n\t}\n}\n调用：\nalert(Circle.Area(1.0));\n```\n```js\nvar Circle = new Function(\"this.PI=3.1415926;this.area=function(r){return r * r * this.PI}\");\n调用：\nalert((new Circle()).area(1.0));\n```\n\n### 四、函数的prototype和直接赋值的方法的区别：\n```js\nvar ff = function(){ \n\tthis.PI = 3.1415926; \n}\nff.showD = function(){ \n\talert(this.PI); \n}\nff.prototype.showE = function (){ \n\talert(this.PI); \n}\n调用：\nff.showD(); //undefined\n(new ff()).showE(); //3.1415926\n错误写法 :\nff.showE(); //报错\n(new ff()).showD(); //报错\n```\n解释：\n1、不使用prototype属性定义的对象方法，是静态方法，只能直接用类名进行调用！另外，此静态方法中无法使用this变量来调用对象其他的属性！\n2、使用prototype属性定义的对象方法，是非静态方法，只有在实例化后才能使用！其方法内部可以this来引用对象自身中的其他属性！\n\n### 五、直接用in判断对象是否有该属性\n```js\nvar dd = {\"aa\":\"1\",\"bb\":\"2\"}\n\"aa\" in dd //true;\n\"cc\" in dd //false;\n```\n\n### 六、js方法里面，带空格的处理\n动态拼接html的时候，如以下方法会报错\n```HTML \n<a id=\"test\" onclick=fun(\" 你好 有空格\",\"en这个没空格\")></a>\n```\n+ escape 函数 和unescape函数\n+ 不把参数拼接在html中的函数中，拼为该元素的属性，如：\n\n```HTML\n<a id=\"test\" data-name=\" 你好 有空格\" onclick=\"fun(this)\"></a>\n```\n\n### 七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each  \n```js\nvar a = {\"a\":\"a\",\"b\":\"b\",\"c\":\"c\"},b = [\"a\",\"b\",\"c\"];\nfor(var t in a){console.log(t);} //输出 0,1,2\nfor(var t in b){console.log(t);} //输出 a,b,c\nfor(var t in a){console.log(a[t]);} //输出 a,b,c\nfor(var t in b){console.log(a[t]);} //输出 a,b,c\n\n$.each(a,function(k,v){console.log(k+\",\"+v);})//输出 a,a ， b,b ，c,c\n$.each(b,function(k,v){console.log(k+\",\"+v);})//输出 0,a ， 1,b ，2,c \n```\n*备注：但是直接用下标取值的时候对象不行；能 b[0],不能 a[0]*\n\n** 拓展：**\n\n1.原生JS循环数组还能用 forEach (注意：输出参数和$.each的参数输出相反)\n\n```js\na = [\"a\",\"b\",\"c\"],\nb = [\"a\", \"b\", \"c\"];\na.forEach(function(k,v){\n\tconsole.log(k+\",\"+v)\n})\n// 输出 a,0 ， b,1 ，c,2 \n```\n2.$.each后面还能加参数，如果加入参数，则输出的是 自定义的参数，用this输出当前循环的对象\n```js\n$.each(b,function(k,v){console.log(k+\",\"+v);}) //输出 0,a ， 1,b ，2,c\n$.each(b,function(k,v){console.log(k+\",\"+v);},[\"1\",\"2\"]) //输出 1,2 ，1,2 ，1,2\n$.each(b,function(k,v){console.log(this +\",\"+ k+\",\"+v);}) //输出 a,0,a ， b,1,b ，c,2,c\n```\n具体参考：http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html\n\n### 八、js四种取整方法的比较 \nMath.floor VS Math.round VS parseInt VS |0 VS >>0 VS ~~ VS >>>0\nparseInt最慢，其他差不多（Math.round 是四舍五入，其他方法都是直接取整）\n详情参照：<http://jsperf.com/math-floor-vs-math-round-vs-parseint/42>\n","slug":"JavaScript学习笔记","published":1,"updated":"2022-06-15T08:16:50.735Z","_id":"cl4e3ayw5000ek4rqmwjukauj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>JS的一些学习笔记</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、ECMAScript-类型：\"><a href=\"#一、ECMAScript-类型：\" class=\"headerlink\" title=\"一、ECMAScript 类型：\"></a>一、ECMAScript 类型：</h3><ul>\n<li>原始类型：Undefined,Null,Bollean,Number,String</li>\n<li>引用类型：Object</li>\n</ul>\n<h3 id=\"二、函数：\"><a href=\"#二、函数：\" class=\"headerlink\" title=\"二、函数：\"></a>二、函数：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"comment\">//定义,不自动执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"comment\">//定义,不自动执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">注意：<span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//错误的</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125;）(); <span class=\"comment\">//立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;)(); <span class=\"comment\">//同上一样,立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;()); <span class=\"comment\">//上边的”美观“写法,立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">true</span> &amp;&amp; <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、函数闭包：\"><a href=\"#三、函数闭包：\" class=\"headerlink\" title=\"三、函数闭包：\"></a>三、函数闭包：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">r</span> = r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">area</span> = <span class=\"title function_\">funtion</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">1.0</span>); </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(c.<span class=\"title function_\">area</span>()); </span><br><span class=\"line\">或者:</span><br><span class=\"line\">\t(<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">\tobj.<span class=\"property\">PI</span>=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">\tobj.<span class=\"property\">area</span>=<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">或者：</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"attr\">PI</span>:<span class=\"number\">3.1415926</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">area</span>:<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">1.0</span>); </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(c.<span class=\"title function_\">area</span>());</span><br><span class=\"line\">或者:</span><br><span class=\"line\">\t (<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>);</span><br><span class=\"line\">改进版：</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">\tobj.<span class=\"property\">PI</span>=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">\tobj.<span class=\"property\">area</span>=<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;&#125;<span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">\t&#125;());</span><br><span class=\"line\">调用： </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"title function_\">area</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();  </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.14159</span>;  </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">Area</span> = <span class=\"keyword\">function</span>(<span class=\"params\">r</span>) &#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>( <span class=\"title class_\">Circle</span>.<span class=\"title class_\">Area</span>( <span class=\"number\">1.0</span> ) ); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span>=&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;PI&quot;</span>:<span class=\"number\">3.1415926</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;area&quot;</span>:<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title class_\">Circle</span>.<span class=\"title class_\">Area</span>(<span class=\"number\">1.0</span>));</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;this.PI=3.1415926;this.area=function(r)&#123;return r * r * this.PI&#125;&quot;</span>);</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>((<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、函数的prototype和直接赋值的方法的区别：\"><a href=\"#四、函数的prototype和直接赋值的方法的区别：\" class=\"headerlink\" title=\"四、函数的prototype和直接赋值的方法的区别：\"></a>四、函数的prototype和直接赋值的方法的区别：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ff = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.1415926</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ff.<span class=\"property\">showD</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ff.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">showE</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\">ff.<span class=\"title function_\">showD</span>(); <span class=\"comment\">//undefined</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> <span class=\"title function_\">ff</span>()).<span class=\"title function_\">showE</span>(); <span class=\"comment\">//3.1415926</span></span><br><span class=\"line\">错误写法 :</span><br><span class=\"line\">ff.<span class=\"title function_\">showE</span>(); <span class=\"comment\">//报错</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> <span class=\"title function_\">ff</span>()).<span class=\"title function_\">showD</span>(); <span class=\"comment\">//报错</span></span><br></pre></td></tr></table></figure>\n<p>解释：<br>1、不使用prototype属性定义的对象方法，是静态方法，只能直接用类名进行调用！另外，此静态方法中无法使用this变量来调用对象其他的属性！<br>2、使用prototype属性定义的对象方法，是非静态方法，只有在实例化后才能使用！其方法内部可以this来引用对象自身中的其他属性！</p>\n<h3 id=\"五、直接用in判断对象是否有该属性\"><a href=\"#五、直接用in判断对象是否有该属性\" class=\"headerlink\" title=\"五、直接用in判断对象是否有该属性\"></a>五、直接用in判断对象是否有该属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dd = &#123;<span class=\"string\">&quot;aa&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;bb&quot;</span>:<span class=\"string\">&quot;2&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"string\">&quot;aa&quot;</span> <span class=\"keyword\">in</span> dd <span class=\"comment\">//true;</span></span><br><span class=\"line\"><span class=\"string\">&quot;cc&quot;</span> <span class=\"keyword\">in</span> dd <span class=\"comment\">//false;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"六、js方法里面，带空格的处理\"><a href=\"#六、js方法里面，带空格的处理\" class=\"headerlink\" title=\"六、js方法里面，带空格的处理\"></a>六、js方法里面，带空格的处理</h3><p>动态拼接html的时候，如以下方法会报错</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">fun(</span>&quot; 你好 有空格&quot;,&quot;<span class=\"attr\">en</span>这个没空格&quot;)&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>escape 函数 和unescape函数</li>\n<li>不把参数拼接在html中的函数中，拼为该元素的属性，如：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&quot; 你好 有空格&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;fun(this)&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、for-in方法既能循环数组也能循环对象-同-jQuery-的-each\"><a href=\"#七、for-in方法既能循环数组也能循环对象-同-jQuery-的-each\" class=\"headerlink\" title=\"七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each\"></a>七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;c&quot;</span>&#125;,b = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> a)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);&#125; <span class=\"comment\">//输出 0,1,2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> b)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> a)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a[t]);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> b)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a[t]);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(a,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;)<span class=\"comment\">//输出 a,a ， b,b ，c,c</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;)<span class=\"comment\">//输出 0,a ， 1,b ，2,c </span></span><br></pre></td></tr></table></figure>\n<p><em>备注：但是直接用下标取值的时候对象不行；能 b[0],不能 a[0]</em></p>\n<p>** 拓展：**</p>\n<p>1.原生JS循环数组还能用 forEach (注意：输出参数和$.each的参数输出相反)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>],</span><br><span class=\"line\">b = [<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>];</span><br><span class=\"line\">a.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 输出 a,0 ， b,1 ，c,2 </span></span><br></pre></td></tr></table></figure>\n<p>2.$.each后面还能加参数，如果加入参数，则输出的是 自定义的参数，用this输出当前循环的对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;) <span class=\"comment\">//输出 0,a ， 1,b ，2,c</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;,[<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;2&quot;</span>]) <span class=\"comment\">//输出 1,2 ，1,2 ，1,2</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span> +<span class=\"string\">&quot;,&quot;</span>+ k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;) <span class=\"comment\">//输出 a,0,a ， b,1,b ，c,2,c</span></span><br></pre></td></tr></table></figure>\n<p>具体参考：<a href=\"http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html\">http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html</a></p>\n<h3 id=\"八、js四种取整方法的比较\"><a href=\"#八、js四种取整方法的比较\" class=\"headerlink\" title=\"八、js四种取整方法的比较\"></a>八、js四种取整方法的比较</h3><p>Math.floor VS Math.round VS parseInt VS |0 VS &gt;&gt;0 VS ~~ VS &gt;&gt;&gt;0<br>parseInt最慢，其他差不多（Math.round 是四舍五入，其他方法都是直接取整）<br>详情参照：<a href=\"http://jsperf.com/math-floor-vs-math-round-vs-parseint/42\">http://jsperf.com/math-floor-vs-math-round-vs-parseint/42</a></p>\n","site":{"data":{}},"excerpt":"<p>JS的一些学习笔记</p>","more":"<h3 id=\"一、ECMAScript-类型：\"><a href=\"#一、ECMAScript-类型：\" class=\"headerlink\" title=\"一、ECMAScript 类型：\"></a>一、ECMAScript 类型：</h3><ul>\n<li>原始类型：Undefined,Null,Bollean,Number,String</li>\n<li>引用类型：Object</li>\n</ul>\n<h3 id=\"二、函数：\"><a href=\"#二、函数：\" class=\"headerlink\" title=\"二、函数：\"></a>二、函数：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"comment\">//定义,不自动执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"comment\">//定义,不自动执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">注意：<span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//错误的</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>)&#123;&#125;）(); <span class=\"comment\">//立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;)(); <span class=\"comment\">//同上一样,立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;()); <span class=\"comment\">//上边的”美观“写法,立即执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">true</span> &amp;&amp; <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(); <span class=\"comment\">//立即执行,装B写法</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、函数闭包：\"><a href=\"#三、函数闭包：\" class=\"headerlink\" title=\"三、函数闭包：\"></a>三、函数闭包：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">r</span> = r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">area</span> = <span class=\"title function_\">funtion</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">1.0</span>); </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(c.<span class=\"title function_\">area</span>()); </span><br><span class=\"line\">或者:</span><br><span class=\"line\">\t(<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">\tobj.<span class=\"property\">PI</span>=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">\tobj.<span class=\"property\">area</span>=<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">或者：</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"attr\">PI</span>:<span class=\"number\">3.1415926</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">area</span>:<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">1.0</span>); </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(c.<span class=\"title function_\">area</span>());</span><br><span class=\"line\">或者:</span><br><span class=\"line\">\t (<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>);</span><br><span class=\"line\">改进版：</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">\tobj.<span class=\"property\">PI</span>=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">\tobj.<span class=\"property\">area</span>=<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;&#125;<span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">\t&#125;());</span><br><span class=\"line\">调用： </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"title function_\">area</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();  </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.14159</span>;  </span><br><span class=\"line\"><span class=\"title class_\">Circle</span>.<span class=\"property\">Area</span> = <span class=\"keyword\">function</span>(<span class=\"params\">r</span>) &#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r;  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>( <span class=\"title class_\">Circle</span>.<span class=\"title class_\">Area</span>( <span class=\"number\">1.0</span> ) ); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span>=&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;PI&quot;</span>:<span class=\"number\">3.1415926</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;area&quot;</span>:<span class=\"keyword\">function</span>(<span class=\"params\">r</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> * r * r</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title class_\">Circle</span>.<span class=\"title class_\">Area</span>(<span class=\"number\">1.0</span>));</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Circle</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;this.PI=3.1415926;this.area=function(r)&#123;return r * r * this.PI&#125;&quot;</span>);</span><br><span class=\"line\">调用：</span><br><span class=\"line\"><span class=\"title function_\">alert</span>((<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>()).<span class=\"title function_\">area</span>(<span class=\"number\">1.0</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、函数的prototype和直接赋值的方法的区别：\"><a href=\"#四、函数的prototype和直接赋值的方法的区别：\" class=\"headerlink\" title=\"四、函数的prototype和直接赋值的方法的区别：\"></a>四、函数的prototype和直接赋值的方法的区别：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ff = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span> = <span class=\"number\">3.1415926</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ff.<span class=\"property\">showD</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ff.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">showE</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">PI</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">调用：</span><br><span class=\"line\">ff.<span class=\"title function_\">showD</span>(); <span class=\"comment\">//undefined</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> <span class=\"title function_\">ff</span>()).<span class=\"title function_\">showE</span>(); <span class=\"comment\">//3.1415926</span></span><br><span class=\"line\">错误写法 :</span><br><span class=\"line\">ff.<span class=\"title function_\">showE</span>(); <span class=\"comment\">//报错</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> <span class=\"title function_\">ff</span>()).<span class=\"title function_\">showD</span>(); <span class=\"comment\">//报错</span></span><br></pre></td></tr></table></figure>\n<p>解释：<br>1、不使用prototype属性定义的对象方法，是静态方法，只能直接用类名进行调用！另外，此静态方法中无法使用this变量来调用对象其他的属性！<br>2、使用prototype属性定义的对象方法，是非静态方法，只有在实例化后才能使用！其方法内部可以this来引用对象自身中的其他属性！</p>\n<h3 id=\"五、直接用in判断对象是否有该属性\"><a href=\"#五、直接用in判断对象是否有该属性\" class=\"headerlink\" title=\"五、直接用in判断对象是否有该属性\"></a>五、直接用in判断对象是否有该属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dd = &#123;<span class=\"string\">&quot;aa&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;bb&quot;</span>:<span class=\"string\">&quot;2&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"string\">&quot;aa&quot;</span> <span class=\"keyword\">in</span> dd <span class=\"comment\">//true;</span></span><br><span class=\"line\"><span class=\"string\">&quot;cc&quot;</span> <span class=\"keyword\">in</span> dd <span class=\"comment\">//false;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"六、js方法里面，带空格的处理\"><a href=\"#六、js方法里面，带空格的处理\" class=\"headerlink\" title=\"六、js方法里面，带空格的处理\"></a>六、js方法里面，带空格的处理</h3><p>动态拼接html的时候，如以下方法会报错</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">fun(</span>&quot; 你好 有空格&quot;,&quot;<span class=\"attr\">en</span>这个没空格&quot;)&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>escape 函数 和unescape函数</li>\n<li>不把参数拼接在html中的函数中，拼为该元素的属性，如：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&quot; 你好 有空格&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;fun(this)&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、for-in方法既能循环数组也能循环对象-同-jQuery-的-each\"><a href=\"#七、for-in方法既能循环数组也能循环对象-同-jQuery-的-each\" class=\"headerlink\" title=\"七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each\"></a>七、for in方法既能循环数组也能循环对象,同 jQuery 的 $.each</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;c&quot;</span>&#125;,b = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> a)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);&#125; <span class=\"comment\">//输出 0,1,2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> b)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> a)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a[t]);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t <span class=\"keyword\">in</span> b)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a[t]);&#125; <span class=\"comment\">//输出 a,b,c</span></span><br><span class=\"line\"></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(a,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;)<span class=\"comment\">//输出 a,a ， b,b ，c,c</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;)<span class=\"comment\">//输出 0,a ， 1,b ，2,c </span></span><br></pre></td></tr></table></figure>\n<p><em>备注：但是直接用下标取值的时候对象不行；能 b[0],不能 a[0]</em></p>\n<p>** 拓展：**</p>\n<p>1.原生JS循环数组还能用 forEach (注意：输出参数和$.each的参数输出相反)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>],</span><br><span class=\"line\">b = [<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>];</span><br><span class=\"line\">a.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 输出 a,0 ， b,1 ，c,2 </span></span><br></pre></td></tr></table></figure>\n<p>2.$.each后面还能加参数，如果加入参数，则输出的是 自定义的参数，用this输出当前循环的对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;) <span class=\"comment\">//输出 0,a ， 1,b ，2,c</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;,[<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;2&quot;</span>]) <span class=\"comment\">//输出 1,2 ，1,2 ，1,2</span></span><br><span class=\"line\">$.<span class=\"title function_\">each</span>(b,<span class=\"keyword\">function</span>(<span class=\"params\">k,v</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span> +<span class=\"string\">&quot;,&quot;</span>+ k+<span class=\"string\">&quot;,&quot;</span>+v);&#125;) <span class=\"comment\">//输出 a,0,a ， b,1,b ，c,2,c</span></span><br></pre></td></tr></table></figure>\n<p>具体参考：<a href=\"http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html\">http://www.cnblogs.com/mabelstyle/archive/2013/02/19/2917260.html</a></p>\n<h3 id=\"八、js四种取整方法的比较\"><a href=\"#八、js四种取整方法的比较\" class=\"headerlink\" title=\"八、js四种取整方法的比较\"></a>八、js四种取整方法的比较</h3><p>Math.floor VS Math.round VS parseInt VS |0 VS &gt;&gt;0 VS ~~ VS &gt;&gt;&gt;0<br>parseInt最慢，其他差不多（Math.round 是四舍五入，其他方法都是直接取整）<br>详情参照：<a href=\"http://jsperf.com/math-floor-vs-math-round-vs-parseint/42\">http://jsperf.com/math-floor-vs-math-round-vs-parseint/42</a></p>"},{"title":"centos搭建rabbitmq（一）","date":"2018-09-02T16:00:00.000Z","_content":"\ncentos搭建rabbitmq: centos 6\n<!-- more -->\n\n### 一、安装 erlang\n前情提要：可以直接通过yum install erlang 安装erlang，但是安装的版本很低，当安装rabbitmq的时候会提示需要erlang版本>=19.3，这TM就尴尬了，所以直接图简单安装erlang的办法是不可行的 。\n\n+ 说说安装时候遇到的坑，由于系统是centos6，比较老的版本，使用 erl -version 查看版本的时候发现系统原本没有安装erlang，即使很low的版本。一时手抖，直接用 yum install erlang 安装了，安装过程倒是很顺滑。但是它安装的却是很低的版本（B04之类），在安装最新版本的 rabbitmq 的时候会提示版本过低。\n\n+ 填坑1：想着直接用 yum update erlang ，提示已是最新版本（因为系统里yum的包里面的erlang），放弃...\n\n+ 填坑2：查看rabbitmq官方文档（http://www.rabbitmq.com/install-rpm.html#downloads），说可以安装 rabbitmq团队diy的零依赖版本（Zero-dependency Erlang from RabbitMQ），大致意思也就是简化版本，只有rabbitmq需要的一些库。于是开始按照文档来，参照（https://github.com/rabbitmq/erlang-rpm），通过 Bintray Yum Repositories 方式安装，先新建了 /etc/yum.repos.d/rabbitmq-erlang.repo ，加入了文档里的配置 （选的是 Erlang 20.x on CentOS 6），然后 yum install erlang。此时提示 /usr/... 下面的某些 .x86_64 后缀的文件跟已安装的冲突，安装失败。继续...\n\n+ 继续填坑2：首先想到的是 yum remove erlang，然后再 install，仍然提示冲突。使用 yum list installed | grep erlang，发现下面出现一大片内容，也就是提示冲突的内容。WTF，于是把这些之前旧版本的残留依赖全部 remove掉 （ yum remove erlang-*.x86_64 ），然后再安装就OK了。\n\n总结下正确的安装姿势：\n+ 1、查看已安装erlang信息\n```bash\nerl -version\n```\n如果有，会显示相应的版本号（我们继续第二步）\n+ 2、如果已安装版本过低，则先卸载 （如果没有已安装的，跳过此步）\n```bash\nyum list installed | grep erlang\n```\n一般情况下会出现很多的依赖包，别心软，都卸载，不然会出现上面的\"填坑2\"\n```bash\nyum remove erlang-*.x86_64\n```\n+3、安装rabbitmq官方推荐的\"Zero-dependency Erlang from RabbitMQ\"版本\n安装官方文档的链接，跳到 https://github.com/rabbitmq/erlang-rpm ，有两种安装方式 YUM && RPM，我们选 YUM 的 Bintray Yum Repositories 方式安装。跟着文档一步一步来就OK（本文选用 To use Erlang 20.x on CentOS 6 ）。\n```bash\nvim /etc/yum.repos.d/rabbitmq-erlang.repo\n```\n```bash\n[rabbitmq-erlang]\nname=rabbitmq-erlang\nbaseurl=http://dl.bintray.com/rabbitmq/rpm/erlang/20/el/6\ngpgcheck=1\ngpgkey=http://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc\nrepo_gpgcheck=0\nenabled=1\n```\n注：原文档中baseurl 和 gpgkey 是https的链接，有可能会报错（没找到原因），改成http链接就可以了。\n```bash\nyum install erlang\n```\n到此 erlang 就安装成功了，我们可以用以下命令查看下版本（Erlang (SMP,ASYNC_THREADS,HIPE) (BEAM) emulator version 9.3.3.3）\n```bash\nerl -version\n```\n\n### 二、安装 rabbitmq\n去 http://www.rabbitmq.com/download.html 下载对应版本的包，本文使用 https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm 版本举例。\n\n+1、下载对应包\n```bash\nwget https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm\n```\n\n+2、在下载目录，直接yum安装就行（注意install后面参数为下载的包全名）\n```bash\nyum install rabbitmq-server-3.7.7-1.el6.noarch.rpm\n```\n\n到此 rabbitmq 安装成功。\n\n### 三、基本使用命令\n\n+1、启动RabbitMQ服务\n```bash\nservice rabbitmq-server start\n```\n+2、状态查看\n```bash\nrabbitmqctl status\n```\n+3、启用插件\n```bash\nrabbitmq-plugins enable rabbitmq_management\n```\n+4、重启服务\n```bash\nservice rabbitmq-server restart\n```\n+5、添加帐号:name 密码:passwd\n```bash\nrabbitmqctl add_user name passwd\n```\n+6、赋予其administrator角色\n```bash\nrabbitmqctl set_user_tags name administrator\n```\n+7、设置权限\n```bash\nrabbitmqctl set_permissions -p / name \".*\" \".*\" \".*\"\n```\n\n** 刚安装完成的时候，启用插件，浏览器里输入 http://xx.xx.xx.xx:15672 ，然后用默认的用户名和密码 guest guest 登陆的时候发现不成功（提示该用户仅能在localhost域名下登陆）。此时可以新建一个用户，并且给它赋予管理员权限，然后登陆就OK。\n```bash\nrabbitmqctl add_user admin admin\nrabbitmqctl set_user_tags admin administrator\n```\n\n本文重点参考： https://www.jianshu.com/p/f54dc259a9ed\n             https://github.com/rabbitmq/erlang-rpm\n             http://www.rabbitmq.com/install-rpm.html#downloads\n             https://segmentfault.com/a/1190000010832825\n\n#### node项目中使用rabbitMq示例请参照下一节。\n\n","source":"_posts/centos搭建rabbitmq（一）.md","raw":"---\ntitle: centos搭建rabbitmq（一）\ndate: 2018-09-03\ncategories: Nginx\ntags: \n    - Linux\n    - Nginx\n    - NodeJS\n    - RabbitMQ\n#description: \n---\n\ncentos搭建rabbitmq: centos 6\n<!-- more -->\n\n### 一、安装 erlang\n前情提要：可以直接通过yum install erlang 安装erlang，但是安装的版本很低，当安装rabbitmq的时候会提示需要erlang版本>=19.3，这TM就尴尬了，所以直接图简单安装erlang的办法是不可行的 。\n\n+ 说说安装时候遇到的坑，由于系统是centos6，比较老的版本，使用 erl -version 查看版本的时候发现系统原本没有安装erlang，即使很low的版本。一时手抖，直接用 yum install erlang 安装了，安装过程倒是很顺滑。但是它安装的却是很低的版本（B04之类），在安装最新版本的 rabbitmq 的时候会提示版本过低。\n\n+ 填坑1：想着直接用 yum update erlang ，提示已是最新版本（因为系统里yum的包里面的erlang），放弃...\n\n+ 填坑2：查看rabbitmq官方文档（http://www.rabbitmq.com/install-rpm.html#downloads），说可以安装 rabbitmq团队diy的零依赖版本（Zero-dependency Erlang from RabbitMQ），大致意思也就是简化版本，只有rabbitmq需要的一些库。于是开始按照文档来，参照（https://github.com/rabbitmq/erlang-rpm），通过 Bintray Yum Repositories 方式安装，先新建了 /etc/yum.repos.d/rabbitmq-erlang.repo ，加入了文档里的配置 （选的是 Erlang 20.x on CentOS 6），然后 yum install erlang。此时提示 /usr/... 下面的某些 .x86_64 后缀的文件跟已安装的冲突，安装失败。继续...\n\n+ 继续填坑2：首先想到的是 yum remove erlang，然后再 install，仍然提示冲突。使用 yum list installed | grep erlang，发现下面出现一大片内容，也就是提示冲突的内容。WTF，于是把这些之前旧版本的残留依赖全部 remove掉 （ yum remove erlang-*.x86_64 ），然后再安装就OK了。\n\n总结下正确的安装姿势：\n+ 1、查看已安装erlang信息\n```bash\nerl -version\n```\n如果有，会显示相应的版本号（我们继续第二步）\n+ 2、如果已安装版本过低，则先卸载 （如果没有已安装的，跳过此步）\n```bash\nyum list installed | grep erlang\n```\n一般情况下会出现很多的依赖包，别心软，都卸载，不然会出现上面的\"填坑2\"\n```bash\nyum remove erlang-*.x86_64\n```\n+3、安装rabbitmq官方推荐的\"Zero-dependency Erlang from RabbitMQ\"版本\n安装官方文档的链接，跳到 https://github.com/rabbitmq/erlang-rpm ，有两种安装方式 YUM && RPM，我们选 YUM 的 Bintray Yum Repositories 方式安装。跟着文档一步一步来就OK（本文选用 To use Erlang 20.x on CentOS 6 ）。\n```bash\nvim /etc/yum.repos.d/rabbitmq-erlang.repo\n```\n```bash\n[rabbitmq-erlang]\nname=rabbitmq-erlang\nbaseurl=http://dl.bintray.com/rabbitmq/rpm/erlang/20/el/6\ngpgcheck=1\ngpgkey=http://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc\nrepo_gpgcheck=0\nenabled=1\n```\n注：原文档中baseurl 和 gpgkey 是https的链接，有可能会报错（没找到原因），改成http链接就可以了。\n```bash\nyum install erlang\n```\n到此 erlang 就安装成功了，我们可以用以下命令查看下版本（Erlang (SMP,ASYNC_THREADS,HIPE) (BEAM) emulator version 9.3.3.3）\n```bash\nerl -version\n```\n\n### 二、安装 rabbitmq\n去 http://www.rabbitmq.com/download.html 下载对应版本的包，本文使用 https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm 版本举例。\n\n+1、下载对应包\n```bash\nwget https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm\n```\n\n+2、在下载目录，直接yum安装就行（注意install后面参数为下载的包全名）\n```bash\nyum install rabbitmq-server-3.7.7-1.el6.noarch.rpm\n```\n\n到此 rabbitmq 安装成功。\n\n### 三、基本使用命令\n\n+1、启动RabbitMQ服务\n```bash\nservice rabbitmq-server start\n```\n+2、状态查看\n```bash\nrabbitmqctl status\n```\n+3、启用插件\n```bash\nrabbitmq-plugins enable rabbitmq_management\n```\n+4、重启服务\n```bash\nservice rabbitmq-server restart\n```\n+5、添加帐号:name 密码:passwd\n```bash\nrabbitmqctl add_user name passwd\n```\n+6、赋予其administrator角色\n```bash\nrabbitmqctl set_user_tags name administrator\n```\n+7、设置权限\n```bash\nrabbitmqctl set_permissions -p / name \".*\" \".*\" \".*\"\n```\n\n** 刚安装完成的时候，启用插件，浏览器里输入 http://xx.xx.xx.xx:15672 ，然后用默认的用户名和密码 guest guest 登陆的时候发现不成功（提示该用户仅能在localhost域名下登陆）。此时可以新建一个用户，并且给它赋予管理员权限，然后登陆就OK。\n```bash\nrabbitmqctl add_user admin admin\nrabbitmqctl set_user_tags admin administrator\n```\n\n本文重点参考： https://www.jianshu.com/p/f54dc259a9ed\n             https://github.com/rabbitmq/erlang-rpm\n             http://www.rabbitmq.com/install-rpm.html#downloads\n             https://segmentfault.com/a/1190000010832825\n\n#### node项目中使用rabbitMq示例请参照下一节。\n\n","slug":"centos搭建rabbitmq（一）","published":1,"updated":"2022-06-15T08:24:17.156Z","_id":"cl4e3ayw6000gk4rqjj512e3p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>centos搭建rabbitmq: centos 6</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、安装-erlang\"><a href=\"#一、安装-erlang\" class=\"headerlink\" title=\"一、安装 erlang\"></a>一、安装 erlang</h3><p>前情提要：可以直接通过yum install erlang 安装erlang，但是安装的版本很低，当安装rabbitmq的时候会提示需要erlang版本&gt;&#x3D;19.3，这TM就尴尬了，所以直接图简单安装erlang的办法是不可行的 。</p>\n<ul>\n<li><p>说说安装时候遇到的坑，由于系统是centos6，比较老的版本，使用 erl -version 查看版本的时候发现系统原本没有安装erlang，即使很low的版本。一时手抖，直接用 yum install erlang 安装了，安装过程倒是很顺滑。但是它安装的却是很低的版本（B04之类），在安装最新版本的 rabbitmq 的时候会提示版本过低。</p>\n</li>\n<li><p>填坑1：想着直接用 yum update erlang ，提示已是最新版本（因为系统里yum的包里面的erlang），放弃…</p>\n</li>\n<li><p>填坑2：查看rabbitmq官方文档（<a href=\"http://www.rabbitmq.com/install-rpm.html#downloads%EF%BC%89%EF%BC%8C%E8%AF%B4%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85\">http://www.rabbitmq.com/install-rpm.html#downloads），说可以安装</a> rabbitmq团队diy的零依赖版本（Zero-dependency Erlang from RabbitMQ），大致意思也就是简化版本，只有rabbitmq需要的一些库。于是开始按照文档来，参照（<a href=\"https://github.com/rabbitmq/erlang-rpm%EF%BC%89%EF%BC%8C%E9%80%9A%E8%BF%87\">https://github.com/rabbitmq/erlang-rpm），通过</a> Bintray Yum Repositories 方式安装，先新建了 &#x2F;etc&#x2F;yum.repos.d&#x2F;rabbitmq-erlang.repo ，加入了文档里的配置 （选的是 Erlang 20.x on CentOS 6），然后 yum install erlang。此时提示 &#x2F;usr&#x2F;… 下面的某些 .x86_64 后缀的文件跟已安装的冲突，安装失败。继续…</p>\n</li>\n<li><p>继续填坑2：首先想到的是 yum remove erlang，然后再 install，仍然提示冲突。使用 yum list installed | grep erlang，发现下面出现一大片内容，也就是提示冲突的内容。WTF，于是把这些之前旧版本的残留依赖全部 remove掉 （ yum remove erlang-*.x86_64 ），然后再安装就OK了。</p>\n</li>\n</ul>\n<p>总结下正确的安装姿势：</p>\n<ul>\n<li>1、查看已安装erlang信息<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -version</span><br></pre></td></tr></table></figure>\n如果有，会显示相应的版本号（我们继续第二步）</li>\n<li>2、如果已安装版本过低，则先卸载 （如果没有已安装的，跳过此步）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list installed | grep erlang</span><br></pre></td></tr></table></figure>\n一般情况下会出现很多的依赖包，别心软，都卸载，不然会出现上面的”填坑2”<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove erlang-*.x86_64</span><br></pre></td></tr></table></figure>\n+3、安装rabbitmq官方推荐的”Zero-dependency Erlang from RabbitMQ”版本<br>安装官方文档的链接，跳到 <a href=\"https://github.com/rabbitmq/erlang-rpm\">https://github.com/rabbitmq/erlang-rpm</a> ，有两种安装方式 YUM &amp;&amp; RPM，我们选 YUM 的 Bintray Yum Repositories 方式安装。跟着文档一步一步来就OK（本文选用 To use Erlang 20.x on CentOS 6 ）。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/rabbitmq-erlang.repo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rabbitmq-erlang]</span><br><span class=\"line\">name=rabbitmq-erlang</span><br><span class=\"line\">baseurl=http://dl.bintray.com/rabbitmq/rpm/erlang/20/el/6</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc</span><br><span class=\"line\">repo_gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n注：原文档中baseurl 和 gpgkey 是https的链接，有可能会报错（没找到原因），改成http链接就可以了。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install erlang</span><br></pre></td></tr></table></figure>\n到此 erlang 就安装成功了，我们可以用以下命令查看下版本（Erlang (SMP,ASYNC_THREADS,HIPE) (BEAM) emulator version 9.3.3.3）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -version</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、安装-rabbitmq\"><a href=\"#二、安装-rabbitmq\" class=\"headerlink\" title=\"二、安装 rabbitmq\"></a>二、安装 rabbitmq</h3><p>去 <a href=\"http://www.rabbitmq.com/download.html\">http://www.rabbitmq.com/download.html</a> 下载对应版本的包，本文使用 <a href=\"https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm\">https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm</a> 版本举例。</p>\n<p>+1、下载对应包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>+2、在下载目录，直接yum安装就行（注意install后面参数为下载的包全名）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install rabbitmq-server-3.7.7-1.el6.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>到此 rabbitmq 安装成功。</p>\n<h3 id=\"三、基本使用命令\"><a href=\"#三、基本使用命令\" class=\"headerlink\" title=\"三、基本使用命令\"></a>三、基本使用命令</h3><p>+1、启动RabbitMQ服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service rabbitmq-server start</span><br></pre></td></tr></table></figure>\n<p>+2、状态查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl status</span><br></pre></td></tr></table></figure>\n<p>+3、启用插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-plugins <span class=\"built_in\">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure>\n<p>+4、重启服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service rabbitmq-server restart</span><br></pre></td></tr></table></figure>\n<p>+5、添加帐号:name 密码:passwd</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl add_user name passwd</span><br></pre></td></tr></table></figure>\n<p>+6、赋予其administrator角色</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl set_user_tags name administrator</span><br></pre></td></tr></table></figure>\n<p>+7、设置权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl set_permissions -p / name <span class=\"string\">&quot;.*&quot;</span> <span class=\"string\">&quot;.*&quot;</span> <span class=\"string\">&quot;.*&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>** 刚安装完成的时候，启用插件，浏览器里输入 <a href=\"http://xx.xx.xx.xx:15672/\">http://xx.xx.xx.xx:15672</a> ，然后用默认的用户名和密码 guest guest 登陆的时候发现不成功（提示该用户仅能在localhost域名下登陆）。此时可以新建一个用户，并且给它赋予管理员权限，然后登陆就OK。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl add_user admin admin</span><br><span class=\"line\">rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure>\n\n<p>本文重点参考： <a href=\"https://www.jianshu.com/p/f54dc259a9ed\">https://www.jianshu.com/p/f54dc259a9ed</a><br>             <a href=\"https://github.com/rabbitmq/erlang-rpm\">https://github.com/rabbitmq/erlang-rpm</a><br>             <a href=\"http://www.rabbitmq.com/install-rpm.html#downloads\">http://www.rabbitmq.com/install-rpm.html#downloads</a><br>             <a href=\"https://segmentfault.com/a/1190000010832825\">https://segmentfault.com/a/1190000010832825</a></p>\n<h4 id=\"node项目中使用rabbitMq示例请参照下一节。\"><a href=\"#node项目中使用rabbitMq示例请参照下一节。\" class=\"headerlink\" title=\"node项目中使用rabbitMq示例请参照下一节。\"></a>node项目中使用rabbitMq示例请参照下一节。</h4>","site":{"data":{}},"excerpt":"<p>centos搭建rabbitmq: centos 6</p>","more":"<h3 id=\"一、安装-erlang\"><a href=\"#一、安装-erlang\" class=\"headerlink\" title=\"一、安装 erlang\"></a>一、安装 erlang</h3><p>前情提要：可以直接通过yum install erlang 安装erlang，但是安装的版本很低，当安装rabbitmq的时候会提示需要erlang版本&gt;&#x3D;19.3，这TM就尴尬了，所以直接图简单安装erlang的办法是不可行的 。</p>\n<ul>\n<li><p>说说安装时候遇到的坑，由于系统是centos6，比较老的版本，使用 erl -version 查看版本的时候发现系统原本没有安装erlang，即使很low的版本。一时手抖，直接用 yum install erlang 安装了，安装过程倒是很顺滑。但是它安装的却是很低的版本（B04之类），在安装最新版本的 rabbitmq 的时候会提示版本过低。</p>\n</li>\n<li><p>填坑1：想着直接用 yum update erlang ，提示已是最新版本（因为系统里yum的包里面的erlang），放弃…</p>\n</li>\n<li><p>填坑2：查看rabbitmq官方文档（<a href=\"http://www.rabbitmq.com/install-rpm.html#downloads%EF%BC%89%EF%BC%8C%E8%AF%B4%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85\">http://www.rabbitmq.com/install-rpm.html#downloads），说可以安装</a> rabbitmq团队diy的零依赖版本（Zero-dependency Erlang from RabbitMQ），大致意思也就是简化版本，只有rabbitmq需要的一些库。于是开始按照文档来，参照（<a href=\"https://github.com/rabbitmq/erlang-rpm%EF%BC%89%EF%BC%8C%E9%80%9A%E8%BF%87\">https://github.com/rabbitmq/erlang-rpm），通过</a> Bintray Yum Repositories 方式安装，先新建了 &#x2F;etc&#x2F;yum.repos.d&#x2F;rabbitmq-erlang.repo ，加入了文档里的配置 （选的是 Erlang 20.x on CentOS 6），然后 yum install erlang。此时提示 &#x2F;usr&#x2F;… 下面的某些 .x86_64 后缀的文件跟已安装的冲突，安装失败。继续…</p>\n</li>\n<li><p>继续填坑2：首先想到的是 yum remove erlang，然后再 install，仍然提示冲突。使用 yum list installed | grep erlang，发现下面出现一大片内容，也就是提示冲突的内容。WTF，于是把这些之前旧版本的残留依赖全部 remove掉 （ yum remove erlang-*.x86_64 ），然后再安装就OK了。</p>\n</li>\n</ul>\n<p>总结下正确的安装姿势：</p>\n<ul>\n<li>1、查看已安装erlang信息<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -version</span><br></pre></td></tr></table></figure>\n如果有，会显示相应的版本号（我们继续第二步）</li>\n<li>2、如果已安装版本过低，则先卸载 （如果没有已安装的，跳过此步）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list installed | grep erlang</span><br></pre></td></tr></table></figure>\n一般情况下会出现很多的依赖包，别心软，都卸载，不然会出现上面的”填坑2”<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove erlang-*.x86_64</span><br></pre></td></tr></table></figure>\n+3、安装rabbitmq官方推荐的”Zero-dependency Erlang from RabbitMQ”版本<br>安装官方文档的链接，跳到 <a href=\"https://github.com/rabbitmq/erlang-rpm\">https://github.com/rabbitmq/erlang-rpm</a> ，有两种安装方式 YUM &amp;&amp; RPM，我们选 YUM 的 Bintray Yum Repositories 方式安装。跟着文档一步一步来就OK（本文选用 To use Erlang 20.x on CentOS 6 ）。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/rabbitmq-erlang.repo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rabbitmq-erlang]</span><br><span class=\"line\">name=rabbitmq-erlang</span><br><span class=\"line\">baseurl=http://dl.bintray.com/rabbitmq/rpm/erlang/20/el/6</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc</span><br><span class=\"line\">repo_gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n注：原文档中baseurl 和 gpgkey 是https的链接，有可能会报错（没找到原因），改成http链接就可以了。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install erlang</span><br></pre></td></tr></table></figure>\n到此 erlang 就安装成功了，我们可以用以下命令查看下版本（Erlang (SMP,ASYNC_THREADS,HIPE) (BEAM) emulator version 9.3.3.3）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -version</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、安装-rabbitmq\"><a href=\"#二、安装-rabbitmq\" class=\"headerlink\" title=\"二、安装 rabbitmq\"></a>二、安装 rabbitmq</h3><p>去 <a href=\"http://www.rabbitmq.com/download.html\">http://www.rabbitmq.com/download.html</a> 下载对应版本的包，本文使用 <a href=\"https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm\">https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm</a> 版本举例。</p>\n<p>+1、下载对应包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-3.7.7-1.el6.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>+2、在下载目录，直接yum安装就行（注意install后面参数为下载的包全名）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install rabbitmq-server-3.7.7-1.el6.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>到此 rabbitmq 安装成功。</p>\n<h3 id=\"三、基本使用命令\"><a href=\"#三、基本使用命令\" class=\"headerlink\" title=\"三、基本使用命令\"></a>三、基本使用命令</h3><p>+1、启动RabbitMQ服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service rabbitmq-server start</span><br></pre></td></tr></table></figure>\n<p>+2、状态查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl status</span><br></pre></td></tr></table></figure>\n<p>+3、启用插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-plugins <span class=\"built_in\">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure>\n<p>+4、重启服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service rabbitmq-server restart</span><br></pre></td></tr></table></figure>\n<p>+5、添加帐号:name 密码:passwd</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl add_user name passwd</span><br></pre></td></tr></table></figure>\n<p>+6、赋予其administrator角色</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl set_user_tags name administrator</span><br></pre></td></tr></table></figure>\n<p>+7、设置权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl set_permissions -p / name <span class=\"string\">&quot;.*&quot;</span> <span class=\"string\">&quot;.*&quot;</span> <span class=\"string\">&quot;.*&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>** 刚安装完成的时候，启用插件，浏览器里输入 <a href=\"http://xx.xx.xx.xx:15672/\">http://xx.xx.xx.xx:15672</a> ，然后用默认的用户名和密码 guest guest 登陆的时候发现不成功（提示该用户仅能在localhost域名下登陆）。此时可以新建一个用户，并且给它赋予管理员权限，然后登陆就OK。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmqctl add_user admin admin</span><br><span class=\"line\">rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure>\n\n<p>本文重点参考： <a href=\"https://www.jianshu.com/p/f54dc259a9ed\">https://www.jianshu.com/p/f54dc259a9ed</a><br>             <a href=\"https://github.com/rabbitmq/erlang-rpm\">https://github.com/rabbitmq/erlang-rpm</a><br>             <a href=\"http://www.rabbitmq.com/install-rpm.html#downloads\">http://www.rabbitmq.com/install-rpm.html#downloads</a><br>             <a href=\"https://segmentfault.com/a/1190000010832825\">https://segmentfault.com/a/1190000010832825</a></p>\n<h4 id=\"node项目中使用rabbitMq示例请参照下一节。\"><a href=\"#node项目中使用rabbitMq示例请参照下一节。\" class=\"headerlink\" title=\"node项目中使用rabbitMq示例请参照下一节。\"></a>node项目中使用rabbitMq示例请参照下一节。</h4>"},{"title":"Vue-cli快速搭建Vue","date":"2017-03-04T16:00:00.000Z","_content":"\nVue + webpack模式是目前使用很广泛的前端解决方案，而Vue-cli脚手架能快速帮你搭建Vue项目框架，让你更专注于业务需求开发。下面介绍vue-cli的安装步骤。\n\n<!-- more -->\n\n### 一、环境准备\nnodejs安装  -  [nodejs官网](https://nodejs.org/en/download/ \"nodejs官网下载安装包\")\n\n### 二、安装 vue-cli 脚手架\n``` bash\nnpm install -g vue-cli\n```\n### 三、使用vue-cli初始化项目\n``` bash\nvue init webpack {安装目录}\n```\n** mark:此处可供选择的形式有5种 **\n+ webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing & css extraction\n+ webpack-simple - A simple Webpack + vue-loader setup for quick prototyping\n+ browserify - A full-featured Browserify + vueify setup with hot-reload, linting & unit testing\n+ browserify-simple - A simple Browserify + vueify setup for quick prototyping\n+ simple - The simplest possible Vue setup in a single HTML file\n\n** init步骤： **\n``` bash\n- Project name vue-vli\n- Project description tony's first vue pro\n- Author tony\n- Vue build standalone\n- Install vue-router? Yes\n- Use ESLint to lint your code? Yes\n- Pick an ESLint preset Standard\n- Setup unit tests with Karma + Mocha? Yes\n- Setup e2e tests with Nightwatch? Yes\n```\n\n### 四、进入目录\n``` bash\ncd {安装目录}\n```\n\n### 五、安装依赖\n``` bash\nnpm install\n```\n** mark: 此处安装依赖有几种办法： **\n- 1.首先在package.json中配置好devDependencies，然后直接执行npm install（脚手架里用的这种方法）\n- 2.逐个安装所需要的依赖，npm install xxx —save-dev，带上—dev参数，则自动会把依赖添加到package.json中\n\n### 六、开始运行\n``` bash\nnpm run dev\n```\n** mark:此处的 dev 命令见 package.json 中配置的 scripts 属性 **\n\nOK，到此算完成简单的搭建了，访问localhost://8080即可访问，以下为学习笔记。\n","source":"_posts/Vue-cli快速搭建Vue.md","raw":"---\ntitle: Vue-cli快速搭建Vue\ndate: 2017-03-05\ncategories: JS\ntags: \n    - Vue\n    - Vue-cli\n#description: \n---\n\nVue + webpack模式是目前使用很广泛的前端解决方案，而Vue-cli脚手架能快速帮你搭建Vue项目框架，让你更专注于业务需求开发。下面介绍vue-cli的安装步骤。\n\n<!-- more -->\n\n### 一、环境准备\nnodejs安装  -  [nodejs官网](https://nodejs.org/en/download/ \"nodejs官网下载安装包\")\n\n### 二、安装 vue-cli 脚手架\n``` bash\nnpm install -g vue-cli\n```\n### 三、使用vue-cli初始化项目\n``` bash\nvue init webpack {安装目录}\n```\n** mark:此处可供选择的形式有5种 **\n+ webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing & css extraction\n+ webpack-simple - A simple Webpack + vue-loader setup for quick prototyping\n+ browserify - A full-featured Browserify + vueify setup with hot-reload, linting & unit testing\n+ browserify-simple - A simple Browserify + vueify setup for quick prototyping\n+ simple - The simplest possible Vue setup in a single HTML file\n\n** init步骤： **\n``` bash\n- Project name vue-vli\n- Project description tony's first vue pro\n- Author tony\n- Vue build standalone\n- Install vue-router? Yes\n- Use ESLint to lint your code? Yes\n- Pick an ESLint preset Standard\n- Setup unit tests with Karma + Mocha? Yes\n- Setup e2e tests with Nightwatch? Yes\n```\n\n### 四、进入目录\n``` bash\ncd {安装目录}\n```\n\n### 五、安装依赖\n``` bash\nnpm install\n```\n** mark: 此处安装依赖有几种办法： **\n- 1.首先在package.json中配置好devDependencies，然后直接执行npm install（脚手架里用的这种方法）\n- 2.逐个安装所需要的依赖，npm install xxx —save-dev，带上—dev参数，则自动会把依赖添加到package.json中\n\n### 六、开始运行\n``` bash\nnpm run dev\n```\n** mark:此处的 dev 命令见 package.json 中配置的 scripts 属性 **\n\nOK，到此算完成简单的搭建了，访问localhost://8080即可访问，以下为学习笔记。\n","slug":"Vue-cli快速搭建Vue","published":1,"updated":"2022-06-15T08:16:15.721Z","_id":"cl4e3ayw7000lk4rq2tyng0f9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Vue + webpack模式是目前使用很广泛的前端解决方案，而Vue-cli脚手架能快速帮你搭建Vue项目框架，让你更专注于业务需求开发。下面介绍vue-cli的安装步骤。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><p>nodejs安装  -  <a href=\"https://nodejs.org/en/download/\" title=\"nodejs官网下载安装包\">nodejs官网</a></p>\n<h3 id=\"二、安装-vue-cli-脚手架\"><a href=\"#二、安装-vue-cli-脚手架\" class=\"headerlink\" title=\"二、安装 vue-cli 脚手架\"></a>二、安装 vue-cli 脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、使用vue-cli初始化项目\"><a href=\"#三、使用vue-cli初始化项目\" class=\"headerlink\" title=\"三、使用vue-cli初始化项目\"></a>三、使用vue-cli初始化项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack &#123;安装目录&#125;</span><br></pre></td></tr></table></figure>\n<p>** mark:此处可供选择的形式有5种 **</p>\n<ul>\n<li>webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing &amp; css extraction</li>\n<li>webpack-simple - A simple Webpack + vue-loader setup for quick prototyping</li>\n<li>browserify - A full-featured Browserify + vueify setup with hot-reload, linting &amp; unit testing</li>\n<li>browserify-simple - A simple Browserify + vueify setup for quick prototyping</li>\n<li>simple - The simplest possible Vue setup in a single HTML file</li>\n</ul>\n<p>** init步骤： **</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- Project name vue-vli</span><br><span class=\"line\">- Project description tony<span class=\"string\">&#x27;s first vue pro</span></span><br><span class=\"line\"><span class=\"string\">- Author tony</span></span><br><span class=\"line\"><span class=\"string\">- Vue build standalone</span></span><br><span class=\"line\"><span class=\"string\">- Install vue-router? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Use ESLint to lint your code? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Pick an ESLint preset Standard</span></span><br><span class=\"line\"><span class=\"string\">- Setup unit tests with Karma + Mocha? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Setup e2e tests with Nightwatch? Yes</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、进入目录\"><a href=\"#四、进入目录\" class=\"headerlink\" title=\"四、进入目录\"></a>四、进入目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &#123;安装目录&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、安装依赖\"><a href=\"#五、安装依赖\" class=\"headerlink\" title=\"五、安装依赖\"></a>五、安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>** mark: 此处安装依赖有几种办法： **</p>\n<ul>\n<li>1.首先在package.json中配置好devDependencies，然后直接执行npm install（脚手架里用的这种方法）</li>\n<li>2.逐个安装所需要的依赖，npm install xxx —save-dev，带上—dev参数，则自动会把依赖添加到package.json中</li>\n</ul>\n<h3 id=\"六、开始运行\"><a href=\"#六、开始运行\" class=\"headerlink\" title=\"六、开始运行\"></a>六、开始运行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<p>** mark:此处的 dev 命令见 package.json 中配置的 scripts 属性 **</p>\n<p>OK，到此算完成简单的搭建了，访问localhost:&#x2F;&#x2F;8080即可访问，以下为学习笔记。</p>\n","site":{"data":{}},"excerpt":"<p>Vue + webpack模式是目前使用很广泛的前端解决方案，而Vue-cli脚手架能快速帮你搭建Vue项目框架，让你更专注于业务需求开发。下面介绍vue-cli的安装步骤。</p>","more":"<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><p>nodejs安装  -  <a href=\"https://nodejs.org/en/download/\" title=\"nodejs官网下载安装包\">nodejs官网</a></p>\n<h3 id=\"二、安装-vue-cli-脚手架\"><a href=\"#二、安装-vue-cli-脚手架\" class=\"headerlink\" title=\"二、安装 vue-cli 脚手架\"></a>二、安装 vue-cli 脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、使用vue-cli初始化项目\"><a href=\"#三、使用vue-cli初始化项目\" class=\"headerlink\" title=\"三、使用vue-cli初始化项目\"></a>三、使用vue-cli初始化项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack &#123;安装目录&#125;</span><br></pre></td></tr></table></figure>\n<p>** mark:此处可供选择的形式有5种 **</p>\n<ul>\n<li>webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing &amp; css extraction</li>\n<li>webpack-simple - A simple Webpack + vue-loader setup for quick prototyping</li>\n<li>browserify - A full-featured Browserify + vueify setup with hot-reload, linting &amp; unit testing</li>\n<li>browserify-simple - A simple Browserify + vueify setup for quick prototyping</li>\n<li>simple - The simplest possible Vue setup in a single HTML file</li>\n</ul>\n<p>** init步骤： **</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- Project name vue-vli</span><br><span class=\"line\">- Project description tony<span class=\"string\">&#x27;s first vue pro</span></span><br><span class=\"line\"><span class=\"string\">- Author tony</span></span><br><span class=\"line\"><span class=\"string\">- Vue build standalone</span></span><br><span class=\"line\"><span class=\"string\">- Install vue-router? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Use ESLint to lint your code? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Pick an ESLint preset Standard</span></span><br><span class=\"line\"><span class=\"string\">- Setup unit tests with Karma + Mocha? Yes</span></span><br><span class=\"line\"><span class=\"string\">- Setup e2e tests with Nightwatch? Yes</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、进入目录\"><a href=\"#四、进入目录\" class=\"headerlink\" title=\"四、进入目录\"></a>四、进入目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &#123;安装目录&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、安装依赖\"><a href=\"#五、安装依赖\" class=\"headerlink\" title=\"五、安装依赖\"></a>五、安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>** mark: 此处安装依赖有几种办法： **</p>\n<ul>\n<li>1.首先在package.json中配置好devDependencies，然后直接执行npm install（脚手架里用的这种方法）</li>\n<li>2.逐个安装所需要的依赖，npm install xxx —save-dev，带上—dev参数，则自动会把依赖添加到package.json中</li>\n</ul>\n<h3 id=\"六、开始运行\"><a href=\"#六、开始运行\" class=\"headerlink\" title=\"六、开始运行\"></a>六、开始运行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<p>** mark:此处的 dev 命令见 package.json 中配置的 scripts 属性 **</p>\n<p>OK，到此算完成简单的搭建了，访问localhost:&#x2F;&#x2F;8080即可访问，以下为学习笔记。</p>"},{"title":"Linux-CentOS-7.2.x下安装mysql（Navicat）","date":"2017-03-04T16:00:00.000Z","_content":"\nLinux-CentOS-7.2.x上安装mysql\n<!-- more -->\n\n### 方法一、使用yum\nCentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。\n\n+ 1.下载mysql的repo源\n```bash\n$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n```\n\n+ 2.安装mysql-community-release-el7-5.noarch.rpm包\n```bash\n$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n```\n安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo。\n\n+ 3.安装mysql\n```bash\n$ sudo yum install mysql-server\n```\n根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码\n\n+ 4.重置密码\n重置密码前，首先要登录\n```bash\n$ mysql -u root\n```\n登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：\n```bash\n$ sudo chown -R openscanner:openscanner /var/lib/mysql\n```\n然后，重启服务：\n```bash\n$ service mysqld restart\n```\n接下来登录重置密码：\n```bash\n$ mysql -u root\nmysql > use mysql;mysql > update user set password=password(‘123456‘) where user=‘root‘;mysql > exit;\n```\n\n+ 5.需要更改权限才能实现远程连接MYSQL数据库\n可以通过以下方式来确认：\n```bash\nroot#mysql -h localhost -uroot -p\nEnter password: ******\nWelcome to the MySQL monitor.   Commands end with ; or \\g.\nYour MySQL connection id is 4 to server version: 4.0.20a-debug\nType ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the buffer.\nmysql> use mysql; (此DB存放MySQL的各种配置信息)\nDatabase changed\nmysql> select host,user from user; (查看用户的权限情况)\nmysql> select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n```\n由此可以看出，只能以localhost的主机方式访问。\n解决方法：\n```bash\nmysql> Grant all privileges on *.* to 'root'@'%' identified by '123456' with grant option;\n(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\nmysql> flush privileges;    (运行此句才生效，或者重启MySQL)\nQuery OK, 0 rows affected (0.03 sec)\n```\n再次查看。。\n```bash\nmysql> select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n```\n+ 6.在Mac或者windows上安装navicat for mysql，然后远程来连接Linux上的数据库。\n**由于navicat需要图形化的界面，所以如果直接在Linux系统上安装Navicat，还需要安装插件wine（此插件在Linux下很容易出错，详见下面方法二）。**\n<img src=\"http://onm9ileaw.bkt.clouddn.com/hexo/navicat.png\" alt=\"Navicat连接远程mysql\" title=\"Navicat连接远程mysql\">\n\n### 方法二、自己下载安装包安装（不推荐，容易出错）\n+ Centos6.7安装Navicat：<http://blog.csdn.net/u010824591/article/details/50496553>\n+ LINUX系统安装MYSQL命令：<http://www.cnblogs.com/phpxiebin/p/4988156.html>\n+ 初始化mysql数据库提示缺少Data:dumper模块：<http://blog.sina.com.cn/s/blog_694864e60102vaij.html>\n+ Navicat下载链接：<https://www.navicat.com/download/navicat-for-mysql>\n\n### 扩展：Linux权限小知识\n```js\n-rw-------   (600) 只有所有者才有读和写的权限 \n-rw-r--r--   (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限 \n-rwx------   (700) 只有所有者才有读，写，执行的权限 \n-rwxr-xr-x   (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限 \n-rwx--x--x   (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限 \n-rw-rw-rw-   (666) 每个人都有读写的权限 \n-rwxrwxrwx   (777) 每个人都有读写和执行的权限\n```\n\n给付权限的方法：\n```bash\nchmod 777(a+rwx) <folder or filename>\n```\n\n\n","source":"_posts/Linux-CentOS-7.2.x下安装mysql.md","raw":"---\ntitle: Linux-CentOS-7.2.x下安装mysql（Navicat）\ndate: 2017-03-05\ncategories: Linux\ntags: \n    - Linux\n    - mysql\n    - Navicat\n#description: \n---\n\nLinux-CentOS-7.2.x上安装mysql\n<!-- more -->\n\n### 方法一、使用yum\nCentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。\n\n+ 1.下载mysql的repo源\n```bash\n$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n```\n\n+ 2.安装mysql-community-release-el7-5.noarch.rpm包\n```bash\n$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n```\n安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo。\n\n+ 3.安装mysql\n```bash\n$ sudo yum install mysql-server\n```\n根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码\n\n+ 4.重置密码\n重置密码前，首先要登录\n```bash\n$ mysql -u root\n```\n登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：\n```bash\n$ sudo chown -R openscanner:openscanner /var/lib/mysql\n```\n然后，重启服务：\n```bash\n$ service mysqld restart\n```\n接下来登录重置密码：\n```bash\n$ mysql -u root\nmysql > use mysql;mysql > update user set password=password(‘123456‘) where user=‘root‘;mysql > exit;\n```\n\n+ 5.需要更改权限才能实现远程连接MYSQL数据库\n可以通过以下方式来确认：\n```bash\nroot#mysql -h localhost -uroot -p\nEnter password: ******\nWelcome to the MySQL monitor.   Commands end with ; or \\g.\nYour MySQL connection id is 4 to server version: 4.0.20a-debug\nType ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the buffer.\nmysql> use mysql; (此DB存放MySQL的各种配置信息)\nDatabase changed\nmysql> select host,user from user; (查看用户的权限情况)\nmysql> select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n```\n由此可以看出，只能以localhost的主机方式访问。\n解决方法：\n```bash\nmysql> Grant all privileges on *.* to 'root'@'%' identified by '123456' with grant option;\n(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\nmysql> flush privileges;    (运行此句才生效，或者重启MySQL)\nQuery OK, 0 rows affected (0.03 sec)\n```\n再次查看。。\n```bash\nmysql> select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n```\n+ 6.在Mac或者windows上安装navicat for mysql，然后远程来连接Linux上的数据库。\n**由于navicat需要图形化的界面，所以如果直接在Linux系统上安装Navicat，还需要安装插件wine（此插件在Linux下很容易出错，详见下面方法二）。**\n<img src=\"http://onm9ileaw.bkt.clouddn.com/hexo/navicat.png\" alt=\"Navicat连接远程mysql\" title=\"Navicat连接远程mysql\">\n\n### 方法二、自己下载安装包安装（不推荐，容易出错）\n+ Centos6.7安装Navicat：<http://blog.csdn.net/u010824591/article/details/50496553>\n+ LINUX系统安装MYSQL命令：<http://www.cnblogs.com/phpxiebin/p/4988156.html>\n+ 初始化mysql数据库提示缺少Data:dumper模块：<http://blog.sina.com.cn/s/blog_694864e60102vaij.html>\n+ Navicat下载链接：<https://www.navicat.com/download/navicat-for-mysql>\n\n### 扩展：Linux权限小知识\n```js\n-rw-------   (600) 只有所有者才有读和写的权限 \n-rw-r--r--   (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限 \n-rwx------   (700) 只有所有者才有读，写，执行的权限 \n-rwxr-xr-x   (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限 \n-rwx--x--x   (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限 \n-rw-rw-rw-   (666) 每个人都有读写的权限 \n-rwxrwxrwx   (777) 每个人都有读写和执行的权限\n```\n\n给付权限的方法：\n```bash\nchmod 777(a+rwx) <folder or filename>\n```\n\n\n","slug":"Linux-CentOS-7.2.x下安装mysql","published":1,"updated":"2022-06-15T08:16:27.019Z","_id":"cl4e3ayw9000nk4rqvk13b23j","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux-CentOS-7.2.x上安装mysql</p>\n<span id=\"more\"></span>\n\n<h3 id=\"方法一、使用yum\"><a href=\"#方法一、使用yum\" class=\"headerlink\" title=\"方法一、使用yum\"></a>方法一、使用yum</h3><p>CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。</p>\n<ul>\n<li><p>1.下载mysql的repo源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.安装mysql-community-release-el7-5.noarch.rpm包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>\n<p>安装这个包后，会获得两个mysql的yum repo源：&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community.repo，&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community-source.repo。</p>\n</li>\n<li><p>3.安装mysql</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install mysql-server</span><br></pre></td></tr></table></figure>\n<p>根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码</p>\n</li>\n<li><p>4.重置密码<br>重置密码前，首先要登录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -u root</span><br></pre></td></tr></table></figure>\n<p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock‘ (2)，原因是&#x2F;var&#x2F;lib&#x2F;mysql的访问权限问题。下面的命令把&#x2F;var&#x2F;lib&#x2F;mysql的拥有者改为当前用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">chown</span> -R openscanner:openscanner /var/lib/mysql</span><br></pre></td></tr></table></figure>\n<p>然后，重启服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ service mysqld restart</span><br></pre></td></tr></table></figure>\n<p>接下来登录重置密码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -u root</span><br><span class=\"line\">mysql &gt; use mysql;mysql &gt; update user <span class=\"built_in\">set</span> password=password(‘123456‘) <span class=\"built_in\">where</span> user=‘root‘;mysql &gt; <span class=\"built_in\">exit</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>5.需要更改权限才能实现远程连接MYSQL数据库<br>可以通过以下方式来确认：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root<span class=\"comment\">#mysql -h localhost -uroot -p</span></span><br><span class=\"line\">Enter password: ******</span><br><span class=\"line\">Welcome to the MySQL monitor.   Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection <span class=\"built_in\">id</span> is 4 to server version: 4.0.20a-debug</span><br><span class=\"line\">Type ‘<span class=\"built_in\">help</span>;’ or ‘\\h’ <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>. Type ‘\\c’ to clear the buffer.</span><br><span class=\"line\">mysql&gt; use mysql; (此DB存放MySQL的各种配置信息)</span><br><span class=\"line\">Database changed</span><br><span class=\"line\">mysql&gt; select host,user from user; (查看用户的权限情况)</span><br><span class=\"line\">mysql&gt; select host, user, password from user;</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| host       | user | password                                   |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| localhost |       |                                            |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure>\n<p>由此可以看出，只能以localhost的主机方式访问。<br>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; Grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;123456&#x27;</span> with grant option;</span><br><span class=\"line\">(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)</span><br><span class=\"line\">mysql&gt; flush privileges;    (运行此句才生效，或者重启MySQL)</span><br><span class=\"line\">Query OK, 0 rows affected (0.03 sec)</span><br></pre></td></tr></table></figure>\n<p>再次查看。。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select host, user, password from user;</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| host       | user | password                                   |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| localhost |       |                                            |</span><br><span class=\"line\">| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure></li>\n<li><p>6.在Mac或者windows上安装navicat for mysql，然后远程来连接Linux上的数据库。<br><strong>由于navicat需要图形化的界面，所以如果直接在Linux系统上安装Navicat，还需要安装插件wine（此插件在Linux下很容易出错，详见下面方法二）。</strong></p>\n<img src=\"http://onm9ileaw.bkt.clouddn.com/hexo/navicat.png\" alt=\"Navicat连接远程mysql\" title=\"Navicat连接远程mysql\"></li>\n</ul>\n<h3 id=\"方法二、自己下载安装包安装（不推荐，容易出错）\"><a href=\"#方法二、自己下载安装包安装（不推荐，容易出错）\" class=\"headerlink\" title=\"方法二、自己下载安装包安装（不推荐，容易出错）\"></a>方法二、自己下载安装包安装（不推荐，容易出错）</h3><ul>\n<li>Centos6.7安装Navicat：<a href=\"http://blog.csdn.net/u010824591/article/details/50496553\">http://blog.csdn.net/u010824591/article/details/50496553</a></li>\n<li>LINUX系统安装MYSQL命令：<a href=\"http://www.cnblogs.com/phpxiebin/p/4988156.html\">http://www.cnblogs.com/phpxiebin/p/4988156.html</a></li>\n<li>初始化mysql数据库提示缺少Data:dumper模块：<a href=\"http://blog.sina.com.cn/s/blog_694864e60102vaij.html\">http://blog.sina.com.cn/s/blog_694864e60102vaij.html</a></li>\n<li>Navicat下载链接：<a href=\"https://www.navicat.com/download/navicat-for-mysql\">https://www.navicat.com/download/navicat-for-mysql</a></li>\n</ul>\n<h3 id=\"扩展：Linux权限小知识\"><a href=\"#扩展：Linux权限小知识\" class=\"headerlink\" title=\"扩展：Linux权限小知识\"></a>扩展：Linux权限小知识</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rw-------   (<span class=\"number\">600</span>) 只有所有者才有读和写的权限 </span><br><span class=\"line\">-rw-r--r--   (<span class=\"number\">644</span>) 只有所有者才有读和写的权限，组群和其他人只有读的权限 </span><br><span class=\"line\">-rwx------   (<span class=\"number\">700</span>) 只有所有者才有读，写，执行的权限 </span><br><span class=\"line\">-rwxr-xr-x   (<span class=\"number\">755</span>) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限 </span><br><span class=\"line\">-rwx--x--x   (<span class=\"number\">711</span>) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限 </span><br><span class=\"line\">-rw-rw-rw-   (<span class=\"number\">666</span>) 每个人都有读写的权限 </span><br><span class=\"line\">-rwxrwxrwx   (<span class=\"number\">777</span>) 每个人都有读写和执行的权限</span><br></pre></td></tr></table></figure>\n\n<p>给付权限的方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 777(a+rwx) &lt;folder or filename&gt;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<p>Linux-CentOS-7.2.x上安装mysql</p>","more":"<h3 id=\"方法一、使用yum\"><a href=\"#方法一、使用yum\" class=\"headerlink\" title=\"方法一、使用yum\"></a>方法一、使用yum</h3><p>CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。</p>\n<ul>\n<li><p>1.下载mysql的repo源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.安装mysql-community-release-el7-5.noarch.rpm包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>\n<p>安装这个包后，会获得两个mysql的yum repo源：&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community.repo，&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community-source.repo。</p>\n</li>\n<li><p>3.安装mysql</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install mysql-server</span><br></pre></td></tr></table></figure>\n<p>根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码</p>\n</li>\n<li><p>4.重置密码<br>重置密码前，首先要登录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -u root</span><br></pre></td></tr></table></figure>\n<p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock‘ (2)，原因是&#x2F;var&#x2F;lib&#x2F;mysql的访问权限问题。下面的命令把&#x2F;var&#x2F;lib&#x2F;mysql的拥有者改为当前用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">chown</span> -R openscanner:openscanner /var/lib/mysql</span><br></pre></td></tr></table></figure>\n<p>然后，重启服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ service mysqld restart</span><br></pre></td></tr></table></figure>\n<p>接下来登录重置密码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -u root</span><br><span class=\"line\">mysql &gt; use mysql;mysql &gt; update user <span class=\"built_in\">set</span> password=password(‘123456‘) <span class=\"built_in\">where</span> user=‘root‘;mysql &gt; <span class=\"built_in\">exit</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>5.需要更改权限才能实现远程连接MYSQL数据库<br>可以通过以下方式来确认：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root<span class=\"comment\">#mysql -h localhost -uroot -p</span></span><br><span class=\"line\">Enter password: ******</span><br><span class=\"line\">Welcome to the MySQL monitor.   Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection <span class=\"built_in\">id</span> is 4 to server version: 4.0.20a-debug</span><br><span class=\"line\">Type ‘<span class=\"built_in\">help</span>;’ or ‘\\h’ <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>. Type ‘\\c’ to clear the buffer.</span><br><span class=\"line\">mysql&gt; use mysql; (此DB存放MySQL的各种配置信息)</span><br><span class=\"line\">Database changed</span><br><span class=\"line\">mysql&gt; select host,user from user; (查看用户的权限情况)</span><br><span class=\"line\">mysql&gt; select host, user, password from user;</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| host       | user | password                                   |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| localhost |       |                                            |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure>\n<p>由此可以看出，只能以localhost的主机方式访问。<br>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; Grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;123456&#x27;</span> with grant option;</span><br><span class=\"line\">(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)</span><br><span class=\"line\">mysql&gt; flush privileges;    (运行此句才生效，或者重启MySQL)</span><br><span class=\"line\">Query OK, 0 rows affected (0.03 sec)</span><br></pre></td></tr></table></figure>\n<p>再次查看。。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select host, user, password from user;</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| host       | user | password                                   |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">| localhost |       |                                            |</span><br><span class=\"line\">| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span><br><span class=\"line\">+-----------+------+-------------------------------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure></li>\n<li><p>6.在Mac或者windows上安装navicat for mysql，然后远程来连接Linux上的数据库。<br><strong>由于navicat需要图形化的界面，所以如果直接在Linux系统上安装Navicat，还需要安装插件wine（此插件在Linux下很容易出错，详见下面方法二）。</strong></p>\n<img src=\"http://onm9ileaw.bkt.clouddn.com/hexo/navicat.png\" alt=\"Navicat连接远程mysql\" title=\"Navicat连接远程mysql\"></li>\n</ul>\n<h3 id=\"方法二、自己下载安装包安装（不推荐，容易出错）\"><a href=\"#方法二、自己下载安装包安装（不推荐，容易出错）\" class=\"headerlink\" title=\"方法二、自己下载安装包安装（不推荐，容易出错）\"></a>方法二、自己下载安装包安装（不推荐，容易出错）</h3><ul>\n<li>Centos6.7安装Navicat：<a href=\"http://blog.csdn.net/u010824591/article/details/50496553\">http://blog.csdn.net/u010824591/article/details/50496553</a></li>\n<li>LINUX系统安装MYSQL命令：<a href=\"http://www.cnblogs.com/phpxiebin/p/4988156.html\">http://www.cnblogs.com/phpxiebin/p/4988156.html</a></li>\n<li>初始化mysql数据库提示缺少Data:dumper模块：<a href=\"http://blog.sina.com.cn/s/blog_694864e60102vaij.html\">http://blog.sina.com.cn/s/blog_694864e60102vaij.html</a></li>\n<li>Navicat下载链接：<a href=\"https://www.navicat.com/download/navicat-for-mysql\">https://www.navicat.com/download/navicat-for-mysql</a></li>\n</ul>\n<h3 id=\"扩展：Linux权限小知识\"><a href=\"#扩展：Linux权限小知识\" class=\"headerlink\" title=\"扩展：Linux权限小知识\"></a>扩展：Linux权限小知识</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rw-------   (<span class=\"number\">600</span>) 只有所有者才有读和写的权限 </span><br><span class=\"line\">-rw-r--r--   (<span class=\"number\">644</span>) 只有所有者才有读和写的权限，组群和其他人只有读的权限 </span><br><span class=\"line\">-rwx------   (<span class=\"number\">700</span>) 只有所有者才有读，写，执行的权限 </span><br><span class=\"line\">-rwxr-xr-x   (<span class=\"number\">755</span>) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限 </span><br><span class=\"line\">-rwx--x--x   (<span class=\"number\">711</span>) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限 </span><br><span class=\"line\">-rw-rw-rw-   (<span class=\"number\">666</span>) 每个人都有读写的权限 </span><br><span class=\"line\">-rwxrwxrwx   (<span class=\"number\">777</span>) 每个人都有读写和执行的权限</span><br></pre></td></tr></table></figure>\n\n<p>给付权限的方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 777(a+rwx) &lt;folder or filename&gt;</span><br></pre></td></tr></table></figure>"},{"title":"centos搭建rabbitmq（二）","date":"2018-09-02T16:00:00.000Z","_content":"\nrabbitmq 实践（使用amqplib客户端）\n<!-- more -->\n\n### 一、安装 请参照 centos搭建rabbitmq（一）\n\n\n### 二、实践\n\n+1、参照项目 git@github.com:17it/rabbitmq-node.git\n\n","source":"_posts/centos搭建rabbitmq（二）.md","raw":"---\ntitle: centos搭建rabbitmq（二）\ndate: 2018-09-03\ncategories: Nginx\ntags: \n    - Linux\n    - Nginx\n    - NodeJS\n    - RabbitMQ\n    - amqplib\n#description: \n---\n\nrabbitmq 实践（使用amqplib客户端）\n<!-- more -->\n\n### 一、安装 请参照 centos搭建rabbitmq（一）\n\n\n### 二、实践\n\n+1、参照项目 git@github.com:17it/rabbitmq-node.git\n\n","slug":"centos搭建rabbitmq（二）","published":1,"updated":"2022-06-15T08:24:25.581Z","_id":"cl4e3aywa000rk4rqudygvq5q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>rabbitmq 实践（使用amqplib客户端）</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、安装-请参照-centos搭建rabbitmq（一）\"><a href=\"#一、安装-请参照-centos搭建rabbitmq（一）\" class=\"headerlink\" title=\"一、安装 请参照 centos搭建rabbitmq（一）\"></a>一、安装 请参照 centos搭建rabbitmq（一）</h3><h3 id=\"二、实践\"><a href=\"#二、实践\" class=\"headerlink\" title=\"二、实践\"></a>二、实践</h3><p>+1、参照项目 <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;\">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:17it&#x2F;rabbitmq-node.git</p>\n","site":{"data":{}},"excerpt":"<p>rabbitmq 实践（使用amqplib客户端）</p>","more":"<h3 id=\"一、安装-请参照-centos搭建rabbitmq（一）\"><a href=\"#一、安装-请参照-centos搭建rabbitmq（一）\" class=\"headerlink\" title=\"一、安装 请参照 centos搭建rabbitmq（一）\"></a>一、安装 请参照 centos搭建rabbitmq（一）</h3><h3 id=\"二、实践\"><a href=\"#二、实践\" class=\"headerlink\" title=\"二、实践\"></a>二、实践</h3><p>+1、参照项目 <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;\">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:17it&#x2F;rabbitmq-node.git</p>"},{"title":"flutter插件开发实践","date":"2020-08-23T16:00:00.000Z","_content":"\n记flutter插件开发实践过程。官方中文文档：https://flutterchina.club/developing-packages/，官方文档：https://flutter.dev/docs/development/packages-and-plugins/developing-packages\n<!-- more -->\n\n### 一、新建插件\n官方提供了两种新建插件的方法\n+ 1.IDE里 file -> new -> new flutter project -> flutter plugin -> next(输入信息) -> finish\n+ 2.通过命令行新建，flutter create --org com.xxx.xxx --template=plugin --platforms=android,ios -a java -i objc <plugin name>\n - 实践发现，通过IDE里新建的plugin，没有android和ios目录，所以这里采用的是第二种方法。\n - 新建完成后的目录如下，新建完成后可以cd到example/lib/main.dart，然后run，确认能正常运行，不会报错。\n   ![flutter plugin](../images/flutter/flutter plugin.png)\n** 新建插件的时候，可以选择android和ios的开发语言，本示例中仅支持java和object-c，不支持kotin和swift.\n\n### 二、添加功能\n1、找到 lib/xxxx.dart\n2、仿照项目给的默认方法 platformVersion ，新增自己的方法\n\n### 三、android端功能新增\n1、在android目录上右键，选择flutter，然后open android module in android studio。![flutter plugin 2](../images/flutter/flutter plugin 2.png)\n2、接下来会以安卓项目打开android下面的目录（直接在插件项目里编辑安卓原生代码会报很多错误，并且没有自动补全提示）\n3、添加自己的代码逻辑（这里涉及到安卓原生开发）\n    + manifests/AndroidManifest.xml里面添加权限（如果有需要）\n    + java/com.xxx.xxx/xxxPlugin里面添加逻辑代码\n    + Gradle Scripts/build.gradle里添加第三方依赖（如果有，具体可以参照第三方文档）\n4、完成后点击操作栏的额 make project（绿色的🔨），等待构建完成\n5、回到插件项目，在example/lib/main.dart里加上测试代码，看功能是否ok\n\n### 四、ios端功能新增\n1、在ios目录上右键，选择flutter，然后open ios module in xcode。![flutter plugin 3](../images/flutter/flutter plugin 3.png)\n2、接下来会以ios项目打开ios下面的目录\n3、添加自己的代码逻辑（这里涉及到ios原生开发）\n    + Pods/Development Pods/<plugin name>/Pod/xxx.podspec里面添加依赖（如果有需要）\n    + Pods/Development Pods/<plugin name>/....../Classes/xxx.m里面添加逻辑代码\n4、回到插件项目，在example/lib/main.dart里加上测试代码，看功能是否ok\n\n### 五、发布到pub.dev\n1、确保pubspec.yaml、README.md、CHANGELOG.md、LICENSE都正确填写，然后执行下面命令检查是否有错误。\n```bash\nflutter packages pub publish --dry-run\n```\n2、检查无误后，执行下面命令发布。\n```bash\nflutter packages pub publish\n```\n\n** 发布过程中，可能遇到一直卡在 Authorization received, processing... ，解决方案如下：\n   + 首先打开shadow sockets，然后在terminal里开启代理：\n   ```bash\n   export http_proxy=http://127.0.0.1:1087;\n   export https_proxy=http://127.0.0.1:1087;\n   ```\n   + 如果开了代理还是不行，可以试试将地址指向官方的。\n   ```bash\n   flutter packages pub publish --server=https://pub.dartlang.org\n   ```\n\n#### 参考网站\n    <https://edu.csdn.net/course/play/23392/265119>\n    <https://www.jianshu.com/p/46957915a909>\n    <https://www.jianshu.com/p/5f1d65465bca>\n    <https://www.jianshu.com/p/4bf045fd21f5>\n    <https://blog.csdn.net/youtiankeng/article/details/107825986>","source":"_posts/flutter插件开发实践.md","raw":"---\ntitle: flutter插件开发实践\ndate: 2020-08-24\ncategories: flutter\ntags: \n    - flutter\n    - plugin\n#description:\n---\n\n记flutter插件开发实践过程。官方中文文档：https://flutterchina.club/developing-packages/，官方文档：https://flutter.dev/docs/development/packages-and-plugins/developing-packages\n<!-- more -->\n\n### 一、新建插件\n官方提供了两种新建插件的方法\n+ 1.IDE里 file -> new -> new flutter project -> flutter plugin -> next(输入信息) -> finish\n+ 2.通过命令行新建，flutter create --org com.xxx.xxx --template=plugin --platforms=android,ios -a java -i objc <plugin name>\n - 实践发现，通过IDE里新建的plugin，没有android和ios目录，所以这里采用的是第二种方法。\n - 新建完成后的目录如下，新建完成后可以cd到example/lib/main.dart，然后run，确认能正常运行，不会报错。\n   ![flutter plugin](../images/flutter/flutter plugin.png)\n** 新建插件的时候，可以选择android和ios的开发语言，本示例中仅支持java和object-c，不支持kotin和swift.\n\n### 二、添加功能\n1、找到 lib/xxxx.dart\n2、仿照项目给的默认方法 platformVersion ，新增自己的方法\n\n### 三、android端功能新增\n1、在android目录上右键，选择flutter，然后open android module in android studio。![flutter plugin 2](../images/flutter/flutter plugin 2.png)\n2、接下来会以安卓项目打开android下面的目录（直接在插件项目里编辑安卓原生代码会报很多错误，并且没有自动补全提示）\n3、添加自己的代码逻辑（这里涉及到安卓原生开发）\n    + manifests/AndroidManifest.xml里面添加权限（如果有需要）\n    + java/com.xxx.xxx/xxxPlugin里面添加逻辑代码\n    + Gradle Scripts/build.gradle里添加第三方依赖（如果有，具体可以参照第三方文档）\n4、完成后点击操作栏的额 make project（绿色的🔨），等待构建完成\n5、回到插件项目，在example/lib/main.dart里加上测试代码，看功能是否ok\n\n### 四、ios端功能新增\n1、在ios目录上右键，选择flutter，然后open ios module in xcode。![flutter plugin 3](../images/flutter/flutter plugin 3.png)\n2、接下来会以ios项目打开ios下面的目录\n3、添加自己的代码逻辑（这里涉及到ios原生开发）\n    + Pods/Development Pods/<plugin name>/Pod/xxx.podspec里面添加依赖（如果有需要）\n    + Pods/Development Pods/<plugin name>/....../Classes/xxx.m里面添加逻辑代码\n4、回到插件项目，在example/lib/main.dart里加上测试代码，看功能是否ok\n\n### 五、发布到pub.dev\n1、确保pubspec.yaml、README.md、CHANGELOG.md、LICENSE都正确填写，然后执行下面命令检查是否有错误。\n```bash\nflutter packages pub publish --dry-run\n```\n2、检查无误后，执行下面命令发布。\n```bash\nflutter packages pub publish\n```\n\n** 发布过程中，可能遇到一直卡在 Authorization received, processing... ，解决方案如下：\n   + 首先打开shadow sockets，然后在terminal里开启代理：\n   ```bash\n   export http_proxy=http://127.0.0.1:1087;\n   export https_proxy=http://127.0.0.1:1087;\n   ```\n   + 如果开了代理还是不行，可以试试将地址指向官方的。\n   ```bash\n   flutter packages pub publish --server=https://pub.dartlang.org\n   ```\n\n#### 参考网站\n    <https://edu.csdn.net/course/play/23392/265119>\n    <https://www.jianshu.com/p/46957915a909>\n    <https://www.jianshu.com/p/5f1d65465bca>\n    <https://www.jianshu.com/p/4bf045fd21f5>\n    <https://blog.csdn.net/youtiankeng/article/details/107825986>","slug":"flutter插件开发实践","published":1,"updated":"2022-06-15T08:28:13.289Z","_id":"cl4e3aywa000uk4rqswg5ul47","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记flutter插件开发实践过程。官方中文文档：<a href=\"https://flutterchina.club/developing-packages/%EF%BC%8C%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%9Ahttps://flutter.dev/docs/development/packages-and-plugins/developing-packages\">https://flutterchina.club/developing-packages/，官方文档：https://flutter.dev/docs/development/packages-and-plugins/developing-packages</a></p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、新建插件\"><a href=\"#一、新建插件\" class=\"headerlink\" title=\"一、新建插件\"></a>一、新建插件</h3><p>官方提供了两种新建插件的方法</p>\n<ul>\n<li>1.IDE里 file -&gt; new -&gt; new flutter project -&gt; flutter plugin -&gt; next(输入信息) -&gt; finish</li>\n<li>2.通过命令行新建，flutter create –org com.xxx.xxx –template&#x3D;plugin –platforms&#x3D;android,ios -a java -i objc <plugin name></plugin></li>\n</ul>\n<ul>\n<li>实践发现，通过IDE里新建的plugin，没有android和ios目录，所以这里采用的是第二种方法。</li>\n<li>新建完成后的目录如下，新建完成后可以cd到example&#x2F;lib&#x2F;main.dart，然后run，确认能正常运行，不会报错。<br>![flutter plugin](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin.png)<br>** 新建插件的时候，可以选择android和ios的开发语言，本示例中仅支持java和object-c，不支持kotin和swift.</li>\n</ul>\n<h3 id=\"二、添加功能\"><a href=\"#二、添加功能\" class=\"headerlink\" title=\"二、添加功能\"></a>二、添加功能</h3><p>1、找到 lib&#x2F;xxxx.dart<br>2、仿照项目给的默认方法 platformVersion ，新增自己的方法</p>\n<h3 id=\"三、android端功能新增\"><a href=\"#三、android端功能新增\" class=\"headerlink\" title=\"三、android端功能新增\"></a>三、android端功能新增</h3><p>1、在android目录上右键，选择flutter，然后open android module in android studio。![flutter plugin 2](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin 2.png)<br>2、接下来会以安卓项目打开android下面的目录（直接在插件项目里编辑安卓原生代码会报很多错误，并且没有自动补全提示）<br>3、添加自己的代码逻辑（这里涉及到安卓原生开发）<br>    + manifests&#x2F;AndroidManifest.xml里面添加权限（如果有需要）<br>    + java&#x2F;com.xxx.xxx&#x2F;xxxPlugin里面添加逻辑代码<br>    + Gradle Scripts&#x2F;build.gradle里添加第三方依赖（如果有，具体可以参照第三方文档）<br>4、完成后点击操作栏的额 make project（绿色的🔨），等待构建完成<br>5、回到插件项目，在example&#x2F;lib&#x2F;main.dart里加上测试代码，看功能是否ok</p>\n<h3 id=\"四、ios端功能新增\"><a href=\"#四、ios端功能新增\" class=\"headerlink\" title=\"四、ios端功能新增\"></a>四、ios端功能新增</h3><p>1、在ios目录上右键，选择flutter，然后open ios module in xcode。![flutter plugin 3](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin 3.png)<br>2、接下来会以ios项目打开ios下面的目录<br>3、添加自己的代码逻辑（这里涉及到ios原生开发）<br>    + Pods&#x2F;Development Pods&#x2F;<plugin name>&#x2F;Pod&#x2F;xxx.podspec里面添加依赖（如果有需要）<br>    + Pods&#x2F;Development Pods&#x2F;<plugin name>&#x2F;……&#x2F;Classes&#x2F;xxx.m里面添加逻辑代码<br>4、回到插件项目，在example&#x2F;lib&#x2F;main.dart里加上测试代码，看功能是否ok</plugin></plugin></p>\n<h3 id=\"五、发布到pub-dev\"><a href=\"#五、发布到pub-dev\" class=\"headerlink\" title=\"五、发布到pub.dev\"></a>五、发布到pub.dev</h3><p>1、确保pubspec.yaml、README.md、CHANGELOG.md、LICENSE都正确填写，然后执行下面命令检查是否有错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --dry-run</span><br></pre></td></tr></table></figure>\n<p>2、检查无误后，执行下面命令发布。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish</span><br></pre></td></tr></table></figure>\n\n<p>** 发布过程中，可能遇到一直卡在 Authorization received, processing… ，解决方案如下：</p>\n<ul>\n<li>首先打开shadow sockets，然后在terminal里开启代理：   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:1087;</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:1087;</span><br></pre></td></tr></table></figure></li>\n<li>如果开了代理还是不行，可以试试将地址指向官方的。   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --server=https://pub.dartlang.org</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"参考网站\"><a href=\"#参考网站\" class=\"headerlink\" title=\"参考网站\"></a>参考网站</h4><pre><code>&lt;https://edu.csdn.net/course/play/23392/265119&gt;\n&lt;https://www.jianshu.com/p/46957915a909&gt;\n&lt;https://www.jianshu.com/p/5f1d65465bca&gt;\n&lt;https://www.jianshu.com/p/4bf045fd21f5&gt;\n&lt;https://blog.csdn.net/youtiankeng/article/details/107825986&gt;\n</code></pre>\n","site":{"data":{}},"excerpt":"<p>记flutter插件开发实践过程。官方中文文档：<a href=\"https://flutterchina.club/developing-packages/%EF%BC%8C%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%9Ahttps://flutter.dev/docs/development/packages-and-plugins/developing-packages\">https://flutterchina.club/developing-packages/，官方文档：https://flutter.dev/docs/development/packages-and-plugins/developing-packages</a></p>","more":"<h3 id=\"一、新建插件\"><a href=\"#一、新建插件\" class=\"headerlink\" title=\"一、新建插件\"></a>一、新建插件</h3><p>官方提供了两种新建插件的方法</p>\n<ul>\n<li>1.IDE里 file -&gt; new -&gt; new flutter project -&gt; flutter plugin -&gt; next(输入信息) -&gt; finish</li>\n<li>2.通过命令行新建，flutter create –org com.xxx.xxx –template&#x3D;plugin –platforms&#x3D;android,ios -a java -i objc <plugin name></plugin></li>\n</ul>\n<ul>\n<li>实践发现，通过IDE里新建的plugin，没有android和ios目录，所以这里采用的是第二种方法。</li>\n<li>新建完成后的目录如下，新建完成后可以cd到example&#x2F;lib&#x2F;main.dart，然后run，确认能正常运行，不会报错。<br>![flutter plugin](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin.png)<br>** 新建插件的时候，可以选择android和ios的开发语言，本示例中仅支持java和object-c，不支持kotin和swift.</li>\n</ul>\n<h3 id=\"二、添加功能\"><a href=\"#二、添加功能\" class=\"headerlink\" title=\"二、添加功能\"></a>二、添加功能</h3><p>1、找到 lib&#x2F;xxxx.dart<br>2、仿照项目给的默认方法 platformVersion ，新增自己的方法</p>\n<h3 id=\"三、android端功能新增\"><a href=\"#三、android端功能新增\" class=\"headerlink\" title=\"三、android端功能新增\"></a>三、android端功能新增</h3><p>1、在android目录上右键，选择flutter，然后open android module in android studio。![flutter plugin 2](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin 2.png)<br>2、接下来会以安卓项目打开android下面的目录（直接在插件项目里编辑安卓原生代码会报很多错误，并且没有自动补全提示）<br>3、添加自己的代码逻辑（这里涉及到安卓原生开发）<br>    + manifests&#x2F;AndroidManifest.xml里面添加权限（如果有需要）<br>    + java&#x2F;com.xxx.xxx&#x2F;xxxPlugin里面添加逻辑代码<br>    + Gradle Scripts&#x2F;build.gradle里添加第三方依赖（如果有，具体可以参照第三方文档）<br>4、完成后点击操作栏的额 make project（绿色的🔨），等待构建完成<br>5、回到插件项目，在example&#x2F;lib&#x2F;main.dart里加上测试代码，看功能是否ok</p>\n<h3 id=\"四、ios端功能新增\"><a href=\"#四、ios端功能新增\" class=\"headerlink\" title=\"四、ios端功能新增\"></a>四、ios端功能新增</h3><p>1、在ios目录上右键，选择flutter，然后open ios module in xcode。![flutter plugin 3](..&#x2F;images&#x2F;flutter&#x2F;flutter plugin 3.png)<br>2、接下来会以ios项目打开ios下面的目录<br>3、添加自己的代码逻辑（这里涉及到ios原生开发）<br>    + Pods&#x2F;Development Pods&#x2F;<plugin name>&#x2F;Pod&#x2F;xxx.podspec里面添加依赖（如果有需要）<br>    + Pods&#x2F;Development Pods&#x2F;<plugin name>&#x2F;……&#x2F;Classes&#x2F;xxx.m里面添加逻辑代码<br>4、回到插件项目，在example&#x2F;lib&#x2F;main.dart里加上测试代码，看功能是否ok</plugin></plugin></p>\n<h3 id=\"五、发布到pub-dev\"><a href=\"#五、发布到pub-dev\" class=\"headerlink\" title=\"五、发布到pub.dev\"></a>五、发布到pub.dev</h3><p>1、确保pubspec.yaml、README.md、CHANGELOG.md、LICENSE都正确填写，然后执行下面命令检查是否有错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --dry-run</span><br></pre></td></tr></table></figure>\n<p>2、检查无误后，执行下面命令发布。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish</span><br></pre></td></tr></table></figure>\n\n<p>** 发布过程中，可能遇到一直卡在 Authorization received, processing… ，解决方案如下：</p>\n<ul>\n<li>首先打开shadow sockets，然后在terminal里开启代理：   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:1087;</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:1087;</span><br></pre></td></tr></table></figure></li>\n<li>如果开了代理还是不行，可以试试将地址指向官方的。   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --server=https://pub.dartlang.org</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"参考网站\"><a href=\"#参考网站\" class=\"headerlink\" title=\"参考网站\"></a>参考网站</h4><pre><code>&lt;https://edu.csdn.net/course/play/23392/265119&gt;\n&lt;https://www.jianshu.com/p/46957915a909&gt;\n&lt;https://www.jianshu.com/p/5f1d65465bca&gt;\n&lt;https://www.jianshu.com/p/4bf045fd21f5&gt;\n&lt;https://blog.csdn.net/youtiankeng/article/details/107825986&gt;\n</code></pre>"},{"title":"lbz客户端与H5交互sdk","date":"2018-03-12T16:00:00.000Z","_content":"\nlbz客户端与H5交互sdk定义文档\n<!-- more -->\n\n### 一、APP相关\n#### 1.是否是APP环境\nH5调用示例：\n```js\nvar env = LBZSdk.app.isAppEnv; // true | false\n```\n说明：此方法不需要客户端提供接口\n#### 2.获取APP信息\n接口名：\ncore.getAppInfo\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  name: '{String}', // 应用名称,如:AiQiYi,Letv\n  key: '{String}', // 应用对应的key，如：key123\n}\n```\nH5调用示例：\n```js\nLBZSdk.app.getInfo(function(info){\n  console.log(info.name);\n})\n```\n说明：回调字段可能有修改\n\n#### 3.是否安装某个应用\n接口名：\ncore.hasInstalled\n传入参数：\n(opt, function(info){})\nopt参数示例：\n```js\n{\n  \"name\": \"weixin\" // weixin | alipay | ... 需要判断的应用名(1.ios支持判断哪些应用依赖于第三方宿主APP支持；2.安卓目前支持主流应用 - weixin | alipay | mqq | youku | taobao | weibo | mqzone | openapp.jdmobile | letvclient | tmall | qiyi-iphone)\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // 是否已安装  true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.app.hasInstalled({name: 'weixin'},function(res){\n  console.log(res.status);\n})\n```\n\n#### 4.监听app退出到后台\n接口名：\ncore.onPause\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onPause');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onPause', function(){\n  console.log('onPause');\n})\n```\n\n#### 5.监听app从后台回显\n接口名：\ncore.onResume\n传入参数：\n(function(){})\n回调示例：\n```js\n{\n\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onResume');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onResume', function(){\n  console.log('onResume');\n})\n```\n\n### 二、获取设备信息，网络状态\n#### 1.获取设备信息\n接口名：\ncore.getDeviceInfo\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  deviceId: '{String}', // 设备唯一标示符\n  name: '{String}',  // 设备名称 XiaoMi、Iphone\n  version: '{String}', // 系统版本 10.2\n  screen: { // 屏幕分辨率\n    width: '{Number}', // 宽\n    height: '{Number}' // 高\n  }\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getInfo(function(info){\n  console.log(info.deviceId);\n})\n```\n#### 2.获取电量\n接口名：\ncore.getPowerLevel\n传入参数：\n(function(power){})\n回调示例：\n```js\n{\n  level: {Number} // 当前电量0-100\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getPower(function(power){\n  console.log(power.level);\n})\n```\n#### 3.获取设备存储空间\n接口名：\ncore.getSpaceSize\n传入参数：\n(function(size){})\n回调示例：\n```js\n{\n  spaceSize: {Number}, // 字节 剩余存储空间大小\n  totalSize: {Number} // 字节 总存储空间大小\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getSpaceSize(function(size){\n  console.log(size.spaceSize);\n})\n```\n~~#### 4.监听屏幕旋转（不需要这个接口）~~\n~~接口名：~~\n~~core.onOrientationChange~~\n~~传入参数：~~\n~~(function(net){})~~\n~~回调示例：~~\n```js\n{\n  orientation: '{String}', // 当前屏幕方向 landscape | portrait\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.gEvent.enable('onOrientationChange');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onOrientationChange', function(res){\n  console.log(res.orientation);\n})\n```\n#### 5.设置屏幕方向\n接口名：\ncore.setOrientation\n传入参数：\n(opt, function(net){})\nopt参数示例：\n```js\n{\n  \"orientation\": \"landscape\" // 屏幕方向 landscape | portrait\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // true | false 是否设置成功\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.setOrientation({\"orientation\": \"landscape\"}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 6.获取网络\n接口名：\ncore.getNetwork\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  type: '{String}',   // 2G|3G|4G|wifi|unknown|none 当前网络类型\n  operator: '{String}'  // CUCC（中国联通）|CMCC（中国移动）|CTCC（中国电信） 通信运营商\n}\n```\nH5调用示例：\n```js\nLBZSdk.network.getInfo(function(net){\n  console.log(net.type);\n})\n```\n#### 7.监听网络\n接口名：\nonNetworkChange\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  now: '{String}' //2G|3G|4G|wifi|unknown|none 当前网络类型\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onNetworkChange');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.network.on('onNetworkChange', function(net){\n  console.log(net.now);\n})\n```\n\n\n### 三、登陆和用户\n#### 1.获取登陆信息\n接口名：\nfun.isLogin\n传入参数：\n(function(flag){})\n回调示例：\n```js\n{\n  login: {Boolean}, // 是否登陆 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.user.isLogin(function(flag){\n  console.log(flag);\n})\n```\n~~#### 2.获取用户信息（废弃，H5页面上直接调用接口获取用户信息）~~\n~~接口名：~~\n~~fun.getUserInfo~~\n~~传入参数：~~\n~~(function(info){})~~\n~~回调示例：~~\n```js\n{\n  name: '{String}', // 用户名\n  nickname: '{String}', // 用户昵称\n  email: '{String}', // 邮箱\n  uid: '{String}', // uid\n  img: '{String}', // 用户头像\n  status: {Number} // 用户状态：0:正常 1:已禁用 ...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.getInfo(function(info){\n  console.log(info.name);\n})\n```\n~~说明：如果获取不到用户信息则返回为空{}~~\n\n#### 3.登陆\n接口名：\nfun.userLogin\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  res: {Boolean}, // true | false 是否登陆成功\n  errCode: {Number} // 客户端拿token去乐必中后端换ticket时返回的错误码，如10108：用户被封禁  注：res为true的时候errCode为200\n}\n```\nH5调用示例：\n```js\nLBZSdk.user.login(function(info){\n  console.log(info.res);\n})\n```\n\n#### 4.重新授权（H5用参数必传，且为web）\n接口名：\nfun.reGrant\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  source: 'web' // 固定为 web，为了区分来自H5还是APP里面的\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // true | false 是否成功\n}\n```\n调用示例：\n```js\nLBZSdk.user.reGrant(function(res){\n  console.log(res.status);\n})\n```\n说明：1.在入口处如果授权失败，会进入授权失败页面（APP内置），点击页面空白处会调用该方法去重新走授权流程。当重新授权成功后，跳转到目标页。\n     2.用户未登陆状况下进入页面，然后页面上调起用户登陆接口，如果此时登陆授权失败，则需要跳转到H5的授权失败页面。该方法在H5授权失败页调用。\n\n\n~~#### 5.登出（废弃）~~\n~~接口名：~~\n~~fun.userLogout~~\n~~传入参数：~~\n~~(function(res){})~~\n~~回调示例：~~\n```js\n{\n  status: '{Boolean}' // 是否登出成功 true | false\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.logout(function(res){\n  console.log(res.status);\n})\n```\n~~#### 6.监听登陆状态改变（废弃）~~\n~~接口名：~~\n~~fun.onLoginChange~~\n~~传入参数：~~\n~~(function(res){})~~\n~~回调示例：~~\n```js\n{\n  action: '{String}', // 动作名称（login | logout）\n  name: '{String}', // 用户名\n  nickname: '{String}', // 用户昵称\n  email: '{String}', // 邮箱\n  uid: '{String}', // uid\n  img: '{String}', // 用户头像\n  status: {Number} // 用户状态：0:正常 1:已禁用 ...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.on('onLoginChange', function(res){\n  console.log(res.action);\n})\n```\n~~说明：当action是logout时，其他字段为空~~\n\n\n### 四、客户端存取数据\n#### 1.存储数据\n接口名：\nfun.setData\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  key: '{String}', // 存储的key\n  value: '{String}}' // 存储的内容\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否存储成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.setData({key: 'abc', value: '123'}, function(res){\n  if(res.status === false){\n    console.log('存储失败');\n  }\n})\n```\n#### 2.读取数据\n接口名：\nfun.getData\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  key: [\"abc\", \"123\"] // 获取的key数组\n}\n```\n回调示例：\n```js\n{\n  \"abc\": \"ds\",\n  \"123\": \"qwqwq\"  // 数据，单个元素类型可以是String,Number,JSONString\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.getData({key: [\"abc\", \"123\"]}}, function(res){\n  console.log('获取的数据为：', res);\n})\n```\n说明：如果获取不到数据则返回结果里data为空\n\n#### 3.复制到系统剪切板\n接口名：\nfun.copyToClipboard\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  data: 'abc123'\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否复制成功  true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.copyToClipboard({data: 'abc123'}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 4.读取系统剪切板内容\n接口名：\nfun.getClipboard\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  data: '{String}', // 剪切板数据，类型可以是String,Number,JSONString\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.getClipboard(function(res){\n  console.log('获取的数据为：', res.data);\n})\n```\n说明：如果获取不到数据则返回结果里data为空\n\n### 五、webView相关\n#### 1.打开新窗口\n接口名：\nfun.openWebview\n传入参数：\n(opt)\nopt示例如下：\n```js\n{\n  url: '{String}', // 打开的链接\n  title: '{String}', // 设置窗口顶部title\n  type: '{String}' // 新webview打开还是当前\n}\n```\n说明：type 可选\"new\"和\"cur\"，指定是否需要新开webview，默认\"cur\"\n回调示例：\n```js\n无回调\n```\nH5调用示例：\n```js\nLBZSdk.win.open({url: 'http://www.le.com', type: 'new', title: '乐视视频'});\n```\n#### 2.窗口前进一页\n接口名：\nfun.WebviewForward\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: '{Boolean}', // 前进结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.forward(function(res){\n  console.log(res.status);\n})\n```\n说明：当webview里没有下一页的时候status返回false\n\n#### 3.窗口后退一页\n接口名：\nfun.WebviewBack\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: '{Boolean}', // 后退结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.back(function(res){\n  console.log(res.status);\n})\n```\n说明：当webview里没有上一页的时候status返回false\n\n#### 4.后退到指定url\n接口名：\nfun.backToUrl\n传入参数：\n(opt, function(res){})\nopt示例\n```js\n{\n  url: '{String}'  // url\n}\n```\n回调示例：\n```js\n{\n  result: '{Boolean}', // true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.backToUrl({\"url\": \"http://m.le.com/\"}, function(res){\n  console.log(res.result);\n})\n```\n说明：\n1.如果历史纪录里没有该url，则不做处理，回调函数返回false;\n2.如果历史纪录里有且只有一个，则回退到指定url;\n3.如果历史纪录里有多个指定的url，则回退到最外层的那个，即最开始打开的那个指定url\n\n#### 5.设置窗口属性\n接口名：\nfun.setWebview\n传入参数：\n(opt, function(res){})\nopt示例\n```js\n{\n  \"title\": \"乐必中\", // 窗口title\n  \"bg\": \"150B3B\", // head背景颜色,不需要#\n  \"textColor\": \"ffffff\", // 字体颜色,不需要#\n  \"themes\": \"light\", // 当前主题：1.用于改变状态栏 2.如果没传backIcon，便于客户端选择本地默认的backIcon 3.如果没传closeIcon，便于客户端选择本地默认的closeIcon\n  \"backIcon\": \"http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png\", // 返回按钮图片地址 http://i2.letvimg.com/lc07_img/201812/13/14/45/back_dark@3x.png\n  \"closeIcon\": \"http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png\" // 关闭按钮图片地址 http://i1.letvimg.com/lc07_img/201812/13/14/46/close_dark@3x.png\n}\n```\n回调示例：\n```js\n{\n  status: '{Boolean}', // 设置结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.set({\"title\": \"乐必中\", \"bg\": \"150B3B\", \"textColor\": \"ffffff\", \"themes\": \"light\", \"backIcon\": \"http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png\", \"closeIcon\": \"http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png\"}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 6.注册返回按钮阻止事件\n-- 需要在url中加参数 backInterrupt=1\n-- 如果想定制化提示文案或者按钮文案，需要在url里加参数：interruptTitle, interruptCo, interruptYesText,interruptNoText\n-- 默认提示文案： \"确认返回\" \"取消\" \"确定\"\n-- url示例：http://lebz.le.com/?backInterrupt=1&interruptTitle=大爷,不再玩会儿了&interruptCo=以后常来啊&interruptYesText=不玩了&interruptNoText=滚\n接口名：\nonBackInterrupt\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  result: 'ok|cancel'  // 点击了哪个按钮\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onBackInterrupt');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.network.on('onBackInterrupt', function(res){\n  console.log(res.result);\n})\n```\n\n~~#### 5.调起APP原生页面（不需要这个接口）~~\n~~接口名：~~\n~~fun.openNative~~\n~~传入参数：~~\n~~(opt)~~\n~~opt示例如下：~~\n```js\n{\n  url: '{String}' // APP内页面地址\n}\n```\n~~回调示例：~~\n```js\n无回调\n```\n~~H5调用示例：~~\n```js\nLBZSdk.win.openNative({url: 'user_center'});\n```\n~~说明：传入的url需要提前知道~~\n\n\n### 六、弹框\n#### 1.打开弹框\n接口名：\nfun.Alert\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  title: '{String}', // 标题\n  content: '{String}}', // 内容\n  buttons: '{Array}' // 显示按钮的文字，最多两个，如：['确定'] 或 ['Yes'] 或 ['是','否']\n}\n```\n回调示例：\n```js\n{\n  btn: '{String}' // 用户点击的按钮  ok | cancel\n}\n```\nH5调用示例：\n```js\nLBZSdk.alert.open({title: '显示标题', content: '显示的内容', buttons: ['好的','取消']}, function(res){\n  if(res.btn === 'cancel'){\n    console.log('用户点击了取消按钮');\n  } else {\n    console.log('用户点击了确定按钮');\n  }\n});\n```\n说明：1.如果传入的参数中buttons只有一个，则默认显示\"确认\"按钮\n     2.如果之前已有一个弹出框了，则覆盖之前的\n#### 2.toast\n接口名：\nfun.Toast\n传入参数：\n(opt)\nopt示例如下：\n```js\n{\n  dur: '{Number}', // 显示时长,单位：毫秒,默认2000 如：2500\n  pos: {Number},  // 显示位置， 0 | 1 （0:center,1:bottom）\n  content: {String} // 显示的内容，其中 \\n 为换行符\n}\n```\n回调示例：\n```js\n无回调\n```\nH5调用示例：\n```js\nLBZSdk.alert.toast({dur: 3000, pos: 0, content: '分享成功\\n获得20金币'})\n```\n\n\n### 七、分享\n#### 1.打开分享弹框\n接口名：\nfun.openShare\n传入参数：\n(opt, function(){})\nopt示例如下：\n```js\n{\n  title: '', // 自定义分享标题\n  desc: '', // 自定义分享内容\n  link: '', // 自定义分享链接\n  imgUrl: '' // 自定义分享图标\n}\n```\n回调示例：\n```js\n{\n  code: {Number}, // 分享状态码（200表示成功，400表示用户取消等，具体定义待确定）\n  channel: {String} // 用户点击的分享渠道 （一期共三种 wxTimeline | wxFriend | weibo）\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.open({\n   title: '', // 自定义分享标题\n   desc: '', // 自定义分享内容\n   link: '', // 自定义分享链接\n   url: '', // 自定义分享链接（乐视android版分享字段是url，ios版是link）\n   imgUrl: '', // 自定义分享图标\n   bubbleTxt: '', // 气泡文案，如果不传或者传空，则不显示气泡\n   shareIcon: '', // 分享图标地址，如果不传用默认的\n   themes: 'dark | light' // 当前主题，便于客户端选择默认分享图标\n}, function(res){\n  console.log('分享渠道：' + res.channel + ';分享结果：' + res.code);\n});\n```\n说明：1.一期只支持三种渠道分享：微信朋友圈，微信好友，新浪微博\n     2.此分享是页面里用户点击按钮后手动触发的分享，与 showMenuShare 不同\n\n#### 2.显示右上角分享按钮\n接口名：\nfun.showMenuShare\n传入参数：\n(opt, function(){})\nopt示例如下：\n```js\n{\n   title: '', // 自定义分享标题\n   desc: '', // 自定义分享内容\n   link: '', // 自定义分享链接\n   url: '', // 自定义分享链接（乐视android版分享字段是url，ios版是link）\n   imgUrl: '', // 自定义分享图标\n   bubbleTxt: '', // 气泡文案，如果不传或者传空，则不显示气泡\n   shareIcon: '', // 分享图标地址，如果不传用默认的\n   themes: 'dark | light' // 当前主题，便于客户端选择默认分享图标\n   ...\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // 调用结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.showMenuShare({\n  \"title\": \"您还有1000金币待领取~手慢无！\",\n  \"desc\": \"玩小游戏做任务，就能赚金币，赶紧戳☞\",\n  \"link\": encodeURIComponent(\"https://lebz.le.com/fruitShare.html\"),\n  \"url\": encodeURIComponent(\"https://lebz.le.com/fruitShare.html\"),\n  \"imgUrl\": encodeURIComponent(\"http://i0.letvimg.com/lc06_img/201804/26/18/26/wechatShare.png\"),\n  \"bubbleTxt\": '+20金币',\n  \"shareIcon\": 'http://i0.letvimg.com/lc07_img/201812/13/14/47/share_light@3x.png',\n  \"themes\": 'light'\n}, function(res){\n  console.log(res);\n});\n```\n\n#### 3.关闭右上角分享按钮\n接口名：\nfun.hideMenuShare\n传入参数：\n(function(){})\n回调示例：\n```js\n{\n  status: {Boolean} // 调用结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.hideMenuShare(function(res){\n    console.log(res);\n});\n```\n\n#### 4.注册右上角分享监听\n接口名：\nonMenuShare\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  code: {Number}, // 分享状态码（200表示成功，400表示用户取消等，具体定义根据第三方APP给的错误码确定）\n  channel: {String} // 用户点击的分享渠道 （如 wxTimeline | wxFriend | weibo | wxShare）\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onMenuShare');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.share.on('onMenuShare', function(res){\n  console.log(res);\n})\n```\n\n~~#### 2.分享（废弃）~~\n~~接口名：~~\n~~fun.callShare~~\n~~传入参数：~~\n~~(opt, function(res){})~~\n~~opt示例如下：~~\n```js\n{\n  channelName: 'wxFriend', //分享渠道：weibo|wxFriend|wxTimeline\n  title: '', // 自定义分享标题\n  desc: '', // 自定义分享内容\n  link: '', // 自定义分享链接\n  imgUrl: '', // 自定义分享图标\n}\n```\n~~回调示例：~~\n```js\n{\n code: {Number} // 分享结果code，需具体定义，如：200表示分享成功，400表示用户取消分享等...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.share.callShare({\n  channelName: 'wxFriend',\n  title: '自定义分享标题',\n  desc: '自定义分享内容',\n  link: '自定义分享链接',\n  imgUrl: '自定义分享图标'\n}, function(res){\n  if(res.code === 200){\n    console.log('分享成功了，恭喜');\n  }\n})\n```\n~~说明：传入的参数可能需要根据不同的渠道差异化~~\n\n\n### 八、支付\n#### 1.调用支付\n接口名：\nfun.pay\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  goodsId: '{String}', // 商品id\n  channel: '{String}' // 支付渠道 weixin | alipay | thirdWeixin | thirdAlipay        applepay(for ios)\n}\n```\n回调示例：\n```js\n{\n  code: {Number} // 支付结果code,需具体定义，如：200表示支付成功，400表示用户取消支付，401表示传入的金额与订单实际金额不符等...\n}\n```\nH5调用示例：\n```js\nLBZSdk.pay.payOrder({goodsId: 'abcd1234', channel: 'weixin'}, function(res){\n  if(res.code === 200){\n    console.log('支付成功');\n  } else if(res.code === 400){\n    console.log('用户取消支付');\n  } else {\n    其他情况需具体定义\n  }\n});\n```\n\n### 九、缓存\n#### 1.更新缓存\n接口名：\nfun.updateCache\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: {Boolean} // 是否更新成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.cache.updateCache(function(res){\n  console.log(res.status);\n});\n```\n\n### 十、日期、时间选择\n#### 1.日历选择\n接口名：\nfun.selectDate\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"minDate\": \"2016-01-03\", // 结束日期，当type为\"time\"时不需要\n  \"maxDate\": \"2019-11-12\", // 开始日期，当type为\"time\"时不需要\n  \"type\": \"date\" // 可选 date | time | ym  ==>  日期 | 时间 | 年月\n}\n```\n回调示例：\n```js\n{\n  value: {String} // 选择的时间（如\"2018-02-23\"、\"2018-02\"、\"17:23\"），如果用户点取消不会进入该回调\n}\n```\nH5调用示例：\n```js\nLBZSdk.calendar.select({\n  \"minDate\": \"2016-01-03\",\n  \"maxDate\": \"2019-11-12\",\n  \"type\": \"date\"\n}, function(res){\n  console.log(res.value);\n});\n```\n\n### 十一、第三方原生APP相关\n#### 1.打开商品详情页\n接口名：\nfun.openDetail\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"channel\": \"tmall\", // tmall | jd | taobao\n  \"id\": 212123   // 商品id\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.native.openDetail({\"channel\": \"taobao\", \"id\": 1213121}, function(info) {\n    alert(info);\n});\n```\n\n### 十二、pomelo（仅供安卓4.4以下）\n#### 1.init\n接口名：\nfun.initPomelo\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"host\": 'x.x.x.x',\n  \"port\": 'xxxx',\n  // 其他根据不同业务调用\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.pomelo.init({\n    \"host\":\"lebzs.le.com\",\n    \"port\":9014,\n    \"user\":{\"uid\":\"10002\",\"nickname\":\"乐必中_10002\",\"picture\":\"https://i3.letvimg.com/lc06_user/201605/09/15/04/1923203311462777446_50_50.jpg\",\"balance\":\"23800\"}\n  }, function(info) {\n    alert(info);\n});\n```\n\n#### 2.request\n接口名：\nfun.requestPomelo\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  // 其他根据不同业务调用\n}\n```\n回调示例：\n```js\n{\n  // 其他根据不同业务调用\n}\n```\nH5调用示例：\n```js\nLBZSdk.pomelo.request(\"fruit.fruitHandler.select\", {\n      \"fruit\":{\"id\":4,\"key\":\"banana4\",\"image\":\"//i3.letvimg.com/lc03_img/201803/01/10/23/1022/fruits04.png\",\"title\":\"雪梨\",\"order\":3}\n   }, function(res) {\n    alert(res);\n});\n```\n\n#### 3.disconnect\n接口名：\nfun.disconnectPomelo\n传入参数：\n()\nH5调用示例：\n```js\nLBZSdk.pomelo.disconnect();\n```\n\n#### 4.监听pomelo\n接口名：\ncore.onPomeloEvent\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  type: '{String}', // 自定义的监听类型，如： onResult , onSelect ...\n  data: {}  // 回调的数据\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onPomeloEvent');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.pomelo.on('onPomeloEvent', function(res) {\n    if('onResult' === res.type){\n        console.log('onResult', res.data);\n    } else if('onSelect' === res.type){\n        console.log('onSelect', res.data);\n    } else if(){\n        ...\n    }\n});\n```\n\n+ 目前能想到的接口文档大致如此，做的过程中会有删改","source":"_posts/lbz客户端与H5交互sdk.md","raw":"---\ntitle: lbz客户端与H5交互sdk\ndate: 2018-03-13\ncategories: H5\ntags: \n    - H5\n    - IOS\n    - Android\n    - sdk\n#description: \n---\n\nlbz客户端与H5交互sdk定义文档\n<!-- more -->\n\n### 一、APP相关\n#### 1.是否是APP环境\nH5调用示例：\n```js\nvar env = LBZSdk.app.isAppEnv; // true | false\n```\n说明：此方法不需要客户端提供接口\n#### 2.获取APP信息\n接口名：\ncore.getAppInfo\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  name: '{String}', // 应用名称,如:AiQiYi,Letv\n  key: '{String}', // 应用对应的key，如：key123\n}\n```\nH5调用示例：\n```js\nLBZSdk.app.getInfo(function(info){\n  console.log(info.name);\n})\n```\n说明：回调字段可能有修改\n\n#### 3.是否安装某个应用\n接口名：\ncore.hasInstalled\n传入参数：\n(opt, function(info){})\nopt参数示例：\n```js\n{\n  \"name\": \"weixin\" // weixin | alipay | ... 需要判断的应用名(1.ios支持判断哪些应用依赖于第三方宿主APP支持；2.安卓目前支持主流应用 - weixin | alipay | mqq | youku | taobao | weibo | mqzone | openapp.jdmobile | letvclient | tmall | qiyi-iphone)\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // 是否已安装  true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.app.hasInstalled({name: 'weixin'},function(res){\n  console.log(res.status);\n})\n```\n\n#### 4.监听app退出到后台\n接口名：\ncore.onPause\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onPause');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onPause', function(){\n  console.log('onPause');\n})\n```\n\n#### 5.监听app从后台回显\n接口名：\ncore.onResume\n传入参数：\n(function(){})\n回调示例：\n```js\n{\n\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onResume');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onResume', function(){\n  console.log('onResume');\n})\n```\n\n### 二、获取设备信息，网络状态\n#### 1.获取设备信息\n接口名：\ncore.getDeviceInfo\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  deviceId: '{String}', // 设备唯一标示符\n  name: '{String}',  // 设备名称 XiaoMi、Iphone\n  version: '{String}', // 系统版本 10.2\n  screen: { // 屏幕分辨率\n    width: '{Number}', // 宽\n    height: '{Number}' // 高\n  }\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getInfo(function(info){\n  console.log(info.deviceId);\n})\n```\n#### 2.获取电量\n接口名：\ncore.getPowerLevel\n传入参数：\n(function(power){})\n回调示例：\n```js\n{\n  level: {Number} // 当前电量0-100\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getPower(function(power){\n  console.log(power.level);\n})\n```\n#### 3.获取设备存储空间\n接口名：\ncore.getSpaceSize\n传入参数：\n(function(size){})\n回调示例：\n```js\n{\n  spaceSize: {Number}, // 字节 剩余存储空间大小\n  totalSize: {Number} // 字节 总存储空间大小\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.getSpaceSize(function(size){\n  console.log(size.spaceSize);\n})\n```\n~~#### 4.监听屏幕旋转（不需要这个接口）~~\n~~接口名：~~\n~~core.onOrientationChange~~\n~~传入参数：~~\n~~(function(net){})~~\n~~回调示例：~~\n```js\n{\n  orientation: '{String}', // 当前屏幕方向 landscape | portrait\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.gEvent.enable('onOrientationChange');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.device.on('onOrientationChange', function(res){\n  console.log(res.orientation);\n})\n```\n#### 5.设置屏幕方向\n接口名：\ncore.setOrientation\n传入参数：\n(opt, function(net){})\nopt参数示例：\n```js\n{\n  \"orientation\": \"landscape\" // 屏幕方向 landscape | portrait\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // true | false 是否设置成功\n}\n```\nH5调用示例：\n```js\nLBZSdk.device.setOrientation({\"orientation\": \"landscape\"}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 6.获取网络\n接口名：\ncore.getNetwork\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  type: '{String}',   // 2G|3G|4G|wifi|unknown|none 当前网络类型\n  operator: '{String}'  // CUCC（中国联通）|CMCC（中国移动）|CTCC（中国电信） 通信运营商\n}\n```\nH5调用示例：\n```js\nLBZSdk.network.getInfo(function(net){\n  console.log(net.type);\n})\n```\n#### 7.监听网络\n接口名：\nonNetworkChange\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  now: '{String}' //2G|3G|4G|wifi|unknown|none 当前网络类型\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onNetworkChange');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.network.on('onNetworkChange', function(net){\n  console.log(net.now);\n})\n```\n\n\n### 三、登陆和用户\n#### 1.获取登陆信息\n接口名：\nfun.isLogin\n传入参数：\n(function(flag){})\n回调示例：\n```js\n{\n  login: {Boolean}, // 是否登陆 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.user.isLogin(function(flag){\n  console.log(flag);\n})\n```\n~~#### 2.获取用户信息（废弃，H5页面上直接调用接口获取用户信息）~~\n~~接口名：~~\n~~fun.getUserInfo~~\n~~传入参数：~~\n~~(function(info){})~~\n~~回调示例：~~\n```js\n{\n  name: '{String}', // 用户名\n  nickname: '{String}', // 用户昵称\n  email: '{String}', // 邮箱\n  uid: '{String}', // uid\n  img: '{String}', // 用户头像\n  status: {Number} // 用户状态：0:正常 1:已禁用 ...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.getInfo(function(info){\n  console.log(info.name);\n})\n```\n~~说明：如果获取不到用户信息则返回为空{}~~\n\n#### 3.登陆\n接口名：\nfun.userLogin\n传入参数：\n(function(info){})\n回调示例：\n```js\n{\n  res: {Boolean}, // true | false 是否登陆成功\n  errCode: {Number} // 客户端拿token去乐必中后端换ticket时返回的错误码，如10108：用户被封禁  注：res为true的时候errCode为200\n}\n```\nH5调用示例：\n```js\nLBZSdk.user.login(function(info){\n  console.log(info.res);\n})\n```\n\n#### 4.重新授权（H5用参数必传，且为web）\n接口名：\nfun.reGrant\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  source: 'web' // 固定为 web，为了区分来自H5还是APP里面的\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // true | false 是否成功\n}\n```\n调用示例：\n```js\nLBZSdk.user.reGrant(function(res){\n  console.log(res.status);\n})\n```\n说明：1.在入口处如果授权失败，会进入授权失败页面（APP内置），点击页面空白处会调用该方法去重新走授权流程。当重新授权成功后，跳转到目标页。\n     2.用户未登陆状况下进入页面，然后页面上调起用户登陆接口，如果此时登陆授权失败，则需要跳转到H5的授权失败页面。该方法在H5授权失败页调用。\n\n\n~~#### 5.登出（废弃）~~\n~~接口名：~~\n~~fun.userLogout~~\n~~传入参数：~~\n~~(function(res){})~~\n~~回调示例：~~\n```js\n{\n  status: '{Boolean}' // 是否登出成功 true | false\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.logout(function(res){\n  console.log(res.status);\n})\n```\n~~#### 6.监听登陆状态改变（废弃）~~\n~~接口名：~~\n~~fun.onLoginChange~~\n~~传入参数：~~\n~~(function(res){})~~\n~~回调示例：~~\n```js\n{\n  action: '{String}', // 动作名称（login | logout）\n  name: '{String}', // 用户名\n  nickname: '{String}', // 用户昵称\n  email: '{String}', // 邮箱\n  uid: '{String}', // uid\n  img: '{String}', // 用户头像\n  status: {Number} // 用户状态：0:正常 1:已禁用 ...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.user.on('onLoginChange', function(res){\n  console.log(res.action);\n})\n```\n~~说明：当action是logout时，其他字段为空~~\n\n\n### 四、客户端存取数据\n#### 1.存储数据\n接口名：\nfun.setData\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  key: '{String}', // 存储的key\n  value: '{String}}' // 存储的内容\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否存储成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.setData({key: 'abc', value: '123'}, function(res){\n  if(res.status === false){\n    console.log('存储失败');\n  }\n})\n```\n#### 2.读取数据\n接口名：\nfun.getData\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  key: [\"abc\", \"123\"] // 获取的key数组\n}\n```\n回调示例：\n```js\n{\n  \"abc\": \"ds\",\n  \"123\": \"qwqwq\"  // 数据，单个元素类型可以是String,Number,JSONString\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.getData({key: [\"abc\", \"123\"]}}, function(res){\n  console.log('获取的数据为：', res);\n})\n```\n说明：如果获取不到数据则返回结果里data为空\n\n#### 3.复制到系统剪切板\n接口名：\nfun.copyToClipboard\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  data: 'abc123'\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否复制成功  true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.copyToClipboard({data: 'abc123'}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 4.读取系统剪切板内容\n接口名：\nfun.getClipboard\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  data: '{String}', // 剪切板数据，类型可以是String,Number,JSONString\n}\n```\nH5调用示例：\n```js\nLBZSdk.data.getClipboard(function(res){\n  console.log('获取的数据为：', res.data);\n})\n```\n说明：如果获取不到数据则返回结果里data为空\n\n### 五、webView相关\n#### 1.打开新窗口\n接口名：\nfun.openWebview\n传入参数：\n(opt)\nopt示例如下：\n```js\n{\n  url: '{String}', // 打开的链接\n  title: '{String}', // 设置窗口顶部title\n  type: '{String}' // 新webview打开还是当前\n}\n```\n说明：type 可选\"new\"和\"cur\"，指定是否需要新开webview，默认\"cur\"\n回调示例：\n```js\n无回调\n```\nH5调用示例：\n```js\nLBZSdk.win.open({url: 'http://www.le.com', type: 'new', title: '乐视视频'});\n```\n#### 2.窗口前进一页\n接口名：\nfun.WebviewForward\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: '{Boolean}', // 前进结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.forward(function(res){\n  console.log(res.status);\n})\n```\n说明：当webview里没有下一页的时候status返回false\n\n#### 3.窗口后退一页\n接口名：\nfun.WebviewBack\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: '{Boolean}', // 后退结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.back(function(res){\n  console.log(res.status);\n})\n```\n说明：当webview里没有上一页的时候status返回false\n\n#### 4.后退到指定url\n接口名：\nfun.backToUrl\n传入参数：\n(opt, function(res){})\nopt示例\n```js\n{\n  url: '{String}'  // url\n}\n```\n回调示例：\n```js\n{\n  result: '{Boolean}', // true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.backToUrl({\"url\": \"http://m.le.com/\"}, function(res){\n  console.log(res.result);\n})\n```\n说明：\n1.如果历史纪录里没有该url，则不做处理，回调函数返回false;\n2.如果历史纪录里有且只有一个，则回退到指定url;\n3.如果历史纪录里有多个指定的url，则回退到最外层的那个，即最开始打开的那个指定url\n\n#### 5.设置窗口属性\n接口名：\nfun.setWebview\n传入参数：\n(opt, function(res){})\nopt示例\n```js\n{\n  \"title\": \"乐必中\", // 窗口title\n  \"bg\": \"150B3B\", // head背景颜色,不需要#\n  \"textColor\": \"ffffff\", // 字体颜色,不需要#\n  \"themes\": \"light\", // 当前主题：1.用于改变状态栏 2.如果没传backIcon，便于客户端选择本地默认的backIcon 3.如果没传closeIcon，便于客户端选择本地默认的closeIcon\n  \"backIcon\": \"http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png\", // 返回按钮图片地址 http://i2.letvimg.com/lc07_img/201812/13/14/45/back_dark@3x.png\n  \"closeIcon\": \"http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png\" // 关闭按钮图片地址 http://i1.letvimg.com/lc07_img/201812/13/14/46/close_dark@3x.png\n}\n```\n回调示例：\n```js\n{\n  status: '{Boolean}', // 设置结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.win.set({\"title\": \"乐必中\", \"bg\": \"150B3B\", \"textColor\": \"ffffff\", \"themes\": \"light\", \"backIcon\": \"http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png\", \"closeIcon\": \"http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png\"}, function(res){\n  console.log(res.status);\n})\n```\n\n#### 6.注册返回按钮阻止事件\n-- 需要在url中加参数 backInterrupt=1\n-- 如果想定制化提示文案或者按钮文案，需要在url里加参数：interruptTitle, interruptCo, interruptYesText,interruptNoText\n-- 默认提示文案： \"确认返回\" \"取消\" \"确定\"\n-- url示例：http://lebz.le.com/?backInterrupt=1&interruptTitle=大爷,不再玩会儿了&interruptCo=以后常来啊&interruptYesText=不玩了&interruptNoText=滚\n接口名：\nonBackInterrupt\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  result: 'ok|cancel'  // 点击了哪个按钮\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onBackInterrupt');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.network.on('onBackInterrupt', function(res){\n  console.log(res.result);\n})\n```\n\n~~#### 5.调起APP原生页面（不需要这个接口）~~\n~~接口名：~~\n~~fun.openNative~~\n~~传入参数：~~\n~~(opt)~~\n~~opt示例如下：~~\n```js\n{\n  url: '{String}' // APP内页面地址\n}\n```\n~~回调示例：~~\n```js\n无回调\n```\n~~H5调用示例：~~\n```js\nLBZSdk.win.openNative({url: 'user_center'});\n```\n~~说明：传入的url需要提前知道~~\n\n\n### 六、弹框\n#### 1.打开弹框\n接口名：\nfun.Alert\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  title: '{String}', // 标题\n  content: '{String}}', // 内容\n  buttons: '{Array}' // 显示按钮的文字，最多两个，如：['确定'] 或 ['Yes'] 或 ['是','否']\n}\n```\n回调示例：\n```js\n{\n  btn: '{String}' // 用户点击的按钮  ok | cancel\n}\n```\nH5调用示例：\n```js\nLBZSdk.alert.open({title: '显示标题', content: '显示的内容', buttons: ['好的','取消']}, function(res){\n  if(res.btn === 'cancel'){\n    console.log('用户点击了取消按钮');\n  } else {\n    console.log('用户点击了确定按钮');\n  }\n});\n```\n说明：1.如果传入的参数中buttons只有一个，则默认显示\"确认\"按钮\n     2.如果之前已有一个弹出框了，则覆盖之前的\n#### 2.toast\n接口名：\nfun.Toast\n传入参数：\n(opt)\nopt示例如下：\n```js\n{\n  dur: '{Number}', // 显示时长,单位：毫秒,默认2000 如：2500\n  pos: {Number},  // 显示位置， 0 | 1 （0:center,1:bottom）\n  content: {String} // 显示的内容，其中 \\n 为换行符\n}\n```\n回调示例：\n```js\n无回调\n```\nH5调用示例：\n```js\nLBZSdk.alert.toast({dur: 3000, pos: 0, content: '分享成功\\n获得20金币'})\n```\n\n\n### 七、分享\n#### 1.打开分享弹框\n接口名：\nfun.openShare\n传入参数：\n(opt, function(){})\nopt示例如下：\n```js\n{\n  title: '', // 自定义分享标题\n  desc: '', // 自定义分享内容\n  link: '', // 自定义分享链接\n  imgUrl: '' // 自定义分享图标\n}\n```\n回调示例：\n```js\n{\n  code: {Number}, // 分享状态码（200表示成功，400表示用户取消等，具体定义待确定）\n  channel: {String} // 用户点击的分享渠道 （一期共三种 wxTimeline | wxFriend | weibo）\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.open({\n   title: '', // 自定义分享标题\n   desc: '', // 自定义分享内容\n   link: '', // 自定义分享链接\n   url: '', // 自定义分享链接（乐视android版分享字段是url，ios版是link）\n   imgUrl: '', // 自定义分享图标\n   bubbleTxt: '', // 气泡文案，如果不传或者传空，则不显示气泡\n   shareIcon: '', // 分享图标地址，如果不传用默认的\n   themes: 'dark | light' // 当前主题，便于客户端选择默认分享图标\n}, function(res){\n  console.log('分享渠道：' + res.channel + ';分享结果：' + res.code);\n});\n```\n说明：1.一期只支持三种渠道分享：微信朋友圈，微信好友，新浪微博\n     2.此分享是页面里用户点击按钮后手动触发的分享，与 showMenuShare 不同\n\n#### 2.显示右上角分享按钮\n接口名：\nfun.showMenuShare\n传入参数：\n(opt, function(){})\nopt示例如下：\n```js\n{\n   title: '', // 自定义分享标题\n   desc: '', // 自定义分享内容\n   link: '', // 自定义分享链接\n   url: '', // 自定义分享链接（乐视android版分享字段是url，ios版是link）\n   imgUrl: '', // 自定义分享图标\n   bubbleTxt: '', // 气泡文案，如果不传或者传空，则不显示气泡\n   shareIcon: '', // 分享图标地址，如果不传用默认的\n   themes: 'dark | light' // 当前主题，便于客户端选择默认分享图标\n   ...\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // 调用结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.showMenuShare({\n  \"title\": \"您还有1000金币待领取~手慢无！\",\n  \"desc\": \"玩小游戏做任务，就能赚金币，赶紧戳☞\",\n  \"link\": encodeURIComponent(\"https://lebz.le.com/fruitShare.html\"),\n  \"url\": encodeURIComponent(\"https://lebz.le.com/fruitShare.html\"),\n  \"imgUrl\": encodeURIComponent(\"http://i0.letvimg.com/lc06_img/201804/26/18/26/wechatShare.png\"),\n  \"bubbleTxt\": '+20金币',\n  \"shareIcon\": 'http://i0.letvimg.com/lc07_img/201812/13/14/47/share_light@3x.png',\n  \"themes\": 'light'\n}, function(res){\n  console.log(res);\n});\n```\n\n#### 3.关闭右上角分享按钮\n接口名：\nfun.hideMenuShare\n传入参数：\n(function(){})\n回调示例：\n```js\n{\n  status: {Boolean} // 调用结果 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.share.hideMenuShare(function(res){\n    console.log(res);\n});\n```\n\n#### 4.注册右上角分享监听\n接口名：\nonMenuShare\n传入参数：\n(function(net){})\n回调示例：\n```js\n{\n  code: {Number}, // 分享状态码（200表示成功，400表示用户取消等，具体定义根据第三方APP给的错误码确定）\n  channel: {String} // 用户点击的分享渠道 （如 wxTimeline | wxFriend | weibo | wxShare）\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onMenuShare');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.share.on('onMenuShare', function(res){\n  console.log(res);\n})\n```\n\n~~#### 2.分享（废弃）~~\n~~接口名：~~\n~~fun.callShare~~\n~~传入参数：~~\n~~(opt, function(res){})~~\n~~opt示例如下：~~\n```js\n{\n  channelName: 'wxFriend', //分享渠道：weibo|wxFriend|wxTimeline\n  title: '', // 自定义分享标题\n  desc: '', // 自定义分享内容\n  link: '', // 自定义分享链接\n  imgUrl: '', // 自定义分享图标\n}\n```\n~~回调示例：~~\n```js\n{\n code: {Number} // 分享结果code，需具体定义，如：200表示分享成功，400表示用户取消分享等...\n}\n```\n~~H5调用示例：~~\n```js\nLBZSdk.share.callShare({\n  channelName: 'wxFriend',\n  title: '自定义分享标题',\n  desc: '自定义分享内容',\n  link: '自定义分享链接',\n  imgUrl: '自定义分享图标'\n}, function(res){\n  if(res.code === 200){\n    console.log('分享成功了，恭喜');\n  }\n})\n```\n~~说明：传入的参数可能需要根据不同的渠道差异化~~\n\n\n### 八、支付\n#### 1.调用支付\n接口名：\nfun.pay\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  goodsId: '{String}', // 商品id\n  channel: '{String}' // 支付渠道 weixin | alipay | thirdWeixin | thirdAlipay        applepay(for ios)\n}\n```\n回调示例：\n```js\n{\n  code: {Number} // 支付结果code,需具体定义，如：200表示支付成功，400表示用户取消支付，401表示传入的金额与订单实际金额不符等...\n}\n```\nH5调用示例：\n```js\nLBZSdk.pay.payOrder({goodsId: 'abcd1234', channel: 'weixin'}, function(res){\n  if(res.code === 200){\n    console.log('支付成功');\n  } else if(res.code === 400){\n    console.log('用户取消支付');\n  } else {\n    其他情况需具体定义\n  }\n});\n```\n\n### 九、缓存\n#### 1.更新缓存\n接口名：\nfun.updateCache\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  status: {Boolean} // 是否更新成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.cache.updateCache(function(res){\n  console.log(res.status);\n});\n```\n\n### 十、日期、时间选择\n#### 1.日历选择\n接口名：\nfun.selectDate\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"minDate\": \"2016-01-03\", // 结束日期，当type为\"time\"时不需要\n  \"maxDate\": \"2019-11-12\", // 开始日期，当type为\"time\"时不需要\n  \"type\": \"date\" // 可选 date | time | ym  ==>  日期 | 时间 | 年月\n}\n```\n回调示例：\n```js\n{\n  value: {String} // 选择的时间（如\"2018-02-23\"、\"2018-02\"、\"17:23\"），如果用户点取消不会进入该回调\n}\n```\nH5调用示例：\n```js\nLBZSdk.calendar.select({\n  \"minDate\": \"2016-01-03\",\n  \"maxDate\": \"2019-11-12\",\n  \"type\": \"date\"\n}, function(res){\n  console.log(res.value);\n});\n```\n\n### 十一、第三方原生APP相关\n#### 1.打开商品详情页\n接口名：\nfun.openDetail\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"channel\": \"tmall\", // tmall | jd | taobao\n  \"id\": 212123   // 商品id\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean}, // 是否成功 true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.native.openDetail({\"channel\": \"taobao\", \"id\": 1213121}, function(info) {\n    alert(info);\n});\n```\n\n### 十二、pomelo（仅供安卓4.4以下）\n#### 1.init\n接口名：\nfun.initPomelo\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  \"host\": 'x.x.x.x',\n  \"port\": 'xxxx',\n  // 其他根据不同业务调用\n}\n```\n回调示例：\n```js\n{\n  status: {Boolean} // true | false\n}\n```\nH5调用示例：\n```js\nLBZSdk.pomelo.init({\n    \"host\":\"lebzs.le.com\",\n    \"port\":9014,\n    \"user\":{\"uid\":\"10002\",\"nickname\":\"乐必中_10002\",\"picture\":\"https://i3.letvimg.com/lc06_user/201605/09/15/04/1923203311462777446_50_50.jpg\",\"balance\":\"23800\"}\n  }, function(info) {\n    alert(info);\n});\n```\n\n#### 2.request\n接口名：\nfun.requestPomelo\n传入参数：\n(opt, function(res){})\nopt示例如下：\n```js\n{\n  // 其他根据不同业务调用\n}\n```\n回调示例：\n```js\n{\n  // 其他根据不同业务调用\n}\n```\nH5调用示例：\n```js\nLBZSdk.pomelo.request(\"fruit.fruitHandler.select\", {\n      \"fruit\":{\"id\":4,\"key\":\"banana4\",\"image\":\"//i3.letvimg.com/lc03_img/201803/01/10/23/1022/fruits04.png\",\"title\":\"雪梨\",\"order\":3}\n   }, function(res) {\n    alert(res);\n});\n```\n\n#### 3.disconnect\n接口名：\nfun.disconnectPomelo\n传入参数：\n()\nH5调用示例：\n```js\nLBZSdk.pomelo.disconnect();\n```\n\n#### 4.监听pomelo\n接口名：\ncore.onPomeloEvent\n传入参数：\n(function(res){})\n回调示例：\n```js\n{\n  type: '{String}', // 自定义的监听类型，如： onResult , onSelect ...\n  data: {}  // 回调的数据\n}\n```\nH5调用示例：\n```js\nLBZSdk.gEvent.enable('onPomeloEvent');// 取消注册监听把\"enable\"换成\"disable\"\nLBZSdk.pomelo.on('onPomeloEvent', function(res) {\n    if('onResult' === res.type){\n        console.log('onResult', res.data);\n    } else if('onSelect' === res.type){\n        console.log('onSelect', res.data);\n    } else if(){\n        ...\n    }\n});\n```\n\n+ 目前能想到的接口文档大致如此，做的过程中会有删改","slug":"lbz客户端与H5交互sdk","published":1,"updated":"2022-06-15T08:20:57.876Z","_id":"cl4e3aywb000yk4rqxz70twim","comments":1,"layout":"post","photos":[],"link":"","content":"<p>lbz客户端与H5交互sdk定义文档</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、APP相关\"><a href=\"#一、APP相关\" class=\"headerlink\" title=\"一、APP相关\"></a>一、APP相关</h3><h4 id=\"1-是否是APP环境\"><a href=\"#1-是否是APP环境\" class=\"headerlink\" title=\"1.是否是APP环境\"></a>1.是否是APP环境</h4><p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> env = <span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"property\">isAppEnv</span>; <span class=\"comment\">// true | false</span></span><br></pre></td></tr></table></figure>\n<p>说明：此方法不需要客户端提供接口</p>\n<h4 id=\"2-获取APP信息\"><a href=\"#2-获取APP信息\" class=\"headerlink\" title=\"2.获取APP信息\"></a>2.获取APP信息</h4><p>接口名：<br>core.getAppInfo<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 应用名称,如:AiQiYi,Letv</span></span><br><span class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 应用对应的key，如：key123</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：回调字段可能有修改</p>\n<h4 id=\"3-是否安装某个应用\"><a href=\"#3-是否安装某个应用\" class=\"headerlink\" title=\"3.是否安装某个应用\"></a>3.是否安装某个应用</h4><p>接口名：<br>core.hasInstalled<br>传入参数：<br>(opt, function(info){})<br>opt参数示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;weixin&quot;</span> <span class=\"comment\">// weixin | alipay | ... 需要判断的应用名(1.ios支持判断哪些应用依赖于第三方宿主APP支持；2.安卓目前支持主流应用 - weixin | alipay | mqq | youku | taobao | weibo | mqzone | openapp.jdmobile | letvclient | tmall | qiyi-iphone)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 是否已安装  true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"title function_\">hasInstalled</span>(&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;weixin&#x27;</span>&#125;,<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-监听app退出到后台\"><a href=\"#4-监听app退出到后台\" class=\"headerlink\" title=\"4.监听app退出到后台\"></a>4.监听app退出到后台</h4><p>接口名：<br>core.onPause<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onPause&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onPause&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onPause&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-监听app从后台回显\"><a href=\"#5-监听app从后台回显\" class=\"headerlink\" title=\"5.监听app从后台回显\"></a>5.监听app从后台回显</h4><p>接口名：<br>core.onResume<br>传入参数：<br>(function(){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onResume&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onResume&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onResume&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、获取设备信息，网络状态\"><a href=\"#二、获取设备信息，网络状态\" class=\"headerlink\" title=\"二、获取设备信息，网络状态\"></a>二、获取设备信息，网络状态</h3><h4 id=\"1-获取设备信息\"><a href=\"#1-获取设备信息\" class=\"headerlink\" title=\"1.获取设备信息\"></a>1.获取设备信息</h4><p>接口名：<br>core.getDeviceInfo<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">deviceId</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 设备唯一标示符</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>,  <span class=\"comment\">// 设备名称 XiaoMi、Iphone</span></span><br><span class=\"line\">  <span class=\"attr\">version</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 系统版本 10.2</span></span><br><span class=\"line\">  <span class=\"attr\">screen</span>: &#123; <span class=\"comment\">// 屏幕分辨率</span></span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span>, <span class=\"comment\">// 宽</span></span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span> <span class=\"comment\">// 高</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">deviceId</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-获取电量\"><a href=\"#2-获取电量\" class=\"headerlink\" title=\"2.获取电量\"></a>2.获取电量</h4><p>接口名：<br>core.getPowerLevel<br>传入参数：<br>(function(power){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">level</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 当前电量0-100</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getPower</span>(<span class=\"keyword\">function</span>(<span class=\"params\">power</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(power.<span class=\"property\">level</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取设备存储空间\"><a href=\"#3-获取设备存储空间\" class=\"headerlink\" title=\"3.获取设备存储空间\"></a>3.获取设备存储空间</h4><p>接口名：<br>core.getSpaceSize<br>传入参数：<br>(function(size){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">spaceSize</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 字节 剩余存储空间大小</span></span><br><span class=\"line\">  <span class=\"attr\">totalSize</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 字节 总存储空间大小</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getSpaceSize</span>(<span class=\"keyword\">function</span>(<span class=\"params\">size</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(size.<span class=\"property\">spaceSize</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 4.监听屏幕旋转（不需要这个接口）</del><br><del>接口名：</del><br><del>core.onOrientationChange</del><br><del>传入参数：</del><br><del>(function(net){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">orientation</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 当前屏幕方向 landscape | portrait</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onOrientationChange&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onOrientationChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">orientation</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-设置屏幕方向\"><a href=\"#5-设置屏幕方向\" class=\"headerlink\" title=\"5.设置屏幕方向\"></a>5.设置屏幕方向</h4><p>接口名：<br>core.setOrientation<br>传入参数：<br>(opt, function(net){})<br>opt参数示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;orientation&quot;</span>: <span class=\"string\">&quot;landscape&quot;</span> <span class=\"comment\">// 屏幕方向 landscape | portrait</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// true | false 是否设置成功</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">setOrientation</span>(&#123;<span class=\"string\">&quot;orientation&quot;</span>: <span class=\"string\">&quot;landscape&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-获取网络\"><a href=\"#6-获取网络\" class=\"headerlink\" title=\"6.获取网络\"></a>6.获取网络</h4><p>接口名：<br>core.getNetwork<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>,   <span class=\"comment\">// 2G|3G|4G|wifi|unknown|none 当前网络类型</span></span><br><span class=\"line\">  <span class=\"attr\">operator</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>  <span class=\"comment\">// CUCC（中国联通）|CMCC（中国移动）|CTCC（中国电信） 通信运营商</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">net</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(net.<span class=\"property\">type</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-监听网络\"><a href=\"#7-监听网络\" class=\"headerlink\" title=\"7.监听网络\"></a>7.监听网络</h4><p>接口名：<br>onNetworkChange<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">now</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">//2G|3G|4G|wifi|unknown|none 当前网络类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onNetworkChange&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onNetworkChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">net</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(net.<span class=\"property\">now</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"三、登陆和用户\"><a href=\"#三、登陆和用户\" class=\"headerlink\" title=\"三、登陆和用户\"></a>三、登陆和用户</h3><h4 id=\"1-获取登陆信息\"><a href=\"#1-获取登陆信息\" class=\"headerlink\" title=\"1.获取登陆信息\"></a>1.获取登陆信息</h4><p>接口名：<br>fun.isLogin<br>传入参数：<br>(function(flag){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">login</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否登陆 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">isLogin</span>(<span class=\"keyword\">function</span>(<span class=\"params\">flag</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(flag);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 2.获取用户信息（废弃，H5页面上直接调用接口获取用户信息）</del><br><del>接口名：</del><br><del>fun.getUserInfo</del><br><del>传入参数：</del><br><del>(function(info){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">  <span class=\"attr\">nickname</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">  <span class=\"attr\">uid</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// uid</span></span><br><span class=\"line\">  <span class=\"attr\">img</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户头像</span></span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 用户状态：0:正常 1:已禁用 ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：如果获取不到用户信息则返回为空{}</del></p>\n<h4 id=\"3-登陆\"><a href=\"#3-登陆\" class=\"headerlink\" title=\"3.登陆\"></a>3.登陆</h4><p>接口名：<br>fun.userLogin<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">res</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// true | false 是否登陆成功</span></span><br><span class=\"line\">  <span class=\"attr\">errCode</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 客户端拿token去乐必中后端换ticket时返回的错误码，如10108：用户被封禁  注：res为true的时候errCode为200</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">login</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">res</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-重新授权（H5用参数必传，且为web）\"><a href=\"#4-重新授权（H5用参数必传，且为web）\" class=\"headerlink\" title=\"4.重新授权（H5用参数必传，且为web）\"></a>4.重新授权（H5用参数必传，且为web）</h4><p>接口名：<br>fun.reGrant<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">source</span>: <span class=\"string\">&#x27;web&#x27;</span> <span class=\"comment\">// 固定为 web，为了区分来自H5还是APP里面的</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// true | false 是否成功</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">reGrant</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：1.在入口处如果授权失败，会进入授权失败页面（APP内置），点击页面空白处会调用该方法去重新走授权流程。当重新授权成功后，跳转到目标页。<br>     2.用户未登陆状况下进入页面，然后页面上调起用户登陆接口，如果此时登陆授权失败，则需要跳转到H5的授权失败页面。该方法在H5授权失败页调用。</p>\n<p><del>#### 5.登出（废弃）</del><br><del>接口名：</del><br><del>fun.userLogout</del><br><del>传入参数：</del><br><del>(function(res){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span> <span class=\"comment\">// 是否登出成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">logout</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 6.监听登陆状态改变（废弃）</del><br><del>接口名：</del><br><del>fun.onLoginChange</del><br><del>传入参数：</del><br><del>(function(res){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">action</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 动作名称（login | logout）</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">  <span class=\"attr\">nickname</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">  <span class=\"attr\">uid</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// uid</span></span><br><span class=\"line\">  <span class=\"attr\">img</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户头像</span></span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 用户状态：0:正常 1:已禁用 ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onLoginChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">action</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：当action是logout时，其他字段为空</del></p>\n<h3 id=\"四、客户端存取数据\"><a href=\"#四、客户端存取数据\" class=\"headerlink\" title=\"四、客户端存取数据\"></a>四、客户端存取数据</h3><h4 id=\"1-存储数据\"><a href=\"#1-存储数据\" class=\"headerlink\" title=\"1.存储数据\"></a>1.存储数据</h4><p>接口名：<br>fun.setData<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 存储的key</span></span><br><span class=\"line\">  <span class=\"attr\">value</span>: <span class=\"string\">&#x27;&#123;String&#125;&#125;&#x27;</span> <span class=\"comment\">// 存储的内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否存储成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">setData</span>(&#123;<span class=\"attr\">key</span>: <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"string\">&#x27;123&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">status</span> === <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;存储失败&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-读取数据\"><a href=\"#2-读取数据\" class=\"headerlink\" title=\"2.读取数据\"></a>2.读取数据</h4><p>接口名：<br>fun.getData<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: [<span class=\"string\">&quot;abc&quot;</span>, <span class=\"string\">&quot;123&quot;</span>] <span class=\"comment\">// 获取的key数组</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;abc&quot;</span>: <span class=\"string\">&quot;ds&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;123&quot;</span>: <span class=\"string\">&quot;qwqwq&quot;</span>  <span class=\"comment\">// 数据，单个元素类型可以是String,Number,JSONString</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">getData</span>(&#123;<span class=\"attr\">key</span>: [<span class=\"string\">&quot;abc&quot;</span>, <span class=\"string\">&quot;123&quot;</span>]&#125;&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;获取的数据为：&#x27;</span>, res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：如果获取不到数据则返回结果里data为空</p>\n<h4 id=\"3-复制到系统剪切板\"><a href=\"#3-复制到系统剪切板\" class=\"headerlink\" title=\"3.复制到系统剪切板\"></a>3.复制到系统剪切板</h4><p>接口名：<br>fun.copyToClipboard<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"string\">&#x27;abc123&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否复制成功  true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">copyToClipboard</span>(&#123;<span class=\"attr\">data</span>: <span class=\"string\">&#x27;abc123&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-读取系统剪切板内容\"><a href=\"#4-读取系统剪切板内容\" class=\"headerlink\" title=\"4.读取系统剪切板内容\"></a>4.读取系统剪切板内容</h4><p>接口名：<br>fun.getClipboard<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 剪切板数据，类型可以是String,Number,JSONString</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">getClipboard</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;获取的数据为：&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：如果获取不到数据则返回结果里data为空</p>\n<h3 id=\"五、webView相关\"><a href=\"#五、webView相关\" class=\"headerlink\" title=\"五、webView相关\"></a>五、webView相关</h3><h4 id=\"1-打开新窗口\"><a href=\"#1-打开新窗口\" class=\"headerlink\" title=\"1.打开新窗口\"></a>1.打开新窗口</h4><p>接口名：<br>fun.openWebview<br>传入参数：<br>(opt)<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 打开的链接</span></span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 设置窗口顶部title</span></span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 新webview打开还是当前</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：type 可选”new”和”cur”，指定是否需要新开webview，默认”cur”<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">open</span>(&#123;<span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.le.com&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;new&#x27;</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;乐视视频&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-窗口前进一页\"><a href=\"#2-窗口前进一页\" class=\"headerlink\" title=\"2.窗口前进一页\"></a>2.窗口前进一页</h4><p>接口名：<br>fun.WebviewForward<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 前进结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">forward</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：当webview里没有下一页的时候status返回false</p>\n<h4 id=\"3-窗口后退一页\"><a href=\"#3-窗口后退一页\" class=\"headerlink\" title=\"3.窗口后退一页\"></a>3.窗口后退一页</h4><p>接口名：<br>fun.WebviewBack<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 后退结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">back</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：当webview里没有上一页的时候status返回false</p>\n<h4 id=\"4-后退到指定url\"><a href=\"#4-后退到指定url\" class=\"headerlink\" title=\"4.后退到指定url\"></a>4.后退到指定url</h4><p>接口名：<br>fun.backToUrl<br>传入参数：<br>(opt, function(res){})<br>opt示例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>  <span class=\"comment\">// url</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">result</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">backToUrl</span>(&#123;<span class=\"string\">&quot;url&quot;</span>: <span class=\"string\">&quot;http://m.le.com/&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">result</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：<br>1.如果历史纪录里没有该url，则不做处理，回调函数返回false;<br>2.如果历史纪录里有且只有一个，则回退到指定url;<br>3.如果历史纪录里有多个指定的url，则回退到最外层的那个，即最开始打开的那个指定url</p>\n<h4 id=\"5-设置窗口属性\"><a href=\"#5-设置窗口属性\" class=\"headerlink\" title=\"5.设置窗口属性\"></a>5.设置窗口属性</h4><p>接口名：<br>fun.setWebview<br>传入参数：<br>(opt, function(res){})<br>opt示例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;乐必中&quot;</span>, <span class=\"comment\">// 窗口title</span></span><br><span class=\"line\">  <span class=\"string\">&quot;bg&quot;</span>: <span class=\"string\">&quot;150B3B&quot;</span>, <span class=\"comment\">// head背景颜色,不需要#</span></span><br><span class=\"line\">  <span class=\"string\">&quot;textColor&quot;</span>: <span class=\"string\">&quot;ffffff&quot;</span>, <span class=\"comment\">// 字体颜色,不需要#</span></span><br><span class=\"line\">  <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&quot;light&quot;</span>, <span class=\"comment\">// 当前主题：1.用于改变状态栏 2.如果没传backIcon，便于客户端选择本地默认的backIcon 3.如果没传closeIcon，便于客户端选择本地默认的closeIcon</span></span><br><span class=\"line\">  <span class=\"string\">&quot;backIcon&quot;</span>: <span class=\"string\">&quot;http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png&quot;</span>, <span class=\"comment\">// 返回按钮图片地址 http://i2.letvimg.com/lc07_img/201812/13/14/45/back_dark@3x.png</span></span><br><span class=\"line\">  <span class=\"string\">&quot;closeIcon&quot;</span>: <span class=\"string\">&quot;http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png&quot;</span> <span class=\"comment\">// 关闭按钮图片地址 http://i1.letvimg.com/lc07_img/201812/13/14/46/close_dark@3x.png</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 设置结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">set</span>(&#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;乐必中&quot;</span>, <span class=\"string\">&quot;bg&quot;</span>: <span class=\"string\">&quot;150B3B&quot;</span>, <span class=\"string\">&quot;textColor&quot;</span>: <span class=\"string\">&quot;ffffff&quot;</span>, <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&quot;light&quot;</span>, <span class=\"string\">&quot;backIcon&quot;</span>: <span class=\"string\">&quot;http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png&quot;</span>, <span class=\"string\">&quot;closeIcon&quot;</span>: <span class=\"string\">&quot;http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-注册返回按钮阻止事件\"><a href=\"#6-注册返回按钮阻止事件\" class=\"headerlink\" title=\"6.注册返回按钮阻止事件\"></a>6.注册返回按钮阻止事件</h4><p>– 需要在url中加参数 backInterrupt&#x3D;1<br>– 如果想定制化提示文案或者按钮文案，需要在url里加参数：interruptTitle, interruptCo, interruptYesText,interruptNoText<br>– 默认提示文案： “确认返回” “取消” “确定”<br>– url示例：<a href=\"http://lebz.le.com/?backInterrupt=1&amp;interruptTitle=%E5%A4%A7%E7%88%B7,%E4%B8%8D%E5%86%8D%E7%8E%A9%E4%BC%9A%E5%84%BF%E4%BA%86&amp;interruptCo=%E4%BB%A5%E5%90%8E%E5%B8%B8%E6%9D%A5%E5%95%8A&amp;interruptYesText=%E4%B8%8D%E7%8E%A9%E4%BA%86&amp;interruptNoText=%E6%BB%9A\">http://lebz.le.com/?backInterrupt=1&amp;interruptTitle=大爷,不再玩会儿了&amp;interruptCo=以后常来啊&amp;interruptYesText=不玩了&amp;interruptNoText=滚</a><br>接口名：<br>onBackInterrupt<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">result</span>: <span class=\"string\">&#x27;ok|cancel&#x27;</span>  <span class=\"comment\">// 点击了哪个按钮</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onBackInterrupt&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onBackInterrupt&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">result</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><del>#### 5.调起APP原生页面（不需要这个接口）</del><br><del>接口名：</del><br><del>fun.openNative</del><br><del>传入参数：</del><br><del>(opt)</del><br><del>opt示例如下：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// APP内页面地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">openNative</span>(&#123;<span class=\"attr\">url</span>: <span class=\"string\">&#x27;user_center&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p><del>说明：传入的url需要提前知道</del></p>\n<h3 id=\"六、弹框\"><a href=\"#六、弹框\" class=\"headerlink\" title=\"六、弹框\"></a>六、弹框</h3><h4 id=\"1-打开弹框\"><a href=\"#1-打开弹框\" class=\"headerlink\" title=\"1.打开弹框\"></a>1.打开弹框</h4><p>接口名：<br>fun.Alert<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 标题</span></span><br><span class=\"line\">  <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#123;String&#125;&#125;&#x27;</span>, <span class=\"comment\">// 内容</span></span><br><span class=\"line\">  <span class=\"attr\">buttons</span>: <span class=\"string\">&#x27;&#123;Array&#125;&#x27;</span> <span class=\"comment\">// 显示按钮的文字，最多两个，如：[&#x27;确定&#x27;] 或 [&#x27;Yes&#x27;] 或 [&#x27;是&#x27;,&#x27;否&#x27;]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">btn</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 用户点击的按钮  ok | cancel</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">alert</span>.<span class=\"title function_\">open</span>(&#123;<span class=\"attr\">title</span>: <span class=\"string\">&#x27;显示标题&#x27;</span>, <span class=\"attr\">content</span>: <span class=\"string\">&#x27;显示的内容&#x27;</span>, <span class=\"attr\">buttons</span>: [<span class=\"string\">&#x27;好的&#x27;</span>,<span class=\"string\">&#x27;取消&#x27;</span>]&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">btn</span> === <span class=\"string\">&#x27;cancel&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户点击了取消按钮&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户点击了确定按钮&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>说明：1.如果传入的参数中buttons只有一个，则默认显示”确认”按钮<br>     2.如果之前已有一个弹出框了，则覆盖之前的</p>\n<h4 id=\"2-toast\"><a href=\"#2-toast\" class=\"headerlink\" title=\"2.toast\"></a>2.toast</h4><p>接口名：<br>fun.Toast<br>传入参数：<br>(opt)<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">dur</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span>, <span class=\"comment\">// 显示时长,单位：毫秒,默认2000 如：2500</span></span><br><span class=\"line\">  <span class=\"attr\">pos</span>: &#123;<span class=\"title class_\">Number</span>&#125;,  <span class=\"comment\">// 显示位置， 0 | 1 （0:center,1:bottom）</span></span><br><span class=\"line\">  <span class=\"attr\">content</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 显示的内容，其中 \\n 为换行符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">alert</span>.<span class=\"title function_\">toast</span>(&#123;<span class=\"attr\">dur</span>: <span class=\"number\">3000</span>, <span class=\"attr\">pos</span>: <span class=\"number\">0</span>, <span class=\"attr\">content</span>: <span class=\"string\">&#x27;分享成功\\n获得20金币&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"七、分享\"><a href=\"#七、分享\" class=\"headerlink\" title=\"七、分享\"></a>七、分享</h3><h4 id=\"1-打开分享弹框\"><a href=\"#1-打开分享弹框\" class=\"headerlink\" title=\"1.打开分享弹框\"></a>1.打开分享弹框</h4><p>接口名：<br>fun.openShare<br>传入参数：<br>(opt, function(){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 分享状态码（200表示成功，400表示用户取消等，具体定义待确定）</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 用户点击的分享渠道 （一期共三种 wxTimeline | wxFriend | weibo）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">open</span>(&#123;</span><br><span class=\"line\">   <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">   <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">   <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">   <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接（乐视android版分享字段是url，ios版是link）</span></span><br><span class=\"line\">   <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">   <span class=\"attr\">bubbleTxt</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 气泡文案，如果不传或者传空，则不显示气泡</span></span><br><span class=\"line\">   <span class=\"attr\">shareIcon</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 分享图标地址，如果不传用默认的</span></span><br><span class=\"line\">   <span class=\"attr\">themes</span>: <span class=\"string\">&#x27;dark | light&#x27;</span> <span class=\"comment\">// 当前主题，便于客户端选择默认分享图标</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;分享渠道：&#x27;</span> + res.<span class=\"property\">channel</span> + <span class=\"string\">&#x27;;分享结果：&#x27;</span> + res.<span class=\"property\">code</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>说明：1.一期只支持三种渠道分享：微信朋友圈，微信好友，新浪微博<br>     2.此分享是页面里用户点击按钮后手动触发的分享，与 showMenuShare 不同</p>\n<h4 id=\"2-显示右上角分享按钮\"><a href=\"#2-显示右上角分享按钮\" class=\"headerlink\" title=\"2.显示右上角分享按钮\"></a>2.显示右上角分享按钮</h4><p>接口名：<br>fun.showMenuShare<br>传入参数：<br>(opt, function(){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">   <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">   <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">   <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接（乐视android版分享字段是url，ios版是link）</span></span><br><span class=\"line\">   <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">   <span class=\"attr\">bubbleTxt</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 气泡文案，如果不传或者传空，则不显示气泡</span></span><br><span class=\"line\">   <span class=\"attr\">shareIcon</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 分享图标地址，如果不传用默认的</span></span><br><span class=\"line\">   <span class=\"attr\">themes</span>: <span class=\"string\">&#x27;dark | light&#x27;</span> <span class=\"comment\">// 当前主题，便于客户端选择默认分享图标</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 调用结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">showMenuShare</span>(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;您还有1000金币待领取~手慢无！&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;desc&quot;</span>: <span class=\"string\">&quot;玩小游戏做任务，就能赚金币，赶紧戳☞&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;link&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;https://lebz.le.com/fruitShare.html&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;url&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;https://lebz.le.com/fruitShare.html&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;imgUrl&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;http://i0.letvimg.com/lc06_img/201804/26/18/26/wechatShare.png&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;bubbleTxt&quot;</span>: <span class=\"string\">&#x27;+20金币&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;shareIcon&quot;</span>: <span class=\"string\">&#x27;http://i0.letvimg.com/lc07_img/201812/13/14/47/share_light@3x.png&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&#x27;light&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-关闭右上角分享按钮\"><a href=\"#3-关闭右上角分享按钮\" class=\"headerlink\" title=\"3.关闭右上角分享按钮\"></a>3.关闭右上角分享按钮</h4><p>接口名：<br>fun.hideMenuShare<br>传入参数：<br>(function(){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 调用结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">hideMenuShare</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-注册右上角分享监听\"><a href=\"#4-注册右上角分享监听\" class=\"headerlink\" title=\"4.注册右上角分享监听\"></a>4.注册右上角分享监听</h4><p>接口名：<br>onMenuShare<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 分享状态码（200表示成功，400表示用户取消等，具体定义根据第三方APP给的错误码确定）</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 用户点击的分享渠道 （如 wxTimeline | wxFriend | weibo | wxShare）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onMenuShare&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onMenuShare&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><del>#### 2.分享（废弃）</del><br><del>接口名：</del><br><del>fun.callShare</del><br><del>传入参数：</del><br><del>(opt, function(res){})</del><br><del>opt示例如下：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">channelName</span>: <span class=\"string\">&#x27;wxFriend&#x27;</span>, <span class=\"comment\">//分享渠道：weibo|wxFriend|wxTimeline</span></span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 分享结果code，需具体定义，如：200表示分享成功，400表示用户取消分享等...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">callShare</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">channelName</span>: <span class=\"string\">&#x27;wxFriend&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;自定义分享标题&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;自定义分享内容&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;自定义分享链接&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;自定义分享图标&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;分享成功了，恭喜&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：传入的参数可能需要根据不同的渠道差异化</del></p>\n<h3 id=\"八、支付\"><a href=\"#八、支付\" class=\"headerlink\" title=\"八、支付\"></a>八、支付</h3><h4 id=\"1-调用支付\"><a href=\"#1-调用支付\" class=\"headerlink\" title=\"1.调用支付\"></a>1.调用支付</h4><p>接口名：<br>fun.pay<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">goodsId</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 商品id</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 支付渠道 weixin | alipay | thirdWeixin | thirdAlipay        applepay(for ios)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 支付结果code,需具体定义，如：200表示支付成功，400表示用户取消支付，401表示传入的金额与订单实际金额不符等...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pay</span>.<span class=\"title function_\">payOrder</span>(&#123;<span class=\"attr\">goodsId</span>: <span class=\"string\">&#x27;abcd1234&#x27;</span>, <span class=\"attr\">channel</span>: <span class=\"string\">&#x27;weixin&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;支付成功&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">400</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户取消支付&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    其他情况需具体定义</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"九、缓存\"><a href=\"#九、缓存\" class=\"headerlink\" title=\"九、缓存\"></a>九、缓存</h3><h4 id=\"1-更新缓存\"><a href=\"#1-更新缓存\" class=\"headerlink\" title=\"1.更新缓存\"></a>1.更新缓存</h4><p>接口名：<br>fun.updateCache<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 是否更新成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">cache</span>.<span class=\"title function_\">updateCache</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十、日期、时间选择\"><a href=\"#十、日期、时间选择\" class=\"headerlink\" title=\"十、日期、时间选择\"></a>十、日期、时间选择</h3><h4 id=\"1-日历选择\"><a href=\"#1-日历选择\" class=\"headerlink\" title=\"1.日历选择\"></a>1.日历选择</h4><p>接口名：<br>fun.selectDate<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;minDate&quot;</span>: <span class=\"string\">&quot;2016-01-03&quot;</span>, <span class=\"comment\">// 结束日期，当type为&quot;time&quot;时不需要</span></span><br><span class=\"line\">  <span class=\"string\">&quot;maxDate&quot;</span>: <span class=\"string\">&quot;2019-11-12&quot;</span>, <span class=\"comment\">// 开始日期，当type为&quot;time&quot;时不需要</span></span><br><span class=\"line\">  <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;date&quot;</span> <span class=\"comment\">// 可选 date | time | ym  ==&gt;  日期 | 时间 | 年月</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 选择的时间（如&quot;2018-02-23&quot;、&quot;2018-02&quot;、&quot;17:23&quot;），如果用户点取消不会进入该回调</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">calendar</span>.<span class=\"title function_\">select</span>(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;minDate&quot;</span>: <span class=\"string\">&quot;2016-01-03&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;maxDate&quot;</span>: <span class=\"string\">&quot;2019-11-12&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;date&quot;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">value</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十一、第三方原生APP相关\"><a href=\"#十一、第三方原生APP相关\" class=\"headerlink\" title=\"十一、第三方原生APP相关\"></a>十一、第三方原生APP相关</h3><h4 id=\"1-打开商品详情页\"><a href=\"#1-打开商品详情页\" class=\"headerlink\" title=\"1.打开商品详情页\"></a>1.打开商品详情页</h4><p>接口名：<br>fun.openDetail<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;channel&quot;</span>: <span class=\"string\">&quot;tmall&quot;</span>, <span class=\"comment\">// tmall | jd | taobao</span></span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">212123</span>   <span class=\"comment\">// 商品id</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">native</span>.<span class=\"title function_\">openDetail</span>(&#123;<span class=\"string\">&quot;channel&quot;</span>: <span class=\"string\">&quot;taobao&quot;</span>, <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">1213121</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十二、pomelo（仅供安卓4-4以下）\"><a href=\"#十二、pomelo（仅供安卓4-4以下）\" class=\"headerlink\" title=\"十二、pomelo（仅供安卓4.4以下）\"></a>十二、pomelo（仅供安卓4.4以下）</h3><h4 id=\"1-init\"><a href=\"#1-init\" class=\"headerlink\" title=\"1.init\"></a>1.init</h4><p>接口名：<br>fun.initPomelo<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&#x27;x.x.x.x&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;port&quot;</span>: <span class=\"string\">&#x27;xxxx&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;host&quot;</span>:<span class=\"string\">&quot;lebzs.le.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;port&quot;</span>:<span class=\"number\">9014</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>:&#123;<span class=\"string\">&quot;uid&quot;</span>:<span class=\"string\">&quot;10002&quot;</span>,<span class=\"string\">&quot;nickname&quot;</span>:<span class=\"string\">&quot;乐必中_10002&quot;</span>,<span class=\"string\">&quot;picture&quot;</span>:<span class=\"string\">&quot;https://i3.letvimg.com/lc06_user/201605/09/15/04/1923203311462777446_50_50.jpg&quot;</span>,<span class=\"string\">&quot;balance&quot;</span>:<span class=\"string\">&quot;23800&quot;</span>&#125;</span><br><span class=\"line\">  &#125;, <span class=\"keyword\">function</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-request\"><a href=\"#2-request\" class=\"headerlink\" title=\"2.request\"></a>2.request</h4><p>接口名：<br>fun.requestPomelo<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">request</span>(<span class=\"string\">&quot;fruit.fruitHandler.select&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;fruit&quot;</span>:&#123;<span class=\"string\">&quot;id&quot;</span>:<span class=\"number\">4</span>,<span class=\"string\">&quot;key&quot;</span>:<span class=\"string\">&quot;banana4&quot;</span>,<span class=\"string\">&quot;image&quot;</span>:<span class=\"string\">&quot;//i3.letvimg.com/lc03_img/201803/01/10/23/1022/fruits04.png&quot;</span>,<span class=\"string\">&quot;title&quot;</span>:<span class=\"string\">&quot;雪梨&quot;</span>,<span class=\"string\">&quot;order&quot;</span>:<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">   &#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-disconnect\"><a href=\"#3-disconnect\" class=\"headerlink\" title=\"3.disconnect\"></a>3.disconnect</h4><p>接口名：<br>fun.disconnectPomelo<br>传入参数：<br>()<br>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">disconnect</span>();</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-监听pomelo\"><a href=\"#4-监听pomelo\" class=\"headerlink\" title=\"4.监听pomelo\"></a>4.监听pomelo</h4><p>接口名：<br>core.onPomeloEvent<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 自定义的监听类型，如： onResult , onSelect ...</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;&#125;  <span class=\"comment\">// 回调的数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onPomeloEvent&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onPomeloEvent&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;onResult&#x27;</span> === res.<span class=\"property\">type</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onResult&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;onSelect&#x27;</span> === res.<span class=\"property\">type</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onSelect&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>()&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>目前能想到的接口文档大致如此，做的过程中会有删改</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>lbz客户端与H5交互sdk定义文档</p>","more":"<h3 id=\"一、APP相关\"><a href=\"#一、APP相关\" class=\"headerlink\" title=\"一、APP相关\"></a>一、APP相关</h3><h4 id=\"1-是否是APP环境\"><a href=\"#1-是否是APP环境\" class=\"headerlink\" title=\"1.是否是APP环境\"></a>1.是否是APP环境</h4><p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> env = <span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"property\">isAppEnv</span>; <span class=\"comment\">// true | false</span></span><br></pre></td></tr></table></figure>\n<p>说明：此方法不需要客户端提供接口</p>\n<h4 id=\"2-获取APP信息\"><a href=\"#2-获取APP信息\" class=\"headerlink\" title=\"2.获取APP信息\"></a>2.获取APP信息</h4><p>接口名：<br>core.getAppInfo<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 应用名称,如:AiQiYi,Letv</span></span><br><span class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 应用对应的key，如：key123</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：回调字段可能有修改</p>\n<h4 id=\"3-是否安装某个应用\"><a href=\"#3-是否安装某个应用\" class=\"headerlink\" title=\"3.是否安装某个应用\"></a>3.是否安装某个应用</h4><p>接口名：<br>core.hasInstalled<br>传入参数：<br>(opt, function(info){})<br>opt参数示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;weixin&quot;</span> <span class=\"comment\">// weixin | alipay | ... 需要判断的应用名(1.ios支持判断哪些应用依赖于第三方宿主APP支持；2.安卓目前支持主流应用 - weixin | alipay | mqq | youku | taobao | weibo | mqzone | openapp.jdmobile | letvclient | tmall | qiyi-iphone)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 是否已安装  true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">app</span>.<span class=\"title function_\">hasInstalled</span>(&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;weixin&#x27;</span>&#125;,<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-监听app退出到后台\"><a href=\"#4-监听app退出到后台\" class=\"headerlink\" title=\"4.监听app退出到后台\"></a>4.监听app退出到后台</h4><p>接口名：<br>core.onPause<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onPause&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onPause&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onPause&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-监听app从后台回显\"><a href=\"#5-监听app从后台回显\" class=\"headerlink\" title=\"5.监听app从后台回显\"></a>5.监听app从后台回显</h4><p>接口名：<br>core.onResume<br>传入参数：<br>(function(){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onResume&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onResume&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onResume&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、获取设备信息，网络状态\"><a href=\"#二、获取设备信息，网络状态\" class=\"headerlink\" title=\"二、获取设备信息，网络状态\"></a>二、获取设备信息，网络状态</h3><h4 id=\"1-获取设备信息\"><a href=\"#1-获取设备信息\" class=\"headerlink\" title=\"1.获取设备信息\"></a>1.获取设备信息</h4><p>接口名：<br>core.getDeviceInfo<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">deviceId</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 设备唯一标示符</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>,  <span class=\"comment\">// 设备名称 XiaoMi、Iphone</span></span><br><span class=\"line\">  <span class=\"attr\">version</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 系统版本 10.2</span></span><br><span class=\"line\">  <span class=\"attr\">screen</span>: &#123; <span class=\"comment\">// 屏幕分辨率</span></span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span>, <span class=\"comment\">// 宽</span></span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span> <span class=\"comment\">// 高</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">deviceId</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-获取电量\"><a href=\"#2-获取电量\" class=\"headerlink\" title=\"2.获取电量\"></a>2.获取电量</h4><p>接口名：<br>core.getPowerLevel<br>传入参数：<br>(function(power){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">level</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 当前电量0-100</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getPower</span>(<span class=\"keyword\">function</span>(<span class=\"params\">power</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(power.<span class=\"property\">level</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取设备存储空间\"><a href=\"#3-获取设备存储空间\" class=\"headerlink\" title=\"3.获取设备存储空间\"></a>3.获取设备存储空间</h4><p>接口名：<br>core.getSpaceSize<br>传入参数：<br>(function(size){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">spaceSize</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 字节 剩余存储空间大小</span></span><br><span class=\"line\">  <span class=\"attr\">totalSize</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 字节 总存储空间大小</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">getSpaceSize</span>(<span class=\"keyword\">function</span>(<span class=\"params\">size</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(size.<span class=\"property\">spaceSize</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 4.监听屏幕旋转（不需要这个接口）</del><br><del>接口名：</del><br><del>core.onOrientationChange</del><br><del>传入参数：</del><br><del>(function(net){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">orientation</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 当前屏幕方向 landscape | portrait</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onOrientationChange&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onOrientationChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">orientation</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-设置屏幕方向\"><a href=\"#5-设置屏幕方向\" class=\"headerlink\" title=\"5.设置屏幕方向\"></a>5.设置屏幕方向</h4><p>接口名：<br>core.setOrientation<br>传入参数：<br>(opt, function(net){})<br>opt参数示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;orientation&quot;</span>: <span class=\"string\">&quot;landscape&quot;</span> <span class=\"comment\">// 屏幕方向 landscape | portrait</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// true | false 是否设置成功</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">device</span>.<span class=\"title function_\">setOrientation</span>(&#123;<span class=\"string\">&quot;orientation&quot;</span>: <span class=\"string\">&quot;landscape&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-获取网络\"><a href=\"#6-获取网络\" class=\"headerlink\" title=\"6.获取网络\"></a>6.获取网络</h4><p>接口名：<br>core.getNetwork<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>,   <span class=\"comment\">// 2G|3G|4G|wifi|unknown|none 当前网络类型</span></span><br><span class=\"line\">  <span class=\"attr\">operator</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>  <span class=\"comment\">// CUCC（中国联通）|CMCC（中国移动）|CTCC（中国电信） 通信运营商</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">net</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(net.<span class=\"property\">type</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-监听网络\"><a href=\"#7-监听网络\" class=\"headerlink\" title=\"7.监听网络\"></a>7.监听网络</h4><p>接口名：<br>onNetworkChange<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">now</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">//2G|3G|4G|wifi|unknown|none 当前网络类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onNetworkChange&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onNetworkChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">net</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(net.<span class=\"property\">now</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"三、登陆和用户\"><a href=\"#三、登陆和用户\" class=\"headerlink\" title=\"三、登陆和用户\"></a>三、登陆和用户</h3><h4 id=\"1-获取登陆信息\"><a href=\"#1-获取登陆信息\" class=\"headerlink\" title=\"1.获取登陆信息\"></a>1.获取登陆信息</h4><p>接口名：<br>fun.isLogin<br>传入参数：<br>(function(flag){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">login</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否登陆 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">isLogin</span>(<span class=\"keyword\">function</span>(<span class=\"params\">flag</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(flag);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 2.获取用户信息（废弃，H5页面上直接调用接口获取用户信息）</del><br><del>接口名：</del><br><del>fun.getUserInfo</del><br><del>传入参数：</del><br><del>(function(info){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">  <span class=\"attr\">nickname</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">  <span class=\"attr\">uid</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// uid</span></span><br><span class=\"line\">  <span class=\"attr\">img</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户头像</span></span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 用户状态：0:正常 1:已禁用 ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">getInfo</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：如果获取不到用户信息则返回为空{}</del></p>\n<h4 id=\"3-登陆\"><a href=\"#3-登陆\" class=\"headerlink\" title=\"3.登陆\"></a>3.登陆</h4><p>接口名：<br>fun.userLogin<br>传入参数：<br>(function(info){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">res</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// true | false 是否登陆成功</span></span><br><span class=\"line\">  <span class=\"attr\">errCode</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 客户端拿token去乐必中后端换ticket时返回的错误码，如10108：用户被封禁  注：res为true的时候errCode为200</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">login</span>(<span class=\"keyword\">function</span>(<span class=\"params\">info</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info.<span class=\"property\">res</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-重新授权（H5用参数必传，且为web）\"><a href=\"#4-重新授权（H5用参数必传，且为web）\" class=\"headerlink\" title=\"4.重新授权（H5用参数必传，且为web）\"></a>4.重新授权（H5用参数必传，且为web）</h4><p>接口名：<br>fun.reGrant<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">source</span>: <span class=\"string\">&#x27;web&#x27;</span> <span class=\"comment\">// 固定为 web，为了区分来自H5还是APP里面的</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// true | false 是否成功</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">reGrant</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：1.在入口处如果授权失败，会进入授权失败页面（APP内置），点击页面空白处会调用该方法去重新走授权流程。当重新授权成功后，跳转到目标页。<br>     2.用户未登陆状况下进入页面，然后页面上调起用户登陆接口，如果此时登陆授权失败，则需要跳转到H5的授权失败页面。该方法在H5授权失败页调用。</p>\n<p><del>#### 5.登出（废弃）</del><br><del>接口名：</del><br><del>fun.userLogout</del><br><del>传入参数：</del><br><del>(function(res){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span> <span class=\"comment\">// 是否登出成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">logout</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>#### 6.监听登陆状态改变（废弃）</del><br><del>接口名：</del><br><del>fun.onLoginChange</del><br><del>传入参数：</del><br><del>(function(res){})</del><br><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">action</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 动作名称（login | logout）</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">  <span class=\"attr\">nickname</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">  <span class=\"attr\">uid</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// uid</span></span><br><span class=\"line\">  <span class=\"attr\">img</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 用户头像</span></span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 用户状态：0:正常 1:已禁用 ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">user</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onLoginChange&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">action</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：当action是logout时，其他字段为空</del></p>\n<h3 id=\"四、客户端存取数据\"><a href=\"#四、客户端存取数据\" class=\"headerlink\" title=\"四、客户端存取数据\"></a>四、客户端存取数据</h3><h4 id=\"1-存储数据\"><a href=\"#1-存储数据\" class=\"headerlink\" title=\"1.存储数据\"></a>1.存储数据</h4><p>接口名：<br>fun.setData<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 存储的key</span></span><br><span class=\"line\">  <span class=\"attr\">value</span>: <span class=\"string\">&#x27;&#123;String&#125;&#125;&#x27;</span> <span class=\"comment\">// 存储的内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否存储成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">setData</span>(&#123;<span class=\"attr\">key</span>: <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"string\">&#x27;123&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">status</span> === <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;存储失败&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-读取数据\"><a href=\"#2-读取数据\" class=\"headerlink\" title=\"2.读取数据\"></a>2.读取数据</h4><p>接口名：<br>fun.getData<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: [<span class=\"string\">&quot;abc&quot;</span>, <span class=\"string\">&quot;123&quot;</span>] <span class=\"comment\">// 获取的key数组</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;abc&quot;</span>: <span class=\"string\">&quot;ds&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;123&quot;</span>: <span class=\"string\">&quot;qwqwq&quot;</span>  <span class=\"comment\">// 数据，单个元素类型可以是String,Number,JSONString</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">getData</span>(&#123;<span class=\"attr\">key</span>: [<span class=\"string\">&quot;abc&quot;</span>, <span class=\"string\">&quot;123&quot;</span>]&#125;&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;获取的数据为：&#x27;</span>, res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：如果获取不到数据则返回结果里data为空</p>\n<h4 id=\"3-复制到系统剪切板\"><a href=\"#3-复制到系统剪切板\" class=\"headerlink\" title=\"3.复制到系统剪切板\"></a>3.复制到系统剪切板</h4><p>接口名：<br>fun.copyToClipboard<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"string\">&#x27;abc123&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否复制成功  true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">copyToClipboard</span>(&#123;<span class=\"attr\">data</span>: <span class=\"string\">&#x27;abc123&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-读取系统剪切板内容\"><a href=\"#4-读取系统剪切板内容\" class=\"headerlink\" title=\"4.读取系统剪切板内容\"></a>4.读取系统剪切板内容</h4><p>接口名：<br>fun.getClipboard<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 剪切板数据，类型可以是String,Number,JSONString</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">data</span>.<span class=\"title function_\">getClipboard</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;获取的数据为：&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：如果获取不到数据则返回结果里data为空</p>\n<h3 id=\"五、webView相关\"><a href=\"#五、webView相关\" class=\"headerlink\" title=\"五、webView相关\"></a>五、webView相关</h3><h4 id=\"1-打开新窗口\"><a href=\"#1-打开新窗口\" class=\"headerlink\" title=\"1.打开新窗口\"></a>1.打开新窗口</h4><p>接口名：<br>fun.openWebview<br>传入参数：<br>(opt)<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 打开的链接</span></span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 设置窗口顶部title</span></span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 新webview打开还是当前</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：type 可选”new”和”cur”，指定是否需要新开webview，默认”cur”<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">open</span>(&#123;<span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.le.com&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;new&#x27;</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;乐视视频&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-窗口前进一页\"><a href=\"#2-窗口前进一页\" class=\"headerlink\" title=\"2.窗口前进一页\"></a>2.窗口前进一页</h4><p>接口名：<br>fun.WebviewForward<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 前进结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">forward</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：当webview里没有下一页的时候status返回false</p>\n<h4 id=\"3-窗口后退一页\"><a href=\"#3-窗口后退一页\" class=\"headerlink\" title=\"3.窗口后退一页\"></a>3.窗口后退一页</h4><p>接口名：<br>fun.WebviewBack<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 后退结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">back</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：当webview里没有上一页的时候status返回false</p>\n<h4 id=\"4-后退到指定url\"><a href=\"#4-后退到指定url\" class=\"headerlink\" title=\"4.后退到指定url\"></a>4.后退到指定url</h4><p>接口名：<br>fun.backToUrl<br>传入参数：<br>(opt, function(res){})<br>opt示例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>  <span class=\"comment\">// url</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">result</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">backToUrl</span>(&#123;<span class=\"string\">&quot;url&quot;</span>: <span class=\"string\">&quot;http://m.le.com/&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">result</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>说明：<br>1.如果历史纪录里没有该url，则不做处理，回调函数返回false;<br>2.如果历史纪录里有且只有一个，则回退到指定url;<br>3.如果历史纪录里有多个指定的url，则回退到最外层的那个，即最开始打开的那个指定url</p>\n<h4 id=\"5-设置窗口属性\"><a href=\"#5-设置窗口属性\" class=\"headerlink\" title=\"5.设置窗口属性\"></a>5.设置窗口属性</h4><p>接口名：<br>fun.setWebview<br>传入参数：<br>(opt, function(res){})<br>opt示例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;乐必中&quot;</span>, <span class=\"comment\">// 窗口title</span></span><br><span class=\"line\">  <span class=\"string\">&quot;bg&quot;</span>: <span class=\"string\">&quot;150B3B&quot;</span>, <span class=\"comment\">// head背景颜色,不需要#</span></span><br><span class=\"line\">  <span class=\"string\">&quot;textColor&quot;</span>: <span class=\"string\">&quot;ffffff&quot;</span>, <span class=\"comment\">// 字体颜色,不需要#</span></span><br><span class=\"line\">  <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&quot;light&quot;</span>, <span class=\"comment\">// 当前主题：1.用于改变状态栏 2.如果没传backIcon，便于客户端选择本地默认的backIcon 3.如果没传closeIcon，便于客户端选择本地默认的closeIcon</span></span><br><span class=\"line\">  <span class=\"string\">&quot;backIcon&quot;</span>: <span class=\"string\">&quot;http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png&quot;</span>, <span class=\"comment\">// 返回按钮图片地址 http://i2.letvimg.com/lc07_img/201812/13/14/45/back_dark@3x.png</span></span><br><span class=\"line\">  <span class=\"string\">&quot;closeIcon&quot;</span>: <span class=\"string\">&quot;http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png&quot;</span> <span class=\"comment\">// 关闭按钮图片地址 http://i1.letvimg.com/lc07_img/201812/13/14/46/close_dark@3x.png</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#123;Boolean&#125;&#x27;</span>, <span class=\"comment\">// 设置结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">set</span>(&#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;乐必中&quot;</span>, <span class=\"string\">&quot;bg&quot;</span>: <span class=\"string\">&quot;150B3B&quot;</span>, <span class=\"string\">&quot;textColor&quot;</span>: <span class=\"string\">&quot;ffffff&quot;</span>, <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&quot;light&quot;</span>, <span class=\"string\">&quot;backIcon&quot;</span>: <span class=\"string\">&quot;http://i2.letvimg.com/lc07_img/201812/13/14/46/back_light@3x.png&quot;</span>, <span class=\"string\">&quot;closeIcon&quot;</span>: <span class=\"string\">&quot;http://i0.letvimg.com/lc07_img/201812/13/14/46/close_light@3x.png&quot;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-注册返回按钮阻止事件\"><a href=\"#6-注册返回按钮阻止事件\" class=\"headerlink\" title=\"6.注册返回按钮阻止事件\"></a>6.注册返回按钮阻止事件</h4><p>– 需要在url中加参数 backInterrupt&#x3D;1<br>– 如果想定制化提示文案或者按钮文案，需要在url里加参数：interruptTitle, interruptCo, interruptYesText,interruptNoText<br>– 默认提示文案： “确认返回” “取消” “确定”<br>– url示例：<a href=\"http://lebz.le.com/?backInterrupt=1&amp;interruptTitle=%E5%A4%A7%E7%88%B7,%E4%B8%8D%E5%86%8D%E7%8E%A9%E4%BC%9A%E5%84%BF%E4%BA%86&amp;interruptCo=%E4%BB%A5%E5%90%8E%E5%B8%B8%E6%9D%A5%E5%95%8A&amp;interruptYesText=%E4%B8%8D%E7%8E%A9%E4%BA%86&amp;interruptNoText=%E6%BB%9A\">http://lebz.le.com/?backInterrupt=1&amp;interruptTitle=大爷,不再玩会儿了&amp;interruptCo=以后常来啊&amp;interruptYesText=不玩了&amp;interruptNoText=滚</a><br>接口名：<br>onBackInterrupt<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">result</span>: <span class=\"string\">&#x27;ok|cancel&#x27;</span>  <span class=\"comment\">// 点击了哪个按钮</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onBackInterrupt&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">network</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onBackInterrupt&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">result</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><del>#### 5.调起APP原生页面（不需要这个接口）</del><br><del>接口名：</del><br><del>fun.openNative</del><br><del>传入参数：</del><br><del>(opt)</del><br><del>opt示例如下：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// APP内页面地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">win</span>.<span class=\"title function_\">openNative</span>(&#123;<span class=\"attr\">url</span>: <span class=\"string\">&#x27;user_center&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p><del>说明：传入的url需要提前知道</del></p>\n<h3 id=\"六、弹框\"><a href=\"#六、弹框\" class=\"headerlink\" title=\"六、弹框\"></a>六、弹框</h3><h4 id=\"1-打开弹框\"><a href=\"#1-打开弹框\" class=\"headerlink\" title=\"1.打开弹框\"></a>1.打开弹框</h4><p>接口名：<br>fun.Alert<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 标题</span></span><br><span class=\"line\">  <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#123;String&#125;&#125;&#x27;</span>, <span class=\"comment\">// 内容</span></span><br><span class=\"line\">  <span class=\"attr\">buttons</span>: <span class=\"string\">&#x27;&#123;Array&#125;&#x27;</span> <span class=\"comment\">// 显示按钮的文字，最多两个，如：[&#x27;确定&#x27;] 或 [&#x27;Yes&#x27;] 或 [&#x27;是&#x27;,&#x27;否&#x27;]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">btn</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 用户点击的按钮  ok | cancel</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">alert</span>.<span class=\"title function_\">open</span>(&#123;<span class=\"attr\">title</span>: <span class=\"string\">&#x27;显示标题&#x27;</span>, <span class=\"attr\">content</span>: <span class=\"string\">&#x27;显示的内容&#x27;</span>, <span class=\"attr\">buttons</span>: [<span class=\"string\">&#x27;好的&#x27;</span>,<span class=\"string\">&#x27;取消&#x27;</span>]&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">btn</span> === <span class=\"string\">&#x27;cancel&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户点击了取消按钮&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户点击了确定按钮&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>说明：1.如果传入的参数中buttons只有一个，则默认显示”确认”按钮<br>     2.如果之前已有一个弹出框了，则覆盖之前的</p>\n<h4 id=\"2-toast\"><a href=\"#2-toast\" class=\"headerlink\" title=\"2.toast\"></a>2.toast</h4><p>接口名：<br>fun.Toast<br>传入参数：<br>(opt)<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">dur</span>: <span class=\"string\">&#x27;&#123;Number&#125;&#x27;</span>, <span class=\"comment\">// 显示时长,单位：毫秒,默认2000 如：2500</span></span><br><span class=\"line\">  <span class=\"attr\">pos</span>: &#123;<span class=\"title class_\">Number</span>&#125;,  <span class=\"comment\">// 显示位置， 0 | 1 （0:center,1:bottom）</span></span><br><span class=\"line\">  <span class=\"attr\">content</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 显示的内容，其中 \\n 为换行符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无回调</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">alert</span>.<span class=\"title function_\">toast</span>(&#123;<span class=\"attr\">dur</span>: <span class=\"number\">3000</span>, <span class=\"attr\">pos</span>: <span class=\"number\">0</span>, <span class=\"attr\">content</span>: <span class=\"string\">&#x27;分享成功\\n获得20金币&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"七、分享\"><a href=\"#七、分享\" class=\"headerlink\" title=\"七、分享\"></a>七、分享</h3><h4 id=\"1-打开分享弹框\"><a href=\"#1-打开分享弹框\" class=\"headerlink\" title=\"1.打开分享弹框\"></a>1.打开分享弹框</h4><p>接口名：<br>fun.openShare<br>传入参数：<br>(opt, function(){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 分享状态码（200表示成功，400表示用户取消等，具体定义待确定）</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 用户点击的分享渠道 （一期共三种 wxTimeline | wxFriend | weibo）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">open</span>(&#123;</span><br><span class=\"line\">   <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">   <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">   <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">   <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接（乐视android版分享字段是url，ios版是link）</span></span><br><span class=\"line\">   <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">   <span class=\"attr\">bubbleTxt</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 气泡文案，如果不传或者传空，则不显示气泡</span></span><br><span class=\"line\">   <span class=\"attr\">shareIcon</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 分享图标地址，如果不传用默认的</span></span><br><span class=\"line\">   <span class=\"attr\">themes</span>: <span class=\"string\">&#x27;dark | light&#x27;</span> <span class=\"comment\">// 当前主题，便于客户端选择默认分享图标</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;分享渠道：&#x27;</span> + res.<span class=\"property\">channel</span> + <span class=\"string\">&#x27;;分享结果：&#x27;</span> + res.<span class=\"property\">code</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>说明：1.一期只支持三种渠道分享：微信朋友圈，微信好友，新浪微博<br>     2.此分享是页面里用户点击按钮后手动触发的分享，与 showMenuShare 不同</p>\n<h4 id=\"2-显示右上角分享按钮\"><a href=\"#2-显示右上角分享按钮\" class=\"headerlink\" title=\"2.显示右上角分享按钮\"></a>2.显示右上角分享按钮</h4><p>接口名：<br>fun.showMenuShare<br>传入参数：<br>(opt, function(){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">   <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">   <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">   <span class=\"attr\">url</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接（乐视android版分享字段是url，ios版是link）</span></span><br><span class=\"line\">   <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">   <span class=\"attr\">bubbleTxt</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 气泡文案，如果不传或者传空，则不显示气泡</span></span><br><span class=\"line\">   <span class=\"attr\">shareIcon</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 分享图标地址，如果不传用默认的</span></span><br><span class=\"line\">   <span class=\"attr\">themes</span>: <span class=\"string\">&#x27;dark | light&#x27;</span> <span class=\"comment\">// 当前主题，便于客户端选择默认分享图标</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 调用结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">showMenuShare</span>(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;您还有1000金币待领取~手慢无！&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;desc&quot;</span>: <span class=\"string\">&quot;玩小游戏做任务，就能赚金币，赶紧戳☞&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;link&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;https://lebz.le.com/fruitShare.html&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;url&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;https://lebz.le.com/fruitShare.html&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;imgUrl&quot;</span>: <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;http://i0.letvimg.com/lc06_img/201804/26/18/26/wechatShare.png&quot;</span>),</span><br><span class=\"line\">  <span class=\"string\">&quot;bubbleTxt&quot;</span>: <span class=\"string\">&#x27;+20金币&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;shareIcon&quot;</span>: <span class=\"string\">&#x27;http://i0.letvimg.com/lc07_img/201812/13/14/47/share_light@3x.png&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;themes&quot;</span>: <span class=\"string\">&#x27;light&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-关闭右上角分享按钮\"><a href=\"#3-关闭右上角分享按钮\" class=\"headerlink\" title=\"3.关闭右上角分享按钮\"></a>3.关闭右上角分享按钮</h4><p>接口名：<br>fun.hideMenuShare<br>传入参数：<br>(function(){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 调用结果 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">hideMenuShare</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-注册右上角分享监听\"><a href=\"#4-注册右上角分享监听\" class=\"headerlink\" title=\"4.注册右上角分享监听\"></a>4.注册右上角分享监听</h4><p>接口名：<br>onMenuShare<br>传入参数：<br>(function(net){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125;, <span class=\"comment\">// 分享状态码（200表示成功，400表示用户取消等，具体定义根据第三方APP给的错误码确定）</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 用户点击的分享渠道 （如 wxTimeline | wxFriend | weibo | wxShare）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onMenuShare&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onMenuShare&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><del>#### 2.分享（废弃）</del><br><del>接口名：</del><br><del>fun.callShare</del><br><del>传入参数：</del><br><del>(opt, function(res){})</del><br><del>opt示例如下：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">channelName</span>: <span class=\"string\">&#x27;wxFriend&#x27;</span>, <span class=\"comment\">//分享渠道：weibo|wxFriend|wxTimeline</span></span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享标题</span></span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享内容</span></span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享链接</span></span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 自定义分享图标</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>回调示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 分享结果code，需具体定义，如：200表示分享成功，400表示用户取消分享等...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><del>H5调用示例：</del></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">share</span>.<span class=\"title function_\">callShare</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">channelName</span>: <span class=\"string\">&#x27;wxFriend&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;自定义分享标题&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;自定义分享内容&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">link</span>: <span class=\"string\">&#x27;自定义分享链接&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">imgUrl</span>: <span class=\"string\">&#x27;自定义分享图标&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;分享成功了，恭喜&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><del>说明：传入的参数可能需要根据不同的渠道差异化</del></p>\n<h3 id=\"八、支付\"><a href=\"#八、支付\" class=\"headerlink\" title=\"八、支付\"></a>八、支付</h3><h4 id=\"1-调用支付\"><a href=\"#1-调用支付\" class=\"headerlink\" title=\"1.调用支付\"></a>1.调用支付</h4><p>接口名：<br>fun.pay<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">goodsId</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 商品id</span></span><br><span class=\"line\">  <span class=\"attr\">channel</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span> <span class=\"comment\">// 支付渠道 weixin | alipay | thirdWeixin | thirdAlipay        applepay(for ios)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">code</span>: &#123;<span class=\"title class_\">Number</span>&#125; <span class=\"comment\">// 支付结果code,需具体定义，如：200表示支付成功，400表示用户取消支付，401表示传入的金额与订单实际金额不符等...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pay</span>.<span class=\"title function_\">payOrder</span>(&#123;<span class=\"attr\">goodsId</span>: <span class=\"string\">&#x27;abcd1234&#x27;</span>, <span class=\"attr\">channel</span>: <span class=\"string\">&#x27;weixin&#x27;</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;支付成功&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(res.<span class=\"property\">code</span> === <span class=\"number\">400</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;用户取消支付&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    其他情况需具体定义</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"九、缓存\"><a href=\"#九、缓存\" class=\"headerlink\" title=\"九、缓存\"></a>九、缓存</h3><h4 id=\"1-更新缓存\"><a href=\"#1-更新缓存\" class=\"headerlink\" title=\"1.更新缓存\"></a>1.更新缓存</h4><p>接口名：<br>fun.updateCache<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// 是否更新成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">cache</span>.<span class=\"title function_\">updateCache</span>(<span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">status</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十、日期、时间选择\"><a href=\"#十、日期、时间选择\" class=\"headerlink\" title=\"十、日期、时间选择\"></a>十、日期、时间选择</h3><h4 id=\"1-日历选择\"><a href=\"#1-日历选择\" class=\"headerlink\" title=\"1.日历选择\"></a>1.日历选择</h4><p>接口名：<br>fun.selectDate<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;minDate&quot;</span>: <span class=\"string\">&quot;2016-01-03&quot;</span>, <span class=\"comment\">// 结束日期，当type为&quot;time&quot;时不需要</span></span><br><span class=\"line\">  <span class=\"string\">&quot;maxDate&quot;</span>: <span class=\"string\">&quot;2019-11-12&quot;</span>, <span class=\"comment\">// 开始日期，当type为&quot;time&quot;时不需要</span></span><br><span class=\"line\">  <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;date&quot;</span> <span class=\"comment\">// 可选 date | time | ym  ==&gt;  日期 | 时间 | 年月</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: &#123;<span class=\"title class_\">String</span>&#125; <span class=\"comment\">// 选择的时间（如&quot;2018-02-23&quot;、&quot;2018-02&quot;、&quot;17:23&quot;），如果用户点取消不会进入该回调</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">calendar</span>.<span class=\"title function_\">select</span>(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;minDate&quot;</span>: <span class=\"string\">&quot;2016-01-03&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;maxDate&quot;</span>: <span class=\"string\">&quot;2019-11-12&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;date&quot;</span></span><br><span class=\"line\">&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">value</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十一、第三方原生APP相关\"><a href=\"#十一、第三方原生APP相关\" class=\"headerlink\" title=\"十一、第三方原生APP相关\"></a>十一、第三方原生APP相关</h3><h4 id=\"1-打开商品详情页\"><a href=\"#1-打开商品详情页\" class=\"headerlink\" title=\"1.打开商品详情页\"></a>1.打开商品详情页</h4><p>接口名：<br>fun.openDetail<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;channel&quot;</span>: <span class=\"string\">&quot;tmall&quot;</span>, <span class=\"comment\">// tmall | jd | taobao</span></span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">212123</span>   <span class=\"comment\">// 商品id</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125;, <span class=\"comment\">// 是否成功 true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">native</span>.<span class=\"title function_\">openDetail</span>(&#123;<span class=\"string\">&quot;channel&quot;</span>: <span class=\"string\">&quot;taobao&quot;</span>, <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">1213121</span>&#125;, <span class=\"keyword\">function</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十二、pomelo（仅供安卓4-4以下）\"><a href=\"#十二、pomelo（仅供安卓4-4以下）\" class=\"headerlink\" title=\"十二、pomelo（仅供安卓4.4以下）\"></a>十二、pomelo（仅供安卓4.4以下）</h3><h4 id=\"1-init\"><a href=\"#1-init\" class=\"headerlink\" title=\"1.init\"></a>1.init</h4><p>接口名：<br>fun.initPomelo<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&#x27;x.x.x.x&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;port&quot;</span>: <span class=\"string\">&#x27;xxxx&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: &#123;<span class=\"title class_\">Boolean</span>&#125; <span class=\"comment\">// true | false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;host&quot;</span>:<span class=\"string\">&quot;lebzs.le.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;port&quot;</span>:<span class=\"number\">9014</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>:&#123;<span class=\"string\">&quot;uid&quot;</span>:<span class=\"string\">&quot;10002&quot;</span>,<span class=\"string\">&quot;nickname&quot;</span>:<span class=\"string\">&quot;乐必中_10002&quot;</span>,<span class=\"string\">&quot;picture&quot;</span>:<span class=\"string\">&quot;https://i3.letvimg.com/lc06_user/201605/09/15/04/1923203311462777446_50_50.jpg&quot;</span>,<span class=\"string\">&quot;balance&quot;</span>:<span class=\"string\">&quot;23800&quot;</span>&#125;</span><br><span class=\"line\">  &#125;, <span class=\"keyword\">function</span>(<span class=\"params\">info</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-request\"><a href=\"#2-request\" class=\"headerlink\" title=\"2.request\"></a>2.request</h4><p>接口名：<br>fun.requestPomelo<br>传入参数：<br>(opt, function(res){})<br>opt示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 其他根据不同业务调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">request</span>(<span class=\"string\">&quot;fruit.fruitHandler.select&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;fruit&quot;</span>:&#123;<span class=\"string\">&quot;id&quot;</span>:<span class=\"number\">4</span>,<span class=\"string\">&quot;key&quot;</span>:<span class=\"string\">&quot;banana4&quot;</span>,<span class=\"string\">&quot;image&quot;</span>:<span class=\"string\">&quot;//i3.letvimg.com/lc03_img/201803/01/10/23/1022/fruits04.png&quot;</span>,<span class=\"string\">&quot;title&quot;</span>:<span class=\"string\">&quot;雪梨&quot;</span>,<span class=\"string\">&quot;order&quot;</span>:<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">   &#125;, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-disconnect\"><a href=\"#3-disconnect\" class=\"headerlink\" title=\"3.disconnect\"></a>3.disconnect</h4><p>接口名：<br>fun.disconnectPomelo<br>传入参数：<br>()<br>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">disconnect</span>();</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-监听pomelo\"><a href=\"#4-监听pomelo\" class=\"headerlink\" title=\"4.监听pomelo\"></a>4.监听pomelo</h4><p>接口名：<br>core.onPomeloEvent<br>传入参数：<br>(function(res){})<br>回调示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#123;String&#125;&#x27;</span>, <span class=\"comment\">// 自定义的监听类型，如： onResult , onSelect ...</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;&#125;  <span class=\"comment\">// 回调的数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>H5调用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">gEvent</span>.<span class=\"title function_\">enable</span>(<span class=\"string\">&#x27;onPomeloEvent&#x27;</span>);<span class=\"comment\">// 取消注册监听把&quot;enable&quot;换成&quot;disable&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">LBZSdk</span>.<span class=\"property\">pomelo</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;onPomeloEvent&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;onResult&#x27;</span> === res.<span class=\"property\">type</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onResult&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;onSelect&#x27;</span> === res.<span class=\"property\">type</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onSelect&#x27;</span>, res.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>()&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>目前能想到的接口文档大致如此，做的过程中会有删改</li>\n</ul>"},{"title":"proxy代理","date":"2021-03-15T16:00:00.000Z","_content":"\n在项目开发中，一般情况是可以localhost调试。但是遇到以下的情况，我们只能通过测试环境/正式环境进行调试，为了更好的定位问题，我们需要把测试/正式环境连到自己本地的代码进行断点（也就是代理）。\n1. 测试/线上环境有问题，本地没毛病\n2. 需要用到域名的开发，比如H5里面微信授权登录\n<!-- more -->\n\n### 零、之前的解决方案\n之前是通过修改服务器上nginx的配置，利用反向转发ssh -vnNT -R，把测试/线上的代码打到自己本地进行联调，主要配置如下：\n+ 服务器上的nginx配置反向转发（放开下面#注释掉的三行配置）\n```bash\nserver {\n    listen       80;\n    server_name h5-user-dev.gmtech.top;\n\n    location / {\n        root /home/work/www/fe/proprietor_h5/dist;\n        proxy_set_header Host $host;\n        index  index.html;\n        try_files $uri $uri/ /index.html;\n\n        location = /index.html {\n            add_header Cache-Control \"no-cache, no-store\";\n        }\n    }\n\n   #location ~ {\n   #   proxy_pass http://127.0.0.1:7688;\n   #}\n}\n```\n\n+ 然后在本地终端里连接（192.168.238.178为服务器ip，需要输入服务器root账户的密码）\n```bash\nssh -vnNT -R 7688:localhost:8001 root@192.168.238.178\n```\n\n此方法配置倒是很方便，不论是http还是https的访问，都打到了自己的机器上。但是，有两个很突出的弊端：\n1. 只能同时到一个开发者的本地机器，如果多人同时开发就不适用了\n2. 由于本地代码处于开发阶段，极其不稳定，测试同学没办法同时进行测试了\n\n自然而然，我们想到的是本地进行代理，此处需要分两种场景：chrome上开发后台系统 和 微信开发者工具上开发H5\n+ chrome上开发后台系统：要在chrome上进行代理挺简单，直接在\"扩展程序\"里安装代理插件，最常见的比如Simple Proxy，然后配置xxx.xxx.com代理到本地的开发环境127.0.0.1:8000（但是此方法不能配置https）\n\n+ 微信开发者工具开发H5：很遗憾，微信开发者工具不支持安装扩展程序；但是网上搜索说可以用Charles的Map Route，准备一试，打开Charles，然后发现开发者工具里的请求根本不走Charles，至此，放弃\n\n** 到此，总结下：如果不用之前的解决方案反向转发，则chrome上可以通过插件进行代理，但是不支持https；微信开发者工具上没办法代理。\n\n### 一、较完美的解决方案\n思考：我们要实现的效果是本地访问网站的时候（不管事chrome还是微信开发者工具）走代理，其他人访问还是正常走服务器。\n\n既然我们是拦截自己电脑，那么我们可以用系统的hosts，然而，系统的hosts代理没办法指定本地的端口，而且本地还没有https。\n\n那接下来的问题就是处理本地代理支持端口（nginx反向代理）和https（自制证书并信任）。\n\n### 二、实操\n\n#### 1、本地配置hosts\n不建议直接修改系统 /etc/hosts 文件，下载 SwitchHosts，添加配置并开启：\n```bash\n127.0.0.1 h5-user-test.gmtech.top\n127.0.0.1 h5-user-dev.gmtech.top\n```\n[图片1](图片1.png)\n\n#### 2、本地安装并启动nginx\n+ 安装nginx：https://www.cnblogs.com/yy136/p/12690225.html\n+ 设置开机自启动：https://www.cnblogs.com/kamback/p/8989822.html\n+ 配置nginx：\n```bash\nserver {\n    listen       80;\n    server_name  h5-user-dev.gmtech.top;\n\n    location / {\n\t    proxy_pass http://127.0.0.1:8001;\n    }\n}\n```\n\n有了以上两步，我们就可以通过代理访问测试/线上环境的http了，此时，如果访问https，还是走不通，会出现下面报错；\n[图片2](图片2.png)\n\n#### 3、mac自制证书\n参考：https://www.cnblogs.com/will-space/p/11913744.html\n+ 生成根密钥\n```bash\nopenssl genrsa -out cakey.pem 2048\n```\n\n+ 生成根CA证书\n```bash\nopenssl req -x509 -new -key cakey.pem -out cacert.pem -days 3650\n```\n\n+ 创建证书请求\n```bash\nopenssl genrsa -out http.key 2048\nopenssl req -new -key http.key -out http.csr\n```\n\n+ 附加用途\n此步不可忽略，如果不加，在chrome里会报不能识别证书通用名称的错：NET::ERR_CERT_COMMON_NAME_INVALID\n1. 新建http.ext\n```bash\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nsubjectAltName=@SubjectAlternativeName\n\n[ SubjectAlternativeName ]\nDNS.1=*.gmtech.top\nDNS.2=xxx.xxx.com\n```\n\n2. 签发证书\n```bash\nopenssl x509 -req -in http.csr -CA cacert.pem -CAkey cakey.pem -CAcreateserial -out http.crt -days 3650 -sha256 -extfile http.ext\n```\n\n至此，会生成http.crt和http.key两个文件，我们将之配置到本地nginx配置里面：\n```bash\nserver {\n    listen       80;\n    listen\t 443 ssl;\n    server_name  h5-user-dev.gmtech.top;\n\n    ssl_certificate      /usr/local/etc/nginx/crt/http.crt;\n    ssl_certificate_key  /usr/local/etc/nginx/crt/http.key;\n\n    location / {\n    \tproxy_pass http://127.0.0.1:8001;\n    }\n}\n```\n[图片3](图片3.png)\n\n#### 4、信任证书\n我们需要把证书加入到本地keychain里面，并添加\"始终信任\"：\n\n1. 找到刚才证书生成目录下的 cacert.pem 文件双击，添加到keyChain的证书里，右键选择\"显示简介\"\n\n2. 找到信任 -> 使用此证书时: -> 选择始终信任\n\n[图片4](图片4.png)\n\n3. 到此，可以通过本地代理访问线上http、https地址了。在chrome上地址栏会提示不安全，忽略即可；但是在开发者工具上就可以畅通无阻了，说明微信开发者工具赶chrome还是有不小的差距啊。\n\n** 总结： **\n1. 首先通过本地hosts配置让要代理的域名走127.0.0.1\n2. hosts配置不支持端口，通过本地启nginx服务进行端口转发\n3. 本地nginx要配置https需要证书，可以用openssl自制证书并信任\n\n\n### 三、手机连电脑进行代理访问（只支持http）\n1. 电脑安装spy-debugger\n2. 本地开启spy-debugger\n3. 手机绑本地spy-debugger代理：本地ip + 端口 9888\n4. 访问目标域名\n\n** 注：由于上述证书是mac自制的，在mac上可以添加信任，但是手机上没法信任该证书，所以在微信里访问https的时候，会被阻止 **\n","source":"_posts/proxy代理.md","raw":"---\ntitle: proxy代理\ndate: 2021-03-16\ncategories: web\ntags: \n    - web\n    - proxy\n#description: \n---\n\n在项目开发中，一般情况是可以localhost调试。但是遇到以下的情况，我们只能通过测试环境/正式环境进行调试，为了更好的定位问题，我们需要把测试/正式环境连到自己本地的代码进行断点（也就是代理）。\n1. 测试/线上环境有问题，本地没毛病\n2. 需要用到域名的开发，比如H5里面微信授权登录\n<!-- more -->\n\n### 零、之前的解决方案\n之前是通过修改服务器上nginx的配置，利用反向转发ssh -vnNT -R，把测试/线上的代码打到自己本地进行联调，主要配置如下：\n+ 服务器上的nginx配置反向转发（放开下面#注释掉的三行配置）\n```bash\nserver {\n    listen       80;\n    server_name h5-user-dev.gmtech.top;\n\n    location / {\n        root /home/work/www/fe/proprietor_h5/dist;\n        proxy_set_header Host $host;\n        index  index.html;\n        try_files $uri $uri/ /index.html;\n\n        location = /index.html {\n            add_header Cache-Control \"no-cache, no-store\";\n        }\n    }\n\n   #location ~ {\n   #   proxy_pass http://127.0.0.1:7688;\n   #}\n}\n```\n\n+ 然后在本地终端里连接（192.168.238.178为服务器ip，需要输入服务器root账户的密码）\n```bash\nssh -vnNT -R 7688:localhost:8001 root@192.168.238.178\n```\n\n此方法配置倒是很方便，不论是http还是https的访问，都打到了自己的机器上。但是，有两个很突出的弊端：\n1. 只能同时到一个开发者的本地机器，如果多人同时开发就不适用了\n2. 由于本地代码处于开发阶段，极其不稳定，测试同学没办法同时进行测试了\n\n自然而然，我们想到的是本地进行代理，此处需要分两种场景：chrome上开发后台系统 和 微信开发者工具上开发H5\n+ chrome上开发后台系统：要在chrome上进行代理挺简单，直接在\"扩展程序\"里安装代理插件，最常见的比如Simple Proxy，然后配置xxx.xxx.com代理到本地的开发环境127.0.0.1:8000（但是此方法不能配置https）\n\n+ 微信开发者工具开发H5：很遗憾，微信开发者工具不支持安装扩展程序；但是网上搜索说可以用Charles的Map Route，准备一试，打开Charles，然后发现开发者工具里的请求根本不走Charles，至此，放弃\n\n** 到此，总结下：如果不用之前的解决方案反向转发，则chrome上可以通过插件进行代理，但是不支持https；微信开发者工具上没办法代理。\n\n### 一、较完美的解决方案\n思考：我们要实现的效果是本地访问网站的时候（不管事chrome还是微信开发者工具）走代理，其他人访问还是正常走服务器。\n\n既然我们是拦截自己电脑，那么我们可以用系统的hosts，然而，系统的hosts代理没办法指定本地的端口，而且本地还没有https。\n\n那接下来的问题就是处理本地代理支持端口（nginx反向代理）和https（自制证书并信任）。\n\n### 二、实操\n\n#### 1、本地配置hosts\n不建议直接修改系统 /etc/hosts 文件，下载 SwitchHosts，添加配置并开启：\n```bash\n127.0.0.1 h5-user-test.gmtech.top\n127.0.0.1 h5-user-dev.gmtech.top\n```\n[图片1](图片1.png)\n\n#### 2、本地安装并启动nginx\n+ 安装nginx：https://www.cnblogs.com/yy136/p/12690225.html\n+ 设置开机自启动：https://www.cnblogs.com/kamback/p/8989822.html\n+ 配置nginx：\n```bash\nserver {\n    listen       80;\n    server_name  h5-user-dev.gmtech.top;\n\n    location / {\n\t    proxy_pass http://127.0.0.1:8001;\n    }\n}\n```\n\n有了以上两步，我们就可以通过代理访问测试/线上环境的http了，此时，如果访问https，还是走不通，会出现下面报错；\n[图片2](图片2.png)\n\n#### 3、mac自制证书\n参考：https://www.cnblogs.com/will-space/p/11913744.html\n+ 生成根密钥\n```bash\nopenssl genrsa -out cakey.pem 2048\n```\n\n+ 生成根CA证书\n```bash\nopenssl req -x509 -new -key cakey.pem -out cacert.pem -days 3650\n```\n\n+ 创建证书请求\n```bash\nopenssl genrsa -out http.key 2048\nopenssl req -new -key http.key -out http.csr\n```\n\n+ 附加用途\n此步不可忽略，如果不加，在chrome里会报不能识别证书通用名称的错：NET::ERR_CERT_COMMON_NAME_INVALID\n1. 新建http.ext\n```bash\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nsubjectAltName=@SubjectAlternativeName\n\n[ SubjectAlternativeName ]\nDNS.1=*.gmtech.top\nDNS.2=xxx.xxx.com\n```\n\n2. 签发证书\n```bash\nopenssl x509 -req -in http.csr -CA cacert.pem -CAkey cakey.pem -CAcreateserial -out http.crt -days 3650 -sha256 -extfile http.ext\n```\n\n至此，会生成http.crt和http.key两个文件，我们将之配置到本地nginx配置里面：\n```bash\nserver {\n    listen       80;\n    listen\t 443 ssl;\n    server_name  h5-user-dev.gmtech.top;\n\n    ssl_certificate      /usr/local/etc/nginx/crt/http.crt;\n    ssl_certificate_key  /usr/local/etc/nginx/crt/http.key;\n\n    location / {\n    \tproxy_pass http://127.0.0.1:8001;\n    }\n}\n```\n[图片3](图片3.png)\n\n#### 4、信任证书\n我们需要把证书加入到本地keychain里面，并添加\"始终信任\"：\n\n1. 找到刚才证书生成目录下的 cacert.pem 文件双击，添加到keyChain的证书里，右键选择\"显示简介\"\n\n2. 找到信任 -> 使用此证书时: -> 选择始终信任\n\n[图片4](图片4.png)\n\n3. 到此，可以通过本地代理访问线上http、https地址了。在chrome上地址栏会提示不安全，忽略即可；但是在开发者工具上就可以畅通无阻了，说明微信开发者工具赶chrome还是有不小的差距啊。\n\n** 总结： **\n1. 首先通过本地hosts配置让要代理的域名走127.0.0.1\n2. hosts配置不支持端口，通过本地启nginx服务进行端口转发\n3. 本地nginx要配置https需要证书，可以用openssl自制证书并信任\n\n\n### 三、手机连电脑进行代理访问（只支持http）\n1. 电脑安装spy-debugger\n2. 本地开启spy-debugger\n3. 手机绑本地spy-debugger代理：本地ip + 端口 9888\n4. 访问目标域名\n\n** 注：由于上述证书是mac自制的，在mac上可以添加信任，但是手机上没法信任该证书，所以在微信里访问https的时候，会被阻止 **\n","slug":"proxy代理","published":1,"updated":"2022-06-15T08:28:53.365Z","_id":"cl4e3aywc0011k4rqhexz86lw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在项目开发中，一般情况是可以localhost调试。但是遇到以下的情况，我们只能通过测试环境&#x2F;正式环境进行调试，为了更好的定位问题，我们需要把测试&#x2F;正式环境连到自己本地的代码进行断点（也就是代理）。</p>\n<ol>\n<li>测试&#x2F;线上环境有问题，本地没毛病</li>\n<li>需要用到域名的开发，比如H5里面微信授权登录<span id=\"more\"></span></li>\n</ol>\n<h3 id=\"零、之前的解决方案\"><a href=\"#零、之前的解决方案\" class=\"headerlink\" title=\"零、之前的解决方案\"></a>零、之前的解决方案</h3><p>之前是通过修改服务器上nginx的配置，利用反向转发ssh -vnNT -R，把测试&#x2F;线上的代码打到自己本地进行联调，主要配置如下：</p>\n<ul>\n<li><p>服务器上的nginx配置反向转发（放开下面#注释掉的三行配置）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root /home/work/www/fe/proprietor_h5/dist;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        index  index.html;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        location = /index.html &#123;</span><br><span class=\"line\">            add_header Cache-Control <span class=\"string\">&quot;no-cache, no-store&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#location ~ &#123;</span></span><br><span class=\"line\">   <span class=\"comment\">#   proxy_pass http://127.0.0.1:7688;</span></span><br><span class=\"line\">   <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后在本地终端里连接（192.168.238.178为服务器ip，需要输入服务器root账户的密码）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -vnNT -R 7688:localhost:8001 root@192.168.238.178</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>此方法配置倒是很方便，不论是http还是https的访问，都打到了自己的机器上。但是，有两个很突出的弊端：</p>\n<ol>\n<li>只能同时到一个开发者的本地机器，如果多人同时开发就不适用了</li>\n<li>由于本地代码处于开发阶段，极其不稳定，测试同学没办法同时进行测试了</li>\n</ol>\n<p>自然而然，我们想到的是本地进行代理，此处需要分两种场景：chrome上开发后台系统 和 微信开发者工具上开发H5</p>\n<ul>\n<li><p>chrome上开发后台系统：要在chrome上进行代理挺简单，直接在”扩展程序”里安装代理插件，最常见的比如Simple Proxy，然后配置xxx.xxx.com代理到本地的开发环境127.0.0.1:8000（但是此方法不能配置https）</p>\n</li>\n<li><p>微信开发者工具开发H5：很遗憾，微信开发者工具不支持安装扩展程序；但是网上搜索说可以用Charles的Map Route，准备一试，打开Charles，然后发现开发者工具里的请求根本不走Charles，至此，放弃</p>\n</li>\n</ul>\n<p>** 到此，总结下：如果不用之前的解决方案反向转发，则chrome上可以通过插件进行代理，但是不支持https；微信开发者工具上没办法代理。</p>\n<h3 id=\"一、较完美的解决方案\"><a href=\"#一、较完美的解决方案\" class=\"headerlink\" title=\"一、较完美的解决方案\"></a>一、较完美的解决方案</h3><p>思考：我们要实现的效果是本地访问网站的时候（不管事chrome还是微信开发者工具）走代理，其他人访问还是正常走服务器。</p>\n<p>既然我们是拦截自己电脑，那么我们可以用系统的hosts，然而，系统的hosts代理没办法指定本地的端口，而且本地还没有https。</p>\n<p>那接下来的问题就是处理本地代理支持端口（nginx反向代理）和https（自制证书并信任）。</p>\n<h3 id=\"二、实操\"><a href=\"#二、实操\" class=\"headerlink\" title=\"二、实操\"></a>二、实操</h3><h4 id=\"1、本地配置hosts\"><a href=\"#1、本地配置hosts\" class=\"headerlink\" title=\"1、本地配置hosts\"></a>1、本地配置hosts</h4><p>不建议直接修改系统 &#x2F;etc&#x2F;hosts 文件，下载 SwitchHosts，添加配置并开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 h5-user-test.gmtech.top</span><br><span class=\"line\">127.0.0.1 h5-user-dev.gmtech.top</span><br></pre></td></tr></table></figure>\n<p><a href=\"%E5%9B%BE%E7%89%871.png\">图片1</a></p>\n<h4 id=\"2、本地安装并启动nginx\"><a href=\"#2、本地安装并启动nginx\" class=\"headerlink\" title=\"2、本地安装并启动nginx\"></a>2、本地安装并启动nginx</h4><ul>\n<li>安装nginx：<a href=\"https://www.cnblogs.com/yy136/p/12690225.html\">https://www.cnblogs.com/yy136/p/12690225.html</a></li>\n<li>设置开机自启动：<a href=\"https://www.cnblogs.com/kamback/p/8989822.html\">https://www.cnblogs.com/kamback/p/8989822.html</a></li>\n<li>配置nginx：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">\t    proxy_pass http://127.0.0.1:8001;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>有了以上两步，我们就可以通过代理访问测试&#x2F;线上环境的http了，此时，如果访问https，还是走不通，会出现下面报错；<br><a href=\"%E5%9B%BE%E7%89%872.png\">图片2</a></p>\n<h4 id=\"3、mac自制证书\"><a href=\"#3、mac自制证书\" class=\"headerlink\" title=\"3、mac自制证书\"></a>3、mac自制证书</h4><p>参考：<a href=\"https://www.cnblogs.com/will-space/p/11913744.html\">https://www.cnblogs.com/will-space/p/11913744.html</a></p>\n<ul>\n<li><p>生成根密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out cakey.pem 2048</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成根CA证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -new -key cakey.pem -out cacert.pem -days 3650</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建证书请求</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out http.key 2048</span><br><span class=\"line\">openssl req -new -key http.key -out http.csr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>附加用途<br>此步不可忽略，如果不加，在chrome里会报不能识别证书通用名称的错：NET::ERR_CERT_COMMON_NAME_INVALID</p>\n</li>\n</ul>\n<ol>\n<li><p>新建http.ext</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class=\"line\">extendedKeyUsage = serverAuth, clientAuth</span><br><span class=\"line\">subjectAltName=@SubjectAlternativeName</span><br><span class=\"line\"></span><br><span class=\"line\">[ SubjectAlternativeName ]</span><br><span class=\"line\">DNS.1=*.gmtech.top</span><br><span class=\"line\">DNS.2=xxx.xxx.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>签发证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -req -<span class=\"keyword\">in</span> http.csr -CA cacert.pem -CAkey cakey.pem -CAcreateserial -out http.crt -days 3650 -sha256 -extfile http.ext</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>至此，会生成http.crt和http.key两个文件，我们将之配置到本地nginx配置里面：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    listen\t 443 ssl;</span><br><span class=\"line\">    server_name  h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    ssl_certificate      /usr/local/etc/nginx/crt/http.crt;</span><br><span class=\"line\">    ssl_certificate_key  /usr/local/etc/nginx/crt/http.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    \tproxy_pass http://127.0.0.1:8001;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"%E5%9B%BE%E7%89%873.png\">图片3</a></p>\n<h4 id=\"4、信任证书\"><a href=\"#4、信任证书\" class=\"headerlink\" title=\"4、信任证书\"></a>4、信任证书</h4><p>我们需要把证书加入到本地keychain里面，并添加”始终信任”：</p>\n<ol>\n<li><p>找到刚才证书生成目录下的 cacert.pem 文件双击，添加到keyChain的证书里，右键选择”显示简介”</p>\n</li>\n<li><p>找到信任 -&gt; 使用此证书时: -&gt; 选择始终信任</p>\n</li>\n</ol>\n<p><a href=\"%E5%9B%BE%E7%89%874.png\">图片4</a></p>\n<ol start=\"3\">\n<li>到此，可以通过本地代理访问线上http、https地址了。在chrome上地址栏会提示不安全，忽略即可；但是在开发者工具上就可以畅通无阻了，说明微信开发者工具赶chrome还是有不小的差距啊。</li>\n</ol>\n<p>** 总结： **</p>\n<ol>\n<li>首先通过本地hosts配置让要代理的域名走127.0.0.1</li>\n<li>hosts配置不支持端口，通过本地启nginx服务进行端口转发</li>\n<li>本地nginx要配置https需要证书，可以用openssl自制证书并信任</li>\n</ol>\n<h3 id=\"三、手机连电脑进行代理访问（只支持http）\"><a href=\"#三、手机连电脑进行代理访问（只支持http）\" class=\"headerlink\" title=\"三、手机连电脑进行代理访问（只支持http）\"></a>三、手机连电脑进行代理访问（只支持http）</h3><ol>\n<li>电脑安装spy-debugger</li>\n<li>本地开启spy-debugger</li>\n<li>手机绑本地spy-debugger代理：本地ip + 端口 9888</li>\n<li>访问目标域名</li>\n</ol>\n<p>** 注：由于上述证书是mac自制的，在mac上可以添加信任，但是手机上没法信任该证书，所以在微信里访问https的时候，会被阻止 **</p>\n","site":{"data":{}},"excerpt":"<p>在项目开发中，一般情况是可以localhost调试。但是遇到以下的情况，我们只能通过测试环境&#x2F;正式环境进行调试，为了更好的定位问题，我们需要把测试&#x2F;正式环境连到自己本地的代码进行断点（也就是代理）。</p>\n<ol>\n<li>测试&#x2F;线上环境有问题，本地没毛病</li>\n<li>需要用到域名的开发，比如H5里面微信授权登录</li></ol>","more":"\n\n<h3 id=\"零、之前的解决方案\"><a href=\"#零、之前的解决方案\" class=\"headerlink\" title=\"零、之前的解决方案\"></a>零、之前的解决方案</h3><p>之前是通过修改服务器上nginx的配置，利用反向转发ssh -vnNT -R，把测试&#x2F;线上的代码打到自己本地进行联调，主要配置如下：</p>\n<ul>\n<li><p>服务器上的nginx配置反向转发（放开下面#注释掉的三行配置）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root /home/work/www/fe/proprietor_h5/dist;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        index  index.html;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        location = /index.html &#123;</span><br><span class=\"line\">            add_header Cache-Control <span class=\"string\">&quot;no-cache, no-store&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#location ~ &#123;</span></span><br><span class=\"line\">   <span class=\"comment\">#   proxy_pass http://127.0.0.1:7688;</span></span><br><span class=\"line\">   <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后在本地终端里连接（192.168.238.178为服务器ip，需要输入服务器root账户的密码）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -vnNT -R 7688:localhost:8001 root@192.168.238.178</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>此方法配置倒是很方便，不论是http还是https的访问，都打到了自己的机器上。但是，有两个很突出的弊端：</p>\n<ol>\n<li>只能同时到一个开发者的本地机器，如果多人同时开发就不适用了</li>\n<li>由于本地代码处于开发阶段，极其不稳定，测试同学没办法同时进行测试了</li>\n</ol>\n<p>自然而然，我们想到的是本地进行代理，此处需要分两种场景：chrome上开发后台系统 和 微信开发者工具上开发H5</p>\n<ul>\n<li><p>chrome上开发后台系统：要在chrome上进行代理挺简单，直接在”扩展程序”里安装代理插件，最常见的比如Simple Proxy，然后配置xxx.xxx.com代理到本地的开发环境127.0.0.1:8000（但是此方法不能配置https）</p>\n</li>\n<li><p>微信开发者工具开发H5：很遗憾，微信开发者工具不支持安装扩展程序；但是网上搜索说可以用Charles的Map Route，准备一试，打开Charles，然后发现开发者工具里的请求根本不走Charles，至此，放弃</p>\n</li>\n</ul>\n<p>** 到此，总结下：如果不用之前的解决方案反向转发，则chrome上可以通过插件进行代理，但是不支持https；微信开发者工具上没办法代理。</p>\n<h3 id=\"一、较完美的解决方案\"><a href=\"#一、较完美的解决方案\" class=\"headerlink\" title=\"一、较完美的解决方案\"></a>一、较完美的解决方案</h3><p>思考：我们要实现的效果是本地访问网站的时候（不管事chrome还是微信开发者工具）走代理，其他人访问还是正常走服务器。</p>\n<p>既然我们是拦截自己电脑，那么我们可以用系统的hosts，然而，系统的hosts代理没办法指定本地的端口，而且本地还没有https。</p>\n<p>那接下来的问题就是处理本地代理支持端口（nginx反向代理）和https（自制证书并信任）。</p>\n<h3 id=\"二、实操\"><a href=\"#二、实操\" class=\"headerlink\" title=\"二、实操\"></a>二、实操</h3><h4 id=\"1、本地配置hosts\"><a href=\"#1、本地配置hosts\" class=\"headerlink\" title=\"1、本地配置hosts\"></a>1、本地配置hosts</h4><p>不建议直接修改系统 &#x2F;etc&#x2F;hosts 文件，下载 SwitchHosts，添加配置并开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 h5-user-test.gmtech.top</span><br><span class=\"line\">127.0.0.1 h5-user-dev.gmtech.top</span><br></pre></td></tr></table></figure>\n<p><a href=\"%E5%9B%BE%E7%89%871.png\">图片1</a></p>\n<h4 id=\"2、本地安装并启动nginx\"><a href=\"#2、本地安装并启动nginx\" class=\"headerlink\" title=\"2、本地安装并启动nginx\"></a>2、本地安装并启动nginx</h4><ul>\n<li>安装nginx：<a href=\"https://www.cnblogs.com/yy136/p/12690225.html\">https://www.cnblogs.com/yy136/p/12690225.html</a></li>\n<li>设置开机自启动：<a href=\"https://www.cnblogs.com/kamback/p/8989822.html\">https://www.cnblogs.com/kamback/p/8989822.html</a></li>\n<li>配置nginx：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">\t    proxy_pass http://127.0.0.1:8001;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>有了以上两步，我们就可以通过代理访问测试&#x2F;线上环境的http了，此时，如果访问https，还是走不通，会出现下面报错；<br><a href=\"%E5%9B%BE%E7%89%872.png\">图片2</a></p>\n<h4 id=\"3、mac自制证书\"><a href=\"#3、mac自制证书\" class=\"headerlink\" title=\"3、mac自制证书\"></a>3、mac自制证书</h4><p>参考：<a href=\"https://www.cnblogs.com/will-space/p/11913744.html\">https://www.cnblogs.com/will-space/p/11913744.html</a></p>\n<ul>\n<li><p>生成根密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out cakey.pem 2048</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成根CA证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -new -key cakey.pem -out cacert.pem -days 3650</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建证书请求</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl genrsa -out http.key 2048</span><br><span class=\"line\">openssl req -new -key http.key -out http.csr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>附加用途<br>此步不可忽略，如果不加，在chrome里会报不能识别证书通用名称的错：NET::ERR_CERT_COMMON_NAME_INVALID</p>\n</li>\n</ul>\n<ol>\n<li><p>新建http.ext</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class=\"line\">extendedKeyUsage = serverAuth, clientAuth</span><br><span class=\"line\">subjectAltName=@SubjectAlternativeName</span><br><span class=\"line\"></span><br><span class=\"line\">[ SubjectAlternativeName ]</span><br><span class=\"line\">DNS.1=*.gmtech.top</span><br><span class=\"line\">DNS.2=xxx.xxx.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>签发证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -req -<span class=\"keyword\">in</span> http.csr -CA cacert.pem -CAkey cakey.pem -CAcreateserial -out http.crt -days 3650 -sha256 -extfile http.ext</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>至此，会生成http.crt和http.key两个文件，我们将之配置到本地nginx配置里面：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    listen\t 443 ssl;</span><br><span class=\"line\">    server_name  h5-user-dev.gmtech.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    ssl_certificate      /usr/local/etc/nginx/crt/http.crt;</span><br><span class=\"line\">    ssl_certificate_key  /usr/local/etc/nginx/crt/http.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    \tproxy_pass http://127.0.0.1:8001;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"%E5%9B%BE%E7%89%873.png\">图片3</a></p>\n<h4 id=\"4、信任证书\"><a href=\"#4、信任证书\" class=\"headerlink\" title=\"4、信任证书\"></a>4、信任证书</h4><p>我们需要把证书加入到本地keychain里面，并添加”始终信任”：</p>\n<ol>\n<li><p>找到刚才证书生成目录下的 cacert.pem 文件双击，添加到keyChain的证书里，右键选择”显示简介”</p>\n</li>\n<li><p>找到信任 -&gt; 使用此证书时: -&gt; 选择始终信任</p>\n</li>\n</ol>\n<p><a href=\"%E5%9B%BE%E7%89%874.png\">图片4</a></p>\n<ol start=\"3\">\n<li>到此，可以通过本地代理访问线上http、https地址了。在chrome上地址栏会提示不安全，忽略即可；但是在开发者工具上就可以畅通无阻了，说明微信开发者工具赶chrome还是有不小的差距啊。</li>\n</ol>\n<p>** 总结： **</p>\n<ol>\n<li>首先通过本地hosts配置让要代理的域名走127.0.0.1</li>\n<li>hosts配置不支持端口，通过本地启nginx服务进行端口转发</li>\n<li>本地nginx要配置https需要证书，可以用openssl自制证书并信任</li>\n</ol>\n<h3 id=\"三、手机连电脑进行代理访问（只支持http）\"><a href=\"#三、手机连电脑进行代理访问（只支持http）\" class=\"headerlink\" title=\"三、手机连电脑进行代理访问（只支持http）\"></a>三、手机连电脑进行代理访问（只支持http）</h3><ol>\n<li>电脑安装spy-debugger</li>\n<li>本地开启spy-debugger</li>\n<li>手机绑本地spy-debugger代理：本地ip + 端口 9888</li>\n<li>访问目标域名</li>\n</ol>\n<p>** 注：由于上述证书是mac自制的，在mac上可以添加信任，但是手机上没法信任该证书，所以在微信里访问https的时候，会被阻止 **</p>"},{"title":"yarn和npm对比","date":"2020-09-07T16:00:00.000Z","_content":"\n之前开发项目一直使用的npm，没出啥篓子，直到今天...\n<!-- more -->\n事情是这样的：\n + 项目框架： vue, vant\n + 开发时使用：npm\n + 测试环境部署：gitlab + hook（npm）\n + 正式环境部署：walle（yarn）\n    \n事故：项目最开始是用的npm包管理，安装的vant版本是^2.8.4，本地开发和测试环境都正常，上线到正式环境后，出现一个bug。找了半天，发现是vant最新更新到了2.10.5，导致的一个bug。查看测试环境和正式环境对应的vant版本，发现测试环境是2.8.4，而正式环境已经变成了最新的2.10.5。比较诧异为什么会这样，于是有了下面的探索...\n\n#### 一、yarn、npm对比\n\n可以参照 https://stackshare.io/stackups/npm-vs-yarn 这篇文章，大致可以归纳为下面几点：\n + yarn 安装速度 快于npm\n + yarn self-update 支持yarn自身升级，npm不支持\n + yarn 支持离线下载之前安装过的包，因为yarn是把所有的包放到用户磁盘，而不是单个项目\n + yarn 支持平行安装，npm只是串行，这也是yarn安装速度更快的原因\n\n#### 二、package-lock.json  yarn.lock\n\n一个项目肯定会多人同时开发，因此每个人install的包版本可能会不同，此时会导致各种奇怪的bug。为了使大家机器上的package版本一致，npm引入了package-lock.json，yarn引入了yarn.lock。它俩的原理都差不多，都是每次install后会在各自的lock文件里注明各个包的版本、下载链接，然后再其他人电脑上Install的时候，会优先用lock文件里的版本。但是它们也有区别：如下。\n\n#### 三、实验\n\n1.安装一个新的package，以vant@2.8.4为例\n```bash\nyarn add vant@2.8.4\n\nnpm install vant@2.8.4\n```\n过程都很顺利，安装完成我们对比package.json发现，**_yarn安装的版本前面没有^，也就是yarn是安装的指定版本，而npm安装的前面带有^_**。\n\n2.重新执行一遍install\n```bash\nyarn \n\nnpm i\n```\n此时，两边表现正常，都还是2.8.4，因为有lock文件的限制。\n\n3.修改yarn安装的包版本号，在2.8.4前面加上^，变成^2.8.4，再执行安装\n```bash\nyarn\n```\n我们发现，_**node__modules里面和yarn.lock的vant的版本变成了最新的2.10.6，但是package.json还是^2.8.4**_。这就是开头讲到的那个线上bug产生的原因了。由于项目前期是通过npm安装的，所以vant的版本为^2.8.4。然后测试环境部署用的npm，加上package-lock.json的限制，测试环境node_modules里面仍然是2.8.4版本。而正式环境是用yarn部署的，就自动更新成最新版本的2.10.6了。\n\n到此，我们大概就明白了两者的包管理流程，以及对应的lock文件的作用了：\n+ **yarn安装的时候会指定版本(前面不加^)，如果加上^，会每次下载最新的版本，同时更新yarn.lock**。\n+ npm安装的时候会在版本前加^，然后靠着package-lock.json里来限制不更新为最新版本(**不全对**)。\n\n4.为了验证上面的猜想，我们继续试验：\n\n  4.1、删除package-lock.json文件，然后\n  \n```bash\nnpm i\n```\n我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。咦？是不是我们上面的猜想错了？\n\n  4.2、我们继续，保留package-lock.json，删除node_modules里面的vany目录，然后npm i。\n\n我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。\n  \n  4.3、我们再进一步：，**同时删除package-lock.json和node_modules里的vant目录，然后npm i**。\n  \n至此，我们发现node_modules里和package-lock.json里都变成了最新的2.10.6。所以我们可以确定的是，_**如果仅删除package-lock或者仅删除node_modules里面的vant目录，npm i的时候，不会进行升级**_。\n\n* 注：可能各个版本的npm有差异（上面实验时npm的版本是6.11.3）\n\n5.继续把两个项目里package.json里面vant的版本都更改成2.10.6，然后install，两者都升级成2.10.6。这里都在意料之中。\n\n6.我们再近一步，上面5中已经升级成最新的2.10.6了，我们现在来进行降级处理。\n+ 1、手动改package.json里的版本为固定版本2.8.4（注：前面没有^），然后执行install。（结果：yarn降级成功，npm仍然是最新的版本）。\n+ 2、继续删除package-lock.json文件，然后install，发现npm仍然是最新的。\n+ 3、删除package-lock.json文件和node_modules里vant目录，然后install，发现降级成功。\n\n#### 四、结论\n+ yarn以package.json为准，所以yarn add xxx@xxx的时候，在package.json里生成的是固定版本（前面不带^），依次来保证每个开发者安装的包版本一致。\n+ npm同时受package-lock.json和node_modules目录的影响，所以npm i xxx@xxx的时候，在package.json里生成的是向后兼容的版本（前面带^）。因此，为了保证每个开发者安装的版本一致，**我们需要把package-lock.json加到git版本管理里**。\n\n#### 五、常见场景\n对于比较稳定可靠的package，不论是哪种方式，都影响不大，比如ant-design。\n对于稍微小众一点的package，有可能小版本的升级会出现bug，这种情况下，最好是固定一个版本，不让随意升级。此时有两种方案：\n+ 1.通过yarn add来安装，安装后默认指定固定版本，后续就算你删除node_modules或yarn.lock，再重新add，都不会自动升级。\n+ 2.通过npm i来安装，此时package.json里不是固定的版本，因此就必须保证package-lock.json和node_modules不会同时删除后再install（**实际中很容易这么操作**）。如果这样操作后，会安装最新的包，并且package.json里还是显示的旧版本，会有点莫名其妙。\n\n  2.1、当然，你也可以在npm i xxx@xxx之后，手动把package.json里的兼容版本改成固定版本（去掉^），但经验告诉我们，一般不会那么做。\n  \n  \n** 题外话：在过程中，遇到一个问题，就是删除package-lock.json后，再重新npm install生成的package-lock.json并没有自动加入git版本管理（项目里的.gitignore里没有加上)。最后发现是全局把package-lock.json加入gitignore里了，参照：https://cloud.tencent.com/developer/article/1478104 ","source":"_posts/yarn和npm对比.md","raw":"---\ntitle: yarn和npm对比\ndate: 2020-09-08\ncategories: NODE JS\ntags: \n    - NODE\n    - JS\n#description: \n---\n\n之前开发项目一直使用的npm，没出啥篓子，直到今天...\n<!-- more -->\n事情是这样的：\n + 项目框架： vue, vant\n + 开发时使用：npm\n + 测试环境部署：gitlab + hook（npm）\n + 正式环境部署：walle（yarn）\n    \n事故：项目最开始是用的npm包管理，安装的vant版本是^2.8.4，本地开发和测试环境都正常，上线到正式环境后，出现一个bug。找了半天，发现是vant最新更新到了2.10.5，导致的一个bug。查看测试环境和正式环境对应的vant版本，发现测试环境是2.8.4，而正式环境已经变成了最新的2.10.5。比较诧异为什么会这样，于是有了下面的探索...\n\n#### 一、yarn、npm对比\n\n可以参照 https://stackshare.io/stackups/npm-vs-yarn 这篇文章，大致可以归纳为下面几点：\n + yarn 安装速度 快于npm\n + yarn self-update 支持yarn自身升级，npm不支持\n + yarn 支持离线下载之前安装过的包，因为yarn是把所有的包放到用户磁盘，而不是单个项目\n + yarn 支持平行安装，npm只是串行，这也是yarn安装速度更快的原因\n\n#### 二、package-lock.json  yarn.lock\n\n一个项目肯定会多人同时开发，因此每个人install的包版本可能会不同，此时会导致各种奇怪的bug。为了使大家机器上的package版本一致，npm引入了package-lock.json，yarn引入了yarn.lock。它俩的原理都差不多，都是每次install后会在各自的lock文件里注明各个包的版本、下载链接，然后再其他人电脑上Install的时候，会优先用lock文件里的版本。但是它们也有区别：如下。\n\n#### 三、实验\n\n1.安装一个新的package，以vant@2.8.4为例\n```bash\nyarn add vant@2.8.4\n\nnpm install vant@2.8.4\n```\n过程都很顺利，安装完成我们对比package.json发现，**_yarn安装的版本前面没有^，也就是yarn是安装的指定版本，而npm安装的前面带有^_**。\n\n2.重新执行一遍install\n```bash\nyarn \n\nnpm i\n```\n此时，两边表现正常，都还是2.8.4，因为有lock文件的限制。\n\n3.修改yarn安装的包版本号，在2.8.4前面加上^，变成^2.8.4，再执行安装\n```bash\nyarn\n```\n我们发现，_**node__modules里面和yarn.lock的vant的版本变成了最新的2.10.6，但是package.json还是^2.8.4**_。这就是开头讲到的那个线上bug产生的原因了。由于项目前期是通过npm安装的，所以vant的版本为^2.8.4。然后测试环境部署用的npm，加上package-lock.json的限制，测试环境node_modules里面仍然是2.8.4版本。而正式环境是用yarn部署的，就自动更新成最新版本的2.10.6了。\n\n到此，我们大概就明白了两者的包管理流程，以及对应的lock文件的作用了：\n+ **yarn安装的时候会指定版本(前面不加^)，如果加上^，会每次下载最新的版本，同时更新yarn.lock**。\n+ npm安装的时候会在版本前加^，然后靠着package-lock.json里来限制不更新为最新版本(**不全对**)。\n\n4.为了验证上面的猜想，我们继续试验：\n\n  4.1、删除package-lock.json文件，然后\n  \n```bash\nnpm i\n```\n我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。咦？是不是我们上面的猜想错了？\n\n  4.2、我们继续，保留package-lock.json，删除node_modules里面的vany目录，然后npm i。\n\n我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。\n  \n  4.3、我们再进一步：，**同时删除package-lock.json和node_modules里的vant目录，然后npm i**。\n  \n至此，我们发现node_modules里和package-lock.json里都变成了最新的2.10.6。所以我们可以确定的是，_**如果仅删除package-lock或者仅删除node_modules里面的vant目录，npm i的时候，不会进行升级**_。\n\n* 注：可能各个版本的npm有差异（上面实验时npm的版本是6.11.3）\n\n5.继续把两个项目里package.json里面vant的版本都更改成2.10.6，然后install，两者都升级成2.10.6。这里都在意料之中。\n\n6.我们再近一步，上面5中已经升级成最新的2.10.6了，我们现在来进行降级处理。\n+ 1、手动改package.json里的版本为固定版本2.8.4（注：前面没有^），然后执行install。（结果：yarn降级成功，npm仍然是最新的版本）。\n+ 2、继续删除package-lock.json文件，然后install，发现npm仍然是最新的。\n+ 3、删除package-lock.json文件和node_modules里vant目录，然后install，发现降级成功。\n\n#### 四、结论\n+ yarn以package.json为准，所以yarn add xxx@xxx的时候，在package.json里生成的是固定版本（前面不带^），依次来保证每个开发者安装的包版本一致。\n+ npm同时受package-lock.json和node_modules目录的影响，所以npm i xxx@xxx的时候，在package.json里生成的是向后兼容的版本（前面带^）。因此，为了保证每个开发者安装的版本一致，**我们需要把package-lock.json加到git版本管理里**。\n\n#### 五、常见场景\n对于比较稳定可靠的package，不论是哪种方式，都影响不大，比如ant-design。\n对于稍微小众一点的package，有可能小版本的升级会出现bug，这种情况下，最好是固定一个版本，不让随意升级。此时有两种方案：\n+ 1.通过yarn add来安装，安装后默认指定固定版本，后续就算你删除node_modules或yarn.lock，再重新add，都不会自动升级。\n+ 2.通过npm i来安装，此时package.json里不是固定的版本，因此就必须保证package-lock.json和node_modules不会同时删除后再install（**实际中很容易这么操作**）。如果这样操作后，会安装最新的包，并且package.json里还是显示的旧版本，会有点莫名其妙。\n\n  2.1、当然，你也可以在npm i xxx@xxx之后，手动把package.json里的兼容版本改成固定版本（去掉^），但经验告诉我们，一般不会那么做。\n  \n  \n** 题外话：在过程中，遇到一个问题，就是删除package-lock.json后，再重新npm install生成的package-lock.json并没有自动加入git版本管理（项目里的.gitignore里没有加上)。最后发现是全局把package-lock.json加入gitignore里了，参照：https://cloud.tencent.com/developer/article/1478104 ","slug":"yarn和npm对比","published":1,"updated":"2022-06-15T08:28:29.414Z","_id":"cl4e3aywc0013k4rq1lethby0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前开发项目一直使用的npm，没出啥篓子，直到今天…</p>\n<span id=\"more\"></span>\n<p>事情是这样的：</p>\n<ul>\n<li>项目框架： vue, vant</li>\n<li>开发时使用：npm</li>\n<li>测试环境部署：gitlab + hook（npm）</li>\n<li>正式环境部署：walle（yarn）</li>\n</ul>\n<p>事故：项目最开始是用的npm包管理，安装的vant版本是^2.8.4，本地开发和测试环境都正常，上线到正式环境后，出现一个bug。找了半天，发现是vant最新更新到了2.10.5，导致的一个bug。查看测试环境和正式环境对应的vant版本，发现测试环境是2.8.4，而正式环境已经变成了最新的2.10.5。比较诧异为什么会这样，于是有了下面的探索…</p>\n<h4 id=\"一、yarn、npm对比\"><a href=\"#一、yarn、npm对比\" class=\"headerlink\" title=\"一、yarn、npm对比\"></a>一、yarn、npm对比</h4><p>可以参照 <a href=\"https://stackshare.io/stackups/npm-vs-yarn\">https://stackshare.io/stackups/npm-vs-yarn</a> 这篇文章，大致可以归纳为下面几点：</p>\n<ul>\n<li>yarn 安装速度 快于npm</li>\n<li>yarn self-update 支持yarn自身升级，npm不支持</li>\n<li>yarn 支持离线下载之前安装过的包，因为yarn是把所有的包放到用户磁盘，而不是单个项目</li>\n<li>yarn 支持平行安装，npm只是串行，这也是yarn安装速度更快的原因</li>\n</ul>\n<h4 id=\"二、package-lock-json-yarn-lock\"><a href=\"#二、package-lock-json-yarn-lock\" class=\"headerlink\" title=\"二、package-lock.json  yarn.lock\"></a>二、package-lock.json  yarn.lock</h4><p>一个项目肯定会多人同时开发，因此每个人install的包版本可能会不同，此时会导致各种奇怪的bug。为了使大家机器上的package版本一致，npm引入了package-lock.json，yarn引入了yarn.lock。它俩的原理都差不多，都是每次install后会在各自的lock文件里注明各个包的版本、下载链接，然后再其他人电脑上Install的时候，会优先用lock文件里的版本。但是它们也有区别：如下。</p>\n<h4 id=\"三、实验\"><a href=\"#三、实验\" class=\"headerlink\" title=\"三、实验\"></a>三、实验</h4><p>1.安装一个新的package，以<a href=\"mailto:&#x76;&#97;&#110;&#116;&#64;&#50;&#46;&#56;&#46;&#x34;\">&#x76;&#97;&#110;&#116;&#64;&#50;&#46;&#56;&#46;&#x34;</a>为例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add vant@2.8.4</span><br><span class=\"line\"></span><br><span class=\"line\">npm install vant@2.8.4</span><br></pre></td></tr></table></figure>\n<p>过程都很顺利，安装完成我们对比package.json发现，**<em>yarn安装的版本前面没有^，也就是yarn是安装的指定版本，而npm安装的前面带有^</em>**。</p>\n<p>2.重新执行一遍install</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn </span><br><span class=\"line\"></span><br><span class=\"line\">npm i</span><br></pre></td></tr></table></figure>\n<p>此时，两边表现正常，都还是2.8.4，因为有lock文件的限制。</p>\n<p>3.修改yarn安装的包版本号，在2.8.4前面加上^，变成^2.8.4，再执行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn</span><br></pre></td></tr></table></figure>\n<p>我们发现，_<strong>node__modules里面和yarn.lock的vant的版本变成了最新的2.10.6，但是package.json还是^2.8.4</strong>_。这就是开头讲到的那个线上bug产生的原因了。由于项目前期是通过npm安装的，所以vant的版本为^2.8.4。然后测试环境部署用的npm，加上package-lock.json的限制，测试环境node_modules里面仍然是2.8.4版本。而正式环境是用yarn部署的，就自动更新成最新版本的2.10.6了。</p>\n<p>到此，我们大概就明白了两者的包管理流程，以及对应的lock文件的作用了：</p>\n<ul>\n<li><strong>yarn安装的时候会指定版本(前面不加^)，如果加上^，会每次下载最新的版本，同时更新yarn.lock</strong>。</li>\n<li>npm安装的时候会在版本前加^，然后靠着package-lock.json里来限制不更新为最新版本(<strong>不全对</strong>)。</li>\n</ul>\n<p>4.为了验证上面的猜想，我们继续试验：</p>\n<p>  4.1、删除package-lock.json文件，然后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i</span><br></pre></td></tr></table></figure>\n<p>我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。咦？是不是我们上面的猜想错了？</p>\n<p>  4.2、我们继续，保留package-lock.json，删除node_modules里面的vany目录，然后npm i。</p>\n<p>我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。</p>\n<p>  4.3、我们再进一步：，<strong>同时删除package-lock.json和node_modules里的vant目录，然后npm i</strong>。</p>\n<p>至此，我们发现node_modules里和package-lock.json里都变成了最新的2.10.6。所以我们可以确定的是，_<strong>如果仅删除package-lock或者仅删除node_modules里面的vant目录，npm i的时候，不会进行升级</strong>_。</p>\n<ul>\n<li>注：可能各个版本的npm有差异（上面实验时npm的版本是6.11.3）</li>\n</ul>\n<p>5.继续把两个项目里package.json里面vant的版本都更改成2.10.6，然后install，两者都升级成2.10.6。这里都在意料之中。</p>\n<p>6.我们再近一步，上面5中已经升级成最新的2.10.6了，我们现在来进行降级处理。</p>\n<ul>\n<li>1、手动改package.json里的版本为固定版本2.8.4（注：前面没有^），然后执行install。（结果：yarn降级成功，npm仍然是最新的版本）。</li>\n<li>2、继续删除package-lock.json文件，然后install，发现npm仍然是最新的。</li>\n<li>3、删除package-lock.json文件和node_modules里vant目录，然后install，发现降级成功。</li>\n</ul>\n<h4 id=\"四、结论\"><a href=\"#四、结论\" class=\"headerlink\" title=\"四、结论\"></a>四、结论</h4><ul>\n<li>yarn以package.json为准，所以yarn add xxx@xxx的时候，在package.json里生成的是固定版本（前面不带^），依次来保证每个开发者安装的包版本一致。</li>\n<li>npm同时受package-lock.json和node_modules目录的影响，所以npm i xxx@xxx的时候，在package.json里生成的是向后兼容的版本（前面带^）。因此，为了保证每个开发者安装的版本一致，<strong>我们需要把package-lock.json加到git版本管理里</strong>。</li>\n</ul>\n<h4 id=\"五、常见场景\"><a href=\"#五、常见场景\" class=\"headerlink\" title=\"五、常见场景\"></a>五、常见场景</h4><p>对于比较稳定可靠的package，不论是哪种方式，都影响不大，比如ant-design。<br>对于稍微小众一点的package，有可能小版本的升级会出现bug，这种情况下，最好是固定一个版本，不让随意升级。此时有两种方案：</p>\n<ul>\n<li><p>1.通过yarn add来安装，安装后默认指定固定版本，后续就算你删除node_modules或yarn.lock，再重新add，都不会自动升级。</p>\n</li>\n<li><p>2.通过npm i来安装，此时package.json里不是固定的版本，因此就必须保证package-lock.json和node_modules不会同时删除后再install（<strong>实际中很容易这么操作</strong>）。如果这样操作后，会安装最新的包，并且package.json里还是显示的旧版本，会有点莫名其妙。</p>\n<p>2.1、当然，你也可以在npm i xxx@xxx之后，手动把package.json里的兼容版本改成固定版本（去掉^），但经验告诉我们，一般不会那么做。</p>\n</li>\n</ul>\n<p>** 题外话：在过程中，遇到一个问题，就是删除package-lock.json后，再重新npm install生成的package-lock.json并没有自动加入git版本管理（项目里的.gitignore里没有加上)。最后发现是全局把package-lock.json加入gitignore里了，参照：<a href=\"https://cloud.tencent.com/developer/article/1478104\">https://cloud.tencent.com/developer/article/1478104</a> </p>\n","site":{"data":{}},"excerpt":"<p>之前开发项目一直使用的npm，没出啥篓子，直到今天…</p>","more":"<p>事情是这样的：</p>\n<ul>\n<li>项目框架： vue, vant</li>\n<li>开发时使用：npm</li>\n<li>测试环境部署：gitlab + hook（npm）</li>\n<li>正式环境部署：walle（yarn）</li>\n</ul>\n<p>事故：项目最开始是用的npm包管理，安装的vant版本是^2.8.4，本地开发和测试环境都正常，上线到正式环境后，出现一个bug。找了半天，发现是vant最新更新到了2.10.5，导致的一个bug。查看测试环境和正式环境对应的vant版本，发现测试环境是2.8.4，而正式环境已经变成了最新的2.10.5。比较诧异为什么会这样，于是有了下面的探索…</p>\n<h4 id=\"一、yarn、npm对比\"><a href=\"#一、yarn、npm对比\" class=\"headerlink\" title=\"一、yarn、npm对比\"></a>一、yarn、npm对比</h4><p>可以参照 <a href=\"https://stackshare.io/stackups/npm-vs-yarn\">https://stackshare.io/stackups/npm-vs-yarn</a> 这篇文章，大致可以归纳为下面几点：</p>\n<ul>\n<li>yarn 安装速度 快于npm</li>\n<li>yarn self-update 支持yarn自身升级，npm不支持</li>\n<li>yarn 支持离线下载之前安装过的包，因为yarn是把所有的包放到用户磁盘，而不是单个项目</li>\n<li>yarn 支持平行安装，npm只是串行，这也是yarn安装速度更快的原因</li>\n</ul>\n<h4 id=\"二、package-lock-json-yarn-lock\"><a href=\"#二、package-lock-json-yarn-lock\" class=\"headerlink\" title=\"二、package-lock.json  yarn.lock\"></a>二、package-lock.json  yarn.lock</h4><p>一个项目肯定会多人同时开发，因此每个人install的包版本可能会不同，此时会导致各种奇怪的bug。为了使大家机器上的package版本一致，npm引入了package-lock.json，yarn引入了yarn.lock。它俩的原理都差不多，都是每次install后会在各自的lock文件里注明各个包的版本、下载链接，然后再其他人电脑上Install的时候，会优先用lock文件里的版本。但是它们也有区别：如下。</p>\n<h4 id=\"三、实验\"><a href=\"#三、实验\" class=\"headerlink\" title=\"三、实验\"></a>三、实验</h4><p>1.安装一个新的package，以<a href=\"mailto:&#x76;&#97;&#110;&#116;&#64;&#50;&#46;&#56;&#46;&#x34;\">&#x76;&#97;&#110;&#116;&#64;&#50;&#46;&#56;&#46;&#x34;</a>为例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add vant@2.8.4</span><br><span class=\"line\"></span><br><span class=\"line\">npm install vant@2.8.4</span><br></pre></td></tr></table></figure>\n<p>过程都很顺利，安装完成我们对比package.json发现，**<em>yarn安装的版本前面没有^，也就是yarn是安装的指定版本，而npm安装的前面带有^</em>**。</p>\n<p>2.重新执行一遍install</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn </span><br><span class=\"line\"></span><br><span class=\"line\">npm i</span><br></pre></td></tr></table></figure>\n<p>此时，两边表现正常，都还是2.8.4，因为有lock文件的限制。</p>\n<p>3.修改yarn安装的包版本号，在2.8.4前面加上^，变成^2.8.4，再执行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn</span><br></pre></td></tr></table></figure>\n<p>我们发现，_<strong>node__modules里面和yarn.lock的vant的版本变成了最新的2.10.6，但是package.json还是^2.8.4</strong>_。这就是开头讲到的那个线上bug产生的原因了。由于项目前期是通过npm安装的，所以vant的版本为^2.8.4。然后测试环境部署用的npm，加上package-lock.json的限制，测试环境node_modules里面仍然是2.8.4版本。而正式环境是用yarn部署的，就自动更新成最新版本的2.10.6了。</p>\n<p>到此，我们大概就明白了两者的包管理流程，以及对应的lock文件的作用了：</p>\n<ul>\n<li><strong>yarn安装的时候会指定版本(前面不加^)，如果加上^，会每次下载最新的版本，同时更新yarn.lock</strong>。</li>\n<li>npm安装的时候会在版本前加^，然后靠着package-lock.json里来限制不更新为最新版本(<strong>不全对</strong>)。</li>\n</ul>\n<p>4.为了验证上面的猜想，我们继续试验：</p>\n<p>  4.1、删除package-lock.json文件，然后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i</span><br></pre></td></tr></table></figure>\n<p>我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。咦？是不是我们上面的猜想错了？</p>\n<p>  4.2、我们继续，保留package-lock.json，删除node_modules里面的vany目录，然后npm i。</p>\n<p>我们发现新生成的package-lock.json以及node_modules里面的vant都是2.8.4。</p>\n<p>  4.3、我们再进一步：，<strong>同时删除package-lock.json和node_modules里的vant目录，然后npm i</strong>。</p>\n<p>至此，我们发现node_modules里和package-lock.json里都变成了最新的2.10.6。所以我们可以确定的是，_<strong>如果仅删除package-lock或者仅删除node_modules里面的vant目录，npm i的时候，不会进行升级</strong>_。</p>\n<ul>\n<li>注：可能各个版本的npm有差异（上面实验时npm的版本是6.11.3）</li>\n</ul>\n<p>5.继续把两个项目里package.json里面vant的版本都更改成2.10.6，然后install，两者都升级成2.10.6。这里都在意料之中。</p>\n<p>6.我们再近一步，上面5中已经升级成最新的2.10.6了，我们现在来进行降级处理。</p>\n<ul>\n<li>1、手动改package.json里的版本为固定版本2.8.4（注：前面没有^），然后执行install。（结果：yarn降级成功，npm仍然是最新的版本）。</li>\n<li>2、继续删除package-lock.json文件，然后install，发现npm仍然是最新的。</li>\n<li>3、删除package-lock.json文件和node_modules里vant目录，然后install，发现降级成功。</li>\n</ul>\n<h4 id=\"四、结论\"><a href=\"#四、结论\" class=\"headerlink\" title=\"四、结论\"></a>四、结论</h4><ul>\n<li>yarn以package.json为准，所以yarn add xxx@xxx的时候，在package.json里生成的是固定版本（前面不带^），依次来保证每个开发者安装的包版本一致。</li>\n<li>npm同时受package-lock.json和node_modules目录的影响，所以npm i xxx@xxx的时候，在package.json里生成的是向后兼容的版本（前面带^）。因此，为了保证每个开发者安装的版本一致，<strong>我们需要把package-lock.json加到git版本管理里</strong>。</li>\n</ul>\n<h4 id=\"五、常见场景\"><a href=\"#五、常见场景\" class=\"headerlink\" title=\"五、常见场景\"></a>五、常见场景</h4><p>对于比较稳定可靠的package，不论是哪种方式，都影响不大，比如ant-design。<br>对于稍微小众一点的package，有可能小版本的升级会出现bug，这种情况下，最好是固定一个版本，不让随意升级。此时有两种方案：</p>\n<ul>\n<li><p>1.通过yarn add来安装，安装后默认指定固定版本，后续就算你删除node_modules或yarn.lock，再重新add，都不会自动升级。</p>\n</li>\n<li><p>2.通过npm i来安装，此时package.json里不是固定的版本，因此就必须保证package-lock.json和node_modules不会同时删除后再install（<strong>实际中很容易这么操作</strong>）。如果这样操作后，会安装最新的包，并且package.json里还是显示的旧版本，会有点莫名其妙。</p>\n<p>2.1、当然，你也可以在npm i xxx@xxx之后，手动把package.json里的兼容版本改成固定版本（去掉^），但经验告诉我们，一般不会那么做。</p>\n</li>\n</ul>\n<p>** 题外话：在过程中，遇到一个问题，就是删除package-lock.json后，再重新npm install生成的package-lock.json并没有自动加入git版本管理（项目里的.gitignore里没有加上)。最后发现是全局把package-lock.json加入gitignore里了，参照：<a href=\"https://cloud.tencent.com/developer/article/1478104\">https://cloud.tencent.com/developer/article/1478104</a> </p>"},{"title":"习题","date":"2019-09-19T16:00:00.000Z","_content":"\n时间如白驹过隙，距2013年毕业典礼已经6年了。6年时间，说短不短，也算是半个职场老鸟了。\n<!-- more -->\n    问自己一句话：\"爱这个行业吗？\"\n仔细一想，似乎很难给出个准确的答案（或许这也正是我的一个性格缺陷吧，很多事做的模模糊糊的）。说爱吧，其实不算是自己的一个兴趣点（一个具体表现就是：在闲暇时间，在玩和编码之间，我会毫不犹豫的选择玩），或许绝大部分原因是为了这行的收入还不错；说不爱吧，但还比较喜欢程序员的这种工作氛围，没有纷争，没有勾心斗角，跟计算机打交道比跟人打交道简单多了。\n    从参加工作以来，感觉整个人越来越矛盾，很多时候会犹豫做一件事，做完立马又后悔的那种。\n总是埋头向前，像被架上枷锁拉磨的驴，被动式的走。每到一个新环境，一开始还有斗志，了解新工作的七七八八，等业务熟练下来了，就开始松懈了。\n\n+ 开始满足与小小的成就；\n+ 唯一一本技术相关的书看了几年还是99新；\n+ 稍微闲一点就开小差做其他事去了；\n+ 开始很轻易被打断；\n+ 遇到问题总想着搁到明天（浏览器里开了n个tab，搜索着各种问题，tab越开越多，却未见减少）；\n+ 开始被动接收，遇到问题各种查，不曾想知其所以然；\n+ 甚至有时候各种阿Q精神；\n\n回首这6年，培训过安卓，做过.NET，然后转前端、做node。什么都搞，却什么都不精，不系统性，颇有猴子掰玉米之意，如墙头小草。到现在为止，还没有一样能跟工作年限对称得上的技术，很多时候开始迷茫。\n需要冷静下来好好思考了，好好规划规划，那个曾经只需要学习，其他什么都不用考虑的学生时代过去了。\n脑海里突然显现出一句话：当你的能力支撑不住你的野心时，你需要学习。\n从今天开始，给自己立个标准：遇到问题及时解决，不拖拖拉拉，多深钻，多总结。\n\n#### 一、数组去重\n参照另一篇文章『几种JS里数组去重方法比较』\n\n#### 二、闭包的好处\n定义：\n好处：\n    1.可以读取函数内部的变量    \n    2.可以让变量始终保存到内存中\n\n#### 三、deep_clone\n参照另一篇文章『浅谈js中对象的赋值、深拷贝、浅拷贝』\n\n#### 四、vuex数据流向\n概念：vuex作为VUE全家桶里的一员，作为公共数据集中存储仓库。它只是状态管理器，不能做持久化存储。\n使用场景：1.多个组件见传值    2.单页应用中状态管理\n特点：1.单向数据流    2.响应式的\n流程图：<img src=\"https://img2018.cnblogs.com/blog/1581023/201902/1581023-20190222191642909-1072295625.png\" alt=\"vuex流程图\" title=\"vuex流程图\">\n使用：\n```js\nimport Vuex from 'vuex';\nVue.use(Vuex);\nconst store = new Vuex.store({\n    state: {},\n    actions: {},\n    mutations: {}\n});\nexport default store;\n```\n\n```js\nimport store from './store';\nnew Vue({\n    el: '#app',\n    router,\n    store,\n    components: {}\n})\n```\n\n数据流动：\n    1.首先在组件里直接用this.$store.state.xxx取值渲染\n    2.修改状态值的话，需要先在组件里this.$store.dispatch一个actions\n    3.store里对应actions里面接收参数，然后commit一个mutations\n    4.在mutations里直接state.xxx='xxx'修改状态\n    5.由于是响应式的，状态值改变了，组件里对应的展示也自动修改了\n\n#### 五、addEventListener的第三个参数\n定义：第三个参数是useCapture，boolean类型（为true就在捕获过程中执行，反之就在冒泡过程中执行处理函数）\n用途：参照 https://blog.csdn.net/kongjiea/article/details/39023505\n扩展知识：\n    1.阻止冒泡（IE8: event.cancelBubble = true   Others: event.stopPropagation() ）\n    2.阻止默认行为，如a标签的跳转行为（IE8: window.event.returnValue = false    Others: event.preventDefault() ）\n\n#### 六、点击击穿  浮层固定背景\n1.加大于300ms的消失动画\n2.fastClick（原理是去掉移动端的click事件，改用touch）\n\n#### 七、轮播图上下闪动解决办法\n// todo\n\n#### 八、flex布局\n```html\n<div class=\"box\">\n     <section class=\"inner\">我是内容</section>\n</div>\n```\n\n```css\n.box {\n    display: flex;\n    justify-content: center; /* 水平居中 */\n    align-items: center; /* 垂直居中 */\n}\n.inner {\n    margin: 50px 0;\n}\n```\n\n更多居中方式参照『实用-css容器垂直水平居中』\n\n#### 九、vue和react区别\n1.vue用类似html的模板，react使用jsx（在js逻辑中嵌入html标签）\n2.vue的css一般写在组件内部，react是单独的css文件\n3.改变状态：vue直接this.xx='xx'，react需要用this.setState({})\n4.父子组件传值：vue在子组件里$emit，react在子组件里调用this.props.函数名\n5.双向绑定：react严格说是单向的，需要手动setState，vue可以直接用v-model实现双向\n\n#### 十、JS运行机制\n1.js是单线程，只有一个主线程，同步任务在主线程执行；同时还存在一个任务队列\n2.异步有运行结果、定时器时间到了后会在任务队列里放置一个事件\n3.当主线程里的同步任务都执行完了，会读取任务队列，放入主线程执行\n4.反复第3步\n\n#### 十一、NodeJS洋葱模型\n解释：一个请求到后端后，开始接触洋葱最外层；遇到一个next()，就进入下一层，直到遇到没有next的中间件或者中间件报错，就认为到达中心，然后开始往外扩散，继续执行之前中间件里next之后的代码。\n注意：所有中间件之间传递的是context，而并非request或者response。\n\n#### 十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\n在页面够子函数beforeUnload里把状态存到localStorage里，然后进页面的时候在created够子函数里取出storage里面的值并更新states\n\n#### 十三、react里setState是同步还是异步，中间都做了啥\nReact库控制时异步，否则同步（https://www.jianshu.com/p/3a4dcd2b5b80）\n\n#### 十四、setTimeout和Promise执行顺序\n答案：setTimeout的执行顺序小于Promise、async（https://blog.csdn.net/weixin_43606158/article/details/91360230）\n原因：setTimeout(fn, 0)在下一轮“事件循环”开始时执行，Promise.then()在本轮“事件循环”结束时执行。因此then 函数先输出，settimeout后输出。\n\n#### 十五、jsonp请求原理\n解决的问题：同源策略引起的跨域请求\n原理：1.浏览器端：生成callback方法，然后动态添加一个script标签，src为请求地址，带上callback方法名。\n     2.服务器端：收到请求，处理业务，然后返回内容为执行callback方法，如：callback(data)。\n\n#### 十六、NodeJS中间件运行机制\nhttps://github.com/mly-zju/blog/issues/5\n// todo\n\n#### 十七、跨域解决方案\n1、jsonp（请求script）\n2、空form\n3、CORS\n4、nginx代理\n\n** VUE经典面试题： https://muyiy.cn/question/\n\n** 本文持续更新...\n","source":"_posts/习题.md","raw":"---\ntitle: 习题\ndate: 2019-09-20\ncategories: 前端\ntags: \n    - 前端\n    - JS\n#description: \n---\n\n时间如白驹过隙，距2013年毕业典礼已经6年了。6年时间，说短不短，也算是半个职场老鸟了。\n<!-- more -->\n    问自己一句话：\"爱这个行业吗？\"\n仔细一想，似乎很难给出个准确的答案（或许这也正是我的一个性格缺陷吧，很多事做的模模糊糊的）。说爱吧，其实不算是自己的一个兴趣点（一个具体表现就是：在闲暇时间，在玩和编码之间，我会毫不犹豫的选择玩），或许绝大部分原因是为了这行的收入还不错；说不爱吧，但还比较喜欢程序员的这种工作氛围，没有纷争，没有勾心斗角，跟计算机打交道比跟人打交道简单多了。\n    从参加工作以来，感觉整个人越来越矛盾，很多时候会犹豫做一件事，做完立马又后悔的那种。\n总是埋头向前，像被架上枷锁拉磨的驴，被动式的走。每到一个新环境，一开始还有斗志，了解新工作的七七八八，等业务熟练下来了，就开始松懈了。\n\n+ 开始满足与小小的成就；\n+ 唯一一本技术相关的书看了几年还是99新；\n+ 稍微闲一点就开小差做其他事去了；\n+ 开始很轻易被打断；\n+ 遇到问题总想着搁到明天（浏览器里开了n个tab，搜索着各种问题，tab越开越多，却未见减少）；\n+ 开始被动接收，遇到问题各种查，不曾想知其所以然；\n+ 甚至有时候各种阿Q精神；\n\n回首这6年，培训过安卓，做过.NET，然后转前端、做node。什么都搞，却什么都不精，不系统性，颇有猴子掰玉米之意，如墙头小草。到现在为止，还没有一样能跟工作年限对称得上的技术，很多时候开始迷茫。\n需要冷静下来好好思考了，好好规划规划，那个曾经只需要学习，其他什么都不用考虑的学生时代过去了。\n脑海里突然显现出一句话：当你的能力支撑不住你的野心时，你需要学习。\n从今天开始，给自己立个标准：遇到问题及时解决，不拖拖拉拉，多深钻，多总结。\n\n#### 一、数组去重\n参照另一篇文章『几种JS里数组去重方法比较』\n\n#### 二、闭包的好处\n定义：\n好处：\n    1.可以读取函数内部的变量    \n    2.可以让变量始终保存到内存中\n\n#### 三、deep_clone\n参照另一篇文章『浅谈js中对象的赋值、深拷贝、浅拷贝』\n\n#### 四、vuex数据流向\n概念：vuex作为VUE全家桶里的一员，作为公共数据集中存储仓库。它只是状态管理器，不能做持久化存储。\n使用场景：1.多个组件见传值    2.单页应用中状态管理\n特点：1.单向数据流    2.响应式的\n流程图：<img src=\"https://img2018.cnblogs.com/blog/1581023/201902/1581023-20190222191642909-1072295625.png\" alt=\"vuex流程图\" title=\"vuex流程图\">\n使用：\n```js\nimport Vuex from 'vuex';\nVue.use(Vuex);\nconst store = new Vuex.store({\n    state: {},\n    actions: {},\n    mutations: {}\n});\nexport default store;\n```\n\n```js\nimport store from './store';\nnew Vue({\n    el: '#app',\n    router,\n    store,\n    components: {}\n})\n```\n\n数据流动：\n    1.首先在组件里直接用this.$store.state.xxx取值渲染\n    2.修改状态值的话，需要先在组件里this.$store.dispatch一个actions\n    3.store里对应actions里面接收参数，然后commit一个mutations\n    4.在mutations里直接state.xxx='xxx'修改状态\n    5.由于是响应式的，状态值改变了，组件里对应的展示也自动修改了\n\n#### 五、addEventListener的第三个参数\n定义：第三个参数是useCapture，boolean类型（为true就在捕获过程中执行，反之就在冒泡过程中执行处理函数）\n用途：参照 https://blog.csdn.net/kongjiea/article/details/39023505\n扩展知识：\n    1.阻止冒泡（IE8: event.cancelBubble = true   Others: event.stopPropagation() ）\n    2.阻止默认行为，如a标签的跳转行为（IE8: window.event.returnValue = false    Others: event.preventDefault() ）\n\n#### 六、点击击穿  浮层固定背景\n1.加大于300ms的消失动画\n2.fastClick（原理是去掉移动端的click事件，改用touch）\n\n#### 七、轮播图上下闪动解决办法\n// todo\n\n#### 八、flex布局\n```html\n<div class=\"box\">\n     <section class=\"inner\">我是内容</section>\n</div>\n```\n\n```css\n.box {\n    display: flex;\n    justify-content: center; /* 水平居中 */\n    align-items: center; /* 垂直居中 */\n}\n.inner {\n    margin: 50px 0;\n}\n```\n\n更多居中方式参照『实用-css容器垂直水平居中』\n\n#### 九、vue和react区别\n1.vue用类似html的模板，react使用jsx（在js逻辑中嵌入html标签）\n2.vue的css一般写在组件内部，react是单独的css文件\n3.改变状态：vue直接this.xx='xx'，react需要用this.setState({})\n4.父子组件传值：vue在子组件里$emit，react在子组件里调用this.props.函数名\n5.双向绑定：react严格说是单向的，需要手动setState，vue可以直接用v-model实现双向\n\n#### 十、JS运行机制\n1.js是单线程，只有一个主线程，同步任务在主线程执行；同时还存在一个任务队列\n2.异步有运行结果、定时器时间到了后会在任务队列里放置一个事件\n3.当主线程里的同步任务都执行完了，会读取任务队列，放入主线程执行\n4.反复第3步\n\n#### 十一、NodeJS洋葱模型\n解释：一个请求到后端后，开始接触洋葱最外层；遇到一个next()，就进入下一层，直到遇到没有next的中间件或者中间件报错，就认为到达中心，然后开始往外扩散，继续执行之前中间件里next之后的代码。\n注意：所有中间件之间传递的是context，而并非request或者response。\n\n#### 十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\n在页面够子函数beforeUnload里把状态存到localStorage里，然后进页面的时候在created够子函数里取出storage里面的值并更新states\n\n#### 十三、react里setState是同步还是异步，中间都做了啥\nReact库控制时异步，否则同步（https://www.jianshu.com/p/3a4dcd2b5b80）\n\n#### 十四、setTimeout和Promise执行顺序\n答案：setTimeout的执行顺序小于Promise、async（https://blog.csdn.net/weixin_43606158/article/details/91360230）\n原因：setTimeout(fn, 0)在下一轮“事件循环”开始时执行，Promise.then()在本轮“事件循环”结束时执行。因此then 函数先输出，settimeout后输出。\n\n#### 十五、jsonp请求原理\n解决的问题：同源策略引起的跨域请求\n原理：1.浏览器端：生成callback方法，然后动态添加一个script标签，src为请求地址，带上callback方法名。\n     2.服务器端：收到请求，处理业务，然后返回内容为执行callback方法，如：callback(data)。\n\n#### 十六、NodeJS中间件运行机制\nhttps://github.com/mly-zju/blog/issues/5\n// todo\n\n#### 十七、跨域解决方案\n1、jsonp（请求script）\n2、空form\n3、CORS\n4、nginx代理\n\n** VUE经典面试题： https://muyiy.cn/question/\n\n** 本文持续更新...\n","slug":"习题","published":1,"updated":"2022-06-15T08:26:56.624Z","_id":"cl4e3aywd0017k4rq2khspe2d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>时间如白驹过隙，距2013年毕业典礼已经6年了。6年时间，说短不短，也算是半个职场老鸟了。</p>\n<span id=\"more\"></span>\n<pre><code>问自己一句话：&quot;爱这个行业吗？&quot;\n</code></pre>\n<p>仔细一想，似乎很难给出个准确的答案（或许这也正是我的一个性格缺陷吧，很多事做的模模糊糊的）。说爱吧，其实不算是自己的一个兴趣点（一个具体表现就是：在闲暇时间，在玩和编码之间，我会毫不犹豫的选择玩），或许绝大部分原因是为了这行的收入还不错；说不爱吧，但还比较喜欢程序员的这种工作氛围，没有纷争，没有勾心斗角，跟计算机打交道比跟人打交道简单多了。<br>    从参加工作以来，感觉整个人越来越矛盾，很多时候会犹豫做一件事，做完立马又后悔的那种。<br>总是埋头向前，像被架上枷锁拉磨的驴，被动式的走。每到一个新环境，一开始还有斗志，了解新工作的七七八八，等业务熟练下来了，就开始松懈了。</p>\n<ul>\n<li>开始满足与小小的成就；</li>\n<li>唯一一本技术相关的书看了几年还是99新；</li>\n<li>稍微闲一点就开小差做其他事去了；</li>\n<li>开始很轻易被打断；</li>\n<li>遇到问题总想着搁到明天（浏览器里开了n个tab，搜索着各种问题，tab越开越多，却未见减少）；</li>\n<li>开始被动接收，遇到问题各种查，不曾想知其所以然；</li>\n<li>甚至有时候各种阿Q精神；</li>\n</ul>\n<p>回首这6年，培训过安卓，做过.NET，然后转前端、做node。什么都搞，却什么都不精，不系统性，颇有猴子掰玉米之意，如墙头小草。到现在为止，还没有一样能跟工作年限对称得上的技术，很多时候开始迷茫。<br>需要冷静下来好好思考了，好好规划规划，那个曾经只需要学习，其他什么都不用考虑的学生时代过去了。<br>脑海里突然显现出一句话：当你的能力支撑不住你的野心时，你需要学习。<br>从今天开始，给自己立个标准：遇到问题及时解决，不拖拖拉拉，多深钻，多总结。</p>\n<h4 id=\"一、数组去重\"><a href=\"#一、数组去重\" class=\"headerlink\" title=\"一、数组去重\"></a>一、数组去重</h4><p>参照另一篇文章『几种JS里数组去重方法比较』</p>\n<h4 id=\"二、闭包的好处\"><a href=\"#二、闭包的好处\" class=\"headerlink\" title=\"二、闭包的好处\"></a>二、闭包的好处</h4><p>定义：<br>好处：<br>    1.可以读取函数内部的变量<br>    2.可以让变量始终保存到内存中</p>\n<h4 id=\"三、deep-clone\"><a href=\"#三、deep-clone\" class=\"headerlink\" title=\"三、deep_clone\"></a>三、deep_clone</h4><p>参照另一篇文章『浅谈js中对象的赋值、深拷贝、浅拷贝』</p>\n<h4 id=\"四、vuex数据流向\"><a href=\"#四、vuex数据流向\" class=\"headerlink\" title=\"四、vuex数据流向\"></a>四、vuex数据流向</h4><p>概念：vuex作为VUE全家桶里的一员，作为公共数据集中存储仓库。它只是状态管理器，不能做持久化存储。<br>使用场景：1.多个组件见传值    2.单页应用中状态管理<br>特点：1.单向数据流    2.响应式的<br>流程图：<img src=\"https://img2018.cnblogs.com/blog/1581023/201902/1581023-20190222191642909-1072295625.png\" alt=\"vuex流程图\" title=\"vuex流程图\"><br>使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Vuex</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title function_\">store</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">    router,</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>数据流动：<br>    1.首先在组件里直接用this.$store.state.xxx取值渲染<br>    2.修改状态值的话，需要先在组件里this.$store.dispatch一个actions<br>    3.store里对应actions里面接收参数，然后commit一个mutations<br>    4.在mutations里直接state.xxx&#x3D;’xxx’修改状态<br>    5.由于是响应式的，状态值改变了，组件里对应的展示也自动修改了</p>\n<h4 id=\"五、addEventListener的第三个参数\"><a href=\"#五、addEventListener的第三个参数\" class=\"headerlink\" title=\"五、addEventListener的第三个参数\"></a>五、addEventListener的第三个参数</h4><p>定义：第三个参数是useCapture，boolean类型（为true就在捕获过程中执行，反之就在冒泡过程中执行处理函数）<br>用途：参照 <a href=\"https://blog.csdn.net/kongjiea/article/details/39023505\">https://blog.csdn.net/kongjiea/article/details/39023505</a><br>扩展知识：<br>    1.阻止冒泡（IE8: event.cancelBubble &#x3D; true   Others: event.stopPropagation() ）<br>    2.阻止默认行为，如a标签的跳转行为（IE8: window.event.returnValue &#x3D; false    Others: event.preventDefault() ）</p>\n<h4 id=\"六、点击击穿-浮层固定背景\"><a href=\"#六、点击击穿-浮层固定背景\" class=\"headerlink\" title=\"六、点击击穿  浮层固定背景\"></a>六、点击击穿  浮层固定背景</h4><p>1.加大于300ms的消失动画<br>2.fastClick（原理是去掉移动端的click事件，改用touch）</p>\n<h4 id=\"七、轮播图上下闪动解决办法\"><a href=\"#七、轮播图上下闪动解决办法\" class=\"headerlink\" title=\"七、轮播图上下闪动解决办法\"></a>七、轮播图上下闪动解决办法</h4><p>&#x2F;&#x2F; todo</p>\n<h4 id=\"八、flex布局\"><a href=\"#八、flex布局\" class=\"headerlink\" title=\"八、flex布局\"></a>八、flex布局</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span>我是内容<span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center; <span class=\"comment\">/* 水平居中 */</span></span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center; <span class=\"comment\">/* 垂直居中 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>更多居中方式参照『实用-css容器垂直水平居中』</p>\n<h4 id=\"九、vue和react区别\"><a href=\"#九、vue和react区别\" class=\"headerlink\" title=\"九、vue和react区别\"></a>九、vue和react区别</h4><p>1.vue用类似html的模板，react使用jsx（在js逻辑中嵌入html标签）<br>2.vue的css一般写在组件内部，react是单独的css文件<br>3.改变状态：vue直接this.xx&#x3D;’xx’，react需要用this.setState({})<br>4.父子组件传值：vue在子组件里$emit，react在子组件里调用this.props.函数名<br>5.双向绑定：react严格说是单向的，需要手动setState，vue可以直接用v-model实现双向</p>\n<h4 id=\"十、JS运行机制\"><a href=\"#十、JS运行机制\" class=\"headerlink\" title=\"十、JS运行机制\"></a>十、JS运行机制</h4><p>1.js是单线程，只有一个主线程，同步任务在主线程执行；同时还存在一个任务队列<br>2.异步有运行结果、定时器时间到了后会在任务队列里放置一个事件<br>3.当主线程里的同步任务都执行完了，会读取任务队列，放入主线程执行<br>4.反复第3步</p>\n<h4 id=\"十一、NodeJS洋葱模型\"><a href=\"#十一、NodeJS洋葱模型\" class=\"headerlink\" title=\"十一、NodeJS洋葱模型\"></a>十一、NodeJS洋葱模型</h4><p>解释：一个请求到后端后，开始接触洋葱最外层；遇到一个next()，就进入下一层，直到遇到没有next的中间件或者中间件报错，就认为到达中心，然后开始往外扩散，继续执行之前中间件里next之后的代码。<br>注意：所有中间件之间传递的是context，而并非request或者response。</p>\n<h4 id=\"十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\"><a href=\"#十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\" class=\"headerlink\" title=\"十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\"></a>十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态</h4><p>在页面够子函数beforeUnload里把状态存到localStorage里，然后进页面的时候在created够子函数里取出storage里面的值并更新states</p>\n<h4 id=\"十三、react里setState是同步还是异步，中间都做了啥\"><a href=\"#十三、react里setState是同步还是异步，中间都做了啥\" class=\"headerlink\" title=\"十三、react里setState是同步还是异步，中间都做了啥\"></a>十三、react里setState是同步还是异步，中间都做了啥</h4><p>React库控制时异步，否则同步（<a href=\"https://www.jianshu.com/p/3a4dcd2b5b80%EF%BC%89\">https://www.jianshu.com/p/3a4dcd2b5b80）</a></p>\n<h4 id=\"十四、setTimeout和Promise执行顺序\"><a href=\"#十四、setTimeout和Promise执行顺序\" class=\"headerlink\" title=\"十四、setTimeout和Promise执行顺序\"></a>十四、setTimeout和Promise执行顺序</h4><p>答案：setTimeout的执行顺序小于Promise、async（<a href=\"https://blog.csdn.net/weixin_43606158/article/details/91360230%EF%BC%89\">https://blog.csdn.net/weixin_43606158/article/details/91360230）</a><br>原因：setTimeout(fn, 0)在下一轮“事件循环”开始时执行，Promise.then()在本轮“事件循环”结束时执行。因此then 函数先输出，settimeout后输出。</p>\n<h4 id=\"十五、jsonp请求原理\"><a href=\"#十五、jsonp请求原理\" class=\"headerlink\" title=\"十五、jsonp请求原理\"></a>十五、jsonp请求原理</h4><p>解决的问题：同源策略引起的跨域请求<br>原理：1.浏览器端：生成callback方法，然后动态添加一个script标签，src为请求地址，带上callback方法名。<br>     2.服务器端：收到请求，处理业务，然后返回内容为执行callback方法，如：callback(data)。</p>\n<h4 id=\"十六、NodeJS中间件运行机制\"><a href=\"#十六、NodeJS中间件运行机制\" class=\"headerlink\" title=\"十六、NodeJS中间件运行机制\"></a>十六、NodeJS中间件运行机制</h4><p><a href=\"https://github.com/mly-zju/blog/issues/5\">https://github.com/mly-zju/blog/issues/5</a><br>&#x2F;&#x2F; todo</p>\n<h4 id=\"十七、跨域解决方案\"><a href=\"#十七、跨域解决方案\" class=\"headerlink\" title=\"十七、跨域解决方案\"></a>十七、跨域解决方案</h4><p>1、jsonp（请求script）<br>2、空form<br>3、CORS<br>4、nginx代理</p>\n<p>** VUE经典面试题： <a href=\"https://muyiy.cn/question/\">https://muyiy.cn/question/</a></p>\n<p>** 本文持续更新…</p>\n","site":{"data":{}},"excerpt":"<p>时间如白驹过隙，距2013年毕业典礼已经6年了。6年时间，说短不短，也算是半个职场老鸟了。</p>","more":"<pre><code>问自己一句话：&quot;爱这个行业吗？&quot;\n</code></pre>\n<p>仔细一想，似乎很难给出个准确的答案（或许这也正是我的一个性格缺陷吧，很多事做的模模糊糊的）。说爱吧，其实不算是自己的一个兴趣点（一个具体表现就是：在闲暇时间，在玩和编码之间，我会毫不犹豫的选择玩），或许绝大部分原因是为了这行的收入还不错；说不爱吧，但还比较喜欢程序员的这种工作氛围，没有纷争，没有勾心斗角，跟计算机打交道比跟人打交道简单多了。<br>    从参加工作以来，感觉整个人越来越矛盾，很多时候会犹豫做一件事，做完立马又后悔的那种。<br>总是埋头向前，像被架上枷锁拉磨的驴，被动式的走。每到一个新环境，一开始还有斗志，了解新工作的七七八八，等业务熟练下来了，就开始松懈了。</p>\n<ul>\n<li>开始满足与小小的成就；</li>\n<li>唯一一本技术相关的书看了几年还是99新；</li>\n<li>稍微闲一点就开小差做其他事去了；</li>\n<li>开始很轻易被打断；</li>\n<li>遇到问题总想着搁到明天（浏览器里开了n个tab，搜索着各种问题，tab越开越多，却未见减少）；</li>\n<li>开始被动接收，遇到问题各种查，不曾想知其所以然；</li>\n<li>甚至有时候各种阿Q精神；</li>\n</ul>\n<p>回首这6年，培训过安卓，做过.NET，然后转前端、做node。什么都搞，却什么都不精，不系统性，颇有猴子掰玉米之意，如墙头小草。到现在为止，还没有一样能跟工作年限对称得上的技术，很多时候开始迷茫。<br>需要冷静下来好好思考了，好好规划规划，那个曾经只需要学习，其他什么都不用考虑的学生时代过去了。<br>脑海里突然显现出一句话：当你的能力支撑不住你的野心时，你需要学习。<br>从今天开始，给自己立个标准：遇到问题及时解决，不拖拖拉拉，多深钻，多总结。</p>\n<h4 id=\"一、数组去重\"><a href=\"#一、数组去重\" class=\"headerlink\" title=\"一、数组去重\"></a>一、数组去重</h4><p>参照另一篇文章『几种JS里数组去重方法比较』</p>\n<h4 id=\"二、闭包的好处\"><a href=\"#二、闭包的好处\" class=\"headerlink\" title=\"二、闭包的好处\"></a>二、闭包的好处</h4><p>定义：<br>好处：<br>    1.可以读取函数内部的变量<br>    2.可以让变量始终保存到内存中</p>\n<h4 id=\"三、deep-clone\"><a href=\"#三、deep-clone\" class=\"headerlink\" title=\"三、deep_clone\"></a>三、deep_clone</h4><p>参照另一篇文章『浅谈js中对象的赋值、深拷贝、浅拷贝』</p>\n<h4 id=\"四、vuex数据流向\"><a href=\"#四、vuex数据流向\" class=\"headerlink\" title=\"四、vuex数据流向\"></a>四、vuex数据流向</h4><p>概念：vuex作为VUE全家桶里的一员，作为公共数据集中存储仓库。它只是状态管理器，不能做持久化存储。<br>使用场景：1.多个组件见传值    2.单页应用中状态管理<br>特点：1.单向数据流    2.响应式的<br>流程图：<img src=\"https://img2018.cnblogs.com/blog/1581023/201902/1581023-20190222191642909-1072295625.png\" alt=\"vuex流程图\" title=\"vuex流程图\"><br>使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Vuex</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title function_\">store</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">    router,</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>数据流动：<br>    1.首先在组件里直接用this.$store.state.xxx取值渲染<br>    2.修改状态值的话，需要先在组件里this.$store.dispatch一个actions<br>    3.store里对应actions里面接收参数，然后commit一个mutations<br>    4.在mutations里直接state.xxx&#x3D;’xxx’修改状态<br>    5.由于是响应式的，状态值改变了，组件里对应的展示也自动修改了</p>\n<h4 id=\"五、addEventListener的第三个参数\"><a href=\"#五、addEventListener的第三个参数\" class=\"headerlink\" title=\"五、addEventListener的第三个参数\"></a>五、addEventListener的第三个参数</h4><p>定义：第三个参数是useCapture，boolean类型（为true就在捕获过程中执行，反之就在冒泡过程中执行处理函数）<br>用途：参照 <a href=\"https://blog.csdn.net/kongjiea/article/details/39023505\">https://blog.csdn.net/kongjiea/article/details/39023505</a><br>扩展知识：<br>    1.阻止冒泡（IE8: event.cancelBubble &#x3D; true   Others: event.stopPropagation() ）<br>    2.阻止默认行为，如a标签的跳转行为（IE8: window.event.returnValue &#x3D; false    Others: event.preventDefault() ）</p>\n<h4 id=\"六、点击击穿-浮层固定背景\"><a href=\"#六、点击击穿-浮层固定背景\" class=\"headerlink\" title=\"六、点击击穿  浮层固定背景\"></a>六、点击击穿  浮层固定背景</h4><p>1.加大于300ms的消失动画<br>2.fastClick（原理是去掉移动端的click事件，改用touch）</p>\n<h4 id=\"七、轮播图上下闪动解决办法\"><a href=\"#七、轮播图上下闪动解决办法\" class=\"headerlink\" title=\"七、轮播图上下闪动解决办法\"></a>七、轮播图上下闪动解决办法</h4><p>&#x2F;&#x2F; todo</p>\n<h4 id=\"八、flex布局\"><a href=\"#八、flex布局\" class=\"headerlink\" title=\"八、flex布局\"></a>八、flex布局</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span>我是内容<span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center; <span class=\"comment\">/* 水平居中 */</span></span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center; <span class=\"comment\">/* 垂直居中 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>更多居中方式参照『实用-css容器垂直水平居中』</p>\n<h4 id=\"九、vue和react区别\"><a href=\"#九、vue和react区别\" class=\"headerlink\" title=\"九、vue和react区别\"></a>九、vue和react区别</h4><p>1.vue用类似html的模板，react使用jsx（在js逻辑中嵌入html标签）<br>2.vue的css一般写在组件内部，react是单独的css文件<br>3.改变状态：vue直接this.xx&#x3D;’xx’，react需要用this.setState({})<br>4.父子组件传值：vue在子组件里$emit，react在子组件里调用this.props.函数名<br>5.双向绑定：react严格说是单向的，需要手动setState，vue可以直接用v-model实现双向</p>\n<h4 id=\"十、JS运行机制\"><a href=\"#十、JS运行机制\" class=\"headerlink\" title=\"十、JS运行机制\"></a>十、JS运行机制</h4><p>1.js是单线程，只有一个主线程，同步任务在主线程执行；同时还存在一个任务队列<br>2.异步有运行结果、定时器时间到了后会在任务队列里放置一个事件<br>3.当主线程里的同步任务都执行完了，会读取任务队列，放入主线程执行<br>4.反复第3步</p>\n<h4 id=\"十一、NodeJS洋葱模型\"><a href=\"#十一、NodeJS洋葱模型\" class=\"headerlink\" title=\"十一、NodeJS洋葱模型\"></a>十一、NodeJS洋葱模型</h4><p>解释：一个请求到后端后，开始接触洋葱最外层；遇到一个next()，就进入下一层，直到遇到没有next的中间件或者中间件报错，就认为到达中心，然后开始往外扩散，继续执行之前中间件里next之后的代码。<br>注意：所有中间件之间传递的是context，而并非request或者response。</p>\n<h4 id=\"十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\"><a href=\"#十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\" class=\"headerlink\" title=\"十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态\"></a>十二、vue单页应用怎样在刷新页面的时候保存之前的vuex状态</h4><p>在页面够子函数beforeUnload里把状态存到localStorage里，然后进页面的时候在created够子函数里取出storage里面的值并更新states</p>\n<h4 id=\"十三、react里setState是同步还是异步，中间都做了啥\"><a href=\"#十三、react里setState是同步还是异步，中间都做了啥\" class=\"headerlink\" title=\"十三、react里setState是同步还是异步，中间都做了啥\"></a>十三、react里setState是同步还是异步，中间都做了啥</h4><p>React库控制时异步，否则同步（<a href=\"https://www.jianshu.com/p/3a4dcd2b5b80%EF%BC%89\">https://www.jianshu.com/p/3a4dcd2b5b80）</a></p>\n<h4 id=\"十四、setTimeout和Promise执行顺序\"><a href=\"#十四、setTimeout和Promise执行顺序\" class=\"headerlink\" title=\"十四、setTimeout和Promise执行顺序\"></a>十四、setTimeout和Promise执行顺序</h4><p>答案：setTimeout的执行顺序小于Promise、async（<a href=\"https://blog.csdn.net/weixin_43606158/article/details/91360230%EF%BC%89\">https://blog.csdn.net/weixin_43606158/article/details/91360230）</a><br>原因：setTimeout(fn, 0)在下一轮“事件循环”开始时执行，Promise.then()在本轮“事件循环”结束时执行。因此then 函数先输出，settimeout后输出。</p>\n<h4 id=\"十五、jsonp请求原理\"><a href=\"#十五、jsonp请求原理\" class=\"headerlink\" title=\"十五、jsonp请求原理\"></a>十五、jsonp请求原理</h4><p>解决的问题：同源策略引起的跨域请求<br>原理：1.浏览器端：生成callback方法，然后动态添加一个script标签，src为请求地址，带上callback方法名。<br>     2.服务器端：收到请求，处理业务，然后返回内容为执行callback方法，如：callback(data)。</p>\n<h4 id=\"十六、NodeJS中间件运行机制\"><a href=\"#十六、NodeJS中间件运行机制\" class=\"headerlink\" title=\"十六、NodeJS中间件运行机制\"></a>十六、NodeJS中间件运行机制</h4><p><a href=\"https://github.com/mly-zju/blog/issues/5\">https://github.com/mly-zju/blog/issues/5</a><br>&#x2F;&#x2F; todo</p>\n<h4 id=\"十七、跨域解决方案\"><a href=\"#十七、跨域解决方案\" class=\"headerlink\" title=\"十七、跨域解决方案\"></a>十七、跨域解决方案</h4><p>1、jsonp（请求script）<br>2、空form<br>3、CORS<br>4、nginx代理</p>\n<p>** VUE经典面试题： <a href=\"https://muyiy.cn/question/\">https://muyiy.cn/question/</a></p>\n<p>** 本文持续更新…</p>"},{"title":"从0开始搭建日志分析系统（三）","date":"2018-01-08T16:00:00.000Z","_content":"\n从0开始搭建日志分析系统（三）：自动化\n<!-- more -->\n### 前情\n由于项目里日志收集和日志分析分别使用了两台独立的服务器，所以这里会涉及到把每天的日志文件从一台服务器拷贝到另一台服务器，如果是同一台服务器，则可以省略该步骤\n参考<http://blog.csdn.net/a11101171/article/details/47293109>\n\n### 一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）\n+ 安装expect\ncentos 可以直接用 yum install expect\n+ 配置脚本autoscp.sh拷贝日志到分析服务器（注意修改日志路径）\n```bash\n#!/bin/bash\n\nfilename=`ls -l /letv/logs/lempb | tail -n 1 | awk '{print $9}'`\necho $filename\n\n/usr/expect/bin/expect -c \"\nspawn scp /letv/logs/lempb/$filename root@47.92.67.199:/root/study/log-backup\nexpect {\n    \\\"*assword\\\" {set timeout 300; send \\\"TYMljly412\\r\\\";}\n    \\\"yes/no\\\" {send \\\"yes\\r\\\"; exp_continue;}\n  }\nexpect eof\"\n```\n+ 配置crontab自动执行scp脚本（每天凌晨1点执行）\n```bash\n0 1 * * * /letv/logs/autoscp.sh >>/root/xxx/xxx.log 2>&1\n``\n** 可以在后面加上 >>/root/xxx/xxx.log 2>&1 把每次执行的log放入指定文件，方便后续查看 **\n\n### 二、自动执行日志分析（日志分析服务器上）\n+ 配置自动执行脚本 auto.sh ，这里设置每天2点执行，因为步骤一设置了每天1点自动拷贝头天的日志文件到/root/study/log-backup/下，这里需要确保scp完成\n思路：\n1.获取/root/study/log-backup/下最新的日志文件\n```bash\nfilename=`ls -l /root/study/log-backup/ | tail -n 1 | awk '{print $9}'`\n```\n2.从/root/study/log-backup/目录拷贝一份到/root/study/logfactory目录\n```bash\ncp /root/study/log-backup/$filename /root/study/logfactory/\n```\n3.unzip操作\n```bash\ngunzip /root/study/logfactory/$filename\n```\n4.获取unzip后的文件名并rename操作，因为分析程序里写死了入口文件名为out_log.log\n```bash\nfile=${filename/\\.gz/}\nmv /root/study/logfactory/$file /root/study/logfactory/out_log.log\n```\n5.执行分析程序\n```bash\nnode /root/study/logfactory/main/start\n```\n6.remove源日志文件\n```bash\nrm -f /root/study/logfactory/out_log.log\n```\n核心代码：\n```bash\n#!/bin/bash\n\nfilename=`ls -l /root/study/log-backup/ | tail -n 1 | awk '{print $9}'`\necho $filename\n\ncp /root/study/log-backup/$filename /root/study/logfactory/\necho 'copy success'\n\ngunzip /root/study/logfactory/$filename\necho 'unzip success'\n\nfile=${filename/\\.gz/}\necho $file\n\nmv /root/study/logfactory/$file /root/study/logfactory/out_log.log\necho 'rename success'\n\nnode /root/study/logfactory/main/start\necho 'gen htmls success'\n\nrm -f /root/study/logfactory/out_log.log\necho 'remove old log file success'\n\necho 'all end'\n```\n+ crontab 配置每天2点自动执行\n```bash\n0 2 * * * /root/study/logfactory/auto.sh >> /root/study/logfactory/auto.log 2>&1\n```\n\n\n** 注意2点：1.尽量写全路径，否则可能报错  2.如果使用sh命令能执行，而crontab里执行失败，则可能是脚本的执行权限不够，使用chmod a+wrx xx.sh **\n\n","source":"_posts/从0开始搭建日志分析系统（三）.md","raw":"---\ntitle: 从0开始搭建日志分析系统（三）\ndate: 2018-01-09\ncategories: Nginx\ntags: \n    - Linux\n    - Nginx\n#description: \n---\n\n从0开始搭建日志分析系统（三）：自动化\n<!-- more -->\n### 前情\n由于项目里日志收集和日志分析分别使用了两台独立的服务器，所以这里会涉及到把每天的日志文件从一台服务器拷贝到另一台服务器，如果是同一台服务器，则可以省略该步骤\n参考<http://blog.csdn.net/a11101171/article/details/47293109>\n\n### 一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）\n+ 安装expect\ncentos 可以直接用 yum install expect\n+ 配置脚本autoscp.sh拷贝日志到分析服务器（注意修改日志路径）\n```bash\n#!/bin/bash\n\nfilename=`ls -l /letv/logs/lempb | tail -n 1 | awk '{print $9}'`\necho $filename\n\n/usr/expect/bin/expect -c \"\nspawn scp /letv/logs/lempb/$filename root@47.92.67.199:/root/study/log-backup\nexpect {\n    \\\"*assword\\\" {set timeout 300; send \\\"TYMljly412\\r\\\";}\n    \\\"yes/no\\\" {send \\\"yes\\r\\\"; exp_continue;}\n  }\nexpect eof\"\n```\n+ 配置crontab自动执行scp脚本（每天凌晨1点执行）\n```bash\n0 1 * * * /letv/logs/autoscp.sh >>/root/xxx/xxx.log 2>&1\n``\n** 可以在后面加上 >>/root/xxx/xxx.log 2>&1 把每次执行的log放入指定文件，方便后续查看 **\n\n### 二、自动执行日志分析（日志分析服务器上）\n+ 配置自动执行脚本 auto.sh ，这里设置每天2点执行，因为步骤一设置了每天1点自动拷贝头天的日志文件到/root/study/log-backup/下，这里需要确保scp完成\n思路：\n1.获取/root/study/log-backup/下最新的日志文件\n```bash\nfilename=`ls -l /root/study/log-backup/ | tail -n 1 | awk '{print $9}'`\n```\n2.从/root/study/log-backup/目录拷贝一份到/root/study/logfactory目录\n```bash\ncp /root/study/log-backup/$filename /root/study/logfactory/\n```\n3.unzip操作\n```bash\ngunzip /root/study/logfactory/$filename\n```\n4.获取unzip后的文件名并rename操作，因为分析程序里写死了入口文件名为out_log.log\n```bash\nfile=${filename/\\.gz/}\nmv /root/study/logfactory/$file /root/study/logfactory/out_log.log\n```\n5.执行分析程序\n```bash\nnode /root/study/logfactory/main/start\n```\n6.remove源日志文件\n```bash\nrm -f /root/study/logfactory/out_log.log\n```\n核心代码：\n```bash\n#!/bin/bash\n\nfilename=`ls -l /root/study/log-backup/ | tail -n 1 | awk '{print $9}'`\necho $filename\n\ncp /root/study/log-backup/$filename /root/study/logfactory/\necho 'copy success'\n\ngunzip /root/study/logfactory/$filename\necho 'unzip success'\n\nfile=${filename/\\.gz/}\necho $file\n\nmv /root/study/logfactory/$file /root/study/logfactory/out_log.log\necho 'rename success'\n\nnode /root/study/logfactory/main/start\necho 'gen htmls success'\n\nrm -f /root/study/logfactory/out_log.log\necho 'remove old log file success'\n\necho 'all end'\n```\n+ crontab 配置每天2点自动执行\n```bash\n0 2 * * * /root/study/logfactory/auto.sh >> /root/study/logfactory/auto.log 2>&1\n```\n\n\n** 注意2点：1.尽量写全路径，否则可能报错  2.如果使用sh命令能执行，而crontab里执行失败，则可能是脚本的执行权限不够，使用chmod a+wrx xx.sh **\n\n","slug":"从0开始搭建日志分析系统（三）","published":1,"updated":"2022-06-15T08:20:35.022Z","_id":"cl4e3az050034k4rq9053iyjf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从0开始搭建日志分析系统（三）：自动化</p>\n<span id=\"more\"></span>\n<h3 id=\"前情\"><a href=\"#前情\" class=\"headerlink\" title=\"前情\"></a>前情</h3><p>由于项目里日志收集和日志分析分别使用了两台独立的服务器，所以这里会涉及到把每天的日志文件从一台服务器拷贝到另一台服务器，如果是同一台服务器，则可以省略该步骤<br>参考<a href=\"http://blog.csdn.net/a11101171/article/details/47293109\">http://blog.csdn.net/a11101171/article/details/47293109</a></p>\n<h3 id=\"一、expect-crontab-自动scp文件到日志分析服务器（日志收集服务器上）\"><a href=\"#一、expect-crontab-自动scp文件到日志分析服务器（日志收集服务器上）\" class=\"headerlink\" title=\"一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）\"></a>一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）</h3><ul>\n<li>安装expect<br>centos 可以直接用 yum install expect</li>\n<li>配置脚本autoscp.sh拷贝日志到分析服务器（注意修改日志路径）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /letv/logs/lempb | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$filename</span></span><br><span class=\"line\"></span><br><span class=\"line\">/usr/expect/bin/expect -c <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">spawn scp /letv/logs/lempb/<span class=\"variable\">$filename</span> root@47.92.67.199:/root/study/log-backup</span></span><br><span class=\"line\"><span class=\"string\">expect &#123;</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;*assword\\&quot; &#123;set timeout 300; send \\&quot;TYMljly412\\r\\&quot;;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;yes/no\\&quot; &#123;send \\&quot;yes\\r\\&quot;; exp_continue;&#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">expect eof&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>配置crontab自动执行scp脚本（每天凌晨1点执行）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 * * * /letv/logs/autoscp.sh &gt;&gt;/root/xxx/xxx.log 2&gt;&amp;1</span><br><span class=\"line\">``</span><br><span class=\"line\">** 可以在后面加上 &gt;&gt;/root/xxx/xxx.log 2&gt;&amp;1 把每次执行的<span class=\"built_in\">log</span>放入指定文件，方便后续查看 **</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 二、自动执行日志分析（日志分析服务器上）</span></span><br><span class=\"line\">+ 配置自动执行脚本 auto.sh ，这里设置每天2点执行，因为步骤一设置了每天1点自动拷贝头天的日志文件到/root/study/log-backup/下，这里需要确保scp完成</span><br><span class=\"line\">思路：</span><br><span class=\"line\">1.获取/root/study/log-backup/下最新的日志文件</span><br><span class=\"line\">```bash</span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /root/study/log-backup/ | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br></pre></td></tr></table></figure>\n2.从&#x2F;root&#x2F;study&#x2F;log-backup&#x2F;目录拷贝一份到&#x2F;root&#x2F;study&#x2F;logfactory目录<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /root/study/log-backup/<span class=\"variable\">$filename</span> /root/study/logfactory/</span><br></pre></td></tr></table></figure>\n3.unzip操作<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip /root/study/logfactory/<span class=\"variable\">$filename</span></span><br></pre></td></tr></table></figure>\n4.获取unzip后的文件名并rename操作，因为分析程序里写死了入口文件名为out_log.log<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=<span class=\"variable\">$&#123;filename/\\.gz/&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /root/study/logfactory/<span class=\"variable\">$file</span> /root/study/logfactory/out_log.log</span><br></pre></td></tr></table></figure>\n5.执行分析程序<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node /root/study/logfactory/main/start</span><br></pre></td></tr></table></figure>\n6.remove源日志文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f /root/study/logfactory/out_log.log</span><br></pre></td></tr></table></figure>\n核心代码：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /root/study/log-backup/ | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$filename</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> /root/study/log-backup/<span class=\"variable\">$filename</span> /root/study/logfactory/</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;copy success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">gunzip /root/study/logfactory/<span class=\"variable\">$filename</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;unzip success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file=<span class=\"variable\">$&#123;filename/\\.gz/&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /root/study/logfactory/<span class=\"variable\">$file</span> /root/study/logfactory/out_log.log</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;rename success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">node /root/study/logfactory/main/start</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;gen htmls success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /root/study/logfactory/out_log.log</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;remove old log file success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;all end&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>crontab 配置每天2点自动执行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 2 * * * /root/study/logfactory/auto.sh &gt;&gt; /root/study/logfactory/auto.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>** 注意2点：1.尽量写全路径，否则可能报错  2.如果使用sh命令能执行，而crontab里执行失败，则可能是脚本的执行权限不够，使用chmod a+wrx xx.sh **</p>\n","site":{"data":{}},"excerpt":"<p>从0开始搭建日志分析系统（三）：自动化</p>","more":"<h3 id=\"前情\"><a href=\"#前情\" class=\"headerlink\" title=\"前情\"></a>前情</h3><p>由于项目里日志收集和日志分析分别使用了两台独立的服务器，所以这里会涉及到把每天的日志文件从一台服务器拷贝到另一台服务器，如果是同一台服务器，则可以省略该步骤<br>参考<a href=\"http://blog.csdn.net/a11101171/article/details/47293109\">http://blog.csdn.net/a11101171/article/details/47293109</a></p>\n<h3 id=\"一、expect-crontab-自动scp文件到日志分析服务器（日志收集服务器上）\"><a href=\"#一、expect-crontab-自动scp文件到日志分析服务器（日志收集服务器上）\" class=\"headerlink\" title=\"一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）\"></a>一、expect + crontab 自动scp文件到日志分析服务器（日志收集服务器上）</h3><ul>\n<li>安装expect<br>centos 可以直接用 yum install expect</li>\n<li>配置脚本autoscp.sh拷贝日志到分析服务器（注意修改日志路径）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /letv/logs/lempb | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$filename</span></span><br><span class=\"line\"></span><br><span class=\"line\">/usr/expect/bin/expect -c <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">spawn scp /letv/logs/lempb/<span class=\"variable\">$filename</span> root@47.92.67.199:/root/study/log-backup</span></span><br><span class=\"line\"><span class=\"string\">expect &#123;</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;*assword\\&quot; &#123;set timeout 300; send \\&quot;TYMljly412\\r\\&quot;;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;yes/no\\&quot; &#123;send \\&quot;yes\\r\\&quot;; exp_continue;&#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">expect eof&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>配置crontab自动执行scp脚本（每天凌晨1点执行）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 * * * /letv/logs/autoscp.sh &gt;&gt;/root/xxx/xxx.log 2&gt;&amp;1</span><br><span class=\"line\">``</span><br><span class=\"line\">** 可以在后面加上 &gt;&gt;/root/xxx/xxx.log 2&gt;&amp;1 把每次执行的<span class=\"built_in\">log</span>放入指定文件，方便后续查看 **</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 二、自动执行日志分析（日志分析服务器上）</span></span><br><span class=\"line\">+ 配置自动执行脚本 auto.sh ，这里设置每天2点执行，因为步骤一设置了每天1点自动拷贝头天的日志文件到/root/study/log-backup/下，这里需要确保scp完成</span><br><span class=\"line\">思路：</span><br><span class=\"line\">1.获取/root/study/log-backup/下最新的日志文件</span><br><span class=\"line\">```bash</span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /root/study/log-backup/ | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br></pre></td></tr></table></figure>\n2.从&#x2F;root&#x2F;study&#x2F;log-backup&#x2F;目录拷贝一份到&#x2F;root&#x2F;study&#x2F;logfactory目录<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /root/study/log-backup/<span class=\"variable\">$filename</span> /root/study/logfactory/</span><br></pre></td></tr></table></figure>\n3.unzip操作<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip /root/study/logfactory/<span class=\"variable\">$filename</span></span><br></pre></td></tr></table></figure>\n4.获取unzip后的文件名并rename操作，因为分析程序里写死了入口文件名为out_log.log<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=<span class=\"variable\">$&#123;filename/\\.gz/&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /root/study/logfactory/<span class=\"variable\">$file</span> /root/study/logfactory/out_log.log</span><br></pre></td></tr></table></figure>\n5.执行分析程序<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node /root/study/logfactory/main/start</span><br></pre></td></tr></table></figure>\n6.remove源日志文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f /root/study/logfactory/out_log.log</span><br></pre></td></tr></table></figure>\n核心代码：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=`<span class=\"built_in\">ls</span> -l /root/study/log-backup/ | <span class=\"built_in\">tail</span> -n 1 | awk <span class=\"string\">&#x27;&#123;print $9&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$filename</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> /root/study/log-backup/<span class=\"variable\">$filename</span> /root/study/logfactory/</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;copy success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">gunzip /root/study/logfactory/<span class=\"variable\">$filename</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;unzip success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file=<span class=\"variable\">$&#123;filename/\\.gz/&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /root/study/logfactory/<span class=\"variable\">$file</span> /root/study/logfactory/out_log.log</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;rename success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">node /root/study/logfactory/main/start</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;gen htmls success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f /root/study/logfactory/out_log.log</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;remove old log file success&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;all end&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>crontab 配置每天2点自动执行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 2 * * * /root/study/logfactory/auto.sh &gt;&gt; /root/study/logfactory/auto.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>** 注意2点：1.尽量写全路径，否则可能报错  2.如果使用sh命令能执行，而crontab里执行失败，则可能是脚本的执行权限不够，使用chmod a+wrx xx.sh **</p>"},{"title":"多table滚动联动","date":"2021-12-09T16:00:00.000Z","_content":"\n在做一个需求，左右两个table需要滚动联动，你侬我侬（you scroll, i scroll）。\n<!-- more -->\n### 初实现\n* 对于这个需求，第一想法就是分别监听两个table的scroll事件，然后在scroll事件里分别给对方设置scrollTop值。\n```js\nthis.dom = this.$refs.tbl.$el.querySelector('.fw-scroll-body')\nthis.affixDom = this.$refs.affix_tbl.$el.querySelector('.ant-table-body')\nthis.dom.addEventListener('scroll', () => {\n  this.affixDom.scrollTop = this.dom.scrollTop\n}, true)\nthis.affixDom.addEventListener('scroll', () => {\n  this.dom.scrollTop = this.affixDom.scrollTop\n}, true)\n```\n一顿操作猛如虎，mac运行流畅，都准备开酒庆祝了，然而，用windows上的chrome一测，滚动卡的一批~\n### 问题分析\n* 最先想到的是不是windows版的chrome在频繁处理scroll事件，遂加上debounce 100ms，发现有所改善，但是两个table会出现不太同步滚动的现象。\n* 作为一个精益求精的码农(其实是没能说服产品)，开始思考还有没有更流畅的体验。几经折腾，开始怀疑是不是频繁处理scroll导致的卡顿，试着注掉一个table的scroll事件，发现顿时流畅了。在两个scroll事件里加上console，滚动表格，发现两个事件都在执行。综合上述两种现象，发觉导致卡顿的根本原因是滚动的时候两个table来回循环给对方赋值scrollTop导致scrollTop一直不会大变。\n### 解决方案\n判断鼠标当前所在位置属于哪个table，不是当前table的时候不触发当前table的滚动事件，两个思路。\n\n1、实时获取鼠标位置，判断鼠标在哪个table区域内（舍弃，每次鼠标移动，都涉及到位置计算，不太优）\n\n2、监听两个table的mouseover和mouseout事件，来改变标志位\n```js\nthis.whereIsMouse = '' // 鼠标所在位置\nthis.dom = this.$refs.tbl.$el.querySelector('.fw-scroll-body')\nthis.affixDom = this.$refs.affix_tbl.$el.querySelector('.ant-table-body')\n\nthis.dom.addEventListener('scroll', () => {\n  // 判断鼠标是否在dom表格内，如果在，则触发该滚动事件\n  if (this.whereIsMouse === 'dom') {\n    this.affixDom.scrollTop = this.dom.scrollTop\n  }\n}, true)\nthis.affixDom.addEventListener('scroll', () => {\n  if (this.whereIsMouse === 'affixDom') {\n    this.dom.scrollTop = this.affixDom.scrollTop\n  }\n}, true)\n\nthis.dom.addEventListener('mouseover', () => { this.whereIsMouse = 'dom' }, true)\nthis.dom.addEventListener('mouseout', () => { this.whereIsMouse = '' }, true)\nthis.affixDom.addEventListener('mouseover', () => { this.whereIsMouse = 'affixDom' }, true)\nthis.affixDom.addEventListener('mouseout', () => { this.whereIsMouse = '' }, true)\n```\n\n+ 方向不对，努力白费~\n","source":"_posts/多table滚动联动.md","raw":"---\ntitle: 多table滚动联动\ndate: 2021-12-10\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n在做一个需求，左右两个table需要滚动联动，你侬我侬（you scroll, i scroll）。\n<!-- more -->\n### 初实现\n* 对于这个需求，第一想法就是分别监听两个table的scroll事件，然后在scroll事件里分别给对方设置scrollTop值。\n```js\nthis.dom = this.$refs.tbl.$el.querySelector('.fw-scroll-body')\nthis.affixDom = this.$refs.affix_tbl.$el.querySelector('.ant-table-body')\nthis.dom.addEventListener('scroll', () => {\n  this.affixDom.scrollTop = this.dom.scrollTop\n}, true)\nthis.affixDom.addEventListener('scroll', () => {\n  this.dom.scrollTop = this.affixDom.scrollTop\n}, true)\n```\n一顿操作猛如虎，mac运行流畅，都准备开酒庆祝了，然而，用windows上的chrome一测，滚动卡的一批~\n### 问题分析\n* 最先想到的是不是windows版的chrome在频繁处理scroll事件，遂加上debounce 100ms，发现有所改善，但是两个table会出现不太同步滚动的现象。\n* 作为一个精益求精的码农(其实是没能说服产品)，开始思考还有没有更流畅的体验。几经折腾，开始怀疑是不是频繁处理scroll导致的卡顿，试着注掉一个table的scroll事件，发现顿时流畅了。在两个scroll事件里加上console，滚动表格，发现两个事件都在执行。综合上述两种现象，发觉导致卡顿的根本原因是滚动的时候两个table来回循环给对方赋值scrollTop导致scrollTop一直不会大变。\n### 解决方案\n判断鼠标当前所在位置属于哪个table，不是当前table的时候不触发当前table的滚动事件，两个思路。\n\n1、实时获取鼠标位置，判断鼠标在哪个table区域内（舍弃，每次鼠标移动，都涉及到位置计算，不太优）\n\n2、监听两个table的mouseover和mouseout事件，来改变标志位\n```js\nthis.whereIsMouse = '' // 鼠标所在位置\nthis.dom = this.$refs.tbl.$el.querySelector('.fw-scroll-body')\nthis.affixDom = this.$refs.affix_tbl.$el.querySelector('.ant-table-body')\n\nthis.dom.addEventListener('scroll', () => {\n  // 判断鼠标是否在dom表格内，如果在，则触发该滚动事件\n  if (this.whereIsMouse === 'dom') {\n    this.affixDom.scrollTop = this.dom.scrollTop\n  }\n}, true)\nthis.affixDom.addEventListener('scroll', () => {\n  if (this.whereIsMouse === 'affixDom') {\n    this.dom.scrollTop = this.affixDom.scrollTop\n  }\n}, true)\n\nthis.dom.addEventListener('mouseover', () => { this.whereIsMouse = 'dom' }, true)\nthis.dom.addEventListener('mouseout', () => { this.whereIsMouse = '' }, true)\nthis.affixDom.addEventListener('mouseover', () => { this.whereIsMouse = 'affixDom' }, true)\nthis.affixDom.addEventListener('mouseout', () => { this.whereIsMouse = '' }, true)\n```\n\n+ 方向不对，努力白费~\n","slug":"多table滚动联动","published":1,"updated":"2022-06-15T08:29:13.024Z","_id":"cl4e3az080036k4rq8q2zybtu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在做一个需求，左右两个table需要滚动联动，你侬我侬（you scroll, i scroll）。</p>\n<span id=\"more\"></span>\n<h3 id=\"初实现\"><a href=\"#初实现\" class=\"headerlink\" title=\"初实现\"></a>初实现</h3><ul>\n<li>对于这个需求，第一想法就是分别监听两个table的scroll事件，然后在scroll事件里分别给对方设置scrollTop值。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.fw-scroll-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">affix_tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.ant-table-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n一顿操作猛如虎，mac运行流畅，都准备开酒庆祝了，然而，用windows上的chrome一测，滚动卡的一批~</li>\n</ul>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><ul>\n<li>最先想到的是不是windows版的chrome在频繁处理scroll事件，遂加上debounce 100ms，发现有所改善，但是两个table会出现不太同步滚动的现象。</li>\n<li>作为一个精益求精的码农(其实是没能说服产品)，开始思考还有没有更流畅的体验。几经折腾，开始怀疑是不是频繁处理scroll导致的卡顿，试着注掉一个table的scroll事件，发现顿时流畅了。在两个scroll事件里加上console，滚动表格，发现两个事件都在执行。综合上述两种现象，发觉导致卡顿的根本原因是滚动的时候两个table来回循环给对方赋值scrollTop导致scrollTop一直不会大变。</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>判断鼠标当前所在位置属于哪个table，不是当前table的时候不触发当前table的滚动事件，两个思路。</p>\n<p>1、实时获取鼠标位置，判断鼠标在哪个table区域内（舍弃，每次鼠标移动，都涉及到位置计算，不太优）</p>\n<p>2、监听两个table的mouseover和mouseout事件，来改变标志位</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 鼠标所在位置</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.fw-scroll-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">affix_tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.ant-table-body&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断鼠标是否在dom表格内，如果在，则触发该滚动事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> === <span class=\"string\">&#x27;dom&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> === <span class=\"string\">&#x27;affixDom&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;dom&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;affixDom&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方向不对，努力白费~</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>在做一个需求，左右两个table需要滚动联动，你侬我侬（you scroll, i scroll）。</p>","more":"<h3 id=\"初实现\"><a href=\"#初实现\" class=\"headerlink\" title=\"初实现\"></a>初实现</h3><ul>\n<li>对于这个需求，第一想法就是分别监听两个table的scroll事件，然后在scroll事件里分别给对方设置scrollTop值。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.fw-scroll-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">affix_tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.ant-table-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n一顿操作猛如虎，mac运行流畅，都准备开酒庆祝了，然而，用windows上的chrome一测，滚动卡的一批~</li>\n</ul>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><ul>\n<li>最先想到的是不是windows版的chrome在频繁处理scroll事件，遂加上debounce 100ms，发现有所改善，但是两个table会出现不太同步滚动的现象。</li>\n<li>作为一个精益求精的码农(其实是没能说服产品)，开始思考还有没有更流畅的体验。几经折腾，开始怀疑是不是频繁处理scroll导致的卡顿，试着注掉一个table的scroll事件，发现顿时流畅了。在两个scroll事件里加上console，滚动表格，发现两个事件都在执行。综合上述两种现象，发觉导致卡顿的根本原因是滚动的时候两个table来回循环给对方赋值scrollTop导致scrollTop一直不会大变。</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>判断鼠标当前所在位置属于哪个table，不是当前table的时候不触发当前table的滚动事件，两个思路。</p>\n<p>1、实时获取鼠标位置，判断鼠标在哪个table区域内（舍弃，每次鼠标移动，都涉及到位置计算，不太优）</p>\n<p>2、监听两个table的mouseover和mouseout事件，来改变标志位</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 鼠标所在位置</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.fw-scroll-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">affix_tbl</span>.<span class=\"property\">$el</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.ant-table-body&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断鼠标是否在dom表格内，如果在，则触发该滚动事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> === <span class=\"string\">&#x27;dom&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> === <span class=\"string\">&#x27;affixDom&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"property\">scrollTop</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;dom&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">dom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;affixDom&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">affixDom</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"property\">whereIsMouse</span> = <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方向不对，努力白费~</li>\n</ul>"},{"title":"几种JS里数组去重方法比较","date":"2019-09-19T16:00:00.000Z","_content":"\n昨天面试被问到JS里数组去重的方法，于是把最常用的for + object方法说了（当时本来准备说es6的Set去重的，结果突然忘记Set了）。\n<!-- more -->\n完事在网上搜了下去重的方法，发现远不止当时想到的两种，找了几种常用的方法，做了下执行效率对比，发现在处理大数据量的时候，竟然出现了将近一千倍的差距。为之震惊...\n\n#### 一、常用8种方法执行效率对比（总15w条数据）\n1.method.js\n```js\n﻿let obj = {\n\t// filter + indexOf\n\tdistinct1: (a, b) => {\n\t\tconsole.log('filter + indexOf')\n\t\tlet arr = a.concat(b);\n\t\treturn arr.filter((item, index) => {\n\t\t\treturn arr.indexOf(item) === index;\n\t\t});\n\t},\n\t// filter + object\n\tdistinct2: (a, b) => {\n\t\tconsole.log('filter + object')\n\t\tlet temp = {};\n\t\tlet arr = a.concat(b);\n\t\treturn arr.filter(item => {\n\t\t\ttemp[item] = temp[item] || 0;\n\t\t\ttemp[item] ++;\n\t\t\treturn temp[item] === 1;\n\t\t});\n\t},\n\t// for + object\n\tdistinct3: (a, b) => {\n\t\tconsole.log('for + object')\n\t\tlet arr = a.concat(b);\n\t\tlet temp = {};\n\t\tlet res = [];\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tif(!temp[arr[i]]) {\n\t\t\t\tres.push(arr[i]);\n\t\t\t\ttemp[arr[i]] = true;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// for + indexOf\n\tdistinct4: (a, b) => {\n\t\tconsole.log('for + indexOf')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tif(res.indexOf(arr[i]) < 0) {\n\t\t\t\tres.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// for of + includes\n\tdistinct5: (a, b) => {\n\t\tconsole.log('for of + includes')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tfor(let i of arr){\n\t\t\t!res.includes(i) && res.push(i);\n\t\t}\n\t\treturn res;\n\t},\n\t// for of + object\n\tdistinct6: (a, b) => {\n\t\tconsole.log('for of + object')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tlet obj = {};\n\n\t\tfor(let i of arr) {\n\t\t\tif(!obj[i]) {\n\t\t\t\tres.push(i);\n\t\t\t\tobj[i] = true;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// Array.sort\n\tdistinct7: (a, b) => {\n\t\tconsole.log('Array.sort')\n\t\tlet arr = a.concat(b);\n\t\tarr.sort((a, b) => { return a > b ? 1 : -1; });\n\t\tlet res = [];\n\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] != arr[i - 1] && res.push(arr[i]);\n\t\t}\n\n\t\treturn res;\n\t},\n\t// Set\n\tdistinct8: (a, b) => {\n\t\tconsole.log('Set')\n\t\treturn Array.from(new Set([...a, ...b]));\n\t}\n};\n\nmodule.exports = obj;\n```\n2.main.js（len1+len2为数组总长度）\n```js\nlet len1 = 100000;\nlet len2 = 50000;\nlet dist = require('./method.js');\n\nlet arr = Array.from(new Array(len1), (x, index) => {\n\treturn index;\n});\nlet dis = Array.from(new Array(len2), (x, index) => {\n\treturn index + index;\n});\nlet times = Object.keys(dist); // 方法数量\n\nfor(let i of times) {\n\tlet start = new Date().getTime();\n\tlet res = dist[i](arr, dis);\n\tconsole.log('----------end---------------', res.length);\n\tlet end = new Date().getTime();\n\tconsole.log('总耗时：', end - start);\n}\n```\n3.执行结果分析\n```js\nfilter + indexOf\n----------end--------------- 100000\n总耗时： 10608\n\nfilter + object\n----------end--------------- 100000\n总耗时： 14\n\nfor + object\n----------end--------------- 100000\n总耗时： 14\n\nfor + indexOf\n----------end--------------- 100000\n总耗时： 10471\n\nfor of + includes\n----------end--------------- 100000\n总耗时： 10501\n\nfor of + object\n----------end--------------- 100000\n总耗时： 12\n\nArray.sort\n----------end--------------- 100000\n总耗时： 91\n\nSet\n----------end--------------- 100000\n总耗时： 46\n```\n\n惊讶的发现，执行时间最短的依次是：for...of + object <  for + object = filter + object < Set < Array.sort < for + indexOf < for...of + includes < filter + indexOf。\n并且最长的执行时间 10608ms 竟然比最短的 12ms 多了将近1000倍（仅仅15w条数据的情况下）。\n粗略的总结下规律：\n    1.循环中用对象属性来判断要比数组查找快的多（filter+indexOf和filter+object对比可以看出；以及for+object和for+indexOf对比可以看出）\n    2.数组查找indexOf和includes执行效率差不多（for+indexOf和for...of+includes可以看出）\n    3.数组循环for...of和for差不多（for+object和for...of+object可以看出）\n    4.Array.sort和Set比基本2倍快\n\n为了更明显的看出差别，我们把测试数据量扩大一个数量级（150w）再测一次，测试结果如下：\n```js\nfilter + object\n----------end--------------- 1000000\n总耗时： 129\n\nfor + object\n----------end--------------- 1000000\n总耗时： 109\n\nfor of + object\n----------end--------------- 1000000\n总耗时： 121\n\nArray.sort\n----------end--------------- 1000000\n总耗时： 909\n\nSet\n----------end--------------- 1000000\n总耗时： 718\n```\n你可能发现了，测试结果里没有filter+indexOf、for+indexOf、for...of+includes，是因为150w条数据的时候，这几个方法直接卡死不动了（跟15w条的结果比，不止是10倍的关系），尴尬...\n再次对比结果发现：\n    1.再次印证了上面中的规律1（indexOf要比对象属性慢得多）\n    2.for+object要比for...of+object稍快，filter+object次之\n    3.Set比Array.sort快，但到不了第一种情况下的2倍差距\n\n#### 二、结果分析\n从两次测试不难发现，在实际项目中，尽量用for+object（或者for...of+object和filter+object）；如果为了代码简洁，可以用es6的Set，在实际运用中，数据量不大的情况，差别还是可以接受的；千万不能用indexOf或者includes，简直就不是一个数量级。\n\n** 突然想到刚毕业时做.net，一次老大开会指出『千万不能把数据库数据都读到内存中操作，而应先从数据库中筛选出符合条件的数据，然后放到内存中操作，否则大数据量的时候可能会把服务器搞崩』。当时还不以为然，也没做实际对比。今天通过上面的实际测量，才发现差距之大，不由得汗颜，之前写代码的随性...仅以此文告诫自己吧！！！\n","source":"_posts/几种JS里数组去重方法比较.md","raw":"---\ntitle: 几种JS里数组去重方法比较\ndate: 2019-09-20\ncategories: 前端\ntags: \n    - 前端\n    - JS\n#description: \n---\n\n昨天面试被问到JS里数组去重的方法，于是把最常用的for + object方法说了（当时本来准备说es6的Set去重的，结果突然忘记Set了）。\n<!-- more -->\n完事在网上搜了下去重的方法，发现远不止当时想到的两种，找了几种常用的方法，做了下执行效率对比，发现在处理大数据量的时候，竟然出现了将近一千倍的差距。为之震惊...\n\n#### 一、常用8种方法执行效率对比（总15w条数据）\n1.method.js\n```js\n﻿let obj = {\n\t// filter + indexOf\n\tdistinct1: (a, b) => {\n\t\tconsole.log('filter + indexOf')\n\t\tlet arr = a.concat(b);\n\t\treturn arr.filter((item, index) => {\n\t\t\treturn arr.indexOf(item) === index;\n\t\t});\n\t},\n\t// filter + object\n\tdistinct2: (a, b) => {\n\t\tconsole.log('filter + object')\n\t\tlet temp = {};\n\t\tlet arr = a.concat(b);\n\t\treturn arr.filter(item => {\n\t\t\ttemp[item] = temp[item] || 0;\n\t\t\ttemp[item] ++;\n\t\t\treturn temp[item] === 1;\n\t\t});\n\t},\n\t// for + object\n\tdistinct3: (a, b) => {\n\t\tconsole.log('for + object')\n\t\tlet arr = a.concat(b);\n\t\tlet temp = {};\n\t\tlet res = [];\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tif(!temp[arr[i]]) {\n\t\t\t\tres.push(arr[i]);\n\t\t\t\ttemp[arr[i]] = true;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// for + indexOf\n\tdistinct4: (a, b) => {\n\t\tconsole.log('for + indexOf')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tif(res.indexOf(arr[i]) < 0) {\n\t\t\t\tres.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// for of + includes\n\tdistinct5: (a, b) => {\n\t\tconsole.log('for of + includes')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tfor(let i of arr){\n\t\t\t!res.includes(i) && res.push(i);\n\t\t}\n\t\treturn res;\n\t},\n\t// for of + object\n\tdistinct6: (a, b) => {\n\t\tconsole.log('for of + object')\n\t\tlet arr = a.concat(b);\n\t\tlet res = [];\n\t\tlet obj = {};\n\n\t\tfor(let i of arr) {\n\t\t\tif(!obj[i]) {\n\t\t\t\tres.push(i);\n\t\t\t\tobj[i] = true;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\t// Array.sort\n\tdistinct7: (a, b) => {\n\t\tconsole.log('Array.sort')\n\t\tlet arr = a.concat(b);\n\t\tarr.sort((a, b) => { return a > b ? 1 : -1; });\n\t\tlet res = [];\n\n\t\tfor(let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] != arr[i - 1] && res.push(arr[i]);\n\t\t}\n\n\t\treturn res;\n\t},\n\t// Set\n\tdistinct8: (a, b) => {\n\t\tconsole.log('Set')\n\t\treturn Array.from(new Set([...a, ...b]));\n\t}\n};\n\nmodule.exports = obj;\n```\n2.main.js（len1+len2为数组总长度）\n```js\nlet len1 = 100000;\nlet len2 = 50000;\nlet dist = require('./method.js');\n\nlet arr = Array.from(new Array(len1), (x, index) => {\n\treturn index;\n});\nlet dis = Array.from(new Array(len2), (x, index) => {\n\treturn index + index;\n});\nlet times = Object.keys(dist); // 方法数量\n\nfor(let i of times) {\n\tlet start = new Date().getTime();\n\tlet res = dist[i](arr, dis);\n\tconsole.log('----------end---------------', res.length);\n\tlet end = new Date().getTime();\n\tconsole.log('总耗时：', end - start);\n}\n```\n3.执行结果分析\n```js\nfilter + indexOf\n----------end--------------- 100000\n总耗时： 10608\n\nfilter + object\n----------end--------------- 100000\n总耗时： 14\n\nfor + object\n----------end--------------- 100000\n总耗时： 14\n\nfor + indexOf\n----------end--------------- 100000\n总耗时： 10471\n\nfor of + includes\n----------end--------------- 100000\n总耗时： 10501\n\nfor of + object\n----------end--------------- 100000\n总耗时： 12\n\nArray.sort\n----------end--------------- 100000\n总耗时： 91\n\nSet\n----------end--------------- 100000\n总耗时： 46\n```\n\n惊讶的发现，执行时间最短的依次是：for...of + object <  for + object = filter + object < Set < Array.sort < for + indexOf < for...of + includes < filter + indexOf。\n并且最长的执行时间 10608ms 竟然比最短的 12ms 多了将近1000倍（仅仅15w条数据的情况下）。\n粗略的总结下规律：\n    1.循环中用对象属性来判断要比数组查找快的多（filter+indexOf和filter+object对比可以看出；以及for+object和for+indexOf对比可以看出）\n    2.数组查找indexOf和includes执行效率差不多（for+indexOf和for...of+includes可以看出）\n    3.数组循环for...of和for差不多（for+object和for...of+object可以看出）\n    4.Array.sort和Set比基本2倍快\n\n为了更明显的看出差别，我们把测试数据量扩大一个数量级（150w）再测一次，测试结果如下：\n```js\nfilter + object\n----------end--------------- 1000000\n总耗时： 129\n\nfor + object\n----------end--------------- 1000000\n总耗时： 109\n\nfor of + object\n----------end--------------- 1000000\n总耗时： 121\n\nArray.sort\n----------end--------------- 1000000\n总耗时： 909\n\nSet\n----------end--------------- 1000000\n总耗时： 718\n```\n你可能发现了，测试结果里没有filter+indexOf、for+indexOf、for...of+includes，是因为150w条数据的时候，这几个方法直接卡死不动了（跟15w条的结果比，不止是10倍的关系），尴尬...\n再次对比结果发现：\n    1.再次印证了上面中的规律1（indexOf要比对象属性慢得多）\n    2.for+object要比for...of+object稍快，filter+object次之\n    3.Set比Array.sort快，但到不了第一种情况下的2倍差距\n\n#### 二、结果分析\n从两次测试不难发现，在实际项目中，尽量用for+object（或者for...of+object和filter+object）；如果为了代码简洁，可以用es6的Set，在实际运用中，数据量不大的情况，差别还是可以接受的；千万不能用indexOf或者includes，简直就不是一个数量级。\n\n** 突然想到刚毕业时做.net，一次老大开会指出『千万不能把数据库数据都读到内存中操作，而应先从数据库中筛选出符合条件的数据，然后放到内存中操作，否则大数据量的时候可能会把服务器搞崩』。当时还不以为然，也没做实际对比。今天通过上面的实际测量，才发现差距之大，不由得汗颜，之前写代码的随性...仅以此文告诫自己吧！！！\n","slug":"几种JS里数组去重方法比较","published":1,"updated":"2022-06-15T08:27:07.374Z","_id":"cl4e3az0c0039k4rqujf7j8zc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>昨天面试被问到JS里数组去重的方法，于是把最常用的for + object方法说了（当时本来准备说es6的Set去重的，结果突然忘记Set了）。</p>\n<span id=\"more\"></span>\n<p>完事在网上搜了下去重的方法，发现远不止当时想到的两种，找了几种常用的方法，做了下执行效率对比，发现在处理大数据量的时候，竟然出现了将近一千倍的差距。为之震惊…</p>\n<h4 id=\"一、常用8种方法执行效率对比（总15w条数据）\"><a href=\"#一、常用8种方法执行效率对比（总15w条数据）\" class=\"headerlink\" title=\"一、常用8种方法执行效率对比（总15w条数据）\"></a>一、常用8种方法执行效率对比（总15w条数据）</h4><p>1.method.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">﻿<span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// filter + indexOf</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct1</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;filter + indexOf&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">indexOf</span>(item) === index;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// filter + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct2</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;filter + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\ttemp[item] = temp[item] || <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\ttemp[item] ++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> temp[item] === <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct3</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!temp[arr[i]]) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t\t\ttemp[arr[i]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for + indexOf</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct4</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for + indexOf&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(res.<span class=\"title function_\">indexOf</span>(arr[i]) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for of + includes</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct5</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for of + includes&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> arr)&#123;</span><br><span class=\"line\">\t\t\t!res.<span class=\"title function_\">includes</span>(i) &amp;&amp; res.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for of + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct6</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for of + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!obj[i]) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">\t\t\t\tobj[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// Array.sort</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct7</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Array.sort&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\tarr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123; <span class=\"keyword\">return</span> a &gt; b ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>; &#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tarr[i] != arr[i - <span class=\"number\">1</span>] &amp;&amp; res.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// Set</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct8</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Set&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>([...a, ...b]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = obj;</span><br></pre></td></tr></table></figure>\n<p>2.main.js（len1+len2为数组总长度）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> len1 = <span class=\"number\">100000</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> len2 = <span class=\"number\">50000</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dist = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./method.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(len1), <span class=\"function\">(<span class=\"params\">x, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dis = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(len2), <span class=\"function\">(<span class=\"params\">x, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index + index;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> times = <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(dist); <span class=\"comment\">// 方法数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> times) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> start = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> res = dist[i](arr, dis);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------end---------------&#x27;</span>, res.<span class=\"property\">length</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;总耗时：&#x27;</span>, end - start);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.执行结果分析</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter + indexOf</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10608</span></span><br><span class=\"line\"></span><br><span class=\"line\">filter + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + indexOf</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10471</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + includes</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10501</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\">sort</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">91</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Set</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n\n<p>惊讶的发现，执行时间最短的依次是：for…of + object &lt;  for + object &#x3D; filter + object &lt; Set &lt; Array.sort &lt; for + indexOf &lt; for…of + includes &lt; filter + indexOf。<br>并且最长的执行时间 10608ms 竟然比最短的 12ms 多了将近1000倍（仅仅15w条数据的情况下）。<br>粗略的总结下规律：<br>    1.循环中用对象属性来判断要比数组查找快的多（filter+indexOf和filter+object对比可以看出；以及for+object和for+indexOf对比可以看出）<br>    2.数组查找indexOf和includes执行效率差不多（for+indexOf和for…of+includes可以看出）<br>    3.数组循环for…of和for差不多（for+object和for…of+object可以看出）<br>    4.Array.sort和Set比基本2倍快</p>\n<p>为了更明显的看出差别，我们把测试数据量扩大一个数量级（150w）再测一次，测试结果如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">129</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">109</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">121</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\">sort</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">909</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Set</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">718</span></span><br></pre></td></tr></table></figure>\n<p>你可能发现了，测试结果里没有filter+indexOf、for+indexOf、for…of+includes，是因为150w条数据的时候，这几个方法直接卡死不动了（跟15w条的结果比，不止是10倍的关系），尴尬…<br>再次对比结果发现：<br>    1.再次印证了上面中的规律1（indexOf要比对象属性慢得多）<br>    2.for+object要比for…of+object稍快，filter+object次之<br>    3.Set比Array.sort快，但到不了第一种情况下的2倍差距</p>\n<h4 id=\"二、结果分析\"><a href=\"#二、结果分析\" class=\"headerlink\" title=\"二、结果分析\"></a>二、结果分析</h4><p>从两次测试不难发现，在实际项目中，尽量用for+object（或者for…of+object和filter+object）；如果为了代码简洁，可以用es6的Set，在实际运用中，数据量不大的情况，差别还是可以接受的；千万不能用indexOf或者includes，简直就不是一个数量级。</p>\n<p>** 突然想到刚毕业时做.net，一次老大开会指出『千万不能把数据库数据都读到内存中操作，而应先从数据库中筛选出符合条件的数据，然后放到内存中操作，否则大数据量的时候可能会把服务器搞崩』。当时还不以为然，也没做实际对比。今天通过上面的实际测量，才发现差距之大，不由得汗颜，之前写代码的随性…仅以此文告诫自己吧！！！</p>\n","site":{"data":{}},"excerpt":"<p>昨天面试被问到JS里数组去重的方法，于是把最常用的for + object方法说了（当时本来准备说es6的Set去重的，结果突然忘记Set了）。</p>","more":"<p>完事在网上搜了下去重的方法，发现远不止当时想到的两种，找了几种常用的方法，做了下执行效率对比，发现在处理大数据量的时候，竟然出现了将近一千倍的差距。为之震惊…</p>\n<h4 id=\"一、常用8种方法执行效率对比（总15w条数据）\"><a href=\"#一、常用8种方法执行效率对比（总15w条数据）\" class=\"headerlink\" title=\"一、常用8种方法执行效率对比（总15w条数据）\"></a>一、常用8种方法执行效率对比（总15w条数据）</h4><p>1.method.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">﻿<span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// filter + indexOf</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct1</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;filter + indexOf&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">indexOf</span>(item) === index;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// filter + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct2</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;filter + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> arr.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\ttemp[item] = temp[item] || <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\ttemp[item] ++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> temp[item] === <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct3</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!temp[arr[i]]) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t\t\ttemp[arr[i]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for + indexOf</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct4</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for + indexOf&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(res.<span class=\"title function_\">indexOf</span>(arr[i]) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for of + includes</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct5</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for of + includes&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> arr)&#123;</span><br><span class=\"line\">\t\t\t!res.<span class=\"title function_\">includes</span>(i) &amp;&amp; res.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// for of + object</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct6</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;for of + object&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!obj[i]) &#123;</span><br><span class=\"line\">\t\t\t\tres.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">\t\t\t\tobj[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// Array.sort</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct7</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Array.sort&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> arr = a.<span class=\"title function_\">concat</span>(b);</span><br><span class=\"line\">\t\tarr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123; <span class=\"keyword\">return</span> a &gt; b ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>; &#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tarr[i] != arr[i - <span class=\"number\">1</span>] &amp;&amp; res.<span class=\"title function_\">push</span>(arr[i]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// Set</span></span><br><span class=\"line\">\t<span class=\"attr\">distinct8</span>: <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Set&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>([...a, ...b]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = obj;</span><br></pre></td></tr></table></figure>\n<p>2.main.js（len1+len2为数组总长度）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> len1 = <span class=\"number\">100000</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> len2 = <span class=\"number\">50000</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> dist = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./method.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(len1), <span class=\"function\">(<span class=\"params\">x, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dis = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(len2), <span class=\"function\">(<span class=\"params\">x, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index + index;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">let</span> times = <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(dist); <span class=\"comment\">// 方法数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> times) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> start = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> res = dist[i](arr, dis);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------end---------------&#x27;</span>, res.<span class=\"property\">length</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;总耗时：&#x27;</span>, end - start);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.执行结果分析</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter + indexOf</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10608</span></span><br><span class=\"line\"></span><br><span class=\"line\">filter + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + indexOf</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10471</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + includes</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">10501</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\">sort</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">91</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Set</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">100000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n\n<p>惊讶的发现，执行时间最短的依次是：for…of + object &lt;  for + object &#x3D; filter + object &lt; Set &lt; Array.sort &lt; for + indexOf &lt; for…of + includes &lt; filter + indexOf。<br>并且最长的执行时间 10608ms 竟然比最短的 12ms 多了将近1000倍（仅仅15w条数据的情况下）。<br>粗略的总结下规律：<br>    1.循环中用对象属性来判断要比数组查找快的多（filter+indexOf和filter+object对比可以看出；以及for+object和for+indexOf对比可以看出）<br>    2.数组查找indexOf和includes执行效率差不多（for+indexOf和for…of+includes可以看出）<br>    3.数组循环for…of和for差不多（for+object和for…of+object可以看出）<br>    4.Array.sort和Set比基本2倍快</p>\n<p>为了更明显的看出差别，我们把测试数据量扩大一个数量级（150w）再测一次，测试结果如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">129</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">109</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">of</span> + object</span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">121</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\">sort</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">909</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Set</span></span><br><span class=\"line\">----------end--------------- <span class=\"number\">1000000</span></span><br><span class=\"line\">总耗时： <span class=\"number\">718</span></span><br></pre></td></tr></table></figure>\n<p>你可能发现了，测试结果里没有filter+indexOf、for+indexOf、for…of+includes，是因为150w条数据的时候，这几个方法直接卡死不动了（跟15w条的结果比，不止是10倍的关系），尴尬…<br>再次对比结果发现：<br>    1.再次印证了上面中的规律1（indexOf要比对象属性慢得多）<br>    2.for+object要比for…of+object稍快，filter+object次之<br>    3.Set比Array.sort快，但到不了第一种情况下的2倍差距</p>\n<h4 id=\"二、结果分析\"><a href=\"#二、结果分析\" class=\"headerlink\" title=\"二、结果分析\"></a>二、结果分析</h4><p>从两次测试不难发现，在实际项目中，尽量用for+object（或者for…of+object和filter+object）；如果为了代码简洁，可以用es6的Set，在实际运用中，数据量不大的情况，差别还是可以接受的；千万不能用indexOf或者includes，简直就不是一个数量级。</p>\n<p>** 突然想到刚毕业时做.net，一次老大开会指出『千万不能把数据库数据都读到内存中操作，而应先从数据库中筛选出符合条件的数据，然后放到内存中操作，否则大数据量的时候可能会把服务器搞崩』。当时还不以为然，也没做实际对比。今天通过上面的实际测量，才发现差距之大，不由得汗颜，之前写代码的随性…仅以此文告诫自己吧！！！</p>"},{"title":"原生JS的debounce和throttle","date":"2017-03-04T16:00:00.000Z","_content":"\n说说原生JS中的debounce和throttle\n\n<!-- more -->\n\n### 适用场景举例\n- input输入框自动补全\n- windowresize事件\n- 跟踪鼠标\n- DOM 元素动态定位\n\n### 方法封装\n```JS\n/*\n* 频率控制 返回函数连续调用时，fn 执行频率限定为每多少时间执行一次\n* @param fn {function}  需要调用的函数\n* @param delay  {number}    延迟时间，单位毫秒\n* @param immediate  {bool} 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。\n* @return {function}实际调用函数\n*/\nvar throttle = function (fn,delay, immediate, debounce) {\n  var curr = +new Date(),//当前事件\n  last_call = 0,\n  last_exec = 0,\n  timer = null,\n  diff, //时间差\n  context,//上下文\n  args,\n  exec = function () {\n    last_exec = curr;\n    fn.apply(context, args);\n  };\n  return function () {\n    curr= +new Date();\n    context = this,\n    args = arguments,\n    diff = curr - (debounce ? last_call : last_exec) - delay;\n    clearTimeout(timer);\n    if (debounce) {\n      if (immediate) {\n        timer = setTimeout(exec, delay);\n      } else if (diff >= 0) {\n        exec();\n      }\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else if (immediate) {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n    last_call = curr;\n  }\n};\n     \n/*\n* 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 delay，fn 才会执行\n* @param fn {function}  要调用的函数\n* @param delay   {number}    空闲时间\n* @param immediate  {bool} 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。\n* @return {function}实际调用函数\n*/\nvar debounce = function (fn, delay, immediate) {\n  return throttle(fn, delay, immediate, true);\n};\n```\n\n### 举个例子\nhtml代码：\n```HTML\n<input id=\"ipt\"/>\n```\njs代码：\n```JS\nvar ipt = document.getElementById('ipt');\nvar ipt_input = throttle(function(){\n  console.log(this.value + ':' + new Date());\n},2000, true, true);\nwindow.onload = function(){\n  addLister(ipt,'input',ipt_input);\n}\nfunction addLister(el,e,h){\n  if(!el) return false;\n  return el.addEventListener \n  && el.addEventListener(e,h,true) \n  || el.attachEvent && el.attachEvent(e,h);\n}\nfunction rmListener(el,e,h){\n  if(!el) return false;\n  return el.addEventListener \n  && el.removeEventListener(e,h,true) \n  || el.detachEvent && el.detachEvent(e,h);\n}\n```\n\n### ** 拓展知识 **\n```JS\nvar resizeTimer=null;\n$(window).on('resize',function(){\n  if(resizeTimer){\n    clearTimeout(resizeTimer)\n  }\n  resizeTimer=setTimeout(function(){\n    console.log(\"window resize\");\n    },400);\n  }\n);\n```\n","source":"_posts/原生JS的debounce和throttle.md","raw":"---\ntitle: 原生JS的debounce和throttle\ndate: 2017-03-05\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n说说原生JS中的debounce和throttle\n\n<!-- more -->\n\n### 适用场景举例\n- input输入框自动补全\n- windowresize事件\n- 跟踪鼠标\n- DOM 元素动态定位\n\n### 方法封装\n```JS\n/*\n* 频率控制 返回函数连续调用时，fn 执行频率限定为每多少时间执行一次\n* @param fn {function}  需要调用的函数\n* @param delay  {number}    延迟时间，单位毫秒\n* @param immediate  {bool} 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。\n* @return {function}实际调用函数\n*/\nvar throttle = function (fn,delay, immediate, debounce) {\n  var curr = +new Date(),//当前事件\n  last_call = 0,\n  last_exec = 0,\n  timer = null,\n  diff, //时间差\n  context,//上下文\n  args,\n  exec = function () {\n    last_exec = curr;\n    fn.apply(context, args);\n  };\n  return function () {\n    curr= +new Date();\n    context = this,\n    args = arguments,\n    diff = curr - (debounce ? last_call : last_exec) - delay;\n    clearTimeout(timer);\n    if (debounce) {\n      if (immediate) {\n        timer = setTimeout(exec, delay);\n      } else if (diff >= 0) {\n        exec();\n      }\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else if (immediate) {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n    last_call = curr;\n  }\n};\n     \n/*\n* 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 delay，fn 才会执行\n* @param fn {function}  要调用的函数\n* @param delay   {number}    空闲时间\n* @param immediate  {bool} 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。\n* @return {function}实际调用函数\n*/\nvar debounce = function (fn, delay, immediate) {\n  return throttle(fn, delay, immediate, true);\n};\n```\n\n### 举个例子\nhtml代码：\n```HTML\n<input id=\"ipt\"/>\n```\njs代码：\n```JS\nvar ipt = document.getElementById('ipt');\nvar ipt_input = throttle(function(){\n  console.log(this.value + ':' + new Date());\n},2000, true, true);\nwindow.onload = function(){\n  addLister(ipt,'input',ipt_input);\n}\nfunction addLister(el,e,h){\n  if(!el) return false;\n  return el.addEventListener \n  && el.addEventListener(e,h,true) \n  || el.attachEvent && el.attachEvent(e,h);\n}\nfunction rmListener(el,e,h){\n  if(!el) return false;\n  return el.addEventListener \n  && el.removeEventListener(e,h,true) \n  || el.detachEvent && el.detachEvent(e,h);\n}\n```\n\n### ** 拓展知识 **\n```JS\nvar resizeTimer=null;\n$(window).on('resize',function(){\n  if(resizeTimer){\n    clearTimeout(resizeTimer)\n  }\n  resizeTimer=setTimeout(function(){\n    console.log(\"window resize\");\n    },400);\n  }\n);\n```\n","slug":"原生JS的debounce和throttle","published":1,"updated":"2022-06-15T08:15:48.256Z","_id":"cl4e3az0j003dk4rqxq5dp2oa","comments":1,"layout":"post","photos":[],"link":"","content":"<p>说说原生JS中的debounce和throttle</p>\n<span id=\"more\"></span>\n\n<h3 id=\"适用场景举例\"><a href=\"#适用场景举例\" class=\"headerlink\" title=\"适用场景举例\"></a>适用场景举例</h3><ul>\n<li>input输入框自动补全</li>\n<li>windowresize事件</li>\n<li>跟踪鼠标</li>\n<li>DOM 元素动态定位</li>\n</ul>\n<h3 id=\"方法封装\"><a href=\"#方法封装\" class=\"headerlink\" title=\"方法封装\"></a>方法封装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 频率控制 返回函数连续调用时，fn 执行频率限定为每多少时间执行一次</span></span><br><span class=\"line\"><span class=\"comment\">* @param fn &#123;function&#125;  需要调用的函数</span></span><br><span class=\"line\"><span class=\"comment\">* @param delay  &#123;number&#125;    延迟时间，单位毫秒</span></span><br><span class=\"line\"><span class=\"comment\">* @param immediate  &#123;bool&#125; 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。</span></span><br><span class=\"line\"><span class=\"comment\">* @return &#123;function&#125;实际调用函数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> throttle = <span class=\"keyword\">function</span> (<span class=\"params\">fn,delay, immediate, debounce</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> curr = +<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),<span class=\"comment\">//当前事件</span></span><br><span class=\"line\">  last_call = <span class=\"number\">0</span>,</span><br><span class=\"line\">  last_exec = <span class=\"number\">0</span>,</span><br><span class=\"line\">  timer = <span class=\"literal\">null</span>,</span><br><span class=\"line\">  diff, <span class=\"comment\">//时间差</span></span><br><span class=\"line\">  context,<span class=\"comment\">//上下文</span></span><br><span class=\"line\">  args,</span><br><span class=\"line\">  exec = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    last_exec = curr;</span><br><span class=\"line\">    fn.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    curr= +<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">    context = <span class=\"variable language_\">this</span>,</span><br><span class=\"line\">    args = <span class=\"variable language_\">arguments</span>,</span><br><span class=\"line\">    diff = curr - (debounce ? last_call : last_exec) - delay;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (debounce) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(exec, delay);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (diff &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">exec</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (diff &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">exec</span>();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(exec, -diff);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    last_call = curr;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 delay，fn 才会执行</span></span><br><span class=\"line\"><span class=\"comment\">* @param fn &#123;function&#125;  要调用的函数</span></span><br><span class=\"line\"><span class=\"comment\">* @param delay   &#123;number&#125;    空闲时间</span></span><br><span class=\"line\"><span class=\"comment\">* @param immediate  &#123;bool&#125; 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。</span></span><br><span class=\"line\"><span class=\"comment\">* @return &#123;function&#125;实际调用函数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> debounce = <span class=\"keyword\">function</span> (<span class=\"params\">fn, delay, immediate</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">throttle</span>(fn, delay, immediate, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h3><p>html代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ipt&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ipt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ipt&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ipt_input = <span class=\"title function_\">throttle</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">value</span> + <span class=\"string\">&#x27;:&#x27;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">&#125;,<span class=\"number\">2000</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"title function_\">addLister</span>(ipt,<span class=\"string\">&#x27;input&#x27;</span>,ipt_input);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addLister</span>(<span class=\"params\">el,e,h</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!el) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el.<span class=\"property\">addEventListener</span> </span><br><span class=\"line\">  &amp;&amp; el.<span class=\"title function_\">addEventListener</span>(e,h,<span class=\"literal\">true</span>) </span><br><span class=\"line\">  || el.<span class=\"property\">attachEvent</span> &amp;&amp; el.<span class=\"title function_\">attachEvent</span>(e,h);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">rmListener</span>(<span class=\"params\">el,e,h</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!el) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el.<span class=\"property\">addEventListener</span> </span><br><span class=\"line\">  &amp;&amp; el.<span class=\"title function_\">removeEventListener</span>(e,h,<span class=\"literal\">true</span>) </span><br><span class=\"line\">  || el.<span class=\"property\">detachEvent</span> &amp;&amp; el.<span class=\"title function_\">detachEvent</span>(e,h);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展知识\"><a href=\"#拓展知识\" class=\"headerlink\" title=\"** 拓展知识 **\"></a>** 拓展知识 **</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resizeTimer=<span class=\"literal\">null</span>;</span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;resize&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(resizeTimer)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(resizeTimer)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  resizeTimer=<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;window resize&quot;</span>);</span><br><span class=\"line\">    &#125;,<span class=\"number\">400</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>说说原生JS中的debounce和throttle</p>","more":"<h3 id=\"适用场景举例\"><a href=\"#适用场景举例\" class=\"headerlink\" title=\"适用场景举例\"></a>适用场景举例</h3><ul>\n<li>input输入框自动补全</li>\n<li>windowresize事件</li>\n<li>跟踪鼠标</li>\n<li>DOM 元素动态定位</li>\n</ul>\n<h3 id=\"方法封装\"><a href=\"#方法封装\" class=\"headerlink\" title=\"方法封装\"></a>方法封装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 频率控制 返回函数连续调用时，fn 执行频率限定为每多少时间执行一次</span></span><br><span class=\"line\"><span class=\"comment\">* @param fn &#123;function&#125;  需要调用的函数</span></span><br><span class=\"line\"><span class=\"comment\">* @param delay  &#123;number&#125;    延迟时间，单位毫秒</span></span><br><span class=\"line\"><span class=\"comment\">* @param immediate  &#123;bool&#125; 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。</span></span><br><span class=\"line\"><span class=\"comment\">* @return &#123;function&#125;实际调用函数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> throttle = <span class=\"keyword\">function</span> (<span class=\"params\">fn,delay, immediate, debounce</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> curr = +<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),<span class=\"comment\">//当前事件</span></span><br><span class=\"line\">  last_call = <span class=\"number\">0</span>,</span><br><span class=\"line\">  last_exec = <span class=\"number\">0</span>,</span><br><span class=\"line\">  timer = <span class=\"literal\">null</span>,</span><br><span class=\"line\">  diff, <span class=\"comment\">//时间差</span></span><br><span class=\"line\">  context,<span class=\"comment\">//上下文</span></span><br><span class=\"line\">  args,</span><br><span class=\"line\">  exec = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    last_exec = curr;</span><br><span class=\"line\">    fn.<span class=\"title function_\">apply</span>(context, args);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    curr= +<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">    context = <span class=\"variable language_\">this</span>,</span><br><span class=\"line\">    args = <span class=\"variable language_\">arguments</span>,</span><br><span class=\"line\">    diff = curr - (debounce ? last_call : last_exec) - delay;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (debounce) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(exec, delay);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (diff &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">exec</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (diff &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">exec</span>();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (immediate) &#123;</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(exec, -diff);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    last_call = curr;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 delay，fn 才会执行</span></span><br><span class=\"line\"><span class=\"comment\">* @param fn &#123;function&#125;  要调用的函数</span></span><br><span class=\"line\"><span class=\"comment\">* @param delay   &#123;number&#125;    空闲时间</span></span><br><span class=\"line\"><span class=\"comment\">* @param immediate  &#123;bool&#125; 给 immediate参数传递false 绑定的函数先执行，而不是delay后后执行。</span></span><br><span class=\"line\"><span class=\"comment\">* @return &#123;function&#125;实际调用函数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> debounce = <span class=\"keyword\">function</span> (<span class=\"params\">fn, delay, immediate</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">throttle</span>(fn, delay, immediate, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举个例子\"><a href=\"#举个例子\" class=\"headerlink\" title=\"举个例子\"></a>举个例子</h3><p>html代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ipt&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ipt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ipt&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ipt_input = <span class=\"title function_\">throttle</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">value</span> + <span class=\"string\">&#x27;:&#x27;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">&#125;,<span class=\"number\">2000</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"title function_\">addLister</span>(ipt,<span class=\"string\">&#x27;input&#x27;</span>,ipt_input);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addLister</span>(<span class=\"params\">el,e,h</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!el) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el.<span class=\"property\">addEventListener</span> </span><br><span class=\"line\">  &amp;&amp; el.<span class=\"title function_\">addEventListener</span>(e,h,<span class=\"literal\">true</span>) </span><br><span class=\"line\">  || el.<span class=\"property\">attachEvent</span> &amp;&amp; el.<span class=\"title function_\">attachEvent</span>(e,h);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">rmListener</span>(<span class=\"params\">el,e,h</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!el) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el.<span class=\"property\">addEventListener</span> </span><br><span class=\"line\">  &amp;&amp; el.<span class=\"title function_\">removeEventListener</span>(e,h,<span class=\"literal\">true</span>) </span><br><span class=\"line\">  || el.<span class=\"property\">detachEvent</span> &amp;&amp; el.<span class=\"title function_\">detachEvent</span>(e,h);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展知识\"><a href=\"#拓展知识\" class=\"headerlink\" title=\"** 拓展知识 **\"></a>** 拓展知识 **</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resizeTimer=<span class=\"literal\">null</span>;</span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;resize&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(resizeTimer)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(resizeTimer)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  resizeTimer=<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;window resize&quot;</span>);</span><br><span class=\"line\">    &#125;,<span class=\"number\">400</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>"},{"title":"全国省市县三级地址联动js","date":"2017-03-04T16:00:00.000Z","_content":"\n** 用于h5网页的全国地址三级联动选择框，整理截至2016-03-17，地址数据来自高德地图 **\n\n<!-- more -->\n\n```JS\n/* \n*   全国三级城市联动 js版 \n*/  \nfunction Dsy() {  \n    this.Items = {};  \n}  \nDsy.prototype.add = function (id, iArray) {  \n    this.Items[id] = iArray;  \n}  \nDsy.prototype.Exists = function (id) {  \n    if (typeof (this.Items[id]) == \"undefined\") return false;  \n    return true;  \n}  \n  \nfunction change(v) {  \n    var str = \"0\";  \n    for (i = 0; i < v; i++) {  \n        str += (\"_\" + (document.getElementById(s[i]).selectedIndex - 1));  \n    };  \n    var ss = document.getElementById(s[v]);  \n    with (ss) {  \n        length = 0;  \n        options[0] = new Option(opt0[v], \"\");  \n        if (v && document.getElementById(s[v - 1]).selectedIndex > 0 || !v) {  \n            if (dsy.Exists(str)) {  \n                ar = dsy.Items[str];  \n                for (i = 0; i < ar.length; i++) {  \n                    options[length] = new Option(ar[i], ar[i]);  \n                }//end for  \n                if (v) { options[0].selected = true; }  \n            }  \n        }//end if v  \n        if (++v < s.length) { change(v); }  \n    }//End with  \n}  \n  \nvar dsy = new Dsy();  \ndsy.add(\"0_0_0\",[\"东城区\",\"西城区\",\"朝阳区\",\"丰台区\",\"石景山区\",\"海淀区\",\"门头沟区\",\"房山区\",\"通州区\",\"顺义区\",\"昌平区\",\"大兴区\",\"怀柔区\",\"平谷区\",\"密云县\",\"延庆县\"]);  \ndsy.add(\"0_0\",[\"北京\"]);  \n  \ndsy.add(\"0_1_0\",[\"和平区\",\"河东区\",\"河西区\",\"南开区\",\"河北区\",\"红桥区\",\"东丽区\",\"西青区\",\"津南区\",\"北辰区\",\"武清区\",\"宝坻区\",\"滨海新区\",\"宁河县\",\"静海县\",\"蓟县\"]);  \ndsy.add(\"0_1\",[\"天津\"]);  \n  \ndsy.add(\"0_2_0\",[\"长安区\",\"桥西区\",\"新华区\",\"井陉矿区\",\"裕华区\",\"井陉县\",\"正定县\",\"栾城区\",\"行唐县\",\"灵寿县\",\"高邑县\",\"深泽县\",\"赞皇县\",\"无极县\",\"平山县\",\"元氏县\",\"赵县\",\"辛集市\",\"藁城区\",\"晋州市\",\"新乐市\",\"鹿泉区\"]);  \ndsy.add(\"0_2_1\",[\"路南区\",\"路北区\",\"古冶区\",\"开平区\",\"丰南区\",\"丰润区\",\"曹妃甸区\",\"滦县\",\"滦南县\",\"乐亭县\",\"迁西县\",\"玉田县\",\"遵化市\",\"迁安市\"]);  \ndsy.add(\"0_2_2\",[\"海港区\",\"山海关区\",\"北戴河区\",\"青龙满族自治县\",\"昌黎县\",\"抚宁县\",\"卢龙县\"]);  \ndsy.add(\"0_2_3\",[\"邯山区\",\"丛台区\",\"复兴区\",\"峰峰矿区\",\"邯郸县\",\"临漳县\",\"成安县\",\"大名县\",\"涉县\",\"磁县\",\"肥乡县\",\"永年县\",\"邱县\",\"鸡泽县\",\"广平县\",\"馆陶县\",\"魏县\",\"曲周县\",\"武安市\"]);  \ndsy.add(\"0_2_4\",[\"桥东区\",\"桥西区\",\"邢台县\",\"临城县\",\"内丘县\",\"柏乡县\",\"隆尧县\",\"任县\",\"南和县\",\"宁晋县\",\"巨鹿县\",\"新河县\",\"广宗县\",\"平乡县\",\"威县\",\"清河县\",\"临西县\",\"南宫市\",\"沙河市\"]);  \ndsy.add(\"0_2_5\",[\"新市区\",\"北市区\",\"南市区\",\"满城县\",\"清苑县\",\"涞水县\",\"阜平县\",\"徐水县\",\"定兴县\",\"唐县\",\"高阳县\",\"容城县\",\"涞源县\",\"望都县\",\"安新县\",\"易县\",\"曲阳县\",\"蠡县\",\"顺平县\",\"博野县\",\"雄县\",\"涿州市\",\"定州市\",\"安国市\",\"高碑店市\"]);  \ndsy.add(\"0_2_6\",[\"桥东区\",\"桥西区\",\"宣化区\",\"下花园区\",\"宣化县\",\"张北县\",\"康保县\",\"沽源县\",\"尚义县\",\"蔚县\",\"阳原县\",\"怀安县\",\"万全县\",\"怀来县\",\"涿鹿县\",\"赤城县\",\"崇礼县\"]);  \ndsy.add(\"0_2_7\",[\"双桥区\",\"双滦区\",\"鹰手营子矿区\",\"承德县\",\"兴隆县\",\"平泉县\",\"滦平县\",\"隆化县\",\"丰宁满族自治县\",\"宽城满族自治县\",\"围场满族蒙古族自治县\"]);  \ndsy.add(\"0_2_8\",[\"新华区\",\"运河区\",\"沧县\",\"青县\",\"东光县\",\"海兴县\",\"盐山县\",\"肃宁县\",\"南皮县\",\"吴桥县\",\"献县\",\"孟村回族自治县\",\"泊头市\",\"任丘市\",\"黄骅市\",\"河间市\"]);  \ndsy.add(\"0_2_9\",[\"安次区\",\"广阳区\",\"固安县\",\"永清县\",\"香河县\",\"大城县\",\"文安县\",\"大厂回族自治县\",\"霸州市\",\"三河市\"]);  \ndsy.add(\"0_2_10\",[\"桃城区\",\"枣强县\",\"武邑县\",\"武强县\",\"饶阳县\",\"安平县\",\"故城县\",\"景县\",\"阜城县\",\"冀州市\",\"深州市\"]);  \ndsy.add(\"0_2\",[\"石家庄\",\"唐山\",\"秦皇岛\",\"邯郸\",\"邢台\",\"保定\",\"张家口\",\"承德\",\"沧州\",\"廊坊\",\"衡水\"]);  \n  \ndsy.add(\"0_3_0\",[\"小店区\",\"迎泽区\",\"杏花岭区\",\"尖草坪区\",\"万柏林区\",\"晋源区\",\"清徐县\",\"阳曲县\",\"娄烦县\",\"古交市\"]);  \ndsy.add(\"0_3_1\",[\"城区\",\"矿区\",\"南郊区\",\"新荣区\",\"阳高县\",\"天镇县\",\"广灵县\",\"灵丘县\",\"浑源县\",\"左云县\",\"大同县\"]);  \ndsy.add(\"0_3_2\",[\"城区\",\"矿区\",\"郊区\",\"平定县\",\"盂县\"]);  \ndsy.add(\"0_3_3\",[\"城区\",\"郊区\",\"长治县\",\"襄垣县\",\"屯留县\",\"平顺县\",\"黎城县\",\"壶关县\",\"长子县\",\"武乡县\",\"沁县\",\"沁源县\",\"潞城市\"]);  \ndsy.add(\"0_3_4\",[\"城区\",\"沁水县\",\"阳城县\",\"陵川县\",\"泽州县\",\"高平市\"]);  \ndsy.add(\"0_3_5\",[\"朔城区\",\"平鲁区\",\"山阴县\",\"应县\",\"右玉县\",\"怀仁县\"]);  \ndsy.add(\"0_3_6\",[\"榆次区\",\"榆社县\",\"左权县\",\"和顺县\",\"昔阳县\",\"寿阳县\",\"太谷县\",\"祁县\",\"平遥县\",\"灵石县\",\"介休市\"]);  \ndsy.add(\"0_3_7\",[\"盐湖区\",\"临猗县\",\"万荣县\",\"闻喜县\",\"稷山县\",\"新绛县\",\"绛县\",\"垣曲县\",\"夏县\",\"平陆县\",\"芮城县\",\"永济市\",\"河津市\"]);  \ndsy.add(\"0_3_8\",[\"忻府区\",\"定襄县\",\"五台县\",\"代县\",\"繁峙县\",\"宁武县\",\"静乐县\",\"神池县\",\"五寨县\",\"岢岚县\",\"河曲县\",\"保德县\",\"偏关县\",\"原平市\"]);  \ndsy.add(\"0_3_9\",[\"尧都区\",\"曲沃县\",\"翼城县\",\"襄汾县\",\"洪洞县\",\"古县\",\"安泽县\",\"浮山县\",\"吉县\",\"乡宁县\",\"大宁县\",\"隰县\",\"永和县\",\"蒲县\",\"汾西县\",\"侯马市\",\"霍州市\"]);  \ndsy.add(\"0_3_10\",[\"离石区\",\"文水县\",\"交城县\",\"兴县\",\"临县\",\"柳林县\",\"石楼县\",\"岚县\",\"方山县\",\"中阳县\",\"交口县\",\"孝义市\",\"汾阳市\"]);  \ndsy.add(\"0_3\",[\"太原\",\"大同\",\"阳泉\",\"长治\",\"晋城\",\"朔州\",\"晋中\",\"运城\",\"忻州\",\"临汾\",\"吕梁\"]);  \n  \ndsy.add(\"0_4_0\",[\"新城区\",\"回民区\",\"玉泉区\",\"赛罕区\",\"土默特左旗\",\"托克托县\",\"和林格尔县\",\"清水河县\",\"武川县\"]);  \ndsy.add(\"0_4_1\",[\"东河区\",\"昆都仑区\",\"青山区\",\"石拐区\",\"白云鄂博矿区\",\"九原区\",\"土默特右旗\",\"固阳县\",\"达尔罕茂明安联合旗\"]);  \ndsy.add(\"0_4_2\",[\"海勃湾区\",\"海南区\",\"乌达区\"]);  \ndsy.add(\"0_4_3\",[\"红山区\",\"元宝山区\",\"松山区\",\"阿鲁科尔沁旗\",\"巴林左旗\",\"巴林右旗\",\"林西县\",\"克什克腾旗\",\"翁牛特旗\",\"喀喇沁旗\",\"宁城县\",\"敖汉旗\"]);  \ndsy.add(\"0_4_4\",[\"科尔沁区\",\"科尔沁左翼中旗\",\"科尔沁左翼后旗\",\"开鲁县\",\"库伦旗\",\"奈曼旗\",\"扎鲁特旗\",\"霍林郭勒市\"]);  \ndsy.add(\"0_4_5\",[\"东胜区\",\"达拉特旗\",\"准格尔旗\",\"鄂托克前旗\",\"鄂托克旗\",\"杭锦旗\",\"乌审旗\",\"伊金霍洛旗\"]);  \ndsy.add(\"0_4_6\",[\"海拉尔区\",\"扎赉诺尔区\",\"阿荣旗\",\"莫力达瓦达斡尔族自治旗\",\"鄂伦春自治旗\",\"鄂温克族自治旗\",\"陈巴尔虎旗\",\"新巴尔虎左旗\",\"新巴尔虎右旗\",\"满洲里市\",\"牙克石市\",\"扎兰屯市\",\"额尔古纳市\",\"根河市\"]);  \ndsy.add(\"0_4_7\",[\"临河区\",\"五原县\",\"磴口县\",\"乌拉特前旗\",\"乌拉特中旗\",\"乌拉特后旗\",\"杭锦后旗\"]);  \ndsy.add(\"0_4_8\",[\"集宁区\",\"卓资县\",\"化德县\",\"商都县\",\"兴和县\",\"凉城县\",\"察哈尔右翼前旗\",\"察哈尔右翼中旗\",\"察哈尔右翼后旗\",\"四子王旗\",\"丰镇市\"]);  \ndsy.add(\"0_4_9\",[\"乌兰浩特市\",\"阿尔山市\",\"科尔沁右翼前旗\",\"科尔沁右翼中旗\",\"扎赉特旗\",\"突泉县\"]);  \ndsy.add(\"0_4_10\",[\"二连浩特市\",\"锡林浩特市\",\"阿巴嘎旗\",\"苏尼特左旗\",\"苏尼特右旗\",\"东乌珠穆沁旗\",\"西乌珠穆沁旗\",\"太仆寺旗\",\"镶黄旗\",\"正镶白旗\",\"正蓝旗\",\"多伦县\"]);  \ndsy.add(\"0_4_11\",[\"阿拉善左旗\",\"阿拉善右旗\",\"额济纳旗\"]);  \ndsy.add(\"0_4\",[\"呼和浩特\",\"包头\",\"乌海\",\"赤峰\",\"通辽\",\"鄂尔多斯\",\"呼伦贝尔\",\"巴彦淖尔\",\"乌兰察布\",\"兴安盟\",\"锡林郭勒盟\",\"阿拉善盟\"]);  \n  \ndsy.add(\"0_5_0\",[\"和平区\",\"沈河区\",\"大东区\",\"皇姑区\",\"铁西区\",\"苏家屯区\",\"浑南区\",\"沈北新区\",\"于洪区\",\"辽中县\",\"康平县\",\"法库县\",\"新民市\"]);  \ndsy.add(\"0_5_1\",[\"中山区\",\"西岗区\",\"沙河口区\",\"甘井子区\",\"旅顺口区\",\"金州区\",\"长海县\",\"瓦房店市\",\"普兰店市\",\"庄河市\"]);  \ndsy.add(\"0_5_2\",[\"铁东区\",\"铁西区\",\"立山区\",\"千山区\",\"台安县\",\"岫岩满族自治县\",\"海城市\"]);  \ndsy.add(\"0_5_3\",[\"新抚区\",\"东洲区\",\"望花区\",\"顺城区\",\"抚顺县\",\"新宾满族自治县\",\"清原满族自治县\"]);  \ndsy.add(\"0_5_4\",[\"平山区\",\"溪湖区\",\"明山区\",\"南芬区\",\"本溪满族自治县\",\"桓仁满族自治县\"]);  \ndsy.add(\"0_5_5\",[\"元宝区\",\"振兴区\",\"振安区\",\"宽甸满族自治县\",\"东港市\",\"凤城市\"]);  \ndsy.add(\"0_5_6\",[\"古塔区\",\"凌河区\",\"太和区\",\"黑山县\",\"义县\",\"凌海市\",\"北镇市\"]);  \ndsy.add(\"0_5_7\",[\"站前区\",\"西市区\",\"鲅鱼圈区\",\"老边区\",\"盖州市\",\"大石桥市\"]);  \ndsy.add(\"0_5_8\",[\"海州区\",\"新邱区\",\"太平区\",\"清河门区\",\"细河区\",\"阜新蒙古族自治县\",\"彰武县\"]);  \ndsy.add(\"0_5_9\",[\"白塔区\",\"文圣区\",\"宏伟区\",\"弓长岭区\",\"太子河区\",\"辽阳县\",\"灯塔市\"]);  \ndsy.add(\"0_5_10\",[\"双台子区\",\"兴隆台区\",\"大洼县\",\"盘山县\"]);  \ndsy.add(\"0_5_11\",[\"银州区\",\"清河区\",\"铁岭县\",\"西丰县\",\"昌图县\",\"调兵山市\",\"开原市\"]);  \ndsy.add(\"0_5_12\",[\"双塔区\",\"龙城区\",\"朝阳县\",\"建平县\",\"喀喇沁左翼蒙古族自治县\",\"北票市\",\"凌源市\"]);  \ndsy.add(\"0_5_13\",[\"连山区\",\"龙港区\",\"南票区\",\"绥中县\",\"建昌县\",\"兴城市\"]);  \ndsy.add(\"0_5\",[\"沈阳\",\"大连\",\"鞍山\",\"抚顺\",\"本溪\",\"丹东\",\"锦州\",\"营口\",\"阜新\",\"辽阳\",\"盘锦\",\"铁岭\",\"朝阳\",\"葫芦岛\"]);  \n  \ndsy.add(\"0_6_0\",[\"南关区\",\"宽城区\",\"朝阳区\",\"二道区\",\"绿园区\",\"双阳区\",\"农安县\",\"九台区\",\"榆树市\",\"德惠市\"]);  \ndsy.add(\"0_6_1\",[\"昌邑区\",\"龙潭区\",\"船营区\",\"丰满区\",\"永吉县\",\"蛟河市\",\"桦甸市\",\"舒兰市\",\"磐石市\"]);  \ndsy.add(\"0_6_2\",[\"铁西区\",\"铁东区\",\"梨树县\",\"伊通满族自治县\",\"公主岭市\",\"双辽市\"]);  \ndsy.add(\"0_6_3\",[\"龙山区\",\"西安区\",\"东丰县\",\"东辽县\"]);  \ndsy.add(\"0_6_4\",[\"东昌区\",\"二道江区\",\"通化县\",\"辉南县\",\"柳河县\",\"梅河口市\",\"集安市\"]);  \ndsy.add(\"0_6_5\",[\"浑江区\",\"江源区\",\"抚松县\",\"靖宇县\",\"长白朝鲜族自治县\",\"临江市\"]);  \ndsy.add(\"0_6_6\",[\"宁江区\",\"前郭尔罗斯蒙古族自治县\",\"长岭县\",\"乾安县\",\"扶余市\"]);  \ndsy.add(\"0_6_7\",[\"洮北区\",\"镇赉县\",\"通榆县\",\"洮南市\",\"大安市\"]);  \ndsy.add(\"0_6_8\",[\"延吉市\",\"图们市\",\"敦化市\",\"珲春市\",\"龙井市\",\"和龙市\",\"汪清县\",\"安图县\"]);  \ndsy.add(\"0_6\",[\"长春\",\"吉林\",\"四平\",\"辽源\",\"通化\",\"白山\",\"松原\",\"白城\",\"延边\"]);  \n  \ndsy.add(\"0_7_0\",[\"道里区\",\"南岗区\",\"道外区\",\"平房区\",\"松北区\",\"香坊区\",\"呼兰区\",\"阿城区\",\"依兰县\",\"方正县\",\"宾县\",\"巴彦县\",\"木兰县\",\"通河县\",\"延寿县\",\"双城区\",\"尚志市\",\"五常市\"]);  \ndsy.add(\"0_7_1\",[\"龙沙区\",\"建华区\",\"铁锋区\",\"昂昂溪区\",\"富拉尔基区\",\"碾子山区\",\"梅里斯达斡尔族区\",\"龙江县\",\"依安县\",\"泰来县\",\"甘南县\",\"富裕县\",\"克山县\",\"克东县\",\"拜泉县\",\"讷河市\"]);  \ndsy.add(\"0_7_2\",[\"鸡冠区\",\"恒山区\",\"滴道区\",\"梨树区\",\"城子河区\",\"麻山区\",\"鸡东县\",\"虎林市\",\"密山市\"]);  \ndsy.add(\"0_7_3\",[\"向阳区\",\"工农区\",\"南山区\",\"兴安区\",\"东山区\",\"兴山区\",\"萝北县\",\"绥滨县\"]);  \ndsy.add(\"0_7_4\",[\"尖山区\",\"岭东区\",\"四方台区\",\"宝山区\",\"集贤县\",\"友谊县\",\"宝清县\",\"饶河县\"]);  \ndsy.add(\"0_7_5\",[\"萨尔图区\",\"龙凤区\",\"让胡路区\",\"红岗区\",\"大同区\",\"肇州县\",\"肇源县\",\"林甸县\",\"杜尔伯特蒙古族自治县\"]);  \ndsy.add(\"0_7_6\",[\"伊春区\",\"南岔区\",\"友好区\",\"西林区\",\"翠峦区\",\"新青区\",\"美溪区\",\"金山屯区\",\"五营区\",\"乌马河区\",\"汤旺河区\",\"带岭区\",\"乌伊岭区\",\"红星区\",\"上甘岭区\",\"嘉荫县\",\"铁力市\"]);  \ndsy.add(\"0_7_7\",[\"向阳区\",\"前进区\",\"东风区\",\"郊区\",\"桦南县\",\"桦川县\",\"汤原县\",\"抚远县\",\"同江市\",\"富锦市\"]);  \ndsy.add(\"0_7_8\",[\"新兴区\",\"桃山区\",\"茄子河区\",\"勃利县\"]);  \ndsy.add(\"0_7_9\",[\"东安区\",\"阳明区\",\"爱民区\",\"西安区\",\"东宁县\",\"林口县\",\"绥芬河市\",\"海林市\",\"宁安市\",\"穆棱市\"]);  \ndsy.add(\"0_7_10\",[\"爱辉区\",\"嫩江县\",\"逊克县\",\"孙吴县\",\"北安市\",\"五大连池市\"]);  \ndsy.add(\"0_7_11\",[\"北林区\",\"望奎县\",\"兰西县\",\"青冈县\",\"庆安县\",\"明水县\",\"绥棱县\",\"安达市\",\"肇东市\",\"海伦市\"]);  \ndsy.add(\"0_7_12\",[\"加格达奇区\",\"呼玛县\",\"塔河县\",\"漠河县\"]);  \ndsy.add(\"0_7\",[\"哈尔滨\",\"齐齐哈尔\",\"鸡西\",\"鹤岗\",\"双鸭山\",\"大庆\",\"伊春\",\"佳木斯\",\"七台河\",\"牡丹江\",\"黑河\",\"绥化\",\"大兴安岭\"]);  \n  \ndsy.add(\"0_8_0\",[\"黄浦区\",\"徐汇区\",\"长宁区\",\"静安区\",\"普陀区\",\"闸北区\",\"虹口区\",\"杨浦区\",\"闵行区\",\"宝山区\",\"嘉定区\",\"浦东新区\",\"金山区\",\"松江区\",\"青浦区\",\"奉贤区\",\"崇明县\"]);  \ndsy.add(\"0_8\",[\"上海\"]);  \n  \ndsy.add(\"0_9_0\",[\"玄武区\",\"秦淮区\",\"建邺区\",\"鼓楼区\",\"浦口区\",\"栖霞区\",\"雨花台区\",\"江宁区\",\"六合区\",\"溧水区\",\"高淳区\"]);  \ndsy.add(\"0_9_1\",[\"崇安区\",\"南长区\",\"北塘区\",\"锡山区\",\"惠山区\",\"滨湖区\",\"江阴市\",\"宜兴市\"]);  \ndsy.add(\"0_9_2\",[\"鼓楼区\",\"云龙区\",\"贾汪区\",\"泉山区\",\"铜山区\",\"丰县\",\"沛县\",\"睢宁县\",\"新沂市\",\"邳州市\"]);  \ndsy.add(\"0_9_3\",[\"天宁区\",\"钟楼区\",\"戚墅堰区\",\"新北区\",\"武进区\",\"溧阳市\",\"金坛市\"]);  \ndsy.add(\"0_9_4\",[\"虎丘区\",\"吴中区\",\"相城区\",\"姑苏区\",\"吴江区\",\"常熟市\",\"张家港市\",\"昆山市\",\"太仓市\"]);  \ndsy.add(\"0_9_5\",[\"崇川区\",\"港闸区\",\"通州区\",\"海安县\",\"如东县\",\"启东市\",\"如皋市\",\"海门市\"]);  \ndsy.add(\"0_9_6\",[\"连云区\",\"海州区\",\"赣榆区\",\"东海县\",\"灌云县\",\"灌南县\"]);  \ndsy.add(\"0_9_7\",[\"清河区\",\"淮安区\",\"淮阴区\",\"清浦区\",\"涟水县\",\"洪泽县\",\"盱眙县\",\"金湖县\"]);  \ndsy.add(\"0_9_8\",[\"亭湖区\",\"盐都区\",\"响水县\",\"滨海县\",\"阜宁县\",\"射阳县\",\"建湖县\",\"东台市\",\"大丰市\"]);  \ndsy.add(\"0_9_9\",[\"广陵区\",\"邗江区\",\"江都区\",\"宝应县\",\"仪征市\",\"高邮市\"]);  \ndsy.add(\"0_9_10\",[\"京口区\",\"润州区\",\"丹徒区\",\"丹阳市\",\"扬中市\",\"句容市\"]);  \ndsy.add(\"0_9_11\",[\"海陵区\",\"高港区\",\"姜堰区\",\"兴化市\",\"靖江市\",\"泰兴市\"]);  \ndsy.add(\"0_9_12\",[\"宿城区\",\"宿豫区\",\"沭阳县\",\"泗阳县\",\"泗洪县\"]);  \ndsy.add(\"0_9\",[\"南京\",\"无锡\",\"徐州\",\"常州\",\"苏州\",\"南通\",\"连云港\",\"淮安\",\"盐城\",\"扬州\",\"镇江\",\"泰州\",\"宿迁\"]);  \n  \ndsy.add(\"0_10_0\",[\"上城区\",\"下城区\",\"江干区\",\"拱墅区\",\"西湖区\",\"滨江区\",\"萧山区\",\"余杭区\",\"桐庐县\",\"淳安县\",\"建德市\",\"富阳市\",\"临安市\"]);  \ndsy.add(\"0_10_1\",[\"海曙区\",\"江东区\",\"江北区\",\"北仑区\",\"镇海区\",\"鄞州区\",\"象山县\",\"宁海县\",\"余姚市\",\"慈溪市\",\"奉化市\"]);  \ndsy.add(\"0_10_2\",[\"鹿城区\",\"龙湾区\",\"瓯海区\",\"洞头县\",\"永嘉县\",\"平阳县\",\"苍南县\",\"文成县\",\"泰顺县\",\"瑞安市\",\"乐清市\"]);  \ndsy.add(\"0_10_3\",[\"南湖区\",\"秀洲区\",\"嘉善县\",\"海盐县\",\"海宁市\",\"平湖市\",\"桐乡市\"]);  \ndsy.add(\"0_10_4\",[\"吴兴区\",\"南浔区\",\"德清县\",\"长兴县\",\"安吉县\"]);  \ndsy.add(\"0_10_5\",[\"越城区\",\"柯桥区\",\"新昌县\",\"诸暨市\",\"上虞区\",\"嵊州市\"]);  \ndsy.add(\"0_10_6\",[\"婺城区\",\"金东区\",\"武义县\",\"浦江县\",\"磐安县\",\"兰溪市\",\"义乌市\",\"东阳市\",\"永康市\"]);  \ndsy.add(\"0_10_7\",[\"柯城区\",\"衢江区\",\"常山县\",\"开化县\",\"龙游县\",\"江山市\"]);  \ndsy.add(\"0_10_8\",[\"定海区\",\"普陀区\",\"岱山县\",\"嵊泗县\"]);  \ndsy.add(\"0_10_9\",[\"椒江区\",\"黄岩区\",\"路桥区\",\"玉环县\",\"三门县\",\"天台县\",\"仙居县\",\"温岭市\",\"临海市\"]);  \ndsy.add(\"0_10_10\",[\"莲都区\",\"青田县\",\"缙云县\",\"遂昌县\",\"松阳县\",\"云和县\",\"庆元县\",\"景宁畲族自治县\",\"龙泉市\"]);  \ndsy.add(\"0_10\",[\"杭州\",\"宁波\",\"温州\",\"嘉兴\",\"湖州\",\"绍兴\",\"金华\",\"衢州\",\"舟山\",\"台州\",\"丽水\"]);  \n  \ndsy.add(\"0_11_0\",[\"瑶海区\",\"庐阳区\",\"蜀山区\",\"包河区\",\"长丰县\",\"肥东县\",\"肥西县\",\"庐江县\",\"巢湖市\"]);  \ndsy.add(\"0_11_1\",[\"镜湖区\",\"弋江区\",\"鸠江区\",\"三山区\",\"芜湖县\",\"繁昌县\",\"南陵县\",\"无为县\"]);  \ndsy.add(\"0_11_2\",[\"龙子湖区\",\"蚌山区\",\"禹会区\",\"淮上区\",\"怀远县\",\"五河县\",\"固镇县\"]);  \ndsy.add(\"0_11_3\",[\"大通区\",\"田家庵区\",\"谢家集区\",\"八公山区\",\"潘集区\",\"凤台县\"]);  \ndsy.add(\"0_11_4\",[\"花山区\",\"雨山区\",\"博望区\",\"当涂县\",\"含山县\",\"和县\"]);  \ndsy.add(\"0_11_5\",[\"杜集区\",\"相山区\",\"烈山区\",\"濉溪县\"]);  \ndsy.add(\"0_11_6\",[\"铜官山区\",\"狮子山区\",\"郊区\",\"铜陵县\"]);  \ndsy.add(\"0_11_7\",[\"迎江区\",\"大观区\",\"宜秀区\",\"怀宁县\",\"枞阳县\",\"潜山县\",\"太湖县\",\"宿松县\",\"望江县\",\"岳西县\",\"桐城市\"]);  \ndsy.add(\"0_11_8\",[\"屯溪区\",\"黄山区\",\"徽州区\",\"歙县\",\"休宁县\",\"黟县\",\"祁门县\"]);  \ndsy.add(\"0_11_9\",[\"琅琊区\",\"南谯区\",\"来安县\",\"全椒县\",\"定远县\",\"凤阳县\",\"天长市\",\"明光市\"]);  \ndsy.add(\"0_11_10\",[\"颍州区\",\"颍东区\",\"颍泉区\",\"临泉县\",\"太和县\",\"阜南县\",\"颍上县\",\"界首市\"]);  \ndsy.add(\"0_11_11\",[\"埇桥区\",\"砀山县\",\"萧县\",\"灵璧县\",\"泗县\"]);  \ndsy.add(\"0_11_12\",[\"金安区\",\"裕安区\",\"寿县\",\"霍邱县\",\"舒城县\",\"金寨县\",\"霍山县\"]);  \ndsy.add(\"0_11_13\",[\"谯城区\",\"涡阳县\",\"蒙城县\",\"利辛县\"]);  \ndsy.add(\"0_11_14\",[\"贵池区\",\"东至县\",\"石台县\",\"青阳县\"]);  \ndsy.add(\"0_11_15\",[\"宣州区\",\"郎溪县\",\"广德县\",\"泾县\",\"绩溪县\",\"旌德县\",\"宁国市\"]);  \ndsy.add(\"0_11\",[\"合肥\",\"芜湖\",\"蚌埠\",\"淮南\",\"马鞍山\",\"淮北\",\"铜陵\",\"安庆\",\"黄山\",\"滁州\",\"阜阳\",\"宿州\",\"六安\",\"亳州\",\"池州\",\"宣城\"]);  \n  \ndsy.add(\"0_12_0\",[\"鼓楼区\",\"台江区\",\"仓山区\",\"马尾区\",\"晋安区\",\"闽侯县\",\"连江县\",\"罗源县\",\"闽清县\",\"永泰县\",\"平潭县\",\"福清市\",\"长乐市\"]);  \ndsy.add(\"0_12_1\",[\"思明区\",\"海沧区\",\"湖里区\",\"集美区\",\"同安区\",\"翔安区\"]);  \ndsy.add(\"0_12_2\",[\"城厢区\",\"涵江区\",\"荔城区\",\"秀屿区\",\"仙游县\"]);  \ndsy.add(\"0_12_3\",[\"梅列区\",\"三元区\",\"明溪县\",\"清流县\",\"宁化县\",\"大田县\",\"尤溪县\",\"沙县\",\"将乐县\",\"泰宁县\",\"建宁县\",\"永安市\"]);  \ndsy.add(\"0_12_4\",[\"鲤城区\",\"丰泽区\",\"洛江区\",\"泉港区\",\"惠安县\",\"安溪县\",\"永春县\",\"德化县\",\"金门县\",\"石狮市\",\"晋江市\",\"南安市\"]);  \ndsy.add(\"0_12_5\",[\"芗城区\",\"龙文区\",\"云霄县\",\"漳浦县\",\"诏安县\",\"长泰县\",\"东山县\",\"南靖县\",\"平和县\",\"华安县\",\"龙海市\"]);  \ndsy.add(\"0_12_6\",[\"延平区\",\"顺昌县\",\"浦城县\",\"光泽县\",\"松溪县\",\"政和县\",\"邵武市\",\"武夷山市\",\"建瓯市\",\"建阳区\"]);  \ndsy.add(\"0_12_7\",[\"新罗区\",\"长汀县\",\"永定县\",\"上杭县\",\"武平县\",\"连城县\",\"漳平市\"]);  \ndsy.add(\"0_12_8\",[\"蕉城区\",\"霞浦县\",\"古田县\",\"屏南县\",\"寿宁县\",\"周宁县\",\"柘荣县\",\"福安市\",\"福鼎市\"]);  \ndsy.add(\"0_12\",[\"福州\",\"厦门\",\"莆田\",\"三明\",\"泉州\",\"漳州\",\"南平\",\"龙岩\",\"宁德\"]);  \n  \ndsy.add(\"0_13_0\",[\"东湖区\",\"西湖区\",\"青云谱区\",\"湾里区\",\"青山湖区\",\"南昌县\",\"新建县\",\"安义县\",\"进贤县\"]);  \ndsy.add(\"0_13_1\",[\"昌江区\",\"珠山区\",\"浮梁县\",\"乐平市\"]);  \ndsy.add(\"0_13_2\",[\"安源区\",\"湘东区\",\"莲花县\",\"上栗县\",\"芦溪县\"]);  \ndsy.add(\"0_13_3\",[\"庐山区\",\"浔阳区\",\"九江县\",\"武宁县\",\"修水县\",\"永修县\",\"德安县\",\"星子县\",\"都昌县\",\"湖口县\",\"彭泽县\",\"瑞昌市\",\"共青城市\"]);  \ndsy.add(\"0_13_4\",[\"渝水区\",\"分宜县\"]);  \ndsy.add(\"0_13_5\",[\"月湖区\",\"余江县\",\"贵溪市\"]);  \ndsy.add(\"0_13_6\",[\"章贡区\",\"赣县\",\"信丰县\",\"大余县\",\"上犹县\",\"崇义县\",\"安远县\",\"龙南县\",\"定南县\",\"全南县\",\"宁都县\",\"于都县\",\"兴国县\",\"会昌县\",\"寻乌县\",\"石城县\",\"瑞金市\",\"南康区\"]);  \ndsy.add(\"0_13_7\",[\"吉州区\",\"青原区\",\"吉安县\",\"吉水县\",\"峡江县\",\"新干县\",\"永丰县\",\"泰和县\",\"遂川县\",\"万安县\",\"安福县\",\"永新县\",\"井冈山市\"]);  \ndsy.add(\"0_13_8\",[\"袁州区\",\"奉新县\",\"万载县\",\"上高县\",\"宜丰县\",\"靖安县\",\"铜鼓县\",\"丰城市\",\"樟树市\",\"高安市\"]);  \ndsy.add(\"0_13_9\",[\"临川区\",\"南城县\",\"黎川县\",\"南丰县\",\"崇仁县\",\"乐安县\",\"宜黄县\",\"金溪县\",\"资溪县\",\"东乡县\",\"广昌县\"]);  \ndsy.add(\"0_13_10\",[\"信州区\",\"上饶县\",\"广丰县\",\"玉山县\",\"铅山县\",\"横峰县\",\"弋阳县\",\"余干县\",\"鄱阳县\",\"万年县\",\"婺源县\",\"德兴市\"]);  \ndsy.add(\"0_13\",[\"南昌\",\"景德镇\",\"萍乡\",\"九江\",\"新余\",\"鹰潭\",\"赣州\",\"吉安\",\"宜春\",\"抚州\",\"上饶\"]);  \n  \ndsy.add(\"0_14_0\",[\"历下区\",\"市中区\",\"槐荫区\",\"天桥区\",\"历城区\",\"长清区\",\"平阴县\",\"济阳县\",\"商河县\",\"章丘市\"]);  \ndsy.add(\"0_14_1\",[\"市南区\",\"市北区\",\"黄岛区\",\"崂山区\",\"李沧区\",\"城阳区\",\"胶州市\",\"即墨市\",\"平度市\",\"莱西市\"]);  \ndsy.add(\"0_14_2\",[\"淄川区\",\"张店区\",\"博山区\",\"临淄区\",\"周村区\",\"桓台县\",\"高青县\",\"沂源县\"]);  \ndsy.add(\"0_14_3\",[\"市中区\",\"薛城区\",\"峄城区\",\"台儿庄区\",\"山亭区\",\"滕州市\"]);  \ndsy.add(\"0_14_4\",[\"东营区\",\"河口区\",\"垦利县\",\"利津县\",\"广饶县\"]);  \ndsy.add(\"0_14_5\",[\"芝罘区\",\"福山区\",\"牟平区\",\"莱山区\",\"长岛县\",\"龙口市\",\"莱阳市\",\"莱州市\",\"蓬莱市\",\"招远市\",\"栖霞市\",\"海阳市\"]);  \ndsy.add(\"0_14_6\",[\"潍城区\",\"寒亭区\",\"坊子区\",\"奎文区\",\"临朐县\",\"昌乐县\",\"青州市\",\"诸城市\",\"寿光市\",\"安丘市\",\"高密市\",\"昌邑市\"]);  \ndsy.add(\"0_14_7\",[\"任城区\",\"微山县\",\"鱼台县\",\"金乡县\",\"嘉祥县\",\"汶上县\",\"泗水县\",\"梁山县\",\"曲阜市\",\"兖州区\",\"邹城市\"]);  \ndsy.add(\"0_14_8\",[\"泰山区\",\"岱岳区\",\"宁阳县\",\"东平县\",\"新泰市\",\"肥城市\"]);  \ndsy.add(\"0_14_9\",[\"环翠区\",\"文登区\",\"荣成市\",\"乳山市\"]);  \ndsy.add(\"0_14_10\",[\"东港区\",\"岚山区\",\"五莲县\",\"莒县\"]);  \ndsy.add(\"0_14_11\",[\"莱城区\",\"钢城区\"]);  \ndsy.add(\"0_14_12\",[\"兰山区\",\"罗庄区\",\"河东区\",\"沂南县\",\"郯城县\",\"沂水县\",\"兰陵县\",\"费县\",\"平邑县\",\"莒南县\",\"蒙阴县\",\"临沭县\"]);  \ndsy.add(\"0_14_13\",[\"德城区\",\"陵城区\",\"宁津县\",\"庆云县\",\"临邑县\",\"齐河县\",\"平原县\",\"夏津县\",\"武城县\",\"乐陵市\",\"禹城市\"]);  \ndsy.add(\"0_14_14\",[\"东昌府区\",\"阳谷县\",\"莘县\",\"茌平县\",\"东阿县\",\"冠县\",\"高唐县\",\"临清市\"]);  \ndsy.add(\"0_14_15\",[\"滨城区\",\"惠民县\",\"阳信县\",\"无棣县\",\"沾化区\",\"博兴县\",\"邹平县\"]);  \ndsy.add(\"0_14_16\",[\"牡丹区\",\"曹县\",\"单县\",\"成武县\",\"巨野县\",\"郓城县\",\"鄄城县\",\"定陶县\",\"东明县\"]);  \ndsy.add(\"0_14\",[\"济南\",\"青岛\",\"淄博\",\"枣庄\",\"东营\",\"烟台\",\"潍坊\",\"济宁\",\"泰安\",\"威海\",\"日照\",\"莱芜\",\"临沂\",\"德州\",\"聊城\",\"滨州\",\"菏泽\"]);  \n  \ndsy.add(\"0_15_0\",[\"中原区\",\"二七区\",\"管城回族区\",\"金水区\",\"上街区\",\"惠济区\",\"中牟县\",\"巩义市\",\"荥阳市\",\"新密市\",\"新郑市\",\"登封市\"]);  \ndsy.add(\"0_15_1\",[\"龙亭区\",\"顺河回族区\",\"鼓楼区\",\"禹王台区\",\"杞县\",\"通许县\",\"尉氏县\",\"祥符区\",\"兰考县\"]);  \ndsy.add(\"0_15_2\",[\"老城区\",\"西工区\",\"瀍河回族区\",\"涧西区\",\"吉利区\",\"洛龙区\",\"孟津县\",\"新安县\",\"栾川县\",\"嵩县\",\"汝阳县\",\"宜阳县\",\"洛宁县\",\"伊川县\",\"偃师市\"]);  \ndsy.add(\"0_15_3\",[\"新华区\",\"卫东区\",\"石龙区\",\"湛河区\",\"宝丰县\",\"叶县\",\"鲁山县\",\"郏县\",\"舞钢市\",\"汝州市\"]);  \ndsy.add(\"0_15_4\",[\"文峰区\",\"北关区\",\"殷都区\",\"龙安区\",\"安阳县\",\"汤阴县\",\"滑县\",\"内黄县\",\"林州市\"]);  \ndsy.add(\"0_15_5\",[\"鹤山区\",\"山城区\",\"淇滨区\",\"浚县\",\"淇县\"]);  \ndsy.add(\"0_15_6\",[\"红旗区\",\"卫滨区\",\"凤泉区\",\"牧野区\",\"新乡县\",\"获嘉县\",\"原阳县\",\"延津县\",\"封丘县\",\"长垣县\",\"卫辉市\",\"辉县市\"]);  \ndsy.add(\"0_15_7\",[\"解放区\",\"中站区\",\"马村区\",\"山阳区\",\"修武县\",\"博爱县\",\"武陟县\",\"温县\",\"沁阳市\",\"孟州市\"]);  \ndsy.add(\"0_15_8\",[\"华龙区\",\"清丰县\",\"南乐县\",\"范县\",\"台前县\",\"濮阳县\"]);  \ndsy.add(\"0_15_9\",[\"魏都区\",\"许昌县\",\"鄢陵县\",\"襄城县\",\"禹州市\",\"长葛市\"]);  \ndsy.add(\"0_15_10\",[\"源汇区\",\"郾城区\",\"召陵区\",\"舞阳县\",\"临颍县\"]);  \ndsy.add(\"0_15_11\",[\"湖滨区\",\"渑池县\",\"陕县\",\"卢氏县\",\"义马市\",\"灵宝市\"]);  \ndsy.add(\"0_15_12\",[\"宛城区\",\"卧龙区\",\"南召县\",\"方城县\",\"西峡县\",\"镇平县\",\"内乡县\",\"淅川县\",\"社旗县\",\"唐河县\",\"新野县\",\"桐柏县\",\"邓州市\"]);  \ndsy.add(\"0_15_13\",[\"梁园区\",\"睢阳区\",\"民权县\",\"睢县\",\"宁陵县\",\"柘城县\",\"虞城县\",\"夏邑县\",\"永城市\"]);  \ndsy.add(\"0_15_14\",[\"浉河区\",\"平桥区\",\"罗山县\",\"光山县\",\"新县\",\"商城县\",\"固始县\",\"潢川县\",\"淮滨县\",\"息县\"]);  \ndsy.add(\"0_15_15\",[\"川汇区\",\"扶沟县\",\"西华县\",\"商水县\",\"沈丘县\",\"郸城县\",\"淮阳县\",\"太康县\",\"鹿邑县\",\"项城市\"]);  \ndsy.add(\"0_15_16\",[\"驿城区\",\"西平县\",\"上蔡县\",\"平舆县\",\"正阳县\",\"确山县\",\"泌阳县\",\"汝南县\",\"遂平县\",\"新蔡县\"]);  \ndsy.add(\"0_15_17\",[\"济源\"]);  \ndsy.add(\"0_15\",[\"郑州\",\"开封\",\"洛阳\",\"平顶山\",\"安阳\",\"鹤壁\",\"新乡\",\"焦作\",\"濮阳\",\"许昌\",\"漯河\",\"三门峡\",\"南阳\",\"商丘\",\"信阳\",\"周口\",\"驻马店\",\"济源\"]);  \n  \ndsy.add(\"0_16_0\",[\"江岸区\",\"江汉区\",\"硚口区\",\"汉阳区\",\"武昌区\",\"青山区\",\"洪山区\",\"东西湖区\",\"汉南区\",\"蔡甸区\",\"江夏区\",\"黄陂区\",\"新洲区\"]);  \ndsy.add(\"0_16_1\",[\"黄石港区\",\"西塞山区\",\"下陆区\",\"铁山区\",\"阳新县\",\"大冶市\"]);  \ndsy.add(\"0_16_2\",[\"茅箭区\",\"张湾区\",\"郧阳区\",\"郧西县\",\"竹山县\",\"竹溪县\",\"房县\",\"丹江口市\"]);  \ndsy.add(\"0_16_3\",[\"西陵区\",\"伍家岗区\",\"点军区\",\"猇亭区\",\"夷陵区\",\"远安县\",\"兴山县\",\"秭归县\",\"长阳土家族自治县\",\"五峰土家族自治县\",\"宜都市\",\"当阳市\",\"枝江市\"]);  \ndsy.add(\"0_16_4\",[\"襄城区\",\"樊城区\",\"襄州区\",\"南漳县\",\"谷城县\",\"保康县\",\"老河口市\",\"枣阳市\",\"宜城市\"]);  \ndsy.add(\"0_16_5\",[\"梁子湖区\",\"华容区\",\"鄂城区\"]);  \ndsy.add(\"0_16_6\",[\"东宝区\",\"掇刀区\",\"京山县\",\"沙洋县\",\"钟祥市\"]);  \ndsy.add(\"0_16_7\",[\"孝南区\",\"孝昌县\",\"大悟县\",\"云梦县\",\"应城市\",\"安陆市\",\"汉川市\"]);  \ndsy.add(\"0_16_8\",[\"沙市区\",\"荆州区\",\"公安县\",\"监利县\",\"江陵县\",\"石首市\",\"洪湖市\",\"松滋市\"]);  \ndsy.add(\"0_16_9\",[\"黄州区\",\"团风县\",\"红安县\",\"罗田县\",\"英山县\",\"浠水县\",\"蕲春县\",\"黄梅县\",\"麻城市\",\"武穴市\"]);  \ndsy.add(\"0_16_10\",[\"咸安区\",\"嘉鱼县\",\"通城县\",\"崇阳县\",\"通山县\",\"赤壁市\"]);  \ndsy.add(\"0_16_11\",[\"曾都区\",\"随县\",\"广水市\"]);  \ndsy.add(\"0_16_12\",[\"恩施市\",\"利川市\",\"建始县\",\"巴东县\",\"宣恩县\",\"咸丰县\",\"来凤县\",\"鹤峰县\"]);  \ndsy.add(\"0_16_13\", [\"仙桃\"]);  \ndsy.add(\"0_16_14\", [\"潜江\"]);  \ndsy.add(\"0_16_15\", [\"天门\"]);  \ndsy.add(\"0_16_16\", [\"神农架\"]);  \ndsy.add(\"0_16\",[\"武汉\",\"黄石\",\"十堰\",\"宜昌\",\"襄阳\",\"鄂州\",\"荆门\",\"孝感\",\"荆州\",\"黄冈\",\"咸宁\",\"随州\",\"恩施\",\"仙桃\",\"潜江\",\"天门\",\"神农架\"]);  \n  \ndsy.add(\"0_17_0\",[\"芙蓉区\",\"天心区\",\"岳麓区\",\"开福区\",\"雨花区\",\"望城区\",\"长沙县\",\"宁乡县\",\"浏阳市\"]);  \ndsy.add(\"0_17_1\",[\"荷塘区\",\"芦淞区\",\"石峰区\",\"天元区\",\"株洲县\",\"攸县\",\"茶陵县\",\"炎陵县\",\"醴陵市\"]);  \ndsy.add(\"0_17_2\",[\"雨湖区\",\"岳塘区\",\"湘潭县\",\"湘乡市\",\"韶山市\"]);  \ndsy.add(\"0_17_3\",[\"珠晖区\",\"雁峰区\",\"石鼓区\",\"蒸湘区\",\"南岳区\",\"衡阳县\",\"衡南县\",\"衡山县\",\"衡东县\",\"祁东县\",\"耒阳市\",\"常宁市\"]);  \ndsy.add(\"0_17_4\",[\"双清区\",\"大祥区\",\"北塔区\",\"邵东县\",\"新邵县\",\"邵阳县\",\"隆回县\",\"洞口县\",\"绥宁县\",\"新宁县\",\"城步苗族自治县\",\"武冈市\"]);  \ndsy.add(\"0_17_5\",[\"岳阳楼区\",\"云溪区\",\"君山区\",\"岳阳县\",\"华容县\",\"湘阴县\",\"平江县\",\"汨罗市\",\"临湘市\"]);  \ndsy.add(\"0_17_6\",[\"武陵区\",\"鼎城区\",\"安乡县\",\"汉寿县\",\"澧县\",\"临澧县\",\"桃源县\",\"石门县\",\"津市市\"]);  \ndsy.add(\"0_17_7\",[\"永定区\",\"武陵源区\",\"慈利县\",\"桑植县\"]);  \ndsy.add(\"0_17_8\",[\"资阳区\",\"赫山区\",\"南县\",\"桃江县\",\"安化县\",\"沅江市\"]);  \ndsy.add(\"0_17_9\",[\"北湖区\",\"苏仙区\",\"桂阳县\",\"宜章县\",\"永兴县\",\"嘉禾县\",\"临武县\",\"汝城县\",\"桂东县\",\"安仁县\",\"资兴市\"]);  \ndsy.add(\"0_17_10\",[\"零陵区\",\"冷水滩区\",\"祁阳县\",\"东安县\",\"双牌县\",\"道县\",\"江永县\",\"宁远县\",\"蓝山县\",\"新田县\",\"江华瑶族自治县\"]);  \ndsy.add(\"0_17_11\",[\"鹤城区\",\"中方县\",\"沅陵县\",\"辰溪县\",\"溆浦县\",\"会同县\",\"麻阳苗族自治县\",\"新晃侗族自治县\",\"芷江侗族自治县\",\"靖州苗族侗族自治县\",\"通道侗族自治县\",\"洪江市\"]);  \ndsy.add(\"0_17_12\",[\"娄星区\",\"双峰县\",\"新化县\",\"冷水江市\",\"涟源市\"]);  \ndsy.add(\"0_17_13\",[\"吉首市\",\"泸溪县\",\"凤凰县\",\"花垣县\",\"保靖县\",\"古丈县\",\"永顺县\",\"龙山县\"]);  \ndsy.add(\"0_17\",[\"长沙\",\"株洲\",\"湘潭\",\"衡阳\",\"邵阳\",\"岳阳\",\"常德\",\"张家界\",\"益阳\",\"郴州\",\"永州\",\"怀化\",\"娄底\",\"湘西\"]);  \n  \ndsy.add(\"0_18_0\",[\"荔湾区\",\"越秀区\",\"海珠区\",\"天河区\",\"白云区\",\"黄埔区\",\"番禺区\",\"花都区\",\"南沙区\",\"增城区\",\"从化区\"]);  \ndsy.add(\"0_18_1\",[\"武江区\",\"浈江区\",\"曲江区\",\"始兴县\",\"仁化县\",\"翁源县\",\"乳源瑶族自治县\",\"新丰县\",\"乐昌市\",\"南雄市\"]);  \ndsy.add(\"0_18_2\",[\"罗湖区\",\"福田区\",\"南山区\",\"宝安区\",\"龙岗区\",\"盐田区\"]);  \ndsy.add(\"0_18_3\",[\"香洲区\",\"斗门区\",\"金湾区\"]);  \ndsy.add(\"0_18_4\",[\"龙湖区\",\"金平区\",\"濠江区\",\"潮阳区\",\"潮南区\",\"澄海区\",\"南澳县\"]);  \ndsy.add(\"0_18_5\",[\"禅城区\",\"南海区\",\"顺德区\",\"三水区\",\"高明区\"]);  \ndsy.add(\"0_18_6\",[\"蓬江区\",\"江海区\",\"新会区\",\"台山市\",\"开平市\",\"鹤山市\",\"恩平市\"]);  \ndsy.add(\"0_18_7\",[\"赤坎区\",\"霞山区\",\"坡头区\",\"麻章区\",\"遂溪县\",\"徐闻县\",\"廉江市\",\"雷州市\",\"吴川市\"]);  \ndsy.add(\"0_18_8\",[\"茂南区\",\"电白区\",\"高州市\",\"化州市\",\"信宜市\"]);  \ndsy.add(\"0_18_9\",[\"端州区\",\"鼎湖区\",\"广宁县\",\"怀集县\",\"封开县\",\"德庆县\",\"高要市\",\"四会市\"]);  \ndsy.add(\"0_18_10\",[\"惠城区\",\"惠阳区\",\"博罗县\",\"惠东县\",\"龙门县\"]);  \ndsy.add(\"0_18_11\",[\"梅江区\",\"梅县区\",\"大埔县\",\"丰顺县\",\"五华县\",\"平远县\",\"蕉岭县\",\"兴宁市\"]);  \ndsy.add(\"0_18_12\",[\"城区\",\"海丰县\",\"陆河县\",\"陆丰市\"]);  \ndsy.add(\"0_18_13\",[\"源城区\",\"紫金县\",\"龙川县\",\"连平县\",\"和平县\",\"东源县\"]);  \ndsy.add(\"0_18_14\",[\"江城区\",\"阳西县\",\"阳东区\",\"阳春市\"]);  \ndsy.add(\"0_18_15\",[\"清城区\",\"清新区\",\"佛冈县\",\"阳山县\",\"连山壮族瑶族自治县\",\"连南瑶族自治县\",\"英德市\",\"连州市\"]);  \ndsy.add(\"0_18_16\",[\"东宝路\",\"花园新村\",\"三元里\"]);  \ndsy.add(\"0_18_17\",[\"竹苑\",\"湖滨北路\"]);  \ndsy.add(\"0_18_18\",[\"湘桥区\",\"潮安区\",\"饶平县\"]);  \ndsy.add(\"0_18_19\",[\"榕城区\",\"揭东区\",\"揭西县\",\"惠来县\",\"普宁市\"]);  \ndsy.add(\"0_18_20\",[\"云城区\",\"新兴县\",\"郁南县\",\"云安区\",\"罗定市\"]);  \ndsy.add(\"0_18\",[\"广州\",\"韶关\",\"深圳\",\"珠海\",\"汕头\",\"佛山\",\"江门\",\"湛江\",\"茂名\",\"肇庆\",\"惠州\",\"梅州\",\"汕尾\",\"河源\",\"阳江\",\"清远\",\"东莞\",\"中山\",\"潮州\",\"揭阳\",\"云浮\"]);  \n  \ndsy.add(\"0_19_0\",[\"兴宁区\",\"青秀区\",\"江南区\",\"西乡塘区\",\"良庆区\",\"邕宁区\",\"武鸣县\",\"隆安县\",\"马山县\",\"上林县\",\"宾阳县\",\"横县\"]);  \ndsy.add(\"0_19_1\",[\"城中区\",\"鱼峰区\",\"柳南区\",\"柳北区\",\"柳江县\",\"柳城县\",\"鹿寨县\",\"融安县\",\"融水苗族自治县\",\"三江侗族自治县\"]);  \ndsy.add(\"0_19_2\",[\"秀峰区\",\"叠彩区\",\"象山区\",\"七星区\",\"雁山区\",\"临桂区\",\"阳朔县\",\"灵川县\",\"全州县\",\"兴安县\",\"永福县\",\"灌阳县\",\"龙胜各族自治县\",\"资源县\",\"平乐县\",\"荔浦县\",\"恭城瑶族自治县\"]);  \ndsy.add(\"0_19_3\",[\"万秀区\",\"长洲区\",\"龙圩区\",\"苍梧县\",\"藤县\",\"蒙山县\",\"岑溪市\"]);  \ndsy.add(\"0_19_4\",[\"海城区\",\"银海区\",\"铁山港区\",\"合浦县\"]);  \ndsy.add(\"0_19_5\",[\"港口区\",\"防城区\",\"上思县\",\"东兴市\"]);  \ndsy.add(\"0_19_6\",[\"钦南区\",\"钦北区\",\"灵山县\",\"浦北县\"]);  \ndsy.add(\"0_19_7\",[\"港北区\",\"港南区\",\"覃塘区\",\"平南县\",\"桂平市\"]);  \ndsy.add(\"0_19_8\",[\"玉州区\",\"福绵区\",\"容县\",\"陆川县\",\"博白县\",\"兴业县\",\"北流市\"]);  \ndsy.add(\"0_19_9\",[\"右江区\",\"田阳县\",\"田东县\",\"平果县\",\"德保县\",\"靖西县\",\"那坡县\",\"凌云县\",\"乐业县\",\"田林县\",\"西林县\",\"隆林各族自治县\"]);  \ndsy.add(\"0_19_10\",[\"八步区\",\"昭平县\",\"钟山县\",\"富川瑶族自治县\"]);  \ndsy.add(\"0_19_11\",[\"金城江区\",\"南丹县\",\"天峨县\",\"凤山县\",\"东兰县\",\"罗城仫佬族自治县\",\"环江毛南族自治县\",\"巴马瑶族自治县\",\"都安瑶族自治县\",\"大化瑶族自治县\",\"宜州市\"]);  \ndsy.add(\"0_19_12\",[\"兴宾区\",\"忻城县\",\"象州县\",\"武宣县\",\"金秀瑶族自治县\",\"合山市\"]);  \ndsy.add(\"0_19_13\",[\"江州区\",\"扶绥县\",\"宁明县\",\"龙州县\",\"大新县\",\"天等县\",\"凭祥市\"]);  \ndsy.add(\"0_19\",[\"南宁\",\"柳州\",\"桂林\",\"梧州\",\"北海\",\"防城港\",\"钦州\",\"贵港\",\"玉林\",\"百色\",\"贺州\",\"河池\",\"来宾\",\"崇左\"]);  \n  \ndsy.add(\"0_20_0\",[\"秀英区\",\"龙华区\",\"琼山区\",\"美兰区\"]);  \ndsy.add(\"0_20_1\",[\"海棠区\",\"吉阳区\",\"天涯区\",\"崖州区\"]);  \ndsy.add(\"0_20_2\",[\"西沙群岛\",\"南沙群岛\",\"中沙群岛的岛礁及其海域\"]);  \ndsy.add(\"0_20_3\",[\"五指山\"]);  \ndsy.add(\"0_20_4\",[\"琼海\"]);  \ndsy.add(\"0_20_5\",[\"儋州\"]);  \ndsy.add(\"0_20_6\",[\"文昌\"]);  \ndsy.add(\"0_20_7\",[\"万宁\"]);  \ndsy.add(\"0_20_8\",[\"东方\"]);  \ndsy.add(\"0_20_9\",[\"定安县\"]);  \ndsy.add(\"0_20_10\",[\"屯昌县\"]);  \ndsy.add(\"0_20_11\",[\"澄迈县\"]);  \ndsy.add(\"0_20_12\",[\"临高县\"]);  \ndsy.add(\"0_20_13\",[\"白沙黎族自治县\"]);  \ndsy.add(\"0_20_14\",[\"昌江黎族自治县\"]);  \ndsy.add(\"0_20_15\",[\"乐东黎族自治县\"]);  \ndsy.add(\"0_20_16\",[\"陵水黎族自治县\"]);  \ndsy.add(\"0_20_17\",[\"保亭黎族苗族自治县\"]);  \ndsy.add(\"0_20_18\",[\"琼中黎族苗族自治县\"]);  \ndsy.add(\"0_20\",[\"海口\",\"三亚\",\"三沙\",\"五指山\",\"琼海\",\"儋州\",\"文昌\",\"万宁\",\"东方\",\"定安县\",\"屯昌县\",\"澄迈县\",\"临高县\",\"白沙\",\"昌江\",\"乐东\",\"陵水\",\"保亭\",\"琼中\"]);  \n  \ndsy.add(\"0_21_0\",[\"万州区\",\"涪陵区\",\"渝中区\",\"大渡口区\",\"江北区\",\"沙坪坝区\",\"九龙坡区\",\"南岸区\",\"北碚区\",\"綦江区\",\"大足区\",\"渝北区\",\"巴南区\",\"黔江区\",\"长寿区\",\"江津区\",\"合川区\",\"永川区\",\"南川区\",\"潼南县\",\"铜梁区\",\"荣昌县\",\"璧山区\",\"梁平县\",\"城口县\",\"丰都县\",\"垫江县\",\"武隆县\",\"忠县\",\"开县\",\"云阳县\",\"奉节县\",\"巫山县\",\"巫溪县\",\"石柱土家族自治县\",\"秀山土家族苗族自治县\",\"酉阳土家族苗族自治县\",\"彭水苗族土家族自治县\"]);  \ndsy.add(\"0_21\",[\"重庆\"]);  \n  \ndsy.add(\"0_22_0\",[\"锦江区\",\"青羊区\",\"金牛区\",\"武侯区\",\"成华区\",\"龙泉驿区\",\"青白江区\",\"新都区\",\"温江区\",\"金堂县\",\"双流县\",\"郫县\",\"大邑县\",\"蒲江县\",\"新津县\",\"都江堰市\",\"彭州市\",\"邛崃市\",\"崇州市\"]);  \ndsy.add(\"0_22_1\",[\"自流井区\",\"贡井区\",\"大安区\",\"沿滩区\",\"荣县\",\"富顺县\"]);  \ndsy.add(\"0_22_2\",[\"东区\",\"西区\",\"仁和区\",\"米易县\",\"盐边县\"]);  \ndsy.add(\"0_22_3\",[\"江阳区\",\"纳溪区\",\"龙马潭区\",\"泸县\",\"合江县\",\"叙永县\",\"古蔺县\"]);  \ndsy.add(\"0_22_4\",[\"旌阳区\",\"中江县\",\"罗江县\",\"广汉市\",\"什邡市\",\"绵竹市\"]);  \ndsy.add(\"0_22_5\",[\"涪城区\",\"游仙区\",\"三台县\",\"盐亭县\",\"安县\",\"梓潼县\",\"北川羌族自治县\",\"平武县\",\"江油市\"]);  \ndsy.add(\"0_22_6\",[\"利州区\",\"昭化区\",\"朝天区\",\"旺苍县\",\"青川县\",\"剑阁县\",\"苍溪县\"]);  \ndsy.add(\"0_22_7\",[\"船山区\",\"安居区\",\"蓬溪县\",\"射洪县\",\"大英县\"]);  \ndsy.add(\"0_22_8\",[\"市中区\",\"东兴区\",\"威远县\",\"资中县\",\"隆昌县\"]);  \ndsy.add(\"0_22_9\",[\"市中区\",\"沙湾区\",\"五通桥区\",\"金口河区\",\"犍为县\",\"井研县\",\"夹江县\",\"沐川县\",\"峨边彝族自治县\",\"马边彝族自治县\",\"峨眉山市\"]);  \ndsy.add(\"0_22_10\",[\"顺庆区\",\"高坪区\",\"嘉陵区\",\"南部县\",\"营山县\",\"蓬安县\",\"仪陇县\",\"西充县\",\"阆中市\"]);  \ndsy.add(\"0_22_11\",[\"东坡区\",\"仁寿县\",\"彭山区\",\"洪雅县\",\"丹棱县\",\"青神县\"]);  \ndsy.add(\"0_22_12\",[\"翠屏区\",\"南溪区\",\"宜宾县\",\"江安县\",\"长宁县\",\"高县\",\"珙县\",\"筠连县\",\"兴文县\",\"屏山县\"]);  \ndsy.add(\"0_22_13\",[\"广安区\",\"前锋区\",\"岳池县\",\"武胜县\",\"邻水县\",\"华蓥市\"]);  \ndsy.add(\"0_22_14\",[\"通川区\",\"达川区\",\"宣汉县\",\"开江县\",\"大竹县\",\"渠县\",\"万源市\"]);  \ndsy.add(\"0_22_15\",[\"雨城区\",\"名山区\",\"荥经县\",\"汉源县\",\"石棉县\",\"天全县\",\"芦山县\",\"宝兴县\"]);  \ndsy.add(\"0_22_16\",[\"巴州区\",\"恩阳区\",\"通江县\",\"南江县\",\"平昌县\"]);  \ndsy.add(\"0_22_17\",[\"雁江区\",\"安岳县\",\"乐至县\",\"简阳市\"]);  \ndsy.add(\"0_22_18\",[\"汶川县\",\"理县\",\"茂县\",\"松潘县\",\"九寨沟县\",\"金川县\",\"小金县\",\"黑水县\",\"马尔康县\",\"壤塘县\",\"阿坝县\",\"若尔盖县\",\"红原县\"]);  \ndsy.add(\"0_22_19\",[\"康定县\",\"泸定县\",\"丹巴县\",\"九龙县\",\"雅江县\",\"道孚县\",\"炉霍县\",\"甘孜县\",\"新龙县\",\"德格县\",\"白玉县\",\"石渠县\",\"色达县\",\"理塘县\",\"巴塘县\",\"乡城县\",\"稻城县\",\"得荣县\"]);  \ndsy.add(\"0_22_20\",[\"西昌市\",\"木里藏族自治县\",\"盐源县\",\"德昌县\",\"会理县\",\"会东县\",\"宁南县\",\"普格县\",\"布拖县\",\"金阳县\",\"昭觉县\",\"喜德县\",\"冕宁县\",\"越西县\",\"甘洛县\",\"美姑县\",\"雷波县\"]);  \ndsy.add(\"0_22\",[\"成都\",\"自贡\",\"攀枝花\",\"泸州\",\"德阳\",\"绵阳\",\"广元\",\"遂宁\",\"内江\",\"乐山\",\"南充\",\"眉山\",\"宜宾\",\"广安\",\"达州\",\"雅安\",\"巴中\",\"资阳\",\"阿坝\",\"甘孜\",\"凉山\"]);  \n  \ndsy.add(\"0_23_0\",[\"南明区\",\"云岩区\",\"花溪区\",\"乌当区\",\"白云区\",\"观山湖区\",\"开阳县\",\"息烽县\",\"修文县\",\"清镇市\"]);  \ndsy.add(\"0_23_1\",[\"钟山区\",\"六枝特区\",\"水城县\",\"盘县\"]);  \ndsy.add(\"0_23_2\",[\"红花岗区\",\"汇川区\",\"遵义县\",\"桐梓县\",\"绥阳县\",\"正安县\",\"道真仡佬族苗族自治县\",\"务川仡佬族苗族自治县\",\"凤冈县\",\"湄潭县\",\"余庆县\",\"习水县\",\"赤水市\",\"仁怀市\"]);  \ndsy.add(\"0_23_3\",[\"西秀区\",\"平坝县\",\"普定县\",\"镇宁布依族苗族自治县\",\"关岭布依族苗族自治县\",\"紫云苗族布依族自治县\"]);  \ndsy.add(\"0_23_4\",[\"七星关区\",\"大方县\",\"黔西县\",\"金沙县\",\"织金县\",\"纳雍县\",\"威宁彝族回族苗族自治县\",\"赫章县\"]);  \ndsy.add(\"0_23_5\",[\"碧江区\",\"万山区\",\"江口县\",\"玉屏侗族自治县\",\"石阡县\",\"思南县\",\"印江土家族苗族自治县\",\"德江县\",\"沿河土家族自治县\",\"松桃苗族自治县\"]);  \ndsy.add(\"0_23_6\",[\"兴义市\",\"兴仁县\",\"普安县\",\"晴隆县\",\"贞丰县\",\"望谟县\",\"册亨县\",\"安龙县\"]);  \ndsy.add(\"0_23_7\",[\"凯里市\",\"黄平县\",\"施秉县\",\"三穗县\",\"镇远县\",\"岑巩县\",\"天柱县\",\"锦屏县\",\"剑河县\",\"台江县\",\"黎平县\",\"榕江县\",\"从江县\",\"雷山县\",\"麻江县\",\"丹寨县\"]);  \ndsy.add(\"0_23_8\",[\"都匀市\",\"福泉市\",\"荔波县\",\"贵定县\",\"瓮安县\",\"独山县\",\"平塘县\",\"罗甸县\",\"长顺县\",\"龙里县\",\"惠水县\",\"三都水族自治县\"]);  \ndsy.add(\"0_23\",[\"贵阳\",\"六盘水\",\"遵义\",\"安顺\",\"毕节\",\"铜仁\",\"黔西南\",\"黔东南\",\"黔南\"]);  \n  \ndsy.add(\"0_24_0\",[\"五华区\",\"盘龙区\",\"官渡区\",\"西山区\",\"东川区\",\"呈贡区\",\"晋宁县\",\"富民县\",\"宜良县\",\"石林彝族自治县\",\"嵩明县\",\"禄劝彝族苗族自治县\",\"寻甸回族彝族自治县\",\"安宁市\"]);  \ndsy.add(\"0_24_1\",[\"麒麟区\",\"马龙县\",\"陆良县\",\"师宗县\",\"罗平县\",\"富源县\",\"会泽县\",\"沾益县\",\"宣威市\"]);  \ndsy.add(\"0_24_2\",[\"红塔区\",\"江川县\",\"澄江县\",\"通海县\",\"华宁县\",\"易门县\",\"峨山彝族自治县\",\"新平彝族傣族自治县\",\"元江哈尼族彝族傣族自治县\"]);  \ndsy.add(\"0_24_3\",[\"隆阳区\",\"施甸县\",\"腾冲县\",\"龙陵县\",\"昌宁县\"]);  \ndsy.add(\"0_24_4\",[\"昭阳区\",\"鲁甸县\",\"巧家县\",\"盐津县\",\"大关县\",\"永善县\",\"绥江县\",\"镇雄县\",\"彝良县\",\"威信县\",\"水富县\"]);  \ndsy.add(\"0_24_5\",[\"古城区\",\"玉龙纳西族自治县\",\"永胜县\",\"华坪县\",\"宁蒗彝族自治县\"]);  \ndsy.add(\"0_24_6\",[\"思茅区\",\"宁洱哈尼族彝族自治县\",\"墨江哈尼族自治县\",\"景东彝族自治县\",\"景谷傣族彝族自治县\",\"镇沅彝族哈尼族拉祜族自治县\",\"江城哈尼族彝族自治县\",\"孟连傣族拉祜族佤族自治县\",\"澜沧拉祜族自治县\",\"西盟佤族自治县\"]);  \ndsy.add(\"0_24_7\",[\"临翔区\",\"凤庆县\",\"云县\",\"永德县\",\"镇康县\",\"双江拉祜族佤族布朗族傣族自治县\",\"耿马傣族佤族自治县\",\"沧源佤族自治县\"]);  \ndsy.add(\"0_24_8\",[\"楚雄市\",\"双柏县\",\"牟定县\",\"南华县\",\"姚安县\",\"大姚县\",\"永仁县\",\"元谋县\",\"武定县\",\"禄丰县\"]);  \ndsy.add(\"0_24_9\",[\"个旧市\",\"开远市\",\"蒙自市\",\"弥勒市\",\"屏边苗族自治县\",\"建水县\",\"石屏县\",\"泸西县\",\"元阳县\",\"红河县\",\"金平苗族瑶族傣族自治县\",\"绿春县\",\"河口瑶族自治县\"]);  \ndsy.add(\"0_24_10\",[\"文山市\",\"砚山县\",\"西畴县\",\"麻栗坡县\",\"马关县\",\"丘北县\",\"广南县\",\"富宁县\"]);  \ndsy.add(\"0_24_11\",[\"景洪市\",\"勐海县\",\"勐腊县\"]);  \ndsy.add(\"0_24_12\",[\"大理市\",\"漾濞彝族自治县\",\"祥云县\",\"宾川县\",\"弥渡县\",\"南涧彝族自治县\",\"巍山彝族回族自治县\",\"永平县\",\"云龙县\",\"洱源县\",\"剑川县\",\"鹤庆县\"]);  \ndsy.add(\"0_24_13\",[\"瑞丽市\",\"芒市\",\"梁河县\",\"盈江县\",\"陇川县\"]);  \ndsy.add(\"0_24_14\",[\"泸水县\",\"福贡县\",\"贡山独龙族怒族自治县\",\"兰坪白族普米族自治县\"]);  \ndsy.add(\"0_24_15\",[\"香格里拉县\",\"德钦县\",\"维西傈僳族自治县\"]);  \ndsy.add(\"0_24\",[\"昆明\",\"曲靖\",\"玉溪\",\"保山\",\"昭通\",\"丽江\",\"普洱\",\"临沧\",\"楚雄\",\"红河\",\"文山\",\"西双版纳\",\"大理\",\"德宏\",\"怒江\",\"迪庆\"]);  \n  \ndsy.add(\"0_25_0\",[\"城关区\",\"林周县\",\"当雄县\",\"尼木县\",\"曲水县\",\"堆龙德庆县\",\"达孜县\",\"墨竹工卡县\"]);  \ndsy.add(\"0_25_1\",[\"卡若区\",\"江达县\",\"贡觉县\",\"类乌齐县\",\"丁青县\",\"察雅县\",\"八宿县\",\"左贡县\",\"芒康县\",\"洛隆县\",\"边坝县\"]);  \ndsy.add(\"0_25_2\",[\"乃东县\",\"扎囊县\",\"贡嘎县\",\"桑日县\",\"琼结县\",\"曲松县\",\"措美县\",\"洛扎县\",\"加查县\",\"隆子县\",\"错那县\",\"浪卡子县\"]);  \ndsy.add(\"0_25_3\",[\"桑珠孜区\",\"南木林县\",\"江孜县\",\"定日县\",\"萨迦县\",\"拉孜县\",\"昂仁县\",\"谢通门县\",\"白朗县\",\"仁布县\",\"康马县\",\"定结县\",\"仲巴县\",\"亚东县\",\"吉隆县\",\"聂拉木县\",\"萨嘎县\",\"岗巴县\"]);  \ndsy.add(\"0_25_4\",[\"那曲县\",\"嘉黎县\",\"比如县\",\"聂荣县\",\"安多县\",\"申扎县\",\"索县\",\"班戈县\",\"巴青县\",\"尼玛县\",\"双湖县\"]);  \ndsy.add(\"0_25_5\",[\"普兰县\",\"札达县\",\"噶尔县\",\"日土县\",\"革吉县\",\"改则县\",\"措勤县\"]);  \ndsy.add(\"0_25_6\",[\"林芝县\",\"工布江达县\",\"米林县\",\"墨脱县\",\"波密县\",\"察隅县\",\"朗县\"]);  \ndsy.add(\"0_25\",[\"拉萨\",\"昌都\",\"山南\",\"日喀则\",\"那曲\",\"阿里\",\"林芝\"]);  \n  \ndsy.add(\"0_26_0\",[\"新城区\",\"碑林区\",\"莲湖区\",\"灞桥区\",\"未央区\",\"雁塔区\",\"阎良区\",\"临潼区\",\"长安区\",\"蓝田县\",\"周至县\",\"户县\",\"高陵县\"]);  \ndsy.add(\"0_26_1\",[\"王益区\",\"印台区\",\"耀州区\",\"宜君县\"]);  \ndsy.add(\"0_26_2\",[\"渭滨区\",\"金台区\",\"陈仓区\",\"凤翔县\",\"岐山县\",\"扶风县\",\"眉县\",\"陇县\",\"千阳县\",\"麟游县\",\"凤县\",\"太白县\"]);  \ndsy.add(\"0_26_3\",[\"秦都区\",\"杨陵区\",\"渭城区\",\"三原县\",\"泾阳县\",\"乾县\",\"礼泉县\",\"永寿县\",\"彬县\",\"长武县\",\"旬邑县\",\"淳化县\",\"武功县\",\"兴平市\"]);  \ndsy.add(\"0_26_4\",[\"临渭区\",\"华县\",\"潼关县\",\"大荔县\",\"合阳县\",\"澄城县\",\"蒲城县\",\"白水县\",\"富平县\",\"韩城市\",\"华阴市\"]);  \ndsy.add(\"0_26_5\",[\"宝塔区\",\"延长县\",\"延川县\",\"子长县\",\"安塞县\",\"志丹县\",\"吴起县\",\"甘泉县\",\"富县\",\"洛川县\",\"宜川县\",\"黄龙县\",\"黄陵县\"]);  \ndsy.add(\"0_26_6\",[\"汉台区\",\"南郑县\",\"城固县\",\"洋县\",\"西乡县\",\"勉县\",\"宁强县\",\"略阳县\",\"镇巴县\",\"留坝县\",\"佛坪县\"]);  \ndsy.add(\"0_26_7\",[\"榆阳区\",\"神木县\",\"府谷县\",\"横山县\",\"靖边县\",\"定边县\",\"绥德县\",\"米脂县\",\"佳县\",\"吴堡县\",\"清涧县\",\"子洲县\"]);  \ndsy.add(\"0_26_8\",[\"汉滨区\",\"汉阴县\",\"石泉县\",\"宁陕县\",\"紫阳县\",\"岚皋县\",\"平利县\",\"镇坪县\",\"旬阳县\",\"白河县\"]);  \ndsy.add(\"0_26_9\",[\"商州区\",\"洛南县\",\"丹凤县\",\"商南县\",\"山阳县\",\"镇安县\",\"柞水县\"]);  \ndsy.add(\"0_26\",[\"西安\",\"铜川\",\"宝鸡\",\"咸阳\",\"渭南\",\"延安\",\"汉中\",\"榆林\",\"安康\",\"商洛\"]);  \n  \ndsy.add(\"0_27_0\",[\"城关区\",\"七里河区\",\"西固区\",\"安宁区\",\"红古区\",\"永登县\",\"皋兰县\",\"榆中县\"]);  \ndsy.add(\"0_27_1\",[\"嘉峪关\"]);  \ndsy.add(\"0_27_2\",[\"金川区\",\"永昌县\"]);  \ndsy.add(\"0_27_3\",[\"白银区\",\"平川区\",\"靖远县\",\"会宁县\",\"景泰县\"]);  \ndsy.add(\"0_27_4\",[\"秦州区\",\"麦积区\",\"清水县\",\"秦安县\",\"甘谷县\",\"武山县\",\"张家川回族自治县\"]);  \ndsy.add(\"0_27_5\",[\"凉州区\",\"民勤县\",\"古浪县\",\"天祝藏族自治县\"]);  \ndsy.add(\"0_27_6\",[\"甘州区\",\"肃南裕固族自治县\",\"民乐县\",\"临泽县\",\"高台县\",\"山丹县\"]);  \ndsy.add(\"0_27_7\",[\"崆峒区\",\"泾川县\",\"灵台县\",\"崇信县\",\"华亭县\",\"庄浪县\",\"静宁县\"]);  \ndsy.add(\"0_27_8\",[\"肃州区\",\"金塔县\",\"瓜州县\",\"肃北蒙古族自治县\",\"阿克塞哈萨克族自治县\",\"玉门市\",\"敦煌市\"]);  \ndsy.add(\"0_27_9\",[\"西峰区\",\"庆城县\",\"环县\",\"华池县\",\"合水县\",\"正宁县\",\"宁县\",\"镇原县\"]);  \ndsy.add(\"0_27_10\",[\"安定区\",\"通渭县\",\"陇西县\",\"渭源县\",\"临洮县\",\"漳县\",\"岷县\"]);  \ndsy.add(\"0_27_11\",[\"武都区\",\"成县\",\"文县\",\"宕昌县\",\"康县\",\"西和县\",\"礼县\",\"徽县\",\"两当县\"]);  \ndsy.add(\"0_27_12\",[\"临夏市\",\"临夏县\",\"康乐县\",\"永靖县\",\"广河县\",\"和政县\",\"东乡族自治县\",\"积石山保安族东乡族撒拉族自治县\"]);  \ndsy.add(\"0_27_13\",[\"合作市\",\"临潭县\",\"卓尼县\",\"舟曲县\",\"迭部县\",\"玛曲县\",\"碌曲县\",\"夏河县\"]);  \ndsy.add(\"0_27\",[\"兰州\",\"嘉峪关\",\"金昌\",\"白银\",\"天水\",\"武威\",\"张掖\",\"平凉\",\"酒泉\",\"庆阳\",\"定西\",\"陇南\",\"临夏\",\"甘南\"]);  \n  \ndsy.add(\"0_28_0\",[\"城东区\",\"城中区\",\"城西区\",\"城北区\",\"大通回族土族自治县\",\"湟中县\",\"湟源县\"]);  \ndsy.add(\"0_28_1\",[\"乐都区\",\"平安县\",\"民和回族土族自治县\",\"互助土族自治县\",\"化隆回族自治县\",\"循化撒拉族自治县\"]);  \ndsy.add(\"0_28_2\",[\"门源回族自治县\",\"祁连县\",\"海晏县\",\"刚察县\"]);  \ndsy.add(\"0_28_3\",[\"同仁县\",\"尖扎县\",\"泽库县\",\"河南蒙古族自治县\"]);  \ndsy.add(\"0_28_4\",[\"共和县\",\"同德县\",\"贵德县\",\"兴海县\",\"贵南县\"]);  \ndsy.add(\"0_28_5\",[\"玛沁县\",\"班玛县\",\"甘德县\",\"达日县\",\"久治县\",\"玛多县\"]);  \ndsy.add(\"0_28_6\",[\"玉树市\",\"杂多县\",\"称多县\",\"治多县\",\"囊谦县\",\"曲麻莱县\"]);  \ndsy.add(\"0_28_7\",[\"格尔木市\",\"德令哈市\",\"乌兰县\",\"都兰县\",\"天峻县\"]);  \ndsy.add(\"0_28\",[\"西宁\",\"海东\",\"海北\",\"黄南\",\"海南\",\"果洛\",\"玉树\",\"海西\"]);  \n  \ndsy.add(\"0_29_0\",[\"兴庆区\",\"西夏区\",\"金凤区\",\"永宁县\",\"贺兰县\",\"灵武市\"]);  \ndsy.add(\"0_29_1\",[\"大武口区\",\"惠农区\",\"平罗县\"]);  \ndsy.add(\"0_29_2\",[\"利通区\",\"红寺堡区\",\"盐池县\",\"同心县\",\"青铜峡市\"]);  \ndsy.add(\"0_29_3\",[\"原州区\",\"西吉县\",\"隆德县\",\"泾源县\",\"彭阳县\"]);  \ndsy.add(\"0_29_4\",[\"沙坡头区\",\"中宁县\",\"海原县\"]);  \ndsy.add(\"0_29\",[\"银川\",\"石嘴山\",\"吴忠\",\"固原\",\"中卫\"]);  \n  \ndsy.add(\"0_30_0\",[\"天山区\",\"沙依巴克区\",\"新市区\",\"水磨沟区\",\"头屯河区\",\"达坂城区\",\"米东区\",\"乌鲁木齐县\"]);  \ndsy.add(\"0_30_1\",[\"独山子区\",\"克拉玛依区\",\"白碱滩区\",\"乌尔禾区\"]);  \ndsy.add(\"0_30_2\",[\"吐鲁番市\",\"鄯善县\",\"托克逊县\"]);  \ndsy.add(\"0_30_3\",[\"哈密市\",\"巴里坤哈萨克自治县\",\"伊吾县\"]);  \ndsy.add(\"0_30_4\",[\"昌吉市\",\"阜康市\",\"呼图壁县\",\"玛纳斯县\",\"奇台县\",\"吉木萨尔县\",\"木垒哈萨克自治县\"]);  \ndsy.add(\"0_30_5\",[\"博乐市\",\"阿拉山口市\",\"精河县\",\"温泉县\"]);  \ndsy.add(\"0_30_6\",[\"库尔勒市\",\"轮台县\",\"尉犁县\",\"若羌县\",\"且末县\",\"焉耆回族自治县\",\"和静县\",\"和硕县\",\"博湖县\"]);  \ndsy.add(\"0_30_7\",[\"阿克苏市\",\"温宿县\",\"库车县\",\"沙雅县\",\"新和县\",\"拜城县\",\"乌什县\",\"阿瓦提县\",\"柯坪县\"]);  \ndsy.add(\"0_30_8\",[\"阿图什市\",\"阿克陶县\",\"阿合奇县\",\"乌恰县\"]);  \ndsy.add(\"0_30_9\",[\"喀什市\",\"疏附县\",\"疏勒县\",\"英吉沙县\",\"泽普县\",\"莎车县\",\"叶城县\",\"麦盖提县\",\"岳普湖县\",\"伽师县\",\"巴楚县\",\"塔什库尔干塔吉克自治县\"]);  \ndsy.add(\"0_30_10\",[\"和田市\",\"和田县\",\"墨玉县\",\"皮山县\",\"洛浦县\",\"策勒县\",\"于田县\",\"民丰县\"]);  \ndsy.add(\"0_30_11\",[\"伊宁市\",\"奎屯市\",\"霍尔果斯市\",\"伊宁县\",\"察布查尔锡伯自治县\",\"霍城县\",\"巩留县\",\"新源县\",\"昭苏县\",\"特克斯县\",\"尼勒克县\"]);  \ndsy.add(\"0_30_12\",[\"塔城市\",\"乌苏市\",\"额敏县\",\"沙湾县\",\"托里县\",\"裕民县\",\"和布克赛尔蒙古自治县\"]);  \ndsy.add(\"0_30_13\",[\"阿勒泰市\",\"布尔津县\",\"富蕴县\",\"福海县\",\"哈巴河县\",\"青河县\",\"吉木乃县\"]);  \ndsy.add(\"0_30_14\",[\"石河子\"]);  \ndsy.add(\"0_30_15\",[\"阿拉尔\"]);  \ndsy.add(\"0_30_16\",[\"图木舒克\"]);  \ndsy.add(\"0_30_17\",[\"五家渠\"]);  \ndsy.add(\"0_30_18\",[\"北屯\"]);  \ndsy.add(\"0_30_19\",[\"铁门关\"]);  \ndsy.add(\"0_30_20\",[\"双河\"]);  \ndsy.add(\"0_30_21\",[\"可克达拉\"]);  \ndsy.add(\"0_30\",[\"乌鲁木齐\",\"克拉玛依\",\"吐鲁番\",\"哈密\",\"昌吉\",\"博尔塔拉\",\"巴音郭楞\",\"阿克苏\",\"克孜勒苏\",\"喀什\",\"和田\",\"伊犁\",\"塔城\",\"阿勒泰\",\"石河子\",\"阿拉尔\",\"图木舒克\",\"五家渠\",\"北屯\",\"铁门关\",\"双河\",\"可克达拉\"]);  \n  \ndsy.add(\"0_31_0\",[\"台北\", \"高雄\", \"台中\", \"花莲\", \"基隆\", \"嘉义\", \"金门\", \"连江\", \"苗栗\", \"南投\", \"澎湖\", \"屏东\", \"台东\", \"台南\", \"桃园\", \"新竹\", \"宜兰\", \"云林\", \"彰化\"]);  \ndsy.add(\"0_31\",[\"台湾\"]);  \n  \ndsy.add(\"0_32_0\",[\"中西区\",\"湾仔区\",\"东区\",\"南区\",\"油尖旺区\",\"深水埗区\",\"九龍城区\",\"黃大仙区\",\"觀塘区\",\"荃湾区\",\"屯門区\",\"元朗区\",\"北区\",\"大埔区\",\"西贡区\",\"沙田区\",\"葵青区\",\"離島区\"]);  \ndsy.add(\"0_32\",[\"香港特別行政区\"]);  \n  \ndsy.add(\"0_33_0\",[\"花地玛堂区\",\"花王堂区\",\"望德堂区\",\"大堂区\",\"風順堂区\",\"嘉模堂区\",\"路氹城\",\"圣方济各堂区\"]);  \ndsy.add(\"0_33\",[\"澳门特別行政区\"]);  \n  \ndsy.add(\"0\",[\"北京\",\"天津\",\"河北\",\"山西\",\"内蒙古\",\"辽宁\",\"吉林\",\"黑龙江\",\"上海\",\"江苏\",\"浙江\",\"安徽\",\"福建\",\"江西\",\"山东\",\"河南\",\"湖北\",\"湖南\",\"广东\",\"广西\",\"海南\",\"重庆\",\"四川\",\"贵州\",\"云南\",\"西藏\",\"陕西\",\"甘肃\",\"青海\",\"宁夏\",\"新疆\",\"台湾\",\"香港\",\"澳门\"]);  \n  \nvar s = [\"s_province\", \"s_city\", \"s_county\"];//三个select的name  \nvar opt0 = [\"省份\", \"地级市\", \"县(区)\"];//初始值  \nfunction _init_area() {  //初始化函数  \n    for (i = 0; i < s.length - 1; i++) {  \n        document.getElementById(s[i]).onchange = new Function(\"change(\" + (i + 1) + \")\");  \n    }  \n    change(0);  \n}  \n```\n","source":"_posts/全国省市县三级地址联动js.md","raw":"---\ntitle: 全国省市县三级地址联动js\ndate: 2017-03-05\ncategories: JS\ntags: \n    - 其他\n#description: \n---\n\n** 用于h5网页的全国地址三级联动选择框，整理截至2016-03-17，地址数据来自高德地图 **\n\n<!-- more -->\n\n```JS\n/* \n*   全国三级城市联动 js版 \n*/  \nfunction Dsy() {  \n    this.Items = {};  \n}  \nDsy.prototype.add = function (id, iArray) {  \n    this.Items[id] = iArray;  \n}  \nDsy.prototype.Exists = function (id) {  \n    if (typeof (this.Items[id]) == \"undefined\") return false;  \n    return true;  \n}  \n  \nfunction change(v) {  \n    var str = \"0\";  \n    for (i = 0; i < v; i++) {  \n        str += (\"_\" + (document.getElementById(s[i]).selectedIndex - 1));  \n    };  \n    var ss = document.getElementById(s[v]);  \n    with (ss) {  \n        length = 0;  \n        options[0] = new Option(opt0[v], \"\");  \n        if (v && document.getElementById(s[v - 1]).selectedIndex > 0 || !v) {  \n            if (dsy.Exists(str)) {  \n                ar = dsy.Items[str];  \n                for (i = 0; i < ar.length; i++) {  \n                    options[length] = new Option(ar[i], ar[i]);  \n                }//end for  \n                if (v) { options[0].selected = true; }  \n            }  \n        }//end if v  \n        if (++v < s.length) { change(v); }  \n    }//End with  \n}  \n  \nvar dsy = new Dsy();  \ndsy.add(\"0_0_0\",[\"东城区\",\"西城区\",\"朝阳区\",\"丰台区\",\"石景山区\",\"海淀区\",\"门头沟区\",\"房山区\",\"通州区\",\"顺义区\",\"昌平区\",\"大兴区\",\"怀柔区\",\"平谷区\",\"密云县\",\"延庆县\"]);  \ndsy.add(\"0_0\",[\"北京\"]);  \n  \ndsy.add(\"0_1_0\",[\"和平区\",\"河东区\",\"河西区\",\"南开区\",\"河北区\",\"红桥区\",\"东丽区\",\"西青区\",\"津南区\",\"北辰区\",\"武清区\",\"宝坻区\",\"滨海新区\",\"宁河县\",\"静海县\",\"蓟县\"]);  \ndsy.add(\"0_1\",[\"天津\"]);  \n  \ndsy.add(\"0_2_0\",[\"长安区\",\"桥西区\",\"新华区\",\"井陉矿区\",\"裕华区\",\"井陉县\",\"正定县\",\"栾城区\",\"行唐县\",\"灵寿县\",\"高邑县\",\"深泽县\",\"赞皇县\",\"无极县\",\"平山县\",\"元氏县\",\"赵县\",\"辛集市\",\"藁城区\",\"晋州市\",\"新乐市\",\"鹿泉区\"]);  \ndsy.add(\"0_2_1\",[\"路南区\",\"路北区\",\"古冶区\",\"开平区\",\"丰南区\",\"丰润区\",\"曹妃甸区\",\"滦县\",\"滦南县\",\"乐亭县\",\"迁西县\",\"玉田县\",\"遵化市\",\"迁安市\"]);  \ndsy.add(\"0_2_2\",[\"海港区\",\"山海关区\",\"北戴河区\",\"青龙满族自治县\",\"昌黎县\",\"抚宁县\",\"卢龙县\"]);  \ndsy.add(\"0_2_3\",[\"邯山区\",\"丛台区\",\"复兴区\",\"峰峰矿区\",\"邯郸县\",\"临漳县\",\"成安县\",\"大名县\",\"涉县\",\"磁县\",\"肥乡县\",\"永年县\",\"邱县\",\"鸡泽县\",\"广平县\",\"馆陶县\",\"魏县\",\"曲周县\",\"武安市\"]);  \ndsy.add(\"0_2_4\",[\"桥东区\",\"桥西区\",\"邢台县\",\"临城县\",\"内丘县\",\"柏乡县\",\"隆尧县\",\"任县\",\"南和县\",\"宁晋县\",\"巨鹿县\",\"新河县\",\"广宗县\",\"平乡县\",\"威县\",\"清河县\",\"临西县\",\"南宫市\",\"沙河市\"]);  \ndsy.add(\"0_2_5\",[\"新市区\",\"北市区\",\"南市区\",\"满城县\",\"清苑县\",\"涞水县\",\"阜平县\",\"徐水县\",\"定兴县\",\"唐县\",\"高阳县\",\"容城县\",\"涞源县\",\"望都县\",\"安新县\",\"易县\",\"曲阳县\",\"蠡县\",\"顺平县\",\"博野县\",\"雄县\",\"涿州市\",\"定州市\",\"安国市\",\"高碑店市\"]);  \ndsy.add(\"0_2_6\",[\"桥东区\",\"桥西区\",\"宣化区\",\"下花园区\",\"宣化县\",\"张北县\",\"康保县\",\"沽源县\",\"尚义县\",\"蔚县\",\"阳原县\",\"怀安县\",\"万全县\",\"怀来县\",\"涿鹿县\",\"赤城县\",\"崇礼县\"]);  \ndsy.add(\"0_2_7\",[\"双桥区\",\"双滦区\",\"鹰手营子矿区\",\"承德县\",\"兴隆县\",\"平泉县\",\"滦平县\",\"隆化县\",\"丰宁满族自治县\",\"宽城满族自治县\",\"围场满族蒙古族自治县\"]);  \ndsy.add(\"0_2_8\",[\"新华区\",\"运河区\",\"沧县\",\"青县\",\"东光县\",\"海兴县\",\"盐山县\",\"肃宁县\",\"南皮县\",\"吴桥县\",\"献县\",\"孟村回族自治县\",\"泊头市\",\"任丘市\",\"黄骅市\",\"河间市\"]);  \ndsy.add(\"0_2_9\",[\"安次区\",\"广阳区\",\"固安县\",\"永清县\",\"香河县\",\"大城县\",\"文安县\",\"大厂回族自治县\",\"霸州市\",\"三河市\"]);  \ndsy.add(\"0_2_10\",[\"桃城区\",\"枣强县\",\"武邑县\",\"武强县\",\"饶阳县\",\"安平县\",\"故城县\",\"景县\",\"阜城县\",\"冀州市\",\"深州市\"]);  \ndsy.add(\"0_2\",[\"石家庄\",\"唐山\",\"秦皇岛\",\"邯郸\",\"邢台\",\"保定\",\"张家口\",\"承德\",\"沧州\",\"廊坊\",\"衡水\"]);  \n  \ndsy.add(\"0_3_0\",[\"小店区\",\"迎泽区\",\"杏花岭区\",\"尖草坪区\",\"万柏林区\",\"晋源区\",\"清徐县\",\"阳曲县\",\"娄烦县\",\"古交市\"]);  \ndsy.add(\"0_3_1\",[\"城区\",\"矿区\",\"南郊区\",\"新荣区\",\"阳高县\",\"天镇县\",\"广灵县\",\"灵丘县\",\"浑源县\",\"左云县\",\"大同县\"]);  \ndsy.add(\"0_3_2\",[\"城区\",\"矿区\",\"郊区\",\"平定县\",\"盂县\"]);  \ndsy.add(\"0_3_3\",[\"城区\",\"郊区\",\"长治县\",\"襄垣县\",\"屯留县\",\"平顺县\",\"黎城县\",\"壶关县\",\"长子县\",\"武乡县\",\"沁县\",\"沁源县\",\"潞城市\"]);  \ndsy.add(\"0_3_4\",[\"城区\",\"沁水县\",\"阳城县\",\"陵川县\",\"泽州县\",\"高平市\"]);  \ndsy.add(\"0_3_5\",[\"朔城区\",\"平鲁区\",\"山阴县\",\"应县\",\"右玉县\",\"怀仁县\"]);  \ndsy.add(\"0_3_6\",[\"榆次区\",\"榆社县\",\"左权县\",\"和顺县\",\"昔阳县\",\"寿阳县\",\"太谷县\",\"祁县\",\"平遥县\",\"灵石县\",\"介休市\"]);  \ndsy.add(\"0_3_7\",[\"盐湖区\",\"临猗县\",\"万荣县\",\"闻喜县\",\"稷山县\",\"新绛县\",\"绛县\",\"垣曲县\",\"夏县\",\"平陆县\",\"芮城县\",\"永济市\",\"河津市\"]);  \ndsy.add(\"0_3_8\",[\"忻府区\",\"定襄县\",\"五台县\",\"代县\",\"繁峙县\",\"宁武县\",\"静乐县\",\"神池县\",\"五寨县\",\"岢岚县\",\"河曲县\",\"保德县\",\"偏关县\",\"原平市\"]);  \ndsy.add(\"0_3_9\",[\"尧都区\",\"曲沃县\",\"翼城县\",\"襄汾县\",\"洪洞县\",\"古县\",\"安泽县\",\"浮山县\",\"吉县\",\"乡宁县\",\"大宁县\",\"隰县\",\"永和县\",\"蒲县\",\"汾西县\",\"侯马市\",\"霍州市\"]);  \ndsy.add(\"0_3_10\",[\"离石区\",\"文水县\",\"交城县\",\"兴县\",\"临县\",\"柳林县\",\"石楼县\",\"岚县\",\"方山县\",\"中阳县\",\"交口县\",\"孝义市\",\"汾阳市\"]);  \ndsy.add(\"0_3\",[\"太原\",\"大同\",\"阳泉\",\"长治\",\"晋城\",\"朔州\",\"晋中\",\"运城\",\"忻州\",\"临汾\",\"吕梁\"]);  \n  \ndsy.add(\"0_4_0\",[\"新城区\",\"回民区\",\"玉泉区\",\"赛罕区\",\"土默特左旗\",\"托克托县\",\"和林格尔县\",\"清水河县\",\"武川县\"]);  \ndsy.add(\"0_4_1\",[\"东河区\",\"昆都仑区\",\"青山区\",\"石拐区\",\"白云鄂博矿区\",\"九原区\",\"土默特右旗\",\"固阳县\",\"达尔罕茂明安联合旗\"]);  \ndsy.add(\"0_4_2\",[\"海勃湾区\",\"海南区\",\"乌达区\"]);  \ndsy.add(\"0_4_3\",[\"红山区\",\"元宝山区\",\"松山区\",\"阿鲁科尔沁旗\",\"巴林左旗\",\"巴林右旗\",\"林西县\",\"克什克腾旗\",\"翁牛特旗\",\"喀喇沁旗\",\"宁城县\",\"敖汉旗\"]);  \ndsy.add(\"0_4_4\",[\"科尔沁区\",\"科尔沁左翼中旗\",\"科尔沁左翼后旗\",\"开鲁县\",\"库伦旗\",\"奈曼旗\",\"扎鲁特旗\",\"霍林郭勒市\"]);  \ndsy.add(\"0_4_5\",[\"东胜区\",\"达拉特旗\",\"准格尔旗\",\"鄂托克前旗\",\"鄂托克旗\",\"杭锦旗\",\"乌审旗\",\"伊金霍洛旗\"]);  \ndsy.add(\"0_4_6\",[\"海拉尔区\",\"扎赉诺尔区\",\"阿荣旗\",\"莫力达瓦达斡尔族自治旗\",\"鄂伦春自治旗\",\"鄂温克族自治旗\",\"陈巴尔虎旗\",\"新巴尔虎左旗\",\"新巴尔虎右旗\",\"满洲里市\",\"牙克石市\",\"扎兰屯市\",\"额尔古纳市\",\"根河市\"]);  \ndsy.add(\"0_4_7\",[\"临河区\",\"五原县\",\"磴口县\",\"乌拉特前旗\",\"乌拉特中旗\",\"乌拉特后旗\",\"杭锦后旗\"]);  \ndsy.add(\"0_4_8\",[\"集宁区\",\"卓资县\",\"化德县\",\"商都县\",\"兴和县\",\"凉城县\",\"察哈尔右翼前旗\",\"察哈尔右翼中旗\",\"察哈尔右翼后旗\",\"四子王旗\",\"丰镇市\"]);  \ndsy.add(\"0_4_9\",[\"乌兰浩特市\",\"阿尔山市\",\"科尔沁右翼前旗\",\"科尔沁右翼中旗\",\"扎赉特旗\",\"突泉县\"]);  \ndsy.add(\"0_4_10\",[\"二连浩特市\",\"锡林浩特市\",\"阿巴嘎旗\",\"苏尼特左旗\",\"苏尼特右旗\",\"东乌珠穆沁旗\",\"西乌珠穆沁旗\",\"太仆寺旗\",\"镶黄旗\",\"正镶白旗\",\"正蓝旗\",\"多伦县\"]);  \ndsy.add(\"0_4_11\",[\"阿拉善左旗\",\"阿拉善右旗\",\"额济纳旗\"]);  \ndsy.add(\"0_4\",[\"呼和浩特\",\"包头\",\"乌海\",\"赤峰\",\"通辽\",\"鄂尔多斯\",\"呼伦贝尔\",\"巴彦淖尔\",\"乌兰察布\",\"兴安盟\",\"锡林郭勒盟\",\"阿拉善盟\"]);  \n  \ndsy.add(\"0_5_0\",[\"和平区\",\"沈河区\",\"大东区\",\"皇姑区\",\"铁西区\",\"苏家屯区\",\"浑南区\",\"沈北新区\",\"于洪区\",\"辽中县\",\"康平县\",\"法库县\",\"新民市\"]);  \ndsy.add(\"0_5_1\",[\"中山区\",\"西岗区\",\"沙河口区\",\"甘井子区\",\"旅顺口区\",\"金州区\",\"长海县\",\"瓦房店市\",\"普兰店市\",\"庄河市\"]);  \ndsy.add(\"0_5_2\",[\"铁东区\",\"铁西区\",\"立山区\",\"千山区\",\"台安县\",\"岫岩满族自治县\",\"海城市\"]);  \ndsy.add(\"0_5_3\",[\"新抚区\",\"东洲区\",\"望花区\",\"顺城区\",\"抚顺县\",\"新宾满族自治县\",\"清原满族自治县\"]);  \ndsy.add(\"0_5_4\",[\"平山区\",\"溪湖区\",\"明山区\",\"南芬区\",\"本溪满族自治县\",\"桓仁满族自治县\"]);  \ndsy.add(\"0_5_5\",[\"元宝区\",\"振兴区\",\"振安区\",\"宽甸满族自治县\",\"东港市\",\"凤城市\"]);  \ndsy.add(\"0_5_6\",[\"古塔区\",\"凌河区\",\"太和区\",\"黑山县\",\"义县\",\"凌海市\",\"北镇市\"]);  \ndsy.add(\"0_5_7\",[\"站前区\",\"西市区\",\"鲅鱼圈区\",\"老边区\",\"盖州市\",\"大石桥市\"]);  \ndsy.add(\"0_5_8\",[\"海州区\",\"新邱区\",\"太平区\",\"清河门区\",\"细河区\",\"阜新蒙古族自治县\",\"彰武县\"]);  \ndsy.add(\"0_5_9\",[\"白塔区\",\"文圣区\",\"宏伟区\",\"弓长岭区\",\"太子河区\",\"辽阳县\",\"灯塔市\"]);  \ndsy.add(\"0_5_10\",[\"双台子区\",\"兴隆台区\",\"大洼县\",\"盘山县\"]);  \ndsy.add(\"0_5_11\",[\"银州区\",\"清河区\",\"铁岭县\",\"西丰县\",\"昌图县\",\"调兵山市\",\"开原市\"]);  \ndsy.add(\"0_5_12\",[\"双塔区\",\"龙城区\",\"朝阳县\",\"建平县\",\"喀喇沁左翼蒙古族自治县\",\"北票市\",\"凌源市\"]);  \ndsy.add(\"0_5_13\",[\"连山区\",\"龙港区\",\"南票区\",\"绥中县\",\"建昌县\",\"兴城市\"]);  \ndsy.add(\"0_5\",[\"沈阳\",\"大连\",\"鞍山\",\"抚顺\",\"本溪\",\"丹东\",\"锦州\",\"营口\",\"阜新\",\"辽阳\",\"盘锦\",\"铁岭\",\"朝阳\",\"葫芦岛\"]);  \n  \ndsy.add(\"0_6_0\",[\"南关区\",\"宽城区\",\"朝阳区\",\"二道区\",\"绿园区\",\"双阳区\",\"农安县\",\"九台区\",\"榆树市\",\"德惠市\"]);  \ndsy.add(\"0_6_1\",[\"昌邑区\",\"龙潭区\",\"船营区\",\"丰满区\",\"永吉县\",\"蛟河市\",\"桦甸市\",\"舒兰市\",\"磐石市\"]);  \ndsy.add(\"0_6_2\",[\"铁西区\",\"铁东区\",\"梨树县\",\"伊通满族自治县\",\"公主岭市\",\"双辽市\"]);  \ndsy.add(\"0_6_3\",[\"龙山区\",\"西安区\",\"东丰县\",\"东辽县\"]);  \ndsy.add(\"0_6_4\",[\"东昌区\",\"二道江区\",\"通化县\",\"辉南县\",\"柳河县\",\"梅河口市\",\"集安市\"]);  \ndsy.add(\"0_6_5\",[\"浑江区\",\"江源区\",\"抚松县\",\"靖宇县\",\"长白朝鲜族自治县\",\"临江市\"]);  \ndsy.add(\"0_6_6\",[\"宁江区\",\"前郭尔罗斯蒙古族自治县\",\"长岭县\",\"乾安县\",\"扶余市\"]);  \ndsy.add(\"0_6_7\",[\"洮北区\",\"镇赉县\",\"通榆县\",\"洮南市\",\"大安市\"]);  \ndsy.add(\"0_6_8\",[\"延吉市\",\"图们市\",\"敦化市\",\"珲春市\",\"龙井市\",\"和龙市\",\"汪清县\",\"安图县\"]);  \ndsy.add(\"0_6\",[\"长春\",\"吉林\",\"四平\",\"辽源\",\"通化\",\"白山\",\"松原\",\"白城\",\"延边\"]);  \n  \ndsy.add(\"0_7_0\",[\"道里区\",\"南岗区\",\"道外区\",\"平房区\",\"松北区\",\"香坊区\",\"呼兰区\",\"阿城区\",\"依兰县\",\"方正县\",\"宾县\",\"巴彦县\",\"木兰县\",\"通河县\",\"延寿县\",\"双城区\",\"尚志市\",\"五常市\"]);  \ndsy.add(\"0_7_1\",[\"龙沙区\",\"建华区\",\"铁锋区\",\"昂昂溪区\",\"富拉尔基区\",\"碾子山区\",\"梅里斯达斡尔族区\",\"龙江县\",\"依安县\",\"泰来县\",\"甘南县\",\"富裕县\",\"克山县\",\"克东县\",\"拜泉县\",\"讷河市\"]);  \ndsy.add(\"0_7_2\",[\"鸡冠区\",\"恒山区\",\"滴道区\",\"梨树区\",\"城子河区\",\"麻山区\",\"鸡东县\",\"虎林市\",\"密山市\"]);  \ndsy.add(\"0_7_3\",[\"向阳区\",\"工农区\",\"南山区\",\"兴安区\",\"东山区\",\"兴山区\",\"萝北县\",\"绥滨县\"]);  \ndsy.add(\"0_7_4\",[\"尖山区\",\"岭东区\",\"四方台区\",\"宝山区\",\"集贤县\",\"友谊县\",\"宝清县\",\"饶河县\"]);  \ndsy.add(\"0_7_5\",[\"萨尔图区\",\"龙凤区\",\"让胡路区\",\"红岗区\",\"大同区\",\"肇州县\",\"肇源县\",\"林甸县\",\"杜尔伯特蒙古族自治县\"]);  \ndsy.add(\"0_7_6\",[\"伊春区\",\"南岔区\",\"友好区\",\"西林区\",\"翠峦区\",\"新青区\",\"美溪区\",\"金山屯区\",\"五营区\",\"乌马河区\",\"汤旺河区\",\"带岭区\",\"乌伊岭区\",\"红星区\",\"上甘岭区\",\"嘉荫县\",\"铁力市\"]);  \ndsy.add(\"0_7_7\",[\"向阳区\",\"前进区\",\"东风区\",\"郊区\",\"桦南县\",\"桦川县\",\"汤原县\",\"抚远县\",\"同江市\",\"富锦市\"]);  \ndsy.add(\"0_7_8\",[\"新兴区\",\"桃山区\",\"茄子河区\",\"勃利县\"]);  \ndsy.add(\"0_7_9\",[\"东安区\",\"阳明区\",\"爱民区\",\"西安区\",\"东宁县\",\"林口县\",\"绥芬河市\",\"海林市\",\"宁安市\",\"穆棱市\"]);  \ndsy.add(\"0_7_10\",[\"爱辉区\",\"嫩江县\",\"逊克县\",\"孙吴县\",\"北安市\",\"五大连池市\"]);  \ndsy.add(\"0_7_11\",[\"北林区\",\"望奎县\",\"兰西县\",\"青冈县\",\"庆安县\",\"明水县\",\"绥棱县\",\"安达市\",\"肇东市\",\"海伦市\"]);  \ndsy.add(\"0_7_12\",[\"加格达奇区\",\"呼玛县\",\"塔河县\",\"漠河县\"]);  \ndsy.add(\"0_7\",[\"哈尔滨\",\"齐齐哈尔\",\"鸡西\",\"鹤岗\",\"双鸭山\",\"大庆\",\"伊春\",\"佳木斯\",\"七台河\",\"牡丹江\",\"黑河\",\"绥化\",\"大兴安岭\"]);  \n  \ndsy.add(\"0_8_0\",[\"黄浦区\",\"徐汇区\",\"长宁区\",\"静安区\",\"普陀区\",\"闸北区\",\"虹口区\",\"杨浦区\",\"闵行区\",\"宝山区\",\"嘉定区\",\"浦东新区\",\"金山区\",\"松江区\",\"青浦区\",\"奉贤区\",\"崇明县\"]);  \ndsy.add(\"0_8\",[\"上海\"]);  \n  \ndsy.add(\"0_9_0\",[\"玄武区\",\"秦淮区\",\"建邺区\",\"鼓楼区\",\"浦口区\",\"栖霞区\",\"雨花台区\",\"江宁区\",\"六合区\",\"溧水区\",\"高淳区\"]);  \ndsy.add(\"0_9_1\",[\"崇安区\",\"南长区\",\"北塘区\",\"锡山区\",\"惠山区\",\"滨湖区\",\"江阴市\",\"宜兴市\"]);  \ndsy.add(\"0_9_2\",[\"鼓楼区\",\"云龙区\",\"贾汪区\",\"泉山区\",\"铜山区\",\"丰县\",\"沛县\",\"睢宁县\",\"新沂市\",\"邳州市\"]);  \ndsy.add(\"0_9_3\",[\"天宁区\",\"钟楼区\",\"戚墅堰区\",\"新北区\",\"武进区\",\"溧阳市\",\"金坛市\"]);  \ndsy.add(\"0_9_4\",[\"虎丘区\",\"吴中区\",\"相城区\",\"姑苏区\",\"吴江区\",\"常熟市\",\"张家港市\",\"昆山市\",\"太仓市\"]);  \ndsy.add(\"0_9_5\",[\"崇川区\",\"港闸区\",\"通州区\",\"海安县\",\"如东县\",\"启东市\",\"如皋市\",\"海门市\"]);  \ndsy.add(\"0_9_6\",[\"连云区\",\"海州区\",\"赣榆区\",\"东海县\",\"灌云县\",\"灌南县\"]);  \ndsy.add(\"0_9_7\",[\"清河区\",\"淮安区\",\"淮阴区\",\"清浦区\",\"涟水县\",\"洪泽县\",\"盱眙县\",\"金湖县\"]);  \ndsy.add(\"0_9_8\",[\"亭湖区\",\"盐都区\",\"响水县\",\"滨海县\",\"阜宁县\",\"射阳县\",\"建湖县\",\"东台市\",\"大丰市\"]);  \ndsy.add(\"0_9_9\",[\"广陵区\",\"邗江区\",\"江都区\",\"宝应县\",\"仪征市\",\"高邮市\"]);  \ndsy.add(\"0_9_10\",[\"京口区\",\"润州区\",\"丹徒区\",\"丹阳市\",\"扬中市\",\"句容市\"]);  \ndsy.add(\"0_9_11\",[\"海陵区\",\"高港区\",\"姜堰区\",\"兴化市\",\"靖江市\",\"泰兴市\"]);  \ndsy.add(\"0_9_12\",[\"宿城区\",\"宿豫区\",\"沭阳县\",\"泗阳县\",\"泗洪县\"]);  \ndsy.add(\"0_9\",[\"南京\",\"无锡\",\"徐州\",\"常州\",\"苏州\",\"南通\",\"连云港\",\"淮安\",\"盐城\",\"扬州\",\"镇江\",\"泰州\",\"宿迁\"]);  \n  \ndsy.add(\"0_10_0\",[\"上城区\",\"下城区\",\"江干区\",\"拱墅区\",\"西湖区\",\"滨江区\",\"萧山区\",\"余杭区\",\"桐庐县\",\"淳安县\",\"建德市\",\"富阳市\",\"临安市\"]);  \ndsy.add(\"0_10_1\",[\"海曙区\",\"江东区\",\"江北区\",\"北仑区\",\"镇海区\",\"鄞州区\",\"象山县\",\"宁海县\",\"余姚市\",\"慈溪市\",\"奉化市\"]);  \ndsy.add(\"0_10_2\",[\"鹿城区\",\"龙湾区\",\"瓯海区\",\"洞头县\",\"永嘉县\",\"平阳县\",\"苍南县\",\"文成县\",\"泰顺县\",\"瑞安市\",\"乐清市\"]);  \ndsy.add(\"0_10_3\",[\"南湖区\",\"秀洲区\",\"嘉善县\",\"海盐县\",\"海宁市\",\"平湖市\",\"桐乡市\"]);  \ndsy.add(\"0_10_4\",[\"吴兴区\",\"南浔区\",\"德清县\",\"长兴县\",\"安吉县\"]);  \ndsy.add(\"0_10_5\",[\"越城区\",\"柯桥区\",\"新昌县\",\"诸暨市\",\"上虞区\",\"嵊州市\"]);  \ndsy.add(\"0_10_6\",[\"婺城区\",\"金东区\",\"武义县\",\"浦江县\",\"磐安县\",\"兰溪市\",\"义乌市\",\"东阳市\",\"永康市\"]);  \ndsy.add(\"0_10_7\",[\"柯城区\",\"衢江区\",\"常山县\",\"开化县\",\"龙游县\",\"江山市\"]);  \ndsy.add(\"0_10_8\",[\"定海区\",\"普陀区\",\"岱山县\",\"嵊泗县\"]);  \ndsy.add(\"0_10_9\",[\"椒江区\",\"黄岩区\",\"路桥区\",\"玉环县\",\"三门县\",\"天台县\",\"仙居县\",\"温岭市\",\"临海市\"]);  \ndsy.add(\"0_10_10\",[\"莲都区\",\"青田县\",\"缙云县\",\"遂昌县\",\"松阳县\",\"云和县\",\"庆元县\",\"景宁畲族自治县\",\"龙泉市\"]);  \ndsy.add(\"0_10\",[\"杭州\",\"宁波\",\"温州\",\"嘉兴\",\"湖州\",\"绍兴\",\"金华\",\"衢州\",\"舟山\",\"台州\",\"丽水\"]);  \n  \ndsy.add(\"0_11_0\",[\"瑶海区\",\"庐阳区\",\"蜀山区\",\"包河区\",\"长丰县\",\"肥东县\",\"肥西县\",\"庐江县\",\"巢湖市\"]);  \ndsy.add(\"0_11_1\",[\"镜湖区\",\"弋江区\",\"鸠江区\",\"三山区\",\"芜湖县\",\"繁昌县\",\"南陵县\",\"无为县\"]);  \ndsy.add(\"0_11_2\",[\"龙子湖区\",\"蚌山区\",\"禹会区\",\"淮上区\",\"怀远县\",\"五河县\",\"固镇县\"]);  \ndsy.add(\"0_11_3\",[\"大通区\",\"田家庵区\",\"谢家集区\",\"八公山区\",\"潘集区\",\"凤台县\"]);  \ndsy.add(\"0_11_4\",[\"花山区\",\"雨山区\",\"博望区\",\"当涂县\",\"含山县\",\"和县\"]);  \ndsy.add(\"0_11_5\",[\"杜集区\",\"相山区\",\"烈山区\",\"濉溪县\"]);  \ndsy.add(\"0_11_6\",[\"铜官山区\",\"狮子山区\",\"郊区\",\"铜陵县\"]);  \ndsy.add(\"0_11_7\",[\"迎江区\",\"大观区\",\"宜秀区\",\"怀宁县\",\"枞阳县\",\"潜山县\",\"太湖县\",\"宿松县\",\"望江县\",\"岳西县\",\"桐城市\"]);  \ndsy.add(\"0_11_8\",[\"屯溪区\",\"黄山区\",\"徽州区\",\"歙县\",\"休宁县\",\"黟县\",\"祁门县\"]);  \ndsy.add(\"0_11_9\",[\"琅琊区\",\"南谯区\",\"来安县\",\"全椒县\",\"定远县\",\"凤阳县\",\"天长市\",\"明光市\"]);  \ndsy.add(\"0_11_10\",[\"颍州区\",\"颍东区\",\"颍泉区\",\"临泉县\",\"太和县\",\"阜南县\",\"颍上县\",\"界首市\"]);  \ndsy.add(\"0_11_11\",[\"埇桥区\",\"砀山县\",\"萧县\",\"灵璧县\",\"泗县\"]);  \ndsy.add(\"0_11_12\",[\"金安区\",\"裕安区\",\"寿县\",\"霍邱县\",\"舒城县\",\"金寨县\",\"霍山县\"]);  \ndsy.add(\"0_11_13\",[\"谯城区\",\"涡阳县\",\"蒙城县\",\"利辛县\"]);  \ndsy.add(\"0_11_14\",[\"贵池区\",\"东至县\",\"石台县\",\"青阳县\"]);  \ndsy.add(\"0_11_15\",[\"宣州区\",\"郎溪县\",\"广德县\",\"泾县\",\"绩溪县\",\"旌德县\",\"宁国市\"]);  \ndsy.add(\"0_11\",[\"合肥\",\"芜湖\",\"蚌埠\",\"淮南\",\"马鞍山\",\"淮北\",\"铜陵\",\"安庆\",\"黄山\",\"滁州\",\"阜阳\",\"宿州\",\"六安\",\"亳州\",\"池州\",\"宣城\"]);  \n  \ndsy.add(\"0_12_0\",[\"鼓楼区\",\"台江区\",\"仓山区\",\"马尾区\",\"晋安区\",\"闽侯县\",\"连江县\",\"罗源县\",\"闽清县\",\"永泰县\",\"平潭县\",\"福清市\",\"长乐市\"]);  \ndsy.add(\"0_12_1\",[\"思明区\",\"海沧区\",\"湖里区\",\"集美区\",\"同安区\",\"翔安区\"]);  \ndsy.add(\"0_12_2\",[\"城厢区\",\"涵江区\",\"荔城区\",\"秀屿区\",\"仙游县\"]);  \ndsy.add(\"0_12_3\",[\"梅列区\",\"三元区\",\"明溪县\",\"清流县\",\"宁化县\",\"大田县\",\"尤溪县\",\"沙县\",\"将乐县\",\"泰宁县\",\"建宁县\",\"永安市\"]);  \ndsy.add(\"0_12_4\",[\"鲤城区\",\"丰泽区\",\"洛江区\",\"泉港区\",\"惠安县\",\"安溪县\",\"永春县\",\"德化县\",\"金门县\",\"石狮市\",\"晋江市\",\"南安市\"]);  \ndsy.add(\"0_12_5\",[\"芗城区\",\"龙文区\",\"云霄县\",\"漳浦县\",\"诏安县\",\"长泰县\",\"东山县\",\"南靖县\",\"平和县\",\"华安县\",\"龙海市\"]);  \ndsy.add(\"0_12_6\",[\"延平区\",\"顺昌县\",\"浦城县\",\"光泽县\",\"松溪县\",\"政和县\",\"邵武市\",\"武夷山市\",\"建瓯市\",\"建阳区\"]);  \ndsy.add(\"0_12_7\",[\"新罗区\",\"长汀县\",\"永定县\",\"上杭县\",\"武平县\",\"连城县\",\"漳平市\"]);  \ndsy.add(\"0_12_8\",[\"蕉城区\",\"霞浦县\",\"古田县\",\"屏南县\",\"寿宁县\",\"周宁县\",\"柘荣县\",\"福安市\",\"福鼎市\"]);  \ndsy.add(\"0_12\",[\"福州\",\"厦门\",\"莆田\",\"三明\",\"泉州\",\"漳州\",\"南平\",\"龙岩\",\"宁德\"]);  \n  \ndsy.add(\"0_13_0\",[\"东湖区\",\"西湖区\",\"青云谱区\",\"湾里区\",\"青山湖区\",\"南昌县\",\"新建县\",\"安义县\",\"进贤县\"]);  \ndsy.add(\"0_13_1\",[\"昌江区\",\"珠山区\",\"浮梁县\",\"乐平市\"]);  \ndsy.add(\"0_13_2\",[\"安源区\",\"湘东区\",\"莲花县\",\"上栗县\",\"芦溪县\"]);  \ndsy.add(\"0_13_3\",[\"庐山区\",\"浔阳区\",\"九江县\",\"武宁县\",\"修水县\",\"永修县\",\"德安县\",\"星子县\",\"都昌县\",\"湖口县\",\"彭泽县\",\"瑞昌市\",\"共青城市\"]);  \ndsy.add(\"0_13_4\",[\"渝水区\",\"分宜县\"]);  \ndsy.add(\"0_13_5\",[\"月湖区\",\"余江县\",\"贵溪市\"]);  \ndsy.add(\"0_13_6\",[\"章贡区\",\"赣县\",\"信丰县\",\"大余县\",\"上犹县\",\"崇义县\",\"安远县\",\"龙南县\",\"定南县\",\"全南县\",\"宁都县\",\"于都县\",\"兴国县\",\"会昌县\",\"寻乌县\",\"石城县\",\"瑞金市\",\"南康区\"]);  \ndsy.add(\"0_13_7\",[\"吉州区\",\"青原区\",\"吉安县\",\"吉水县\",\"峡江县\",\"新干县\",\"永丰县\",\"泰和县\",\"遂川县\",\"万安县\",\"安福县\",\"永新县\",\"井冈山市\"]);  \ndsy.add(\"0_13_8\",[\"袁州区\",\"奉新县\",\"万载县\",\"上高县\",\"宜丰县\",\"靖安县\",\"铜鼓县\",\"丰城市\",\"樟树市\",\"高安市\"]);  \ndsy.add(\"0_13_9\",[\"临川区\",\"南城县\",\"黎川县\",\"南丰县\",\"崇仁县\",\"乐安县\",\"宜黄县\",\"金溪县\",\"资溪县\",\"东乡县\",\"广昌县\"]);  \ndsy.add(\"0_13_10\",[\"信州区\",\"上饶县\",\"广丰县\",\"玉山县\",\"铅山县\",\"横峰县\",\"弋阳县\",\"余干县\",\"鄱阳县\",\"万年县\",\"婺源县\",\"德兴市\"]);  \ndsy.add(\"0_13\",[\"南昌\",\"景德镇\",\"萍乡\",\"九江\",\"新余\",\"鹰潭\",\"赣州\",\"吉安\",\"宜春\",\"抚州\",\"上饶\"]);  \n  \ndsy.add(\"0_14_0\",[\"历下区\",\"市中区\",\"槐荫区\",\"天桥区\",\"历城区\",\"长清区\",\"平阴县\",\"济阳县\",\"商河县\",\"章丘市\"]);  \ndsy.add(\"0_14_1\",[\"市南区\",\"市北区\",\"黄岛区\",\"崂山区\",\"李沧区\",\"城阳区\",\"胶州市\",\"即墨市\",\"平度市\",\"莱西市\"]);  \ndsy.add(\"0_14_2\",[\"淄川区\",\"张店区\",\"博山区\",\"临淄区\",\"周村区\",\"桓台县\",\"高青县\",\"沂源县\"]);  \ndsy.add(\"0_14_3\",[\"市中区\",\"薛城区\",\"峄城区\",\"台儿庄区\",\"山亭区\",\"滕州市\"]);  \ndsy.add(\"0_14_4\",[\"东营区\",\"河口区\",\"垦利县\",\"利津县\",\"广饶县\"]);  \ndsy.add(\"0_14_5\",[\"芝罘区\",\"福山区\",\"牟平区\",\"莱山区\",\"长岛县\",\"龙口市\",\"莱阳市\",\"莱州市\",\"蓬莱市\",\"招远市\",\"栖霞市\",\"海阳市\"]);  \ndsy.add(\"0_14_6\",[\"潍城区\",\"寒亭区\",\"坊子区\",\"奎文区\",\"临朐县\",\"昌乐县\",\"青州市\",\"诸城市\",\"寿光市\",\"安丘市\",\"高密市\",\"昌邑市\"]);  \ndsy.add(\"0_14_7\",[\"任城区\",\"微山县\",\"鱼台县\",\"金乡县\",\"嘉祥县\",\"汶上县\",\"泗水县\",\"梁山县\",\"曲阜市\",\"兖州区\",\"邹城市\"]);  \ndsy.add(\"0_14_8\",[\"泰山区\",\"岱岳区\",\"宁阳县\",\"东平县\",\"新泰市\",\"肥城市\"]);  \ndsy.add(\"0_14_9\",[\"环翠区\",\"文登区\",\"荣成市\",\"乳山市\"]);  \ndsy.add(\"0_14_10\",[\"东港区\",\"岚山区\",\"五莲县\",\"莒县\"]);  \ndsy.add(\"0_14_11\",[\"莱城区\",\"钢城区\"]);  \ndsy.add(\"0_14_12\",[\"兰山区\",\"罗庄区\",\"河东区\",\"沂南县\",\"郯城县\",\"沂水县\",\"兰陵县\",\"费县\",\"平邑县\",\"莒南县\",\"蒙阴县\",\"临沭县\"]);  \ndsy.add(\"0_14_13\",[\"德城区\",\"陵城区\",\"宁津县\",\"庆云县\",\"临邑县\",\"齐河县\",\"平原县\",\"夏津县\",\"武城县\",\"乐陵市\",\"禹城市\"]);  \ndsy.add(\"0_14_14\",[\"东昌府区\",\"阳谷县\",\"莘县\",\"茌平县\",\"东阿县\",\"冠县\",\"高唐县\",\"临清市\"]);  \ndsy.add(\"0_14_15\",[\"滨城区\",\"惠民县\",\"阳信县\",\"无棣县\",\"沾化区\",\"博兴县\",\"邹平县\"]);  \ndsy.add(\"0_14_16\",[\"牡丹区\",\"曹县\",\"单县\",\"成武县\",\"巨野县\",\"郓城县\",\"鄄城县\",\"定陶县\",\"东明县\"]);  \ndsy.add(\"0_14\",[\"济南\",\"青岛\",\"淄博\",\"枣庄\",\"东营\",\"烟台\",\"潍坊\",\"济宁\",\"泰安\",\"威海\",\"日照\",\"莱芜\",\"临沂\",\"德州\",\"聊城\",\"滨州\",\"菏泽\"]);  \n  \ndsy.add(\"0_15_0\",[\"中原区\",\"二七区\",\"管城回族区\",\"金水区\",\"上街区\",\"惠济区\",\"中牟县\",\"巩义市\",\"荥阳市\",\"新密市\",\"新郑市\",\"登封市\"]);  \ndsy.add(\"0_15_1\",[\"龙亭区\",\"顺河回族区\",\"鼓楼区\",\"禹王台区\",\"杞县\",\"通许县\",\"尉氏县\",\"祥符区\",\"兰考县\"]);  \ndsy.add(\"0_15_2\",[\"老城区\",\"西工区\",\"瀍河回族区\",\"涧西区\",\"吉利区\",\"洛龙区\",\"孟津县\",\"新安县\",\"栾川县\",\"嵩县\",\"汝阳县\",\"宜阳县\",\"洛宁县\",\"伊川县\",\"偃师市\"]);  \ndsy.add(\"0_15_3\",[\"新华区\",\"卫东区\",\"石龙区\",\"湛河区\",\"宝丰县\",\"叶县\",\"鲁山县\",\"郏县\",\"舞钢市\",\"汝州市\"]);  \ndsy.add(\"0_15_4\",[\"文峰区\",\"北关区\",\"殷都区\",\"龙安区\",\"安阳县\",\"汤阴县\",\"滑县\",\"内黄县\",\"林州市\"]);  \ndsy.add(\"0_15_5\",[\"鹤山区\",\"山城区\",\"淇滨区\",\"浚县\",\"淇县\"]);  \ndsy.add(\"0_15_6\",[\"红旗区\",\"卫滨区\",\"凤泉区\",\"牧野区\",\"新乡县\",\"获嘉县\",\"原阳县\",\"延津县\",\"封丘县\",\"长垣县\",\"卫辉市\",\"辉县市\"]);  \ndsy.add(\"0_15_7\",[\"解放区\",\"中站区\",\"马村区\",\"山阳区\",\"修武县\",\"博爱县\",\"武陟县\",\"温县\",\"沁阳市\",\"孟州市\"]);  \ndsy.add(\"0_15_8\",[\"华龙区\",\"清丰县\",\"南乐县\",\"范县\",\"台前县\",\"濮阳县\"]);  \ndsy.add(\"0_15_9\",[\"魏都区\",\"许昌县\",\"鄢陵县\",\"襄城县\",\"禹州市\",\"长葛市\"]);  \ndsy.add(\"0_15_10\",[\"源汇区\",\"郾城区\",\"召陵区\",\"舞阳县\",\"临颍县\"]);  \ndsy.add(\"0_15_11\",[\"湖滨区\",\"渑池县\",\"陕县\",\"卢氏县\",\"义马市\",\"灵宝市\"]);  \ndsy.add(\"0_15_12\",[\"宛城区\",\"卧龙区\",\"南召县\",\"方城县\",\"西峡县\",\"镇平县\",\"内乡县\",\"淅川县\",\"社旗县\",\"唐河县\",\"新野县\",\"桐柏县\",\"邓州市\"]);  \ndsy.add(\"0_15_13\",[\"梁园区\",\"睢阳区\",\"民权县\",\"睢县\",\"宁陵县\",\"柘城县\",\"虞城县\",\"夏邑县\",\"永城市\"]);  \ndsy.add(\"0_15_14\",[\"浉河区\",\"平桥区\",\"罗山县\",\"光山县\",\"新县\",\"商城县\",\"固始县\",\"潢川县\",\"淮滨县\",\"息县\"]);  \ndsy.add(\"0_15_15\",[\"川汇区\",\"扶沟县\",\"西华县\",\"商水县\",\"沈丘县\",\"郸城县\",\"淮阳县\",\"太康县\",\"鹿邑县\",\"项城市\"]);  \ndsy.add(\"0_15_16\",[\"驿城区\",\"西平县\",\"上蔡县\",\"平舆县\",\"正阳县\",\"确山县\",\"泌阳县\",\"汝南县\",\"遂平县\",\"新蔡县\"]);  \ndsy.add(\"0_15_17\",[\"济源\"]);  \ndsy.add(\"0_15\",[\"郑州\",\"开封\",\"洛阳\",\"平顶山\",\"安阳\",\"鹤壁\",\"新乡\",\"焦作\",\"濮阳\",\"许昌\",\"漯河\",\"三门峡\",\"南阳\",\"商丘\",\"信阳\",\"周口\",\"驻马店\",\"济源\"]);  \n  \ndsy.add(\"0_16_0\",[\"江岸区\",\"江汉区\",\"硚口区\",\"汉阳区\",\"武昌区\",\"青山区\",\"洪山区\",\"东西湖区\",\"汉南区\",\"蔡甸区\",\"江夏区\",\"黄陂区\",\"新洲区\"]);  \ndsy.add(\"0_16_1\",[\"黄石港区\",\"西塞山区\",\"下陆区\",\"铁山区\",\"阳新县\",\"大冶市\"]);  \ndsy.add(\"0_16_2\",[\"茅箭区\",\"张湾区\",\"郧阳区\",\"郧西县\",\"竹山县\",\"竹溪县\",\"房县\",\"丹江口市\"]);  \ndsy.add(\"0_16_3\",[\"西陵区\",\"伍家岗区\",\"点军区\",\"猇亭区\",\"夷陵区\",\"远安县\",\"兴山县\",\"秭归县\",\"长阳土家族自治县\",\"五峰土家族自治县\",\"宜都市\",\"当阳市\",\"枝江市\"]);  \ndsy.add(\"0_16_4\",[\"襄城区\",\"樊城区\",\"襄州区\",\"南漳县\",\"谷城县\",\"保康县\",\"老河口市\",\"枣阳市\",\"宜城市\"]);  \ndsy.add(\"0_16_5\",[\"梁子湖区\",\"华容区\",\"鄂城区\"]);  \ndsy.add(\"0_16_6\",[\"东宝区\",\"掇刀区\",\"京山县\",\"沙洋县\",\"钟祥市\"]);  \ndsy.add(\"0_16_7\",[\"孝南区\",\"孝昌县\",\"大悟县\",\"云梦县\",\"应城市\",\"安陆市\",\"汉川市\"]);  \ndsy.add(\"0_16_8\",[\"沙市区\",\"荆州区\",\"公安县\",\"监利县\",\"江陵县\",\"石首市\",\"洪湖市\",\"松滋市\"]);  \ndsy.add(\"0_16_9\",[\"黄州区\",\"团风县\",\"红安县\",\"罗田县\",\"英山县\",\"浠水县\",\"蕲春县\",\"黄梅县\",\"麻城市\",\"武穴市\"]);  \ndsy.add(\"0_16_10\",[\"咸安区\",\"嘉鱼县\",\"通城县\",\"崇阳县\",\"通山县\",\"赤壁市\"]);  \ndsy.add(\"0_16_11\",[\"曾都区\",\"随县\",\"广水市\"]);  \ndsy.add(\"0_16_12\",[\"恩施市\",\"利川市\",\"建始县\",\"巴东县\",\"宣恩县\",\"咸丰县\",\"来凤县\",\"鹤峰县\"]);  \ndsy.add(\"0_16_13\", [\"仙桃\"]);  \ndsy.add(\"0_16_14\", [\"潜江\"]);  \ndsy.add(\"0_16_15\", [\"天门\"]);  \ndsy.add(\"0_16_16\", [\"神农架\"]);  \ndsy.add(\"0_16\",[\"武汉\",\"黄石\",\"十堰\",\"宜昌\",\"襄阳\",\"鄂州\",\"荆门\",\"孝感\",\"荆州\",\"黄冈\",\"咸宁\",\"随州\",\"恩施\",\"仙桃\",\"潜江\",\"天门\",\"神农架\"]);  \n  \ndsy.add(\"0_17_0\",[\"芙蓉区\",\"天心区\",\"岳麓区\",\"开福区\",\"雨花区\",\"望城区\",\"长沙县\",\"宁乡县\",\"浏阳市\"]);  \ndsy.add(\"0_17_1\",[\"荷塘区\",\"芦淞区\",\"石峰区\",\"天元区\",\"株洲县\",\"攸县\",\"茶陵县\",\"炎陵县\",\"醴陵市\"]);  \ndsy.add(\"0_17_2\",[\"雨湖区\",\"岳塘区\",\"湘潭县\",\"湘乡市\",\"韶山市\"]);  \ndsy.add(\"0_17_3\",[\"珠晖区\",\"雁峰区\",\"石鼓区\",\"蒸湘区\",\"南岳区\",\"衡阳县\",\"衡南县\",\"衡山县\",\"衡东县\",\"祁东县\",\"耒阳市\",\"常宁市\"]);  \ndsy.add(\"0_17_4\",[\"双清区\",\"大祥区\",\"北塔区\",\"邵东县\",\"新邵县\",\"邵阳县\",\"隆回县\",\"洞口县\",\"绥宁县\",\"新宁县\",\"城步苗族自治县\",\"武冈市\"]);  \ndsy.add(\"0_17_5\",[\"岳阳楼区\",\"云溪区\",\"君山区\",\"岳阳县\",\"华容县\",\"湘阴县\",\"平江县\",\"汨罗市\",\"临湘市\"]);  \ndsy.add(\"0_17_6\",[\"武陵区\",\"鼎城区\",\"安乡县\",\"汉寿县\",\"澧县\",\"临澧县\",\"桃源县\",\"石门县\",\"津市市\"]);  \ndsy.add(\"0_17_7\",[\"永定区\",\"武陵源区\",\"慈利县\",\"桑植县\"]);  \ndsy.add(\"0_17_8\",[\"资阳区\",\"赫山区\",\"南县\",\"桃江县\",\"安化县\",\"沅江市\"]);  \ndsy.add(\"0_17_9\",[\"北湖区\",\"苏仙区\",\"桂阳县\",\"宜章县\",\"永兴县\",\"嘉禾县\",\"临武县\",\"汝城县\",\"桂东县\",\"安仁县\",\"资兴市\"]);  \ndsy.add(\"0_17_10\",[\"零陵区\",\"冷水滩区\",\"祁阳县\",\"东安县\",\"双牌县\",\"道县\",\"江永县\",\"宁远县\",\"蓝山县\",\"新田县\",\"江华瑶族自治县\"]);  \ndsy.add(\"0_17_11\",[\"鹤城区\",\"中方县\",\"沅陵县\",\"辰溪县\",\"溆浦县\",\"会同县\",\"麻阳苗族自治县\",\"新晃侗族自治县\",\"芷江侗族自治县\",\"靖州苗族侗族自治县\",\"通道侗族自治县\",\"洪江市\"]);  \ndsy.add(\"0_17_12\",[\"娄星区\",\"双峰县\",\"新化县\",\"冷水江市\",\"涟源市\"]);  \ndsy.add(\"0_17_13\",[\"吉首市\",\"泸溪县\",\"凤凰县\",\"花垣县\",\"保靖县\",\"古丈县\",\"永顺县\",\"龙山县\"]);  \ndsy.add(\"0_17\",[\"长沙\",\"株洲\",\"湘潭\",\"衡阳\",\"邵阳\",\"岳阳\",\"常德\",\"张家界\",\"益阳\",\"郴州\",\"永州\",\"怀化\",\"娄底\",\"湘西\"]);  \n  \ndsy.add(\"0_18_0\",[\"荔湾区\",\"越秀区\",\"海珠区\",\"天河区\",\"白云区\",\"黄埔区\",\"番禺区\",\"花都区\",\"南沙区\",\"增城区\",\"从化区\"]);  \ndsy.add(\"0_18_1\",[\"武江区\",\"浈江区\",\"曲江区\",\"始兴县\",\"仁化县\",\"翁源县\",\"乳源瑶族自治县\",\"新丰县\",\"乐昌市\",\"南雄市\"]);  \ndsy.add(\"0_18_2\",[\"罗湖区\",\"福田区\",\"南山区\",\"宝安区\",\"龙岗区\",\"盐田区\"]);  \ndsy.add(\"0_18_3\",[\"香洲区\",\"斗门区\",\"金湾区\"]);  \ndsy.add(\"0_18_4\",[\"龙湖区\",\"金平区\",\"濠江区\",\"潮阳区\",\"潮南区\",\"澄海区\",\"南澳县\"]);  \ndsy.add(\"0_18_5\",[\"禅城区\",\"南海区\",\"顺德区\",\"三水区\",\"高明区\"]);  \ndsy.add(\"0_18_6\",[\"蓬江区\",\"江海区\",\"新会区\",\"台山市\",\"开平市\",\"鹤山市\",\"恩平市\"]);  \ndsy.add(\"0_18_7\",[\"赤坎区\",\"霞山区\",\"坡头区\",\"麻章区\",\"遂溪县\",\"徐闻县\",\"廉江市\",\"雷州市\",\"吴川市\"]);  \ndsy.add(\"0_18_8\",[\"茂南区\",\"电白区\",\"高州市\",\"化州市\",\"信宜市\"]);  \ndsy.add(\"0_18_9\",[\"端州区\",\"鼎湖区\",\"广宁县\",\"怀集县\",\"封开县\",\"德庆县\",\"高要市\",\"四会市\"]);  \ndsy.add(\"0_18_10\",[\"惠城区\",\"惠阳区\",\"博罗县\",\"惠东县\",\"龙门县\"]);  \ndsy.add(\"0_18_11\",[\"梅江区\",\"梅县区\",\"大埔县\",\"丰顺县\",\"五华县\",\"平远县\",\"蕉岭县\",\"兴宁市\"]);  \ndsy.add(\"0_18_12\",[\"城区\",\"海丰县\",\"陆河县\",\"陆丰市\"]);  \ndsy.add(\"0_18_13\",[\"源城区\",\"紫金县\",\"龙川县\",\"连平县\",\"和平县\",\"东源县\"]);  \ndsy.add(\"0_18_14\",[\"江城区\",\"阳西县\",\"阳东区\",\"阳春市\"]);  \ndsy.add(\"0_18_15\",[\"清城区\",\"清新区\",\"佛冈县\",\"阳山县\",\"连山壮族瑶族自治县\",\"连南瑶族自治县\",\"英德市\",\"连州市\"]);  \ndsy.add(\"0_18_16\",[\"东宝路\",\"花园新村\",\"三元里\"]);  \ndsy.add(\"0_18_17\",[\"竹苑\",\"湖滨北路\"]);  \ndsy.add(\"0_18_18\",[\"湘桥区\",\"潮安区\",\"饶平县\"]);  \ndsy.add(\"0_18_19\",[\"榕城区\",\"揭东区\",\"揭西县\",\"惠来县\",\"普宁市\"]);  \ndsy.add(\"0_18_20\",[\"云城区\",\"新兴县\",\"郁南县\",\"云安区\",\"罗定市\"]);  \ndsy.add(\"0_18\",[\"广州\",\"韶关\",\"深圳\",\"珠海\",\"汕头\",\"佛山\",\"江门\",\"湛江\",\"茂名\",\"肇庆\",\"惠州\",\"梅州\",\"汕尾\",\"河源\",\"阳江\",\"清远\",\"东莞\",\"中山\",\"潮州\",\"揭阳\",\"云浮\"]);  \n  \ndsy.add(\"0_19_0\",[\"兴宁区\",\"青秀区\",\"江南区\",\"西乡塘区\",\"良庆区\",\"邕宁区\",\"武鸣县\",\"隆安县\",\"马山县\",\"上林县\",\"宾阳县\",\"横县\"]);  \ndsy.add(\"0_19_1\",[\"城中区\",\"鱼峰区\",\"柳南区\",\"柳北区\",\"柳江县\",\"柳城县\",\"鹿寨县\",\"融安县\",\"融水苗族自治县\",\"三江侗族自治县\"]);  \ndsy.add(\"0_19_2\",[\"秀峰区\",\"叠彩区\",\"象山区\",\"七星区\",\"雁山区\",\"临桂区\",\"阳朔县\",\"灵川县\",\"全州县\",\"兴安县\",\"永福县\",\"灌阳县\",\"龙胜各族自治县\",\"资源县\",\"平乐县\",\"荔浦县\",\"恭城瑶族自治县\"]);  \ndsy.add(\"0_19_3\",[\"万秀区\",\"长洲区\",\"龙圩区\",\"苍梧县\",\"藤县\",\"蒙山县\",\"岑溪市\"]);  \ndsy.add(\"0_19_4\",[\"海城区\",\"银海区\",\"铁山港区\",\"合浦县\"]);  \ndsy.add(\"0_19_5\",[\"港口区\",\"防城区\",\"上思县\",\"东兴市\"]);  \ndsy.add(\"0_19_6\",[\"钦南区\",\"钦北区\",\"灵山县\",\"浦北县\"]);  \ndsy.add(\"0_19_7\",[\"港北区\",\"港南区\",\"覃塘区\",\"平南县\",\"桂平市\"]);  \ndsy.add(\"0_19_8\",[\"玉州区\",\"福绵区\",\"容县\",\"陆川县\",\"博白县\",\"兴业县\",\"北流市\"]);  \ndsy.add(\"0_19_9\",[\"右江区\",\"田阳县\",\"田东县\",\"平果县\",\"德保县\",\"靖西县\",\"那坡县\",\"凌云县\",\"乐业县\",\"田林县\",\"西林县\",\"隆林各族自治县\"]);  \ndsy.add(\"0_19_10\",[\"八步区\",\"昭平县\",\"钟山县\",\"富川瑶族自治县\"]);  \ndsy.add(\"0_19_11\",[\"金城江区\",\"南丹县\",\"天峨县\",\"凤山县\",\"东兰县\",\"罗城仫佬族自治县\",\"环江毛南族自治县\",\"巴马瑶族自治县\",\"都安瑶族自治县\",\"大化瑶族自治县\",\"宜州市\"]);  \ndsy.add(\"0_19_12\",[\"兴宾区\",\"忻城县\",\"象州县\",\"武宣县\",\"金秀瑶族自治县\",\"合山市\"]);  \ndsy.add(\"0_19_13\",[\"江州区\",\"扶绥县\",\"宁明县\",\"龙州县\",\"大新县\",\"天等县\",\"凭祥市\"]);  \ndsy.add(\"0_19\",[\"南宁\",\"柳州\",\"桂林\",\"梧州\",\"北海\",\"防城港\",\"钦州\",\"贵港\",\"玉林\",\"百色\",\"贺州\",\"河池\",\"来宾\",\"崇左\"]);  \n  \ndsy.add(\"0_20_0\",[\"秀英区\",\"龙华区\",\"琼山区\",\"美兰区\"]);  \ndsy.add(\"0_20_1\",[\"海棠区\",\"吉阳区\",\"天涯区\",\"崖州区\"]);  \ndsy.add(\"0_20_2\",[\"西沙群岛\",\"南沙群岛\",\"中沙群岛的岛礁及其海域\"]);  \ndsy.add(\"0_20_3\",[\"五指山\"]);  \ndsy.add(\"0_20_4\",[\"琼海\"]);  \ndsy.add(\"0_20_5\",[\"儋州\"]);  \ndsy.add(\"0_20_6\",[\"文昌\"]);  \ndsy.add(\"0_20_7\",[\"万宁\"]);  \ndsy.add(\"0_20_8\",[\"东方\"]);  \ndsy.add(\"0_20_9\",[\"定安县\"]);  \ndsy.add(\"0_20_10\",[\"屯昌县\"]);  \ndsy.add(\"0_20_11\",[\"澄迈县\"]);  \ndsy.add(\"0_20_12\",[\"临高县\"]);  \ndsy.add(\"0_20_13\",[\"白沙黎族自治县\"]);  \ndsy.add(\"0_20_14\",[\"昌江黎族自治县\"]);  \ndsy.add(\"0_20_15\",[\"乐东黎族自治县\"]);  \ndsy.add(\"0_20_16\",[\"陵水黎族自治县\"]);  \ndsy.add(\"0_20_17\",[\"保亭黎族苗族自治县\"]);  \ndsy.add(\"0_20_18\",[\"琼中黎族苗族自治县\"]);  \ndsy.add(\"0_20\",[\"海口\",\"三亚\",\"三沙\",\"五指山\",\"琼海\",\"儋州\",\"文昌\",\"万宁\",\"东方\",\"定安县\",\"屯昌县\",\"澄迈县\",\"临高县\",\"白沙\",\"昌江\",\"乐东\",\"陵水\",\"保亭\",\"琼中\"]);  \n  \ndsy.add(\"0_21_0\",[\"万州区\",\"涪陵区\",\"渝中区\",\"大渡口区\",\"江北区\",\"沙坪坝区\",\"九龙坡区\",\"南岸区\",\"北碚区\",\"綦江区\",\"大足区\",\"渝北区\",\"巴南区\",\"黔江区\",\"长寿区\",\"江津区\",\"合川区\",\"永川区\",\"南川区\",\"潼南县\",\"铜梁区\",\"荣昌县\",\"璧山区\",\"梁平县\",\"城口县\",\"丰都县\",\"垫江县\",\"武隆县\",\"忠县\",\"开县\",\"云阳县\",\"奉节县\",\"巫山县\",\"巫溪县\",\"石柱土家族自治县\",\"秀山土家族苗族自治县\",\"酉阳土家族苗族自治县\",\"彭水苗族土家族自治县\"]);  \ndsy.add(\"0_21\",[\"重庆\"]);  \n  \ndsy.add(\"0_22_0\",[\"锦江区\",\"青羊区\",\"金牛区\",\"武侯区\",\"成华区\",\"龙泉驿区\",\"青白江区\",\"新都区\",\"温江区\",\"金堂县\",\"双流县\",\"郫县\",\"大邑县\",\"蒲江县\",\"新津县\",\"都江堰市\",\"彭州市\",\"邛崃市\",\"崇州市\"]);  \ndsy.add(\"0_22_1\",[\"自流井区\",\"贡井区\",\"大安区\",\"沿滩区\",\"荣县\",\"富顺县\"]);  \ndsy.add(\"0_22_2\",[\"东区\",\"西区\",\"仁和区\",\"米易县\",\"盐边县\"]);  \ndsy.add(\"0_22_3\",[\"江阳区\",\"纳溪区\",\"龙马潭区\",\"泸县\",\"合江县\",\"叙永县\",\"古蔺县\"]);  \ndsy.add(\"0_22_4\",[\"旌阳区\",\"中江县\",\"罗江县\",\"广汉市\",\"什邡市\",\"绵竹市\"]);  \ndsy.add(\"0_22_5\",[\"涪城区\",\"游仙区\",\"三台县\",\"盐亭县\",\"安县\",\"梓潼县\",\"北川羌族自治县\",\"平武县\",\"江油市\"]);  \ndsy.add(\"0_22_6\",[\"利州区\",\"昭化区\",\"朝天区\",\"旺苍县\",\"青川县\",\"剑阁县\",\"苍溪县\"]);  \ndsy.add(\"0_22_7\",[\"船山区\",\"安居区\",\"蓬溪县\",\"射洪县\",\"大英县\"]);  \ndsy.add(\"0_22_8\",[\"市中区\",\"东兴区\",\"威远县\",\"资中县\",\"隆昌县\"]);  \ndsy.add(\"0_22_9\",[\"市中区\",\"沙湾区\",\"五通桥区\",\"金口河区\",\"犍为县\",\"井研县\",\"夹江县\",\"沐川县\",\"峨边彝族自治县\",\"马边彝族自治县\",\"峨眉山市\"]);  \ndsy.add(\"0_22_10\",[\"顺庆区\",\"高坪区\",\"嘉陵区\",\"南部县\",\"营山县\",\"蓬安县\",\"仪陇县\",\"西充县\",\"阆中市\"]);  \ndsy.add(\"0_22_11\",[\"东坡区\",\"仁寿县\",\"彭山区\",\"洪雅县\",\"丹棱县\",\"青神县\"]);  \ndsy.add(\"0_22_12\",[\"翠屏区\",\"南溪区\",\"宜宾县\",\"江安县\",\"长宁县\",\"高县\",\"珙县\",\"筠连县\",\"兴文县\",\"屏山县\"]);  \ndsy.add(\"0_22_13\",[\"广安区\",\"前锋区\",\"岳池县\",\"武胜县\",\"邻水县\",\"华蓥市\"]);  \ndsy.add(\"0_22_14\",[\"通川区\",\"达川区\",\"宣汉县\",\"开江县\",\"大竹县\",\"渠县\",\"万源市\"]);  \ndsy.add(\"0_22_15\",[\"雨城区\",\"名山区\",\"荥经县\",\"汉源县\",\"石棉县\",\"天全县\",\"芦山县\",\"宝兴县\"]);  \ndsy.add(\"0_22_16\",[\"巴州区\",\"恩阳区\",\"通江县\",\"南江县\",\"平昌县\"]);  \ndsy.add(\"0_22_17\",[\"雁江区\",\"安岳县\",\"乐至县\",\"简阳市\"]);  \ndsy.add(\"0_22_18\",[\"汶川县\",\"理县\",\"茂县\",\"松潘县\",\"九寨沟县\",\"金川县\",\"小金县\",\"黑水县\",\"马尔康县\",\"壤塘县\",\"阿坝县\",\"若尔盖县\",\"红原县\"]);  \ndsy.add(\"0_22_19\",[\"康定县\",\"泸定县\",\"丹巴县\",\"九龙县\",\"雅江县\",\"道孚县\",\"炉霍县\",\"甘孜县\",\"新龙县\",\"德格县\",\"白玉县\",\"石渠县\",\"色达县\",\"理塘县\",\"巴塘县\",\"乡城县\",\"稻城县\",\"得荣县\"]);  \ndsy.add(\"0_22_20\",[\"西昌市\",\"木里藏族自治县\",\"盐源县\",\"德昌县\",\"会理县\",\"会东县\",\"宁南县\",\"普格县\",\"布拖县\",\"金阳县\",\"昭觉县\",\"喜德县\",\"冕宁县\",\"越西县\",\"甘洛县\",\"美姑县\",\"雷波县\"]);  \ndsy.add(\"0_22\",[\"成都\",\"自贡\",\"攀枝花\",\"泸州\",\"德阳\",\"绵阳\",\"广元\",\"遂宁\",\"内江\",\"乐山\",\"南充\",\"眉山\",\"宜宾\",\"广安\",\"达州\",\"雅安\",\"巴中\",\"资阳\",\"阿坝\",\"甘孜\",\"凉山\"]);  \n  \ndsy.add(\"0_23_0\",[\"南明区\",\"云岩区\",\"花溪区\",\"乌当区\",\"白云区\",\"观山湖区\",\"开阳县\",\"息烽县\",\"修文县\",\"清镇市\"]);  \ndsy.add(\"0_23_1\",[\"钟山区\",\"六枝特区\",\"水城县\",\"盘县\"]);  \ndsy.add(\"0_23_2\",[\"红花岗区\",\"汇川区\",\"遵义县\",\"桐梓县\",\"绥阳县\",\"正安县\",\"道真仡佬族苗族自治县\",\"务川仡佬族苗族自治县\",\"凤冈县\",\"湄潭县\",\"余庆县\",\"习水县\",\"赤水市\",\"仁怀市\"]);  \ndsy.add(\"0_23_3\",[\"西秀区\",\"平坝县\",\"普定县\",\"镇宁布依族苗族自治县\",\"关岭布依族苗族自治县\",\"紫云苗族布依族自治县\"]);  \ndsy.add(\"0_23_4\",[\"七星关区\",\"大方县\",\"黔西县\",\"金沙县\",\"织金县\",\"纳雍县\",\"威宁彝族回族苗族自治县\",\"赫章县\"]);  \ndsy.add(\"0_23_5\",[\"碧江区\",\"万山区\",\"江口县\",\"玉屏侗族自治县\",\"石阡县\",\"思南县\",\"印江土家族苗族自治县\",\"德江县\",\"沿河土家族自治县\",\"松桃苗族自治县\"]);  \ndsy.add(\"0_23_6\",[\"兴义市\",\"兴仁县\",\"普安县\",\"晴隆县\",\"贞丰县\",\"望谟县\",\"册亨县\",\"安龙县\"]);  \ndsy.add(\"0_23_7\",[\"凯里市\",\"黄平县\",\"施秉县\",\"三穗县\",\"镇远县\",\"岑巩县\",\"天柱县\",\"锦屏县\",\"剑河县\",\"台江县\",\"黎平县\",\"榕江县\",\"从江县\",\"雷山县\",\"麻江县\",\"丹寨县\"]);  \ndsy.add(\"0_23_8\",[\"都匀市\",\"福泉市\",\"荔波县\",\"贵定县\",\"瓮安县\",\"独山县\",\"平塘县\",\"罗甸县\",\"长顺县\",\"龙里县\",\"惠水县\",\"三都水族自治县\"]);  \ndsy.add(\"0_23\",[\"贵阳\",\"六盘水\",\"遵义\",\"安顺\",\"毕节\",\"铜仁\",\"黔西南\",\"黔东南\",\"黔南\"]);  \n  \ndsy.add(\"0_24_0\",[\"五华区\",\"盘龙区\",\"官渡区\",\"西山区\",\"东川区\",\"呈贡区\",\"晋宁县\",\"富民县\",\"宜良县\",\"石林彝族自治县\",\"嵩明县\",\"禄劝彝族苗族自治县\",\"寻甸回族彝族自治县\",\"安宁市\"]);  \ndsy.add(\"0_24_1\",[\"麒麟区\",\"马龙县\",\"陆良县\",\"师宗县\",\"罗平县\",\"富源县\",\"会泽县\",\"沾益县\",\"宣威市\"]);  \ndsy.add(\"0_24_2\",[\"红塔区\",\"江川县\",\"澄江县\",\"通海县\",\"华宁县\",\"易门县\",\"峨山彝族自治县\",\"新平彝族傣族自治县\",\"元江哈尼族彝族傣族自治县\"]);  \ndsy.add(\"0_24_3\",[\"隆阳区\",\"施甸县\",\"腾冲县\",\"龙陵县\",\"昌宁县\"]);  \ndsy.add(\"0_24_4\",[\"昭阳区\",\"鲁甸县\",\"巧家县\",\"盐津县\",\"大关县\",\"永善县\",\"绥江县\",\"镇雄县\",\"彝良县\",\"威信县\",\"水富县\"]);  \ndsy.add(\"0_24_5\",[\"古城区\",\"玉龙纳西族自治县\",\"永胜县\",\"华坪县\",\"宁蒗彝族自治县\"]);  \ndsy.add(\"0_24_6\",[\"思茅区\",\"宁洱哈尼族彝族自治县\",\"墨江哈尼族自治县\",\"景东彝族自治县\",\"景谷傣族彝族自治县\",\"镇沅彝族哈尼族拉祜族自治县\",\"江城哈尼族彝族自治县\",\"孟连傣族拉祜族佤族自治县\",\"澜沧拉祜族自治县\",\"西盟佤族自治县\"]);  \ndsy.add(\"0_24_7\",[\"临翔区\",\"凤庆县\",\"云县\",\"永德县\",\"镇康县\",\"双江拉祜族佤族布朗族傣族自治县\",\"耿马傣族佤族自治县\",\"沧源佤族自治县\"]);  \ndsy.add(\"0_24_8\",[\"楚雄市\",\"双柏县\",\"牟定县\",\"南华县\",\"姚安县\",\"大姚县\",\"永仁县\",\"元谋县\",\"武定县\",\"禄丰县\"]);  \ndsy.add(\"0_24_9\",[\"个旧市\",\"开远市\",\"蒙自市\",\"弥勒市\",\"屏边苗族自治县\",\"建水县\",\"石屏县\",\"泸西县\",\"元阳县\",\"红河县\",\"金平苗族瑶族傣族自治县\",\"绿春县\",\"河口瑶族自治县\"]);  \ndsy.add(\"0_24_10\",[\"文山市\",\"砚山县\",\"西畴县\",\"麻栗坡县\",\"马关县\",\"丘北县\",\"广南县\",\"富宁县\"]);  \ndsy.add(\"0_24_11\",[\"景洪市\",\"勐海县\",\"勐腊县\"]);  \ndsy.add(\"0_24_12\",[\"大理市\",\"漾濞彝族自治县\",\"祥云县\",\"宾川县\",\"弥渡县\",\"南涧彝族自治县\",\"巍山彝族回族自治县\",\"永平县\",\"云龙县\",\"洱源县\",\"剑川县\",\"鹤庆县\"]);  \ndsy.add(\"0_24_13\",[\"瑞丽市\",\"芒市\",\"梁河县\",\"盈江县\",\"陇川县\"]);  \ndsy.add(\"0_24_14\",[\"泸水县\",\"福贡县\",\"贡山独龙族怒族自治县\",\"兰坪白族普米族自治县\"]);  \ndsy.add(\"0_24_15\",[\"香格里拉县\",\"德钦县\",\"维西傈僳族自治县\"]);  \ndsy.add(\"0_24\",[\"昆明\",\"曲靖\",\"玉溪\",\"保山\",\"昭通\",\"丽江\",\"普洱\",\"临沧\",\"楚雄\",\"红河\",\"文山\",\"西双版纳\",\"大理\",\"德宏\",\"怒江\",\"迪庆\"]);  \n  \ndsy.add(\"0_25_0\",[\"城关区\",\"林周县\",\"当雄县\",\"尼木县\",\"曲水县\",\"堆龙德庆县\",\"达孜县\",\"墨竹工卡县\"]);  \ndsy.add(\"0_25_1\",[\"卡若区\",\"江达县\",\"贡觉县\",\"类乌齐县\",\"丁青县\",\"察雅县\",\"八宿县\",\"左贡县\",\"芒康县\",\"洛隆县\",\"边坝县\"]);  \ndsy.add(\"0_25_2\",[\"乃东县\",\"扎囊县\",\"贡嘎县\",\"桑日县\",\"琼结县\",\"曲松县\",\"措美县\",\"洛扎县\",\"加查县\",\"隆子县\",\"错那县\",\"浪卡子县\"]);  \ndsy.add(\"0_25_3\",[\"桑珠孜区\",\"南木林县\",\"江孜县\",\"定日县\",\"萨迦县\",\"拉孜县\",\"昂仁县\",\"谢通门县\",\"白朗县\",\"仁布县\",\"康马县\",\"定结县\",\"仲巴县\",\"亚东县\",\"吉隆县\",\"聂拉木县\",\"萨嘎县\",\"岗巴县\"]);  \ndsy.add(\"0_25_4\",[\"那曲县\",\"嘉黎县\",\"比如县\",\"聂荣县\",\"安多县\",\"申扎县\",\"索县\",\"班戈县\",\"巴青县\",\"尼玛县\",\"双湖县\"]);  \ndsy.add(\"0_25_5\",[\"普兰县\",\"札达县\",\"噶尔县\",\"日土县\",\"革吉县\",\"改则县\",\"措勤县\"]);  \ndsy.add(\"0_25_6\",[\"林芝县\",\"工布江达县\",\"米林县\",\"墨脱县\",\"波密县\",\"察隅县\",\"朗县\"]);  \ndsy.add(\"0_25\",[\"拉萨\",\"昌都\",\"山南\",\"日喀则\",\"那曲\",\"阿里\",\"林芝\"]);  \n  \ndsy.add(\"0_26_0\",[\"新城区\",\"碑林区\",\"莲湖区\",\"灞桥区\",\"未央区\",\"雁塔区\",\"阎良区\",\"临潼区\",\"长安区\",\"蓝田县\",\"周至县\",\"户县\",\"高陵县\"]);  \ndsy.add(\"0_26_1\",[\"王益区\",\"印台区\",\"耀州区\",\"宜君县\"]);  \ndsy.add(\"0_26_2\",[\"渭滨区\",\"金台区\",\"陈仓区\",\"凤翔县\",\"岐山县\",\"扶风县\",\"眉县\",\"陇县\",\"千阳县\",\"麟游县\",\"凤县\",\"太白县\"]);  \ndsy.add(\"0_26_3\",[\"秦都区\",\"杨陵区\",\"渭城区\",\"三原县\",\"泾阳县\",\"乾县\",\"礼泉县\",\"永寿县\",\"彬县\",\"长武县\",\"旬邑县\",\"淳化县\",\"武功县\",\"兴平市\"]);  \ndsy.add(\"0_26_4\",[\"临渭区\",\"华县\",\"潼关县\",\"大荔县\",\"合阳县\",\"澄城县\",\"蒲城县\",\"白水县\",\"富平县\",\"韩城市\",\"华阴市\"]);  \ndsy.add(\"0_26_5\",[\"宝塔区\",\"延长县\",\"延川县\",\"子长县\",\"安塞县\",\"志丹县\",\"吴起县\",\"甘泉县\",\"富县\",\"洛川县\",\"宜川县\",\"黄龙县\",\"黄陵县\"]);  \ndsy.add(\"0_26_6\",[\"汉台区\",\"南郑县\",\"城固县\",\"洋县\",\"西乡县\",\"勉县\",\"宁强县\",\"略阳县\",\"镇巴县\",\"留坝县\",\"佛坪县\"]);  \ndsy.add(\"0_26_7\",[\"榆阳区\",\"神木县\",\"府谷县\",\"横山县\",\"靖边县\",\"定边县\",\"绥德县\",\"米脂县\",\"佳县\",\"吴堡县\",\"清涧县\",\"子洲县\"]);  \ndsy.add(\"0_26_8\",[\"汉滨区\",\"汉阴县\",\"石泉县\",\"宁陕县\",\"紫阳县\",\"岚皋县\",\"平利县\",\"镇坪县\",\"旬阳县\",\"白河县\"]);  \ndsy.add(\"0_26_9\",[\"商州区\",\"洛南县\",\"丹凤县\",\"商南县\",\"山阳县\",\"镇安县\",\"柞水县\"]);  \ndsy.add(\"0_26\",[\"西安\",\"铜川\",\"宝鸡\",\"咸阳\",\"渭南\",\"延安\",\"汉中\",\"榆林\",\"安康\",\"商洛\"]);  \n  \ndsy.add(\"0_27_0\",[\"城关区\",\"七里河区\",\"西固区\",\"安宁区\",\"红古区\",\"永登县\",\"皋兰县\",\"榆中县\"]);  \ndsy.add(\"0_27_1\",[\"嘉峪关\"]);  \ndsy.add(\"0_27_2\",[\"金川区\",\"永昌县\"]);  \ndsy.add(\"0_27_3\",[\"白银区\",\"平川区\",\"靖远县\",\"会宁县\",\"景泰县\"]);  \ndsy.add(\"0_27_4\",[\"秦州区\",\"麦积区\",\"清水县\",\"秦安县\",\"甘谷县\",\"武山县\",\"张家川回族自治县\"]);  \ndsy.add(\"0_27_5\",[\"凉州区\",\"民勤县\",\"古浪县\",\"天祝藏族自治县\"]);  \ndsy.add(\"0_27_6\",[\"甘州区\",\"肃南裕固族自治县\",\"民乐县\",\"临泽县\",\"高台县\",\"山丹县\"]);  \ndsy.add(\"0_27_7\",[\"崆峒区\",\"泾川县\",\"灵台县\",\"崇信县\",\"华亭县\",\"庄浪县\",\"静宁县\"]);  \ndsy.add(\"0_27_8\",[\"肃州区\",\"金塔县\",\"瓜州县\",\"肃北蒙古族自治县\",\"阿克塞哈萨克族自治县\",\"玉门市\",\"敦煌市\"]);  \ndsy.add(\"0_27_9\",[\"西峰区\",\"庆城县\",\"环县\",\"华池县\",\"合水县\",\"正宁县\",\"宁县\",\"镇原县\"]);  \ndsy.add(\"0_27_10\",[\"安定区\",\"通渭县\",\"陇西县\",\"渭源县\",\"临洮县\",\"漳县\",\"岷县\"]);  \ndsy.add(\"0_27_11\",[\"武都区\",\"成县\",\"文县\",\"宕昌县\",\"康县\",\"西和县\",\"礼县\",\"徽县\",\"两当县\"]);  \ndsy.add(\"0_27_12\",[\"临夏市\",\"临夏县\",\"康乐县\",\"永靖县\",\"广河县\",\"和政县\",\"东乡族自治县\",\"积石山保安族东乡族撒拉族自治县\"]);  \ndsy.add(\"0_27_13\",[\"合作市\",\"临潭县\",\"卓尼县\",\"舟曲县\",\"迭部县\",\"玛曲县\",\"碌曲县\",\"夏河县\"]);  \ndsy.add(\"0_27\",[\"兰州\",\"嘉峪关\",\"金昌\",\"白银\",\"天水\",\"武威\",\"张掖\",\"平凉\",\"酒泉\",\"庆阳\",\"定西\",\"陇南\",\"临夏\",\"甘南\"]);  \n  \ndsy.add(\"0_28_0\",[\"城东区\",\"城中区\",\"城西区\",\"城北区\",\"大通回族土族自治县\",\"湟中县\",\"湟源县\"]);  \ndsy.add(\"0_28_1\",[\"乐都区\",\"平安县\",\"民和回族土族自治县\",\"互助土族自治县\",\"化隆回族自治县\",\"循化撒拉族自治县\"]);  \ndsy.add(\"0_28_2\",[\"门源回族自治县\",\"祁连县\",\"海晏县\",\"刚察县\"]);  \ndsy.add(\"0_28_3\",[\"同仁县\",\"尖扎县\",\"泽库县\",\"河南蒙古族自治县\"]);  \ndsy.add(\"0_28_4\",[\"共和县\",\"同德县\",\"贵德县\",\"兴海县\",\"贵南县\"]);  \ndsy.add(\"0_28_5\",[\"玛沁县\",\"班玛县\",\"甘德县\",\"达日县\",\"久治县\",\"玛多县\"]);  \ndsy.add(\"0_28_6\",[\"玉树市\",\"杂多县\",\"称多县\",\"治多县\",\"囊谦县\",\"曲麻莱县\"]);  \ndsy.add(\"0_28_7\",[\"格尔木市\",\"德令哈市\",\"乌兰县\",\"都兰县\",\"天峻县\"]);  \ndsy.add(\"0_28\",[\"西宁\",\"海东\",\"海北\",\"黄南\",\"海南\",\"果洛\",\"玉树\",\"海西\"]);  \n  \ndsy.add(\"0_29_0\",[\"兴庆区\",\"西夏区\",\"金凤区\",\"永宁县\",\"贺兰县\",\"灵武市\"]);  \ndsy.add(\"0_29_1\",[\"大武口区\",\"惠农区\",\"平罗县\"]);  \ndsy.add(\"0_29_2\",[\"利通区\",\"红寺堡区\",\"盐池县\",\"同心县\",\"青铜峡市\"]);  \ndsy.add(\"0_29_3\",[\"原州区\",\"西吉县\",\"隆德县\",\"泾源县\",\"彭阳县\"]);  \ndsy.add(\"0_29_4\",[\"沙坡头区\",\"中宁县\",\"海原县\"]);  \ndsy.add(\"0_29\",[\"银川\",\"石嘴山\",\"吴忠\",\"固原\",\"中卫\"]);  \n  \ndsy.add(\"0_30_0\",[\"天山区\",\"沙依巴克区\",\"新市区\",\"水磨沟区\",\"头屯河区\",\"达坂城区\",\"米东区\",\"乌鲁木齐县\"]);  \ndsy.add(\"0_30_1\",[\"独山子区\",\"克拉玛依区\",\"白碱滩区\",\"乌尔禾区\"]);  \ndsy.add(\"0_30_2\",[\"吐鲁番市\",\"鄯善县\",\"托克逊县\"]);  \ndsy.add(\"0_30_3\",[\"哈密市\",\"巴里坤哈萨克自治县\",\"伊吾县\"]);  \ndsy.add(\"0_30_4\",[\"昌吉市\",\"阜康市\",\"呼图壁县\",\"玛纳斯县\",\"奇台县\",\"吉木萨尔县\",\"木垒哈萨克自治县\"]);  \ndsy.add(\"0_30_5\",[\"博乐市\",\"阿拉山口市\",\"精河县\",\"温泉县\"]);  \ndsy.add(\"0_30_6\",[\"库尔勒市\",\"轮台县\",\"尉犁县\",\"若羌县\",\"且末县\",\"焉耆回族自治县\",\"和静县\",\"和硕县\",\"博湖县\"]);  \ndsy.add(\"0_30_7\",[\"阿克苏市\",\"温宿县\",\"库车县\",\"沙雅县\",\"新和县\",\"拜城县\",\"乌什县\",\"阿瓦提县\",\"柯坪县\"]);  \ndsy.add(\"0_30_8\",[\"阿图什市\",\"阿克陶县\",\"阿合奇县\",\"乌恰县\"]);  \ndsy.add(\"0_30_9\",[\"喀什市\",\"疏附县\",\"疏勒县\",\"英吉沙县\",\"泽普县\",\"莎车县\",\"叶城县\",\"麦盖提县\",\"岳普湖县\",\"伽师县\",\"巴楚县\",\"塔什库尔干塔吉克自治县\"]);  \ndsy.add(\"0_30_10\",[\"和田市\",\"和田县\",\"墨玉县\",\"皮山县\",\"洛浦县\",\"策勒县\",\"于田县\",\"民丰县\"]);  \ndsy.add(\"0_30_11\",[\"伊宁市\",\"奎屯市\",\"霍尔果斯市\",\"伊宁县\",\"察布查尔锡伯自治县\",\"霍城县\",\"巩留县\",\"新源县\",\"昭苏县\",\"特克斯县\",\"尼勒克县\"]);  \ndsy.add(\"0_30_12\",[\"塔城市\",\"乌苏市\",\"额敏县\",\"沙湾县\",\"托里县\",\"裕民县\",\"和布克赛尔蒙古自治县\"]);  \ndsy.add(\"0_30_13\",[\"阿勒泰市\",\"布尔津县\",\"富蕴县\",\"福海县\",\"哈巴河县\",\"青河县\",\"吉木乃县\"]);  \ndsy.add(\"0_30_14\",[\"石河子\"]);  \ndsy.add(\"0_30_15\",[\"阿拉尔\"]);  \ndsy.add(\"0_30_16\",[\"图木舒克\"]);  \ndsy.add(\"0_30_17\",[\"五家渠\"]);  \ndsy.add(\"0_30_18\",[\"北屯\"]);  \ndsy.add(\"0_30_19\",[\"铁门关\"]);  \ndsy.add(\"0_30_20\",[\"双河\"]);  \ndsy.add(\"0_30_21\",[\"可克达拉\"]);  \ndsy.add(\"0_30\",[\"乌鲁木齐\",\"克拉玛依\",\"吐鲁番\",\"哈密\",\"昌吉\",\"博尔塔拉\",\"巴音郭楞\",\"阿克苏\",\"克孜勒苏\",\"喀什\",\"和田\",\"伊犁\",\"塔城\",\"阿勒泰\",\"石河子\",\"阿拉尔\",\"图木舒克\",\"五家渠\",\"北屯\",\"铁门关\",\"双河\",\"可克达拉\"]);  \n  \ndsy.add(\"0_31_0\",[\"台北\", \"高雄\", \"台中\", \"花莲\", \"基隆\", \"嘉义\", \"金门\", \"连江\", \"苗栗\", \"南投\", \"澎湖\", \"屏东\", \"台东\", \"台南\", \"桃园\", \"新竹\", \"宜兰\", \"云林\", \"彰化\"]);  \ndsy.add(\"0_31\",[\"台湾\"]);  \n  \ndsy.add(\"0_32_0\",[\"中西区\",\"湾仔区\",\"东区\",\"南区\",\"油尖旺区\",\"深水埗区\",\"九龍城区\",\"黃大仙区\",\"觀塘区\",\"荃湾区\",\"屯門区\",\"元朗区\",\"北区\",\"大埔区\",\"西贡区\",\"沙田区\",\"葵青区\",\"離島区\"]);  \ndsy.add(\"0_32\",[\"香港特別行政区\"]);  \n  \ndsy.add(\"0_33_0\",[\"花地玛堂区\",\"花王堂区\",\"望德堂区\",\"大堂区\",\"風順堂区\",\"嘉模堂区\",\"路氹城\",\"圣方济各堂区\"]);  \ndsy.add(\"0_33\",[\"澳门特別行政区\"]);  \n  \ndsy.add(\"0\",[\"北京\",\"天津\",\"河北\",\"山西\",\"内蒙古\",\"辽宁\",\"吉林\",\"黑龙江\",\"上海\",\"江苏\",\"浙江\",\"安徽\",\"福建\",\"江西\",\"山东\",\"河南\",\"湖北\",\"湖南\",\"广东\",\"广西\",\"海南\",\"重庆\",\"四川\",\"贵州\",\"云南\",\"西藏\",\"陕西\",\"甘肃\",\"青海\",\"宁夏\",\"新疆\",\"台湾\",\"香港\",\"澳门\"]);  \n  \nvar s = [\"s_province\", \"s_city\", \"s_county\"];//三个select的name  \nvar opt0 = [\"省份\", \"地级市\", \"县(区)\"];//初始值  \nfunction _init_area() {  //初始化函数  \n    for (i = 0; i < s.length - 1; i++) {  \n        document.getElementById(s[i]).onchange = new Function(\"change(\" + (i + 1) + \")\");  \n    }  \n    change(0);  \n}  \n```\n","slug":"全国省市县三级地址联动js","published":1,"updated":"2022-06-15T08:16:05.458Z","_id":"cl4e3az0k003gk4rqjn9pl75i","comments":1,"layout":"post","photos":[],"link":"","content":"<p>** 用于h5网页的全国地址三级联动选择框，整理截至2016-03-17，地址数据来自高德地图 **</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">*   全国三级城市联动 js版 </span></span><br><span class=\"line\"><span class=\"comment\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Dsy</span>(<span class=\"params\"></span>) &#123;  </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Items</span> = &#123;&#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"title class_\">Dsy</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">add</span> = <span class=\"keyword\">function</span> (<span class=\"params\">id, iArray</span>) &#123;  </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Items</span>[id] = iArray;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"title class_\">Dsy</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">Exists</span> = <span class=\"keyword\">function</span> (<span class=\"params\">id</span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">Items</span>[id]) == <span class=\"string\">&quot;undefined&quot;</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">change</span>(<span class=\"params\">v</span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;0&quot;</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; v; i++) &#123;  </span><br><span class=\"line\">        str += (<span class=\"string\">&quot;_&quot;</span> + (<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[i]).<span class=\"property\">selectedIndex</span> - <span class=\"number\">1</span>));  </span><br><span class=\"line\">    &#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> ss = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[v]);  </span><br><span class=\"line\">    <span class=\"keyword\">with</span> (ss) &#123;  </span><br><span class=\"line\">        length = <span class=\"number\">0</span>;  </span><br><span class=\"line\">        options[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Option</span>(opt0[v], <span class=\"string\">&quot;&quot;</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v &amp;&amp; <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[v - <span class=\"number\">1</span>]).<span class=\"property\">selectedIndex</span> &gt; <span class=\"number\">0</span> || !v) &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dsy.<span class=\"title class_\">Exists</span>(str)) &#123;  </span><br><span class=\"line\">                ar = dsy.<span class=\"property\">Items</span>[str];  </span><br><span class=\"line\">                <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; ar.<span class=\"property\">length</span>; i++) &#123;  </span><br><span class=\"line\">                    options[length] = <span class=\"keyword\">new</span> <span class=\"title class_\">Option</span>(ar[i], ar[i]);  </span><br><span class=\"line\">                &#125;<span class=\"comment\">//end for  </span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (v) &#123; options[<span class=\"number\">0</span>].<span class=\"property\">selected</span> = <span class=\"literal\">true</span>; &#125;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;<span class=\"comment\">//end if v  </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (++v &lt; s.<span class=\"property\">length</span>) &#123; <span class=\"title function_\">change</span>(v); &#125;  </span><br><span class=\"line\">    &#125;<span class=\"comment\">//End with  </span></span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">var</span> dsy = <span class=\"keyword\">new</span> <span class=\"title class_\">Dsy</span>();  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_0_0&quot;</span>,[<span class=\"string\">&quot;东城区&quot;</span>,<span class=\"string\">&quot;西城区&quot;</span>,<span class=\"string\">&quot;朝阳区&quot;</span>,<span class=\"string\">&quot;丰台区&quot;</span>,<span class=\"string\">&quot;石景山区&quot;</span>,<span class=\"string\">&quot;海淀区&quot;</span>,<span class=\"string\">&quot;门头沟区&quot;</span>,<span class=\"string\">&quot;房山区&quot;</span>,<span class=\"string\">&quot;通州区&quot;</span>,<span class=\"string\">&quot;顺义区&quot;</span>,<span class=\"string\">&quot;昌平区&quot;</span>,<span class=\"string\">&quot;大兴区&quot;</span>,<span class=\"string\">&quot;怀柔区&quot;</span>,<span class=\"string\">&quot;平谷区&quot;</span>,<span class=\"string\">&quot;密云县&quot;</span>,<span class=\"string\">&quot;延庆县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_0&quot;</span>,[<span class=\"string\">&quot;北京&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_1_0&quot;</span>,[<span class=\"string\">&quot;和平区&quot;</span>,<span class=\"string\">&quot;河东区&quot;</span>,<span class=\"string\">&quot;河西区&quot;</span>,<span class=\"string\">&quot;南开区&quot;</span>,<span class=\"string\">&quot;河北区&quot;</span>,<span class=\"string\">&quot;红桥区&quot;</span>,<span class=\"string\">&quot;东丽区&quot;</span>,<span class=\"string\">&quot;西青区&quot;</span>,<span class=\"string\">&quot;津南区&quot;</span>,<span class=\"string\">&quot;北辰区&quot;</span>,<span class=\"string\">&quot;武清区&quot;</span>,<span class=\"string\">&quot;宝坻区&quot;</span>,<span class=\"string\">&quot;滨海新区&quot;</span>,<span class=\"string\">&quot;宁河县&quot;</span>,<span class=\"string\">&quot;静海县&quot;</span>,<span class=\"string\">&quot;蓟县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_1&quot;</span>,[<span class=\"string\">&quot;天津&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_0&quot;</span>,[<span class=\"string\">&quot;长安区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;井陉矿区&quot;</span>,<span class=\"string\">&quot;裕华区&quot;</span>,<span class=\"string\">&quot;井陉县&quot;</span>,<span class=\"string\">&quot;正定县&quot;</span>,<span class=\"string\">&quot;栾城区&quot;</span>,<span class=\"string\">&quot;行唐县&quot;</span>,<span class=\"string\">&quot;灵寿县&quot;</span>,<span class=\"string\">&quot;高邑县&quot;</span>,<span class=\"string\">&quot;深泽县&quot;</span>,<span class=\"string\">&quot;赞皇县&quot;</span>,<span class=\"string\">&quot;无极县&quot;</span>,<span class=\"string\">&quot;平山县&quot;</span>,<span class=\"string\">&quot;元氏县&quot;</span>,<span class=\"string\">&quot;赵县&quot;</span>,<span class=\"string\">&quot;辛集市&quot;</span>,<span class=\"string\">&quot;藁城区&quot;</span>,<span class=\"string\">&quot;晋州市&quot;</span>,<span class=\"string\">&quot;新乐市&quot;</span>,<span class=\"string\">&quot;鹿泉区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_1&quot;</span>,[<span class=\"string\">&quot;路南区&quot;</span>,<span class=\"string\">&quot;路北区&quot;</span>,<span class=\"string\">&quot;古冶区&quot;</span>,<span class=\"string\">&quot;开平区&quot;</span>,<span class=\"string\">&quot;丰南区&quot;</span>,<span class=\"string\">&quot;丰润区&quot;</span>,<span class=\"string\">&quot;曹妃甸区&quot;</span>,<span class=\"string\">&quot;滦县&quot;</span>,<span class=\"string\">&quot;滦南县&quot;</span>,<span class=\"string\">&quot;乐亭县&quot;</span>,<span class=\"string\">&quot;迁西县&quot;</span>,<span class=\"string\">&quot;玉田县&quot;</span>,<span class=\"string\">&quot;遵化市&quot;</span>,<span class=\"string\">&quot;迁安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_2&quot;</span>,[<span class=\"string\">&quot;海港区&quot;</span>,<span class=\"string\">&quot;山海关区&quot;</span>,<span class=\"string\">&quot;北戴河区&quot;</span>,<span class=\"string\">&quot;青龙满族自治县&quot;</span>,<span class=\"string\">&quot;昌黎县&quot;</span>,<span class=\"string\">&quot;抚宁县&quot;</span>,<span class=\"string\">&quot;卢龙县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_3&quot;</span>,[<span class=\"string\">&quot;邯山区&quot;</span>,<span class=\"string\">&quot;丛台区&quot;</span>,<span class=\"string\">&quot;复兴区&quot;</span>,<span class=\"string\">&quot;峰峰矿区&quot;</span>,<span class=\"string\">&quot;邯郸县&quot;</span>,<span class=\"string\">&quot;临漳县&quot;</span>,<span class=\"string\">&quot;成安县&quot;</span>,<span class=\"string\">&quot;大名县&quot;</span>,<span class=\"string\">&quot;涉县&quot;</span>,<span class=\"string\">&quot;磁县&quot;</span>,<span class=\"string\">&quot;肥乡县&quot;</span>,<span class=\"string\">&quot;永年县&quot;</span>,<span class=\"string\">&quot;邱县&quot;</span>,<span class=\"string\">&quot;鸡泽县&quot;</span>,<span class=\"string\">&quot;广平县&quot;</span>,<span class=\"string\">&quot;馆陶县&quot;</span>,<span class=\"string\">&quot;魏县&quot;</span>,<span class=\"string\">&quot;曲周县&quot;</span>,<span class=\"string\">&quot;武安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_4&quot;</span>,[<span class=\"string\">&quot;桥东区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;邢台县&quot;</span>,<span class=\"string\">&quot;临城县&quot;</span>,<span class=\"string\">&quot;内丘县&quot;</span>,<span class=\"string\">&quot;柏乡县&quot;</span>,<span class=\"string\">&quot;隆尧县&quot;</span>,<span class=\"string\">&quot;任县&quot;</span>,<span class=\"string\">&quot;南和县&quot;</span>,<span class=\"string\">&quot;宁晋县&quot;</span>,<span class=\"string\">&quot;巨鹿县&quot;</span>,<span class=\"string\">&quot;新河县&quot;</span>,<span class=\"string\">&quot;广宗县&quot;</span>,<span class=\"string\">&quot;平乡县&quot;</span>,<span class=\"string\">&quot;威县&quot;</span>,<span class=\"string\">&quot;清河县&quot;</span>,<span class=\"string\">&quot;临西县&quot;</span>,<span class=\"string\">&quot;南宫市&quot;</span>,<span class=\"string\">&quot;沙河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_5&quot;</span>,[<span class=\"string\">&quot;新市区&quot;</span>,<span class=\"string\">&quot;北市区&quot;</span>,<span class=\"string\">&quot;南市区&quot;</span>,<span class=\"string\">&quot;满城县&quot;</span>,<span class=\"string\">&quot;清苑县&quot;</span>,<span class=\"string\">&quot;涞水县&quot;</span>,<span class=\"string\">&quot;阜平县&quot;</span>,<span class=\"string\">&quot;徐水县&quot;</span>,<span class=\"string\">&quot;定兴县&quot;</span>,<span class=\"string\">&quot;唐县&quot;</span>,<span class=\"string\">&quot;高阳县&quot;</span>,<span class=\"string\">&quot;容城县&quot;</span>,<span class=\"string\">&quot;涞源县&quot;</span>,<span class=\"string\">&quot;望都县&quot;</span>,<span class=\"string\">&quot;安新县&quot;</span>,<span class=\"string\">&quot;易县&quot;</span>,<span class=\"string\">&quot;曲阳县&quot;</span>,<span class=\"string\">&quot;蠡县&quot;</span>,<span class=\"string\">&quot;顺平县&quot;</span>,<span class=\"string\">&quot;博野县&quot;</span>,<span class=\"string\">&quot;雄县&quot;</span>,<span class=\"string\">&quot;涿州市&quot;</span>,<span class=\"string\">&quot;定州市&quot;</span>,<span class=\"string\">&quot;安国市&quot;</span>,<span class=\"string\">&quot;高碑店市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_6&quot;</span>,[<span class=\"string\">&quot;桥东区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;宣化区&quot;</span>,<span class=\"string\">&quot;下花园区&quot;</span>,<span class=\"string\">&quot;宣化县&quot;</span>,<span class=\"string\">&quot;张北县&quot;</span>,<span class=\"string\">&quot;康保县&quot;</span>,<span class=\"string\">&quot;沽源县&quot;</span>,<span class=\"string\">&quot;尚义县&quot;</span>,<span class=\"string\">&quot;蔚县&quot;</span>,<span class=\"string\">&quot;阳原县&quot;</span>,<span class=\"string\">&quot;怀安县&quot;</span>,<span class=\"string\">&quot;万全县&quot;</span>,<span class=\"string\">&quot;怀来县&quot;</span>,<span class=\"string\">&quot;涿鹿县&quot;</span>,<span class=\"string\">&quot;赤城县&quot;</span>,<span class=\"string\">&quot;崇礼县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_7&quot;</span>,[<span class=\"string\">&quot;双桥区&quot;</span>,<span class=\"string\">&quot;双滦区&quot;</span>,<span class=\"string\">&quot;鹰手营子矿区&quot;</span>,<span class=\"string\">&quot;承德县&quot;</span>,<span class=\"string\">&quot;兴隆县&quot;</span>,<span class=\"string\">&quot;平泉县&quot;</span>,<span class=\"string\">&quot;滦平县&quot;</span>,<span class=\"string\">&quot;隆化县&quot;</span>,<span class=\"string\">&quot;丰宁满族自治县&quot;</span>,<span class=\"string\">&quot;宽城满族自治县&quot;</span>,<span class=\"string\">&quot;围场满族蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_8&quot;</span>,[<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;运河区&quot;</span>,<span class=\"string\">&quot;沧县&quot;</span>,<span class=\"string\">&quot;青县&quot;</span>,<span class=\"string\">&quot;东光县&quot;</span>,<span class=\"string\">&quot;海兴县&quot;</span>,<span class=\"string\">&quot;盐山县&quot;</span>,<span class=\"string\">&quot;肃宁县&quot;</span>,<span class=\"string\">&quot;南皮县&quot;</span>,<span class=\"string\">&quot;吴桥县&quot;</span>,<span class=\"string\">&quot;献县&quot;</span>,<span class=\"string\">&quot;孟村回族自治县&quot;</span>,<span class=\"string\">&quot;泊头市&quot;</span>,<span class=\"string\">&quot;任丘市&quot;</span>,<span class=\"string\">&quot;黄骅市&quot;</span>,<span class=\"string\">&quot;河间市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_9&quot;</span>,[<span class=\"string\">&quot;安次区&quot;</span>,<span class=\"string\">&quot;广阳区&quot;</span>,<span class=\"string\">&quot;固安县&quot;</span>,<span class=\"string\">&quot;永清县&quot;</span>,<span class=\"string\">&quot;香河县&quot;</span>,<span class=\"string\">&quot;大城县&quot;</span>,<span class=\"string\">&quot;文安县&quot;</span>,<span class=\"string\">&quot;大厂回族自治县&quot;</span>,<span class=\"string\">&quot;霸州市&quot;</span>,<span class=\"string\">&quot;三河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_10&quot;</span>,[<span class=\"string\">&quot;桃城区&quot;</span>,<span class=\"string\">&quot;枣强县&quot;</span>,<span class=\"string\">&quot;武邑县&quot;</span>,<span class=\"string\">&quot;武强县&quot;</span>,<span class=\"string\">&quot;饶阳县&quot;</span>,<span class=\"string\">&quot;安平县&quot;</span>,<span class=\"string\">&quot;故城县&quot;</span>,<span class=\"string\">&quot;景县&quot;</span>,<span class=\"string\">&quot;阜城县&quot;</span>,<span class=\"string\">&quot;冀州市&quot;</span>,<span class=\"string\">&quot;深州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2&quot;</span>,[<span class=\"string\">&quot;石家庄&quot;</span>,<span class=\"string\">&quot;唐山&quot;</span>,<span class=\"string\">&quot;秦皇岛&quot;</span>,<span class=\"string\">&quot;邯郸&quot;</span>,<span class=\"string\">&quot;邢台&quot;</span>,<span class=\"string\">&quot;保定&quot;</span>,<span class=\"string\">&quot;张家口&quot;</span>,<span class=\"string\">&quot;承德&quot;</span>,<span class=\"string\">&quot;沧州&quot;</span>,<span class=\"string\">&quot;廊坊&quot;</span>,<span class=\"string\">&quot;衡水&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_0&quot;</span>,[<span class=\"string\">&quot;小店区&quot;</span>,<span class=\"string\">&quot;迎泽区&quot;</span>,<span class=\"string\">&quot;杏花岭区&quot;</span>,<span class=\"string\">&quot;尖草坪区&quot;</span>,<span class=\"string\">&quot;万柏林区&quot;</span>,<span class=\"string\">&quot;晋源区&quot;</span>,<span class=\"string\">&quot;清徐县&quot;</span>,<span class=\"string\">&quot;阳曲县&quot;</span>,<span class=\"string\">&quot;娄烦县&quot;</span>,<span class=\"string\">&quot;古交市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_1&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;矿区&quot;</span>,<span class=\"string\">&quot;南郊区&quot;</span>,<span class=\"string\">&quot;新荣区&quot;</span>,<span class=\"string\">&quot;阳高县&quot;</span>,<span class=\"string\">&quot;天镇县&quot;</span>,<span class=\"string\">&quot;广灵县&quot;</span>,<span class=\"string\">&quot;灵丘县&quot;</span>,<span class=\"string\">&quot;浑源县&quot;</span>,<span class=\"string\">&quot;左云县&quot;</span>,<span class=\"string\">&quot;大同县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_2&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;矿区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;平定县&quot;</span>,<span class=\"string\">&quot;盂县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_3&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;长治县&quot;</span>,<span class=\"string\">&quot;襄垣县&quot;</span>,<span class=\"string\">&quot;屯留县&quot;</span>,<span class=\"string\">&quot;平顺县&quot;</span>,<span class=\"string\">&quot;黎城县&quot;</span>,<span class=\"string\">&quot;壶关县&quot;</span>,<span class=\"string\">&quot;长子县&quot;</span>,<span class=\"string\">&quot;武乡县&quot;</span>,<span class=\"string\">&quot;沁县&quot;</span>,<span class=\"string\">&quot;沁源县&quot;</span>,<span class=\"string\">&quot;潞城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_4&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;沁水县&quot;</span>,<span class=\"string\">&quot;阳城县&quot;</span>,<span class=\"string\">&quot;陵川县&quot;</span>,<span class=\"string\">&quot;泽州县&quot;</span>,<span class=\"string\">&quot;高平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_5&quot;</span>,[<span class=\"string\">&quot;朔城区&quot;</span>,<span class=\"string\">&quot;平鲁区&quot;</span>,<span class=\"string\">&quot;山阴县&quot;</span>,<span class=\"string\">&quot;应县&quot;</span>,<span class=\"string\">&quot;右玉县&quot;</span>,<span class=\"string\">&quot;怀仁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_6&quot;</span>,[<span class=\"string\">&quot;榆次区&quot;</span>,<span class=\"string\">&quot;榆社县&quot;</span>,<span class=\"string\">&quot;左权县&quot;</span>,<span class=\"string\">&quot;和顺县&quot;</span>,<span class=\"string\">&quot;昔阳县&quot;</span>,<span class=\"string\">&quot;寿阳县&quot;</span>,<span class=\"string\">&quot;太谷县&quot;</span>,<span class=\"string\">&quot;祁县&quot;</span>,<span class=\"string\">&quot;平遥县&quot;</span>,<span class=\"string\">&quot;灵石县&quot;</span>,<span class=\"string\">&quot;介休市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_7&quot;</span>,[<span class=\"string\">&quot;盐湖区&quot;</span>,<span class=\"string\">&quot;临猗县&quot;</span>,<span class=\"string\">&quot;万荣县&quot;</span>,<span class=\"string\">&quot;闻喜县&quot;</span>,<span class=\"string\">&quot;稷山县&quot;</span>,<span class=\"string\">&quot;新绛县&quot;</span>,<span class=\"string\">&quot;绛县&quot;</span>,<span class=\"string\">&quot;垣曲县&quot;</span>,<span class=\"string\">&quot;夏县&quot;</span>,<span class=\"string\">&quot;平陆县&quot;</span>,<span class=\"string\">&quot;芮城县&quot;</span>,<span class=\"string\">&quot;永济市&quot;</span>,<span class=\"string\">&quot;河津市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_8&quot;</span>,[<span class=\"string\">&quot;忻府区&quot;</span>,<span class=\"string\">&quot;定襄县&quot;</span>,<span class=\"string\">&quot;五台县&quot;</span>,<span class=\"string\">&quot;代县&quot;</span>,<span class=\"string\">&quot;繁峙县&quot;</span>,<span class=\"string\">&quot;宁武县&quot;</span>,<span class=\"string\">&quot;静乐县&quot;</span>,<span class=\"string\">&quot;神池县&quot;</span>,<span class=\"string\">&quot;五寨县&quot;</span>,<span class=\"string\">&quot;岢岚县&quot;</span>,<span class=\"string\">&quot;河曲县&quot;</span>,<span class=\"string\">&quot;保德县&quot;</span>,<span class=\"string\">&quot;偏关县&quot;</span>,<span class=\"string\">&quot;原平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_9&quot;</span>,[<span class=\"string\">&quot;尧都区&quot;</span>,<span class=\"string\">&quot;曲沃县&quot;</span>,<span class=\"string\">&quot;翼城县&quot;</span>,<span class=\"string\">&quot;襄汾县&quot;</span>,<span class=\"string\">&quot;洪洞县&quot;</span>,<span class=\"string\">&quot;古县&quot;</span>,<span class=\"string\">&quot;安泽县&quot;</span>,<span class=\"string\">&quot;浮山县&quot;</span>,<span class=\"string\">&quot;吉县&quot;</span>,<span class=\"string\">&quot;乡宁县&quot;</span>,<span class=\"string\">&quot;大宁县&quot;</span>,<span class=\"string\">&quot;隰县&quot;</span>,<span class=\"string\">&quot;永和县&quot;</span>,<span class=\"string\">&quot;蒲县&quot;</span>,<span class=\"string\">&quot;汾西县&quot;</span>,<span class=\"string\">&quot;侯马市&quot;</span>,<span class=\"string\">&quot;霍州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_10&quot;</span>,[<span class=\"string\">&quot;离石区&quot;</span>,<span class=\"string\">&quot;文水县&quot;</span>,<span class=\"string\">&quot;交城县&quot;</span>,<span class=\"string\">&quot;兴县&quot;</span>,<span class=\"string\">&quot;临县&quot;</span>,<span class=\"string\">&quot;柳林县&quot;</span>,<span class=\"string\">&quot;石楼县&quot;</span>,<span class=\"string\">&quot;岚县&quot;</span>,<span class=\"string\">&quot;方山县&quot;</span>,<span class=\"string\">&quot;中阳县&quot;</span>,<span class=\"string\">&quot;交口县&quot;</span>,<span class=\"string\">&quot;孝义市&quot;</span>,<span class=\"string\">&quot;汾阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3&quot;</span>,[<span class=\"string\">&quot;太原&quot;</span>,<span class=\"string\">&quot;大同&quot;</span>,<span class=\"string\">&quot;阳泉&quot;</span>,<span class=\"string\">&quot;长治&quot;</span>,<span class=\"string\">&quot;晋城&quot;</span>,<span class=\"string\">&quot;朔州&quot;</span>,<span class=\"string\">&quot;晋中&quot;</span>,<span class=\"string\">&quot;运城&quot;</span>,<span class=\"string\">&quot;忻州&quot;</span>,<span class=\"string\">&quot;临汾&quot;</span>,<span class=\"string\">&quot;吕梁&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_0&quot;</span>,[<span class=\"string\">&quot;新城区&quot;</span>,<span class=\"string\">&quot;回民区&quot;</span>,<span class=\"string\">&quot;玉泉区&quot;</span>,<span class=\"string\">&quot;赛罕区&quot;</span>,<span class=\"string\">&quot;土默特左旗&quot;</span>,<span class=\"string\">&quot;托克托县&quot;</span>,<span class=\"string\">&quot;和林格尔县&quot;</span>,<span class=\"string\">&quot;清水河县&quot;</span>,<span class=\"string\">&quot;武川县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_1&quot;</span>,[<span class=\"string\">&quot;东河区&quot;</span>,<span class=\"string\">&quot;昆都仑区&quot;</span>,<span class=\"string\">&quot;青山区&quot;</span>,<span class=\"string\">&quot;石拐区&quot;</span>,<span class=\"string\">&quot;白云鄂博矿区&quot;</span>,<span class=\"string\">&quot;九原区&quot;</span>,<span class=\"string\">&quot;土默特右旗&quot;</span>,<span class=\"string\">&quot;固阳县&quot;</span>,<span class=\"string\">&quot;达尔罕茂明安联合旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_2&quot;</span>,[<span class=\"string\">&quot;海勃湾区&quot;</span>,<span class=\"string\">&quot;海南区&quot;</span>,<span class=\"string\">&quot;乌达区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_3&quot;</span>,[<span class=\"string\">&quot;红山区&quot;</span>,<span class=\"string\">&quot;元宝山区&quot;</span>,<span class=\"string\">&quot;松山区&quot;</span>,<span class=\"string\">&quot;阿鲁科尔沁旗&quot;</span>,<span class=\"string\">&quot;巴林左旗&quot;</span>,<span class=\"string\">&quot;巴林右旗&quot;</span>,<span class=\"string\">&quot;林西县&quot;</span>,<span class=\"string\">&quot;克什克腾旗&quot;</span>,<span class=\"string\">&quot;翁牛特旗&quot;</span>,<span class=\"string\">&quot;喀喇沁旗&quot;</span>,<span class=\"string\">&quot;宁城县&quot;</span>,<span class=\"string\">&quot;敖汉旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_4&quot;</span>,[<span class=\"string\">&quot;科尔沁区&quot;</span>,<span class=\"string\">&quot;科尔沁左翼中旗&quot;</span>,<span class=\"string\">&quot;科尔沁左翼后旗&quot;</span>,<span class=\"string\">&quot;开鲁县&quot;</span>,<span class=\"string\">&quot;库伦旗&quot;</span>,<span class=\"string\">&quot;奈曼旗&quot;</span>,<span class=\"string\">&quot;扎鲁特旗&quot;</span>,<span class=\"string\">&quot;霍林郭勒市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_5&quot;</span>,[<span class=\"string\">&quot;东胜区&quot;</span>,<span class=\"string\">&quot;达拉特旗&quot;</span>,<span class=\"string\">&quot;准格尔旗&quot;</span>,<span class=\"string\">&quot;鄂托克前旗&quot;</span>,<span class=\"string\">&quot;鄂托克旗&quot;</span>,<span class=\"string\">&quot;杭锦旗&quot;</span>,<span class=\"string\">&quot;乌审旗&quot;</span>,<span class=\"string\">&quot;伊金霍洛旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_6&quot;</span>,[<span class=\"string\">&quot;海拉尔区&quot;</span>,<span class=\"string\">&quot;扎赉诺尔区&quot;</span>,<span class=\"string\">&quot;阿荣旗&quot;</span>,<span class=\"string\">&quot;莫力达瓦达斡尔族自治旗&quot;</span>,<span class=\"string\">&quot;鄂伦春自治旗&quot;</span>,<span class=\"string\">&quot;鄂温克族自治旗&quot;</span>,<span class=\"string\">&quot;陈巴尔虎旗&quot;</span>,<span class=\"string\">&quot;新巴尔虎左旗&quot;</span>,<span class=\"string\">&quot;新巴尔虎右旗&quot;</span>,<span class=\"string\">&quot;满洲里市&quot;</span>,<span class=\"string\">&quot;牙克石市&quot;</span>,<span class=\"string\">&quot;扎兰屯市&quot;</span>,<span class=\"string\">&quot;额尔古纳市&quot;</span>,<span class=\"string\">&quot;根河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_7&quot;</span>,[<span class=\"string\">&quot;临河区&quot;</span>,<span class=\"string\">&quot;五原县&quot;</span>,<span class=\"string\">&quot;磴口县&quot;</span>,<span class=\"string\">&quot;乌拉特前旗&quot;</span>,<span class=\"string\">&quot;乌拉特中旗&quot;</span>,<span class=\"string\">&quot;乌拉特后旗&quot;</span>,<span class=\"string\">&quot;杭锦后旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_8&quot;</span>,[<span class=\"string\">&quot;集宁区&quot;</span>,<span class=\"string\">&quot;卓资县&quot;</span>,<span class=\"string\">&quot;化德县&quot;</span>,<span class=\"string\">&quot;商都县&quot;</span>,<span class=\"string\">&quot;兴和县&quot;</span>,<span class=\"string\">&quot;凉城县&quot;</span>,<span class=\"string\">&quot;察哈尔右翼前旗&quot;</span>,<span class=\"string\">&quot;察哈尔右翼中旗&quot;</span>,<span class=\"string\">&quot;察哈尔右翼后旗&quot;</span>,<span class=\"string\">&quot;四子王旗&quot;</span>,<span class=\"string\">&quot;丰镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_9&quot;</span>,[<span class=\"string\">&quot;乌兰浩特市&quot;</span>,<span class=\"string\">&quot;阿尔山市&quot;</span>,<span class=\"string\">&quot;科尔沁右翼前旗&quot;</span>,<span class=\"string\">&quot;科尔沁右翼中旗&quot;</span>,<span class=\"string\">&quot;扎赉特旗&quot;</span>,<span class=\"string\">&quot;突泉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_10&quot;</span>,[<span class=\"string\">&quot;二连浩特市&quot;</span>,<span class=\"string\">&quot;锡林浩特市&quot;</span>,<span class=\"string\">&quot;阿巴嘎旗&quot;</span>,<span class=\"string\">&quot;苏尼特左旗&quot;</span>,<span class=\"string\">&quot;苏尼特右旗&quot;</span>,<span class=\"string\">&quot;东乌珠穆沁旗&quot;</span>,<span class=\"string\">&quot;西乌珠穆沁旗&quot;</span>,<span class=\"string\">&quot;太仆寺旗&quot;</span>,<span class=\"string\">&quot;镶黄旗&quot;</span>,<span class=\"string\">&quot;正镶白旗&quot;</span>,<span class=\"string\">&quot;正蓝旗&quot;</span>,<span class=\"string\">&quot;多伦县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_11&quot;</span>,[<span class=\"string\">&quot;阿拉善左旗&quot;</span>,<span class=\"string\">&quot;阿拉善右旗&quot;</span>,<span class=\"string\">&quot;额济纳旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4&quot;</span>,[<span class=\"string\">&quot;呼和浩特&quot;</span>,<span class=\"string\">&quot;包头&quot;</span>,<span class=\"string\">&quot;乌海&quot;</span>,<span class=\"string\">&quot;赤峰&quot;</span>,<span class=\"string\">&quot;通辽&quot;</span>,<span class=\"string\">&quot;鄂尔多斯&quot;</span>,<span class=\"string\">&quot;呼伦贝尔&quot;</span>,<span class=\"string\">&quot;巴彦淖尔&quot;</span>,<span class=\"string\">&quot;乌兰察布&quot;</span>,<span class=\"string\">&quot;兴安盟&quot;</span>,<span class=\"string\">&quot;锡林郭勒盟&quot;</span>,<span class=\"string\">&quot;阿拉善盟&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_0&quot;</span>,[<span class=\"string\">&quot;和平区&quot;</span>,<span class=\"string\">&quot;沈河区&quot;</span>,<span class=\"string\">&quot;大东区&quot;</span>,<span class=\"string\">&quot;皇姑区&quot;</span>,<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;苏家屯区&quot;</span>,<span class=\"string\">&quot;浑南区&quot;</span>,<span class=\"string\">&quot;沈北新区&quot;</span>,<span class=\"string\">&quot;于洪区&quot;</span>,<span class=\"string\">&quot;辽中县&quot;</span>,<span class=\"string\">&quot;康平县&quot;</span>,<span class=\"string\">&quot;法库县&quot;</span>,<span class=\"string\">&quot;新民市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_1&quot;</span>,[<span class=\"string\">&quot;中山区&quot;</span>,<span class=\"string\">&quot;西岗区&quot;</span>,<span class=\"string\">&quot;沙河口区&quot;</span>,<span class=\"string\">&quot;甘井子区&quot;</span>,<span class=\"string\">&quot;旅顺口区&quot;</span>,<span class=\"string\">&quot;金州区&quot;</span>,<span class=\"string\">&quot;长海县&quot;</span>,<span class=\"string\">&quot;瓦房店市&quot;</span>,<span class=\"string\">&quot;普兰店市&quot;</span>,<span class=\"string\">&quot;庄河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_2&quot;</span>,[<span class=\"string\">&quot;铁东区&quot;</span>,<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;立山区&quot;</span>,<span class=\"string\">&quot;千山区&quot;</span>,<span class=\"string\">&quot;台安县&quot;</span>,<span class=\"string\">&quot;岫岩满族自治县&quot;</span>,<span class=\"string\">&quot;海城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_3&quot;</span>,[<span class=\"string\">&quot;新抚区&quot;</span>,<span class=\"string\">&quot;东洲区&quot;</span>,<span class=\"string\">&quot;望花区&quot;</span>,<span class=\"string\">&quot;顺城区&quot;</span>,<span class=\"string\">&quot;抚顺县&quot;</span>,<span class=\"string\">&quot;新宾满族自治县&quot;</span>,<span class=\"string\">&quot;清原满族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_4&quot;</span>,[<span class=\"string\">&quot;平山区&quot;</span>,<span class=\"string\">&quot;溪湖区&quot;</span>,<span class=\"string\">&quot;明山区&quot;</span>,<span class=\"string\">&quot;南芬区&quot;</span>,<span class=\"string\">&quot;本溪满族自治县&quot;</span>,<span class=\"string\">&quot;桓仁满族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_5&quot;</span>,[<span class=\"string\">&quot;元宝区&quot;</span>,<span class=\"string\">&quot;振兴区&quot;</span>,<span class=\"string\">&quot;振安区&quot;</span>,<span class=\"string\">&quot;宽甸满族自治县&quot;</span>,<span class=\"string\">&quot;东港市&quot;</span>,<span class=\"string\">&quot;凤城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_6&quot;</span>,[<span class=\"string\">&quot;古塔区&quot;</span>,<span class=\"string\">&quot;凌河区&quot;</span>,<span class=\"string\">&quot;太和区&quot;</span>,<span class=\"string\">&quot;黑山县&quot;</span>,<span class=\"string\">&quot;义县&quot;</span>,<span class=\"string\">&quot;凌海市&quot;</span>,<span class=\"string\">&quot;北镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_7&quot;</span>,[<span class=\"string\">&quot;站前区&quot;</span>,<span class=\"string\">&quot;西市区&quot;</span>,<span class=\"string\">&quot;鲅鱼圈区&quot;</span>,<span class=\"string\">&quot;老边区&quot;</span>,<span class=\"string\">&quot;盖州市&quot;</span>,<span class=\"string\">&quot;大石桥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_8&quot;</span>,[<span class=\"string\">&quot;海州区&quot;</span>,<span class=\"string\">&quot;新邱区&quot;</span>,<span class=\"string\">&quot;太平区&quot;</span>,<span class=\"string\">&quot;清河门区&quot;</span>,<span class=\"string\">&quot;细河区&quot;</span>,<span class=\"string\">&quot;阜新蒙古族自治县&quot;</span>,<span class=\"string\">&quot;彰武县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_9&quot;</span>,[<span class=\"string\">&quot;白塔区&quot;</span>,<span class=\"string\">&quot;文圣区&quot;</span>,<span class=\"string\">&quot;宏伟区&quot;</span>,<span class=\"string\">&quot;弓长岭区&quot;</span>,<span class=\"string\">&quot;太子河区&quot;</span>,<span class=\"string\">&quot;辽阳县&quot;</span>,<span class=\"string\">&quot;灯塔市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_10&quot;</span>,[<span class=\"string\">&quot;双台子区&quot;</span>,<span class=\"string\">&quot;兴隆台区&quot;</span>,<span class=\"string\">&quot;大洼县&quot;</span>,<span class=\"string\">&quot;盘山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_11&quot;</span>,[<span class=\"string\">&quot;银州区&quot;</span>,<span class=\"string\">&quot;清河区&quot;</span>,<span class=\"string\">&quot;铁岭县&quot;</span>,<span class=\"string\">&quot;西丰县&quot;</span>,<span class=\"string\">&quot;昌图县&quot;</span>,<span class=\"string\">&quot;调兵山市&quot;</span>,<span class=\"string\">&quot;开原市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_12&quot;</span>,[<span class=\"string\">&quot;双塔区&quot;</span>,<span class=\"string\">&quot;龙城区&quot;</span>,<span class=\"string\">&quot;朝阳县&quot;</span>,<span class=\"string\">&quot;建平县&quot;</span>,<span class=\"string\">&quot;喀喇沁左翼蒙古族自治县&quot;</span>,<span class=\"string\">&quot;北票市&quot;</span>,<span class=\"string\">&quot;凌源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_13&quot;</span>,[<span class=\"string\">&quot;连山区&quot;</span>,<span class=\"string\">&quot;龙港区&quot;</span>,<span class=\"string\">&quot;南票区&quot;</span>,<span class=\"string\">&quot;绥中县&quot;</span>,<span class=\"string\">&quot;建昌县&quot;</span>,<span class=\"string\">&quot;兴城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5&quot;</span>,[<span class=\"string\">&quot;沈阳&quot;</span>,<span class=\"string\">&quot;大连&quot;</span>,<span class=\"string\">&quot;鞍山&quot;</span>,<span class=\"string\">&quot;抚顺&quot;</span>,<span class=\"string\">&quot;本溪&quot;</span>,<span class=\"string\">&quot;丹东&quot;</span>,<span class=\"string\">&quot;锦州&quot;</span>,<span class=\"string\">&quot;营口&quot;</span>,<span class=\"string\">&quot;阜新&quot;</span>,<span class=\"string\">&quot;辽阳&quot;</span>,<span class=\"string\">&quot;盘锦&quot;</span>,<span class=\"string\">&quot;铁岭&quot;</span>,<span class=\"string\">&quot;朝阳&quot;</span>,<span class=\"string\">&quot;葫芦岛&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_0&quot;</span>,[<span class=\"string\">&quot;南关区&quot;</span>,<span class=\"string\">&quot;宽城区&quot;</span>,<span class=\"string\">&quot;朝阳区&quot;</span>,<span class=\"string\">&quot;二道区&quot;</span>,<span class=\"string\">&quot;绿园区&quot;</span>,<span class=\"string\">&quot;双阳区&quot;</span>,<span class=\"string\">&quot;农安县&quot;</span>,<span class=\"string\">&quot;九台区&quot;</span>,<span class=\"string\">&quot;榆树市&quot;</span>,<span class=\"string\">&quot;德惠市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_1&quot;</span>,[<span class=\"string\">&quot;昌邑区&quot;</span>,<span class=\"string\">&quot;龙潭区&quot;</span>,<span class=\"string\">&quot;船营区&quot;</span>,<span class=\"string\">&quot;丰满区&quot;</span>,<span class=\"string\">&quot;永吉县&quot;</span>,<span class=\"string\">&quot;蛟河市&quot;</span>,<span class=\"string\">&quot;桦甸市&quot;</span>,<span class=\"string\">&quot;舒兰市&quot;</span>,<span class=\"string\">&quot;磐石市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_2&quot;</span>,[<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;铁东区&quot;</span>,<span class=\"string\">&quot;梨树县&quot;</span>,<span class=\"string\">&quot;伊通满族自治县&quot;</span>,<span class=\"string\">&quot;公主岭市&quot;</span>,<span class=\"string\">&quot;双辽市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_3&quot;</span>,[<span class=\"string\">&quot;龙山区&quot;</span>,<span class=\"string\">&quot;西安区&quot;</span>,<span class=\"string\">&quot;东丰县&quot;</span>,<span class=\"string\">&quot;东辽县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_4&quot;</span>,[<span class=\"string\">&quot;东昌区&quot;</span>,<span class=\"string\">&quot;二道江区&quot;</span>,<span class=\"string\">&quot;通化县&quot;</span>,<span class=\"string\">&quot;辉南县&quot;</span>,<span class=\"string\">&quot;柳河县&quot;</span>,<span class=\"string\">&quot;梅河口市&quot;</span>,<span class=\"string\">&quot;集安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_5&quot;</span>,[<span class=\"string\">&quot;浑江区&quot;</span>,<span class=\"string\">&quot;江源区&quot;</span>,<span class=\"string\">&quot;抚松县&quot;</span>,<span class=\"string\">&quot;靖宇县&quot;</span>,<span class=\"string\">&quot;长白朝鲜族自治县&quot;</span>,<span class=\"string\">&quot;临江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_6&quot;</span>,[<span class=\"string\">&quot;宁江区&quot;</span>,<span class=\"string\">&quot;前郭尔罗斯蒙古族自治县&quot;</span>,<span class=\"string\">&quot;长岭县&quot;</span>,<span class=\"string\">&quot;乾安县&quot;</span>,<span class=\"string\">&quot;扶余市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_7&quot;</span>,[<span class=\"string\">&quot;洮北区&quot;</span>,<span class=\"string\">&quot;镇赉县&quot;</span>,<span class=\"string\">&quot;通榆县&quot;</span>,<span class=\"string\">&quot;洮南市&quot;</span>,<span class=\"string\">&quot;大安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_8&quot;</span>,[<span class=\"string\">&quot;延吉市&quot;</span>,<span class=\"string\">&quot;图们市&quot;</span>,<span class=\"string\">&quot;敦化市&quot;</span>,<span class=\"string\">&quot;珲春市&quot;</span>,<span class=\"string\">&quot;龙井市&quot;</span>,<span class=\"string\">&quot;和龙市&quot;</span>,<span class=\"string\">&quot;汪清县&quot;</span>,<span class=\"string\">&quot;安图县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6&quot;</span>,[<span class=\"string\">&quot;长春&quot;</span>,<span class=\"string\">&quot;吉林&quot;</span>,<span class=\"string\">&quot;四平&quot;</span>,<span class=\"string\">&quot;辽源&quot;</span>,<span class=\"string\">&quot;通化&quot;</span>,<span class=\"string\">&quot;白山&quot;</span>,<span class=\"string\">&quot;松原&quot;</span>,<span class=\"string\">&quot;白城&quot;</span>,<span class=\"string\">&quot;延边&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_0&quot;</span>,[<span class=\"string\">&quot;道里区&quot;</span>,<span class=\"string\">&quot;南岗区&quot;</span>,<span class=\"string\">&quot;道外区&quot;</span>,<span class=\"string\">&quot;平房区&quot;</span>,<span class=\"string\">&quot;松北区&quot;</span>,<span class=\"string\">&quot;香坊区&quot;</span>,<span class=\"string\">&quot;呼兰区&quot;</span>,<span class=\"string\">&quot;阿城区&quot;</span>,<span class=\"string\">&quot;依兰县&quot;</span>,<span class=\"string\">&quot;方正县&quot;</span>,<span class=\"string\">&quot;宾县&quot;</span>,<span class=\"string\">&quot;巴彦县&quot;</span>,<span class=\"string\">&quot;木兰县&quot;</span>,<span class=\"string\">&quot;通河县&quot;</span>,<span class=\"string\">&quot;延寿县&quot;</span>,<span class=\"string\">&quot;双城区&quot;</span>,<span class=\"string\">&quot;尚志市&quot;</span>,<span class=\"string\">&quot;五常市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_1&quot;</span>,[<span class=\"string\">&quot;龙沙区&quot;</span>,<span class=\"string\">&quot;建华区&quot;</span>,<span class=\"string\">&quot;铁锋区&quot;</span>,<span class=\"string\">&quot;昂昂溪区&quot;</span>,<span class=\"string\">&quot;富拉尔基区&quot;</span>,<span class=\"string\">&quot;碾子山区&quot;</span>,<span class=\"string\">&quot;梅里斯达斡尔族区&quot;</span>,<span class=\"string\">&quot;龙江县&quot;</span>,<span class=\"string\">&quot;依安县&quot;</span>,<span class=\"string\">&quot;泰来县&quot;</span>,<span class=\"string\">&quot;甘南县&quot;</span>,<span class=\"string\">&quot;富裕县&quot;</span>,<span class=\"string\">&quot;克山县&quot;</span>,<span class=\"string\">&quot;克东县&quot;</span>,<span class=\"string\">&quot;拜泉县&quot;</span>,<span class=\"string\">&quot;讷河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_2&quot;</span>,[<span class=\"string\">&quot;鸡冠区&quot;</span>,<span class=\"string\">&quot;恒山区&quot;</span>,<span class=\"string\">&quot;滴道区&quot;</span>,<span class=\"string\">&quot;梨树区&quot;</span>,<span class=\"string\">&quot;城子河区&quot;</span>,<span class=\"string\">&quot;麻山区&quot;</span>,<span class=\"string\">&quot;鸡东县&quot;</span>,<span class=\"string\">&quot;虎林市&quot;</span>,<span class=\"string\">&quot;密山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_3&quot;</span>,[<span class=\"string\">&quot;向阳区&quot;</span>,<span class=\"string\">&quot;工农区&quot;</span>,<span class=\"string\">&quot;南山区&quot;</span>,<span class=\"string\">&quot;兴安区&quot;</span>,<span class=\"string\">&quot;东山区&quot;</span>,<span class=\"string\">&quot;兴山区&quot;</span>,<span class=\"string\">&quot;萝北县&quot;</span>,<span class=\"string\">&quot;绥滨县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_4&quot;</span>,[<span class=\"string\">&quot;尖山区&quot;</span>,<span class=\"string\">&quot;岭东区&quot;</span>,<span class=\"string\">&quot;四方台区&quot;</span>,<span class=\"string\">&quot;宝山区&quot;</span>,<span class=\"string\">&quot;集贤县&quot;</span>,<span class=\"string\">&quot;友谊县&quot;</span>,<span class=\"string\">&quot;宝清县&quot;</span>,<span class=\"string\">&quot;饶河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_5&quot;</span>,[<span class=\"string\">&quot;萨尔图区&quot;</span>,<span class=\"string\">&quot;龙凤区&quot;</span>,<span class=\"string\">&quot;让胡路区&quot;</span>,<span class=\"string\">&quot;红岗区&quot;</span>,<span class=\"string\">&quot;大同区&quot;</span>,<span class=\"string\">&quot;肇州县&quot;</span>,<span class=\"string\">&quot;肇源县&quot;</span>,<span class=\"string\">&quot;林甸县&quot;</span>,<span class=\"string\">&quot;杜尔伯特蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_6&quot;</span>,[<span class=\"string\">&quot;伊春区&quot;</span>,<span class=\"string\">&quot;南岔区&quot;</span>,<span class=\"string\">&quot;友好区&quot;</span>,<span class=\"string\">&quot;西林区&quot;</span>,<span class=\"string\">&quot;翠峦区&quot;</span>,<span class=\"string\">&quot;新青区&quot;</span>,<span class=\"string\">&quot;美溪区&quot;</span>,<span class=\"string\">&quot;金山屯区&quot;</span>,<span class=\"string\">&quot;五营区&quot;</span>,<span class=\"string\">&quot;乌马河区&quot;</span>,<span class=\"string\">&quot;汤旺河区&quot;</span>,<span class=\"string\">&quot;带岭区&quot;</span>,<span class=\"string\">&quot;乌伊岭区&quot;</span>,<span class=\"string\">&quot;红星区&quot;</span>,<span class=\"string\">&quot;上甘岭区&quot;</span>,<span class=\"string\">&quot;嘉荫县&quot;</span>,<span class=\"string\">&quot;铁力市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_7&quot;</span>,[<span class=\"string\">&quot;向阳区&quot;</span>,<span class=\"string\">&quot;前进区&quot;</span>,<span class=\"string\">&quot;东风区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;桦南县&quot;</span>,<span class=\"string\">&quot;桦川县&quot;</span>,<span class=\"string\">&quot;汤原县&quot;</span>,<span class=\"string\">&quot;抚远县&quot;</span>,<span class=\"string\">&quot;同江市&quot;</span>,<span class=\"string\">&quot;富锦市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_8&quot;</span>,[<span class=\"string\">&quot;新兴区&quot;</span>,<span class=\"string\">&quot;桃山区&quot;</span>,<span class=\"string\">&quot;茄子河区&quot;</span>,<span class=\"string\">&quot;勃利县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_9&quot;</span>,[<span class=\"string\">&quot;东安区&quot;</span>,<span class=\"string\">&quot;阳明区&quot;</span>,<span class=\"string\">&quot;爱民区&quot;</span>,<span class=\"string\">&quot;西安区&quot;</span>,<span class=\"string\">&quot;东宁县&quot;</span>,<span class=\"string\">&quot;林口县&quot;</span>,<span class=\"string\">&quot;绥芬河市&quot;</span>,<span class=\"string\">&quot;海林市&quot;</span>,<span class=\"string\">&quot;宁安市&quot;</span>,<span class=\"string\">&quot;穆棱市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_10&quot;</span>,[<span class=\"string\">&quot;爱辉区&quot;</span>,<span class=\"string\">&quot;嫩江县&quot;</span>,<span class=\"string\">&quot;逊克县&quot;</span>,<span class=\"string\">&quot;孙吴县&quot;</span>,<span class=\"string\">&quot;北安市&quot;</span>,<span class=\"string\">&quot;五大连池市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_11&quot;</span>,[<span class=\"string\">&quot;北林区&quot;</span>,<span class=\"string\">&quot;望奎县&quot;</span>,<span class=\"string\">&quot;兰西县&quot;</span>,<span class=\"string\">&quot;青冈县&quot;</span>,<span class=\"string\">&quot;庆安县&quot;</span>,<span class=\"string\">&quot;明水县&quot;</span>,<span class=\"string\">&quot;绥棱县&quot;</span>,<span class=\"string\">&quot;安达市&quot;</span>,<span class=\"string\">&quot;肇东市&quot;</span>,<span class=\"string\">&quot;海伦市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_12&quot;</span>,[<span class=\"string\">&quot;加格达奇区&quot;</span>,<span class=\"string\">&quot;呼玛县&quot;</span>,<span class=\"string\">&quot;塔河县&quot;</span>,<span class=\"string\">&quot;漠河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7&quot;</span>,[<span class=\"string\">&quot;哈尔滨&quot;</span>,<span class=\"string\">&quot;齐齐哈尔&quot;</span>,<span class=\"string\">&quot;鸡西&quot;</span>,<span class=\"string\">&quot;鹤岗&quot;</span>,<span class=\"string\">&quot;双鸭山&quot;</span>,<span class=\"string\">&quot;大庆&quot;</span>,<span class=\"string\">&quot;伊春&quot;</span>,<span class=\"string\">&quot;佳木斯&quot;</span>,<span class=\"string\">&quot;七台河&quot;</span>,<span class=\"string\">&quot;牡丹江&quot;</span>,<span class=\"string\">&quot;黑河&quot;</span>,<span class=\"string\">&quot;绥化&quot;</span>,<span class=\"string\">&quot;大兴安岭&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_8_0&quot;</span>,[<span class=\"string\">&quot;黄浦区&quot;</span>,<span class=\"string\">&quot;徐汇区&quot;</span>,<span class=\"string\">&quot;长宁区&quot;</span>,<span class=\"string\">&quot;静安区&quot;</span>,<span class=\"string\">&quot;普陀区&quot;</span>,<span class=\"string\">&quot;闸北区&quot;</span>,<span class=\"string\">&quot;虹口区&quot;</span>,<span class=\"string\">&quot;杨浦区&quot;</span>,<span class=\"string\">&quot;闵行区&quot;</span>,<span class=\"string\">&quot;宝山区&quot;</span>,<span class=\"string\">&quot;嘉定区&quot;</span>,<span class=\"string\">&quot;浦东新区&quot;</span>,<span class=\"string\">&quot;金山区&quot;</span>,<span class=\"string\">&quot;松江区&quot;</span>,<span class=\"string\">&quot;青浦区&quot;</span>,<span class=\"string\">&quot;奉贤区&quot;</span>,<span class=\"string\">&quot;崇明县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_8&quot;</span>,[<span class=\"string\">&quot;上海&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_0&quot;</span>,[<span class=\"string\">&quot;玄武区&quot;</span>,<span class=\"string\">&quot;秦淮区&quot;</span>,<span class=\"string\">&quot;建邺区&quot;</span>,<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;浦口区&quot;</span>,<span class=\"string\">&quot;栖霞区&quot;</span>,<span class=\"string\">&quot;雨花台区&quot;</span>,<span class=\"string\">&quot;江宁区&quot;</span>,<span class=\"string\">&quot;六合区&quot;</span>,<span class=\"string\">&quot;溧水区&quot;</span>,<span class=\"string\">&quot;高淳区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_1&quot;</span>,[<span class=\"string\">&quot;崇安区&quot;</span>,<span class=\"string\">&quot;南长区&quot;</span>,<span class=\"string\">&quot;北塘区&quot;</span>,<span class=\"string\">&quot;锡山区&quot;</span>,<span class=\"string\">&quot;惠山区&quot;</span>,<span class=\"string\">&quot;滨湖区&quot;</span>,<span class=\"string\">&quot;江阴市&quot;</span>,<span class=\"string\">&quot;宜兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_2&quot;</span>,[<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;云龙区&quot;</span>,<span class=\"string\">&quot;贾汪区&quot;</span>,<span class=\"string\">&quot;泉山区&quot;</span>,<span class=\"string\">&quot;铜山区&quot;</span>,<span class=\"string\">&quot;丰县&quot;</span>,<span class=\"string\">&quot;沛县&quot;</span>,<span class=\"string\">&quot;睢宁县&quot;</span>,<span class=\"string\">&quot;新沂市&quot;</span>,<span class=\"string\">&quot;邳州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_3&quot;</span>,[<span class=\"string\">&quot;天宁区&quot;</span>,<span class=\"string\">&quot;钟楼区&quot;</span>,<span class=\"string\">&quot;戚墅堰区&quot;</span>,<span class=\"string\">&quot;新北区&quot;</span>,<span class=\"string\">&quot;武进区&quot;</span>,<span class=\"string\">&quot;溧阳市&quot;</span>,<span class=\"string\">&quot;金坛市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_4&quot;</span>,[<span class=\"string\">&quot;虎丘区&quot;</span>,<span class=\"string\">&quot;吴中区&quot;</span>,<span class=\"string\">&quot;相城区&quot;</span>,<span class=\"string\">&quot;姑苏区&quot;</span>,<span class=\"string\">&quot;吴江区&quot;</span>,<span class=\"string\">&quot;常熟市&quot;</span>,<span class=\"string\">&quot;张家港市&quot;</span>,<span class=\"string\">&quot;昆山市&quot;</span>,<span class=\"string\">&quot;太仓市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_5&quot;</span>,[<span class=\"string\">&quot;崇川区&quot;</span>,<span class=\"string\">&quot;港闸区&quot;</span>,<span class=\"string\">&quot;通州区&quot;</span>,<span class=\"string\">&quot;海安县&quot;</span>,<span class=\"string\">&quot;如东县&quot;</span>,<span class=\"string\">&quot;启东市&quot;</span>,<span class=\"string\">&quot;如皋市&quot;</span>,<span class=\"string\">&quot;海门市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_6&quot;</span>,[<span class=\"string\">&quot;连云区&quot;</span>,<span class=\"string\">&quot;海州区&quot;</span>,<span class=\"string\">&quot;赣榆区&quot;</span>,<span class=\"string\">&quot;东海县&quot;</span>,<span class=\"string\">&quot;灌云县&quot;</span>,<span class=\"string\">&quot;灌南县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_7&quot;</span>,[<span class=\"string\">&quot;清河区&quot;</span>,<span class=\"string\">&quot;淮安区&quot;</span>,<span class=\"string\">&quot;淮阴区&quot;</span>,<span class=\"string\">&quot;清浦区&quot;</span>,<span class=\"string\">&quot;涟水县&quot;</span>,<span class=\"string\">&quot;洪泽县&quot;</span>,<span class=\"string\">&quot;盱眙县&quot;</span>,<span class=\"string\">&quot;金湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_8&quot;</span>,[<span class=\"string\">&quot;亭湖区&quot;</span>,<span class=\"string\">&quot;盐都区&quot;</span>,<span class=\"string\">&quot;响水县&quot;</span>,<span class=\"string\">&quot;滨海县&quot;</span>,<span class=\"string\">&quot;阜宁县&quot;</span>,<span class=\"string\">&quot;射阳县&quot;</span>,<span class=\"string\">&quot;建湖县&quot;</span>,<span class=\"string\">&quot;东台市&quot;</span>,<span class=\"string\">&quot;大丰市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_9&quot;</span>,[<span class=\"string\">&quot;广陵区&quot;</span>,<span class=\"string\">&quot;邗江区&quot;</span>,<span class=\"string\">&quot;江都区&quot;</span>,<span class=\"string\">&quot;宝应县&quot;</span>,<span class=\"string\">&quot;仪征市&quot;</span>,<span class=\"string\">&quot;高邮市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_10&quot;</span>,[<span class=\"string\">&quot;京口区&quot;</span>,<span class=\"string\">&quot;润州区&quot;</span>,<span class=\"string\">&quot;丹徒区&quot;</span>,<span class=\"string\">&quot;丹阳市&quot;</span>,<span class=\"string\">&quot;扬中市&quot;</span>,<span class=\"string\">&quot;句容市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_11&quot;</span>,[<span class=\"string\">&quot;海陵区&quot;</span>,<span class=\"string\">&quot;高港区&quot;</span>,<span class=\"string\">&quot;姜堰区&quot;</span>,<span class=\"string\">&quot;兴化市&quot;</span>,<span class=\"string\">&quot;靖江市&quot;</span>,<span class=\"string\">&quot;泰兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_12&quot;</span>,[<span class=\"string\">&quot;宿城区&quot;</span>,<span class=\"string\">&quot;宿豫区&quot;</span>,<span class=\"string\">&quot;沭阳县&quot;</span>,<span class=\"string\">&quot;泗阳县&quot;</span>,<span class=\"string\">&quot;泗洪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9&quot;</span>,[<span class=\"string\">&quot;南京&quot;</span>,<span class=\"string\">&quot;无锡&quot;</span>,<span class=\"string\">&quot;徐州&quot;</span>,<span class=\"string\">&quot;常州&quot;</span>,<span class=\"string\">&quot;苏州&quot;</span>,<span class=\"string\">&quot;南通&quot;</span>,<span class=\"string\">&quot;连云港&quot;</span>,<span class=\"string\">&quot;淮安&quot;</span>,<span class=\"string\">&quot;盐城&quot;</span>,<span class=\"string\">&quot;扬州&quot;</span>,<span class=\"string\">&quot;镇江&quot;</span>,<span class=\"string\">&quot;泰州&quot;</span>,<span class=\"string\">&quot;宿迁&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_0&quot;</span>,[<span class=\"string\">&quot;上城区&quot;</span>,<span class=\"string\">&quot;下城区&quot;</span>,<span class=\"string\">&quot;江干区&quot;</span>,<span class=\"string\">&quot;拱墅区&quot;</span>,<span class=\"string\">&quot;西湖区&quot;</span>,<span class=\"string\">&quot;滨江区&quot;</span>,<span class=\"string\">&quot;萧山区&quot;</span>,<span class=\"string\">&quot;余杭区&quot;</span>,<span class=\"string\">&quot;桐庐县&quot;</span>,<span class=\"string\">&quot;淳安县&quot;</span>,<span class=\"string\">&quot;建德市&quot;</span>,<span class=\"string\">&quot;富阳市&quot;</span>,<span class=\"string\">&quot;临安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_1&quot;</span>,[<span class=\"string\">&quot;海曙区&quot;</span>,<span class=\"string\">&quot;江东区&quot;</span>,<span class=\"string\">&quot;江北区&quot;</span>,<span class=\"string\">&quot;北仑区&quot;</span>,<span class=\"string\">&quot;镇海区&quot;</span>,<span class=\"string\">&quot;鄞州区&quot;</span>,<span class=\"string\">&quot;象山县&quot;</span>,<span class=\"string\">&quot;宁海县&quot;</span>,<span class=\"string\">&quot;余姚市&quot;</span>,<span class=\"string\">&quot;慈溪市&quot;</span>,<span class=\"string\">&quot;奉化市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_2&quot;</span>,[<span class=\"string\">&quot;鹿城区&quot;</span>,<span class=\"string\">&quot;龙湾区&quot;</span>,<span class=\"string\">&quot;瓯海区&quot;</span>,<span class=\"string\">&quot;洞头县&quot;</span>,<span class=\"string\">&quot;永嘉县&quot;</span>,<span class=\"string\">&quot;平阳县&quot;</span>,<span class=\"string\">&quot;苍南县&quot;</span>,<span class=\"string\">&quot;文成县&quot;</span>,<span class=\"string\">&quot;泰顺县&quot;</span>,<span class=\"string\">&quot;瑞安市&quot;</span>,<span class=\"string\">&quot;乐清市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_3&quot;</span>,[<span class=\"string\">&quot;南湖区&quot;</span>,<span class=\"string\">&quot;秀洲区&quot;</span>,<span class=\"string\">&quot;嘉善县&quot;</span>,<span class=\"string\">&quot;海盐县&quot;</span>,<span class=\"string\">&quot;海宁市&quot;</span>,<span class=\"string\">&quot;平湖市&quot;</span>,<span class=\"string\">&quot;桐乡市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_4&quot;</span>,[<span class=\"string\">&quot;吴兴区&quot;</span>,<span class=\"string\">&quot;南浔区&quot;</span>,<span class=\"string\">&quot;德清县&quot;</span>,<span class=\"string\">&quot;长兴县&quot;</span>,<span class=\"string\">&quot;安吉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_5&quot;</span>,[<span class=\"string\">&quot;越城区&quot;</span>,<span class=\"string\">&quot;柯桥区&quot;</span>,<span class=\"string\">&quot;新昌县&quot;</span>,<span class=\"string\">&quot;诸暨市&quot;</span>,<span class=\"string\">&quot;上虞区&quot;</span>,<span class=\"string\">&quot;嵊州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_6&quot;</span>,[<span class=\"string\">&quot;婺城区&quot;</span>,<span class=\"string\">&quot;金东区&quot;</span>,<span class=\"string\">&quot;武义县&quot;</span>,<span class=\"string\">&quot;浦江县&quot;</span>,<span class=\"string\">&quot;磐安县&quot;</span>,<span class=\"string\">&quot;兰溪市&quot;</span>,<span class=\"string\">&quot;义乌市&quot;</span>,<span class=\"string\">&quot;东阳市&quot;</span>,<span class=\"string\">&quot;永康市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_7&quot;</span>,[<span class=\"string\">&quot;柯城区&quot;</span>,<span class=\"string\">&quot;衢江区&quot;</span>,<span class=\"string\">&quot;常山县&quot;</span>,<span class=\"string\">&quot;开化县&quot;</span>,<span class=\"string\">&quot;龙游县&quot;</span>,<span class=\"string\">&quot;江山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_8&quot;</span>,[<span class=\"string\">&quot;定海区&quot;</span>,<span class=\"string\">&quot;普陀区&quot;</span>,<span class=\"string\">&quot;岱山县&quot;</span>,<span class=\"string\">&quot;嵊泗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_9&quot;</span>,[<span class=\"string\">&quot;椒江区&quot;</span>,<span class=\"string\">&quot;黄岩区&quot;</span>,<span class=\"string\">&quot;路桥区&quot;</span>,<span class=\"string\">&quot;玉环县&quot;</span>,<span class=\"string\">&quot;三门县&quot;</span>,<span class=\"string\">&quot;天台县&quot;</span>,<span class=\"string\">&quot;仙居县&quot;</span>,<span class=\"string\">&quot;温岭市&quot;</span>,<span class=\"string\">&quot;临海市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_10&quot;</span>,[<span class=\"string\">&quot;莲都区&quot;</span>,<span class=\"string\">&quot;青田县&quot;</span>,<span class=\"string\">&quot;缙云县&quot;</span>,<span class=\"string\">&quot;遂昌县&quot;</span>,<span class=\"string\">&quot;松阳县&quot;</span>,<span class=\"string\">&quot;云和县&quot;</span>,<span class=\"string\">&quot;庆元县&quot;</span>,<span class=\"string\">&quot;景宁畲族自治县&quot;</span>,<span class=\"string\">&quot;龙泉市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10&quot;</span>,[<span class=\"string\">&quot;杭州&quot;</span>,<span class=\"string\">&quot;宁波&quot;</span>,<span class=\"string\">&quot;温州&quot;</span>,<span class=\"string\">&quot;嘉兴&quot;</span>,<span class=\"string\">&quot;湖州&quot;</span>,<span class=\"string\">&quot;绍兴&quot;</span>,<span class=\"string\">&quot;金华&quot;</span>,<span class=\"string\">&quot;衢州&quot;</span>,<span class=\"string\">&quot;舟山&quot;</span>,<span class=\"string\">&quot;台州&quot;</span>,<span class=\"string\">&quot;丽水&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_0&quot;</span>,[<span class=\"string\">&quot;瑶海区&quot;</span>,<span class=\"string\">&quot;庐阳区&quot;</span>,<span class=\"string\">&quot;蜀山区&quot;</span>,<span class=\"string\">&quot;包河区&quot;</span>,<span class=\"string\">&quot;长丰县&quot;</span>,<span class=\"string\">&quot;肥东县&quot;</span>,<span class=\"string\">&quot;肥西县&quot;</span>,<span class=\"string\">&quot;庐江县&quot;</span>,<span class=\"string\">&quot;巢湖市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_1&quot;</span>,[<span class=\"string\">&quot;镜湖区&quot;</span>,<span class=\"string\">&quot;弋江区&quot;</span>,<span class=\"string\">&quot;鸠江区&quot;</span>,<span class=\"string\">&quot;三山区&quot;</span>,<span class=\"string\">&quot;芜湖县&quot;</span>,<span class=\"string\">&quot;繁昌县&quot;</span>,<span class=\"string\">&quot;南陵县&quot;</span>,<span class=\"string\">&quot;无为县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_2&quot;</span>,[<span class=\"string\">&quot;龙子湖区&quot;</span>,<span class=\"string\">&quot;蚌山区&quot;</span>,<span class=\"string\">&quot;禹会区&quot;</span>,<span class=\"string\">&quot;淮上区&quot;</span>,<span class=\"string\">&quot;怀远县&quot;</span>,<span class=\"string\">&quot;五河县&quot;</span>,<span class=\"string\">&quot;固镇县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_3&quot;</span>,[<span class=\"string\">&quot;大通区&quot;</span>,<span class=\"string\">&quot;田家庵区&quot;</span>,<span class=\"string\">&quot;谢家集区&quot;</span>,<span class=\"string\">&quot;八公山区&quot;</span>,<span class=\"string\">&quot;潘集区&quot;</span>,<span class=\"string\">&quot;凤台县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_4&quot;</span>,[<span class=\"string\">&quot;花山区&quot;</span>,<span class=\"string\">&quot;雨山区&quot;</span>,<span class=\"string\">&quot;博望区&quot;</span>,<span class=\"string\">&quot;当涂县&quot;</span>,<span class=\"string\">&quot;含山县&quot;</span>,<span class=\"string\">&quot;和县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_5&quot;</span>,[<span class=\"string\">&quot;杜集区&quot;</span>,<span class=\"string\">&quot;相山区&quot;</span>,<span class=\"string\">&quot;烈山区&quot;</span>,<span class=\"string\">&quot;濉溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_6&quot;</span>,[<span class=\"string\">&quot;铜官山区&quot;</span>,<span class=\"string\">&quot;狮子山区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;铜陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_7&quot;</span>,[<span class=\"string\">&quot;迎江区&quot;</span>,<span class=\"string\">&quot;大观区&quot;</span>,<span class=\"string\">&quot;宜秀区&quot;</span>,<span class=\"string\">&quot;怀宁县&quot;</span>,<span class=\"string\">&quot;枞阳县&quot;</span>,<span class=\"string\">&quot;潜山县&quot;</span>,<span class=\"string\">&quot;太湖县&quot;</span>,<span class=\"string\">&quot;宿松县&quot;</span>,<span class=\"string\">&quot;望江县&quot;</span>,<span class=\"string\">&quot;岳西县&quot;</span>,<span class=\"string\">&quot;桐城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_8&quot;</span>,[<span class=\"string\">&quot;屯溪区&quot;</span>,<span class=\"string\">&quot;黄山区&quot;</span>,<span class=\"string\">&quot;徽州区&quot;</span>,<span class=\"string\">&quot;歙县&quot;</span>,<span class=\"string\">&quot;休宁县&quot;</span>,<span class=\"string\">&quot;黟县&quot;</span>,<span class=\"string\">&quot;祁门县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_9&quot;</span>,[<span class=\"string\">&quot;琅琊区&quot;</span>,<span class=\"string\">&quot;南谯区&quot;</span>,<span class=\"string\">&quot;来安县&quot;</span>,<span class=\"string\">&quot;全椒县&quot;</span>,<span class=\"string\">&quot;定远县&quot;</span>,<span class=\"string\">&quot;凤阳县&quot;</span>,<span class=\"string\">&quot;天长市&quot;</span>,<span class=\"string\">&quot;明光市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_10&quot;</span>,[<span class=\"string\">&quot;颍州区&quot;</span>,<span class=\"string\">&quot;颍东区&quot;</span>,<span class=\"string\">&quot;颍泉区&quot;</span>,<span class=\"string\">&quot;临泉县&quot;</span>,<span class=\"string\">&quot;太和县&quot;</span>,<span class=\"string\">&quot;阜南县&quot;</span>,<span class=\"string\">&quot;颍上县&quot;</span>,<span class=\"string\">&quot;界首市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_11&quot;</span>,[<span class=\"string\">&quot;埇桥区&quot;</span>,<span class=\"string\">&quot;砀山县&quot;</span>,<span class=\"string\">&quot;萧县&quot;</span>,<span class=\"string\">&quot;灵璧县&quot;</span>,<span class=\"string\">&quot;泗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_12&quot;</span>,[<span class=\"string\">&quot;金安区&quot;</span>,<span class=\"string\">&quot;裕安区&quot;</span>,<span class=\"string\">&quot;寿县&quot;</span>,<span class=\"string\">&quot;霍邱县&quot;</span>,<span class=\"string\">&quot;舒城县&quot;</span>,<span class=\"string\">&quot;金寨县&quot;</span>,<span class=\"string\">&quot;霍山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_13&quot;</span>,[<span class=\"string\">&quot;谯城区&quot;</span>,<span class=\"string\">&quot;涡阳县&quot;</span>,<span class=\"string\">&quot;蒙城县&quot;</span>,<span class=\"string\">&quot;利辛县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_14&quot;</span>,[<span class=\"string\">&quot;贵池区&quot;</span>,<span class=\"string\">&quot;东至县&quot;</span>,<span class=\"string\">&quot;石台县&quot;</span>,<span class=\"string\">&quot;青阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_15&quot;</span>,[<span class=\"string\">&quot;宣州区&quot;</span>,<span class=\"string\">&quot;郎溪县&quot;</span>,<span class=\"string\">&quot;广德县&quot;</span>,<span class=\"string\">&quot;泾县&quot;</span>,<span class=\"string\">&quot;绩溪县&quot;</span>,<span class=\"string\">&quot;旌德县&quot;</span>,<span class=\"string\">&quot;宁国市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11&quot;</span>,[<span class=\"string\">&quot;合肥&quot;</span>,<span class=\"string\">&quot;芜湖&quot;</span>,<span class=\"string\">&quot;蚌埠&quot;</span>,<span class=\"string\">&quot;淮南&quot;</span>,<span class=\"string\">&quot;马鞍山&quot;</span>,<span class=\"string\">&quot;淮北&quot;</span>,<span class=\"string\">&quot;铜陵&quot;</span>,<span class=\"string\">&quot;安庆&quot;</span>,<span class=\"string\">&quot;黄山&quot;</span>,<span class=\"string\">&quot;滁州&quot;</span>,<span class=\"string\">&quot;阜阳&quot;</span>,<span class=\"string\">&quot;宿州&quot;</span>,<span class=\"string\">&quot;六安&quot;</span>,<span class=\"string\">&quot;亳州&quot;</span>,<span class=\"string\">&quot;池州&quot;</span>,<span class=\"string\">&quot;宣城&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_0&quot;</span>,[<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;台江区&quot;</span>,<span class=\"string\">&quot;仓山区&quot;</span>,<span class=\"string\">&quot;马尾区&quot;</span>,<span class=\"string\">&quot;晋安区&quot;</span>,<span class=\"string\">&quot;闽侯县&quot;</span>,<span class=\"string\">&quot;连江县&quot;</span>,<span class=\"string\">&quot;罗源县&quot;</span>,<span class=\"string\">&quot;闽清县&quot;</span>,<span class=\"string\">&quot;永泰县&quot;</span>,<span class=\"string\">&quot;平潭县&quot;</span>,<span class=\"string\">&quot;福清市&quot;</span>,<span class=\"string\">&quot;长乐市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_1&quot;</span>,[<span class=\"string\">&quot;思明区&quot;</span>,<span class=\"string\">&quot;海沧区&quot;</span>,<span class=\"string\">&quot;湖里区&quot;</span>,<span class=\"string\">&quot;集美区&quot;</span>,<span class=\"string\">&quot;同安区&quot;</span>,<span class=\"string\">&quot;翔安区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_2&quot;</span>,[<span class=\"string\">&quot;城厢区&quot;</span>,<span class=\"string\">&quot;涵江区&quot;</span>,<span class=\"string\">&quot;荔城区&quot;</span>,<span class=\"string\">&quot;秀屿区&quot;</span>,<span class=\"string\">&quot;仙游县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_3&quot;</span>,[<span class=\"string\">&quot;梅列区&quot;</span>,<span class=\"string\">&quot;三元区&quot;</span>,<span class=\"string\">&quot;明溪县&quot;</span>,<span class=\"string\">&quot;清流县&quot;</span>,<span class=\"string\">&quot;宁化县&quot;</span>,<span class=\"string\">&quot;大田县&quot;</span>,<span class=\"string\">&quot;尤溪县&quot;</span>,<span class=\"string\">&quot;沙县&quot;</span>,<span class=\"string\">&quot;将乐县&quot;</span>,<span class=\"string\">&quot;泰宁县&quot;</span>,<span class=\"string\">&quot;建宁县&quot;</span>,<span class=\"string\">&quot;永安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_4&quot;</span>,[<span class=\"string\">&quot;鲤城区&quot;</span>,<span class=\"string\">&quot;丰泽区&quot;</span>,<span class=\"string\">&quot;洛江区&quot;</span>,<span class=\"string\">&quot;泉港区&quot;</span>,<span class=\"string\">&quot;惠安县&quot;</span>,<span class=\"string\">&quot;安溪县&quot;</span>,<span class=\"string\">&quot;永春县&quot;</span>,<span class=\"string\">&quot;德化县&quot;</span>,<span class=\"string\">&quot;金门县&quot;</span>,<span class=\"string\">&quot;石狮市&quot;</span>,<span class=\"string\">&quot;晋江市&quot;</span>,<span class=\"string\">&quot;南安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_5&quot;</span>,[<span class=\"string\">&quot;芗城区&quot;</span>,<span class=\"string\">&quot;龙文区&quot;</span>,<span class=\"string\">&quot;云霄县&quot;</span>,<span class=\"string\">&quot;漳浦县&quot;</span>,<span class=\"string\">&quot;诏安县&quot;</span>,<span class=\"string\">&quot;长泰县&quot;</span>,<span class=\"string\">&quot;东山县&quot;</span>,<span class=\"string\">&quot;南靖县&quot;</span>,<span class=\"string\">&quot;平和县&quot;</span>,<span class=\"string\">&quot;华安县&quot;</span>,<span class=\"string\">&quot;龙海市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_6&quot;</span>,[<span class=\"string\">&quot;延平区&quot;</span>,<span class=\"string\">&quot;顺昌县&quot;</span>,<span class=\"string\">&quot;浦城县&quot;</span>,<span class=\"string\">&quot;光泽县&quot;</span>,<span class=\"string\">&quot;松溪县&quot;</span>,<span class=\"string\">&quot;政和县&quot;</span>,<span class=\"string\">&quot;邵武市&quot;</span>,<span class=\"string\">&quot;武夷山市&quot;</span>,<span class=\"string\">&quot;建瓯市&quot;</span>,<span class=\"string\">&quot;建阳区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_7&quot;</span>,[<span class=\"string\">&quot;新罗区&quot;</span>,<span class=\"string\">&quot;长汀县&quot;</span>,<span class=\"string\">&quot;永定县&quot;</span>,<span class=\"string\">&quot;上杭县&quot;</span>,<span class=\"string\">&quot;武平县&quot;</span>,<span class=\"string\">&quot;连城县&quot;</span>,<span class=\"string\">&quot;漳平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_8&quot;</span>,[<span class=\"string\">&quot;蕉城区&quot;</span>,<span class=\"string\">&quot;霞浦县&quot;</span>,<span class=\"string\">&quot;古田县&quot;</span>,<span class=\"string\">&quot;屏南县&quot;</span>,<span class=\"string\">&quot;寿宁县&quot;</span>,<span class=\"string\">&quot;周宁县&quot;</span>,<span class=\"string\">&quot;柘荣县&quot;</span>,<span class=\"string\">&quot;福安市&quot;</span>,<span class=\"string\">&quot;福鼎市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12&quot;</span>,[<span class=\"string\">&quot;福州&quot;</span>,<span class=\"string\">&quot;厦门&quot;</span>,<span class=\"string\">&quot;莆田&quot;</span>,<span class=\"string\">&quot;三明&quot;</span>,<span class=\"string\">&quot;泉州&quot;</span>,<span class=\"string\">&quot;漳州&quot;</span>,<span class=\"string\">&quot;南平&quot;</span>,<span class=\"string\">&quot;龙岩&quot;</span>,<span class=\"string\">&quot;宁德&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_0&quot;</span>,[<span class=\"string\">&quot;东湖区&quot;</span>,<span class=\"string\">&quot;西湖区&quot;</span>,<span class=\"string\">&quot;青云谱区&quot;</span>,<span class=\"string\">&quot;湾里区&quot;</span>,<span class=\"string\">&quot;青山湖区&quot;</span>,<span class=\"string\">&quot;南昌县&quot;</span>,<span class=\"string\">&quot;新建县&quot;</span>,<span class=\"string\">&quot;安义县&quot;</span>,<span class=\"string\">&quot;进贤县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_1&quot;</span>,[<span class=\"string\">&quot;昌江区&quot;</span>,<span class=\"string\">&quot;珠山区&quot;</span>,<span class=\"string\">&quot;浮梁县&quot;</span>,<span class=\"string\">&quot;乐平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_2&quot;</span>,[<span class=\"string\">&quot;安源区&quot;</span>,<span class=\"string\">&quot;湘东区&quot;</span>,<span class=\"string\">&quot;莲花县&quot;</span>,<span class=\"string\">&quot;上栗县&quot;</span>,<span class=\"string\">&quot;芦溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_3&quot;</span>,[<span class=\"string\">&quot;庐山区&quot;</span>,<span class=\"string\">&quot;浔阳区&quot;</span>,<span class=\"string\">&quot;九江县&quot;</span>,<span class=\"string\">&quot;武宁县&quot;</span>,<span class=\"string\">&quot;修水县&quot;</span>,<span class=\"string\">&quot;永修县&quot;</span>,<span class=\"string\">&quot;德安县&quot;</span>,<span class=\"string\">&quot;星子县&quot;</span>,<span class=\"string\">&quot;都昌县&quot;</span>,<span class=\"string\">&quot;湖口县&quot;</span>,<span class=\"string\">&quot;彭泽县&quot;</span>,<span class=\"string\">&quot;瑞昌市&quot;</span>,<span class=\"string\">&quot;共青城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_4&quot;</span>,[<span class=\"string\">&quot;渝水区&quot;</span>,<span class=\"string\">&quot;分宜县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_5&quot;</span>,[<span class=\"string\">&quot;月湖区&quot;</span>,<span class=\"string\">&quot;余江县&quot;</span>,<span class=\"string\">&quot;贵溪市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_6&quot;</span>,[<span class=\"string\">&quot;章贡区&quot;</span>,<span class=\"string\">&quot;赣县&quot;</span>,<span class=\"string\">&quot;信丰县&quot;</span>,<span class=\"string\">&quot;大余县&quot;</span>,<span class=\"string\">&quot;上犹县&quot;</span>,<span class=\"string\">&quot;崇义县&quot;</span>,<span class=\"string\">&quot;安远县&quot;</span>,<span class=\"string\">&quot;龙南县&quot;</span>,<span class=\"string\">&quot;定南县&quot;</span>,<span class=\"string\">&quot;全南县&quot;</span>,<span class=\"string\">&quot;宁都县&quot;</span>,<span class=\"string\">&quot;于都县&quot;</span>,<span class=\"string\">&quot;兴国县&quot;</span>,<span class=\"string\">&quot;会昌县&quot;</span>,<span class=\"string\">&quot;寻乌县&quot;</span>,<span class=\"string\">&quot;石城县&quot;</span>,<span class=\"string\">&quot;瑞金市&quot;</span>,<span class=\"string\">&quot;南康区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_7&quot;</span>,[<span class=\"string\">&quot;吉州区&quot;</span>,<span class=\"string\">&quot;青原区&quot;</span>,<span class=\"string\">&quot;吉安县&quot;</span>,<span class=\"string\">&quot;吉水县&quot;</span>,<span class=\"string\">&quot;峡江县&quot;</span>,<span class=\"string\">&quot;新干县&quot;</span>,<span class=\"string\">&quot;永丰县&quot;</span>,<span class=\"string\">&quot;泰和县&quot;</span>,<span class=\"string\">&quot;遂川县&quot;</span>,<span class=\"string\">&quot;万安县&quot;</span>,<span class=\"string\">&quot;安福县&quot;</span>,<span class=\"string\">&quot;永新县&quot;</span>,<span class=\"string\">&quot;井冈山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_8&quot;</span>,[<span class=\"string\">&quot;袁州区&quot;</span>,<span class=\"string\">&quot;奉新县&quot;</span>,<span class=\"string\">&quot;万载县&quot;</span>,<span class=\"string\">&quot;上高县&quot;</span>,<span class=\"string\">&quot;宜丰县&quot;</span>,<span class=\"string\">&quot;靖安县&quot;</span>,<span class=\"string\">&quot;铜鼓县&quot;</span>,<span class=\"string\">&quot;丰城市&quot;</span>,<span class=\"string\">&quot;樟树市&quot;</span>,<span class=\"string\">&quot;高安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_9&quot;</span>,[<span class=\"string\">&quot;临川区&quot;</span>,<span class=\"string\">&quot;南城县&quot;</span>,<span class=\"string\">&quot;黎川县&quot;</span>,<span class=\"string\">&quot;南丰县&quot;</span>,<span class=\"string\">&quot;崇仁县&quot;</span>,<span class=\"string\">&quot;乐安县&quot;</span>,<span class=\"string\">&quot;宜黄县&quot;</span>,<span class=\"string\">&quot;金溪县&quot;</span>,<span class=\"string\">&quot;资溪县&quot;</span>,<span class=\"string\">&quot;东乡县&quot;</span>,<span class=\"string\">&quot;广昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_10&quot;</span>,[<span class=\"string\">&quot;信州区&quot;</span>,<span class=\"string\">&quot;上饶县&quot;</span>,<span class=\"string\">&quot;广丰县&quot;</span>,<span class=\"string\">&quot;玉山县&quot;</span>,<span class=\"string\">&quot;铅山县&quot;</span>,<span class=\"string\">&quot;横峰县&quot;</span>,<span class=\"string\">&quot;弋阳县&quot;</span>,<span class=\"string\">&quot;余干县&quot;</span>,<span class=\"string\">&quot;鄱阳县&quot;</span>,<span class=\"string\">&quot;万年县&quot;</span>,<span class=\"string\">&quot;婺源县&quot;</span>,<span class=\"string\">&quot;德兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13&quot;</span>,[<span class=\"string\">&quot;南昌&quot;</span>,<span class=\"string\">&quot;景德镇&quot;</span>,<span class=\"string\">&quot;萍乡&quot;</span>,<span class=\"string\">&quot;九江&quot;</span>,<span class=\"string\">&quot;新余&quot;</span>,<span class=\"string\">&quot;鹰潭&quot;</span>,<span class=\"string\">&quot;赣州&quot;</span>,<span class=\"string\">&quot;吉安&quot;</span>,<span class=\"string\">&quot;宜春&quot;</span>,<span class=\"string\">&quot;抚州&quot;</span>,<span class=\"string\">&quot;上饶&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_0&quot;</span>,[<span class=\"string\">&quot;历下区&quot;</span>,<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;槐荫区&quot;</span>,<span class=\"string\">&quot;天桥区&quot;</span>,<span class=\"string\">&quot;历城区&quot;</span>,<span class=\"string\">&quot;长清区&quot;</span>,<span class=\"string\">&quot;平阴县&quot;</span>,<span class=\"string\">&quot;济阳县&quot;</span>,<span class=\"string\">&quot;商河县&quot;</span>,<span class=\"string\">&quot;章丘市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_1&quot;</span>,[<span class=\"string\">&quot;市南区&quot;</span>,<span class=\"string\">&quot;市北区&quot;</span>,<span class=\"string\">&quot;黄岛区&quot;</span>,<span class=\"string\">&quot;崂山区&quot;</span>,<span class=\"string\">&quot;李沧区&quot;</span>,<span class=\"string\">&quot;城阳区&quot;</span>,<span class=\"string\">&quot;胶州市&quot;</span>,<span class=\"string\">&quot;即墨市&quot;</span>,<span class=\"string\">&quot;平度市&quot;</span>,<span class=\"string\">&quot;莱西市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_2&quot;</span>,[<span class=\"string\">&quot;淄川区&quot;</span>,<span class=\"string\">&quot;张店区&quot;</span>,<span class=\"string\">&quot;博山区&quot;</span>,<span class=\"string\">&quot;临淄区&quot;</span>,<span class=\"string\">&quot;周村区&quot;</span>,<span class=\"string\">&quot;桓台县&quot;</span>,<span class=\"string\">&quot;高青县&quot;</span>,<span class=\"string\">&quot;沂源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_3&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;薛城区&quot;</span>,<span class=\"string\">&quot;峄城区&quot;</span>,<span class=\"string\">&quot;台儿庄区&quot;</span>,<span class=\"string\">&quot;山亭区&quot;</span>,<span class=\"string\">&quot;滕州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_4&quot;</span>,[<span class=\"string\">&quot;东营区&quot;</span>,<span class=\"string\">&quot;河口区&quot;</span>,<span class=\"string\">&quot;垦利县&quot;</span>,<span class=\"string\">&quot;利津县&quot;</span>,<span class=\"string\">&quot;广饶县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_5&quot;</span>,[<span class=\"string\">&quot;芝罘区&quot;</span>,<span class=\"string\">&quot;福山区&quot;</span>,<span class=\"string\">&quot;牟平区&quot;</span>,<span class=\"string\">&quot;莱山区&quot;</span>,<span class=\"string\">&quot;长岛县&quot;</span>,<span class=\"string\">&quot;龙口市&quot;</span>,<span class=\"string\">&quot;莱阳市&quot;</span>,<span class=\"string\">&quot;莱州市&quot;</span>,<span class=\"string\">&quot;蓬莱市&quot;</span>,<span class=\"string\">&quot;招远市&quot;</span>,<span class=\"string\">&quot;栖霞市&quot;</span>,<span class=\"string\">&quot;海阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_6&quot;</span>,[<span class=\"string\">&quot;潍城区&quot;</span>,<span class=\"string\">&quot;寒亭区&quot;</span>,<span class=\"string\">&quot;坊子区&quot;</span>,<span class=\"string\">&quot;奎文区&quot;</span>,<span class=\"string\">&quot;临朐县&quot;</span>,<span class=\"string\">&quot;昌乐县&quot;</span>,<span class=\"string\">&quot;青州市&quot;</span>,<span class=\"string\">&quot;诸城市&quot;</span>,<span class=\"string\">&quot;寿光市&quot;</span>,<span class=\"string\">&quot;安丘市&quot;</span>,<span class=\"string\">&quot;高密市&quot;</span>,<span class=\"string\">&quot;昌邑市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_7&quot;</span>,[<span class=\"string\">&quot;任城区&quot;</span>,<span class=\"string\">&quot;微山县&quot;</span>,<span class=\"string\">&quot;鱼台县&quot;</span>,<span class=\"string\">&quot;金乡县&quot;</span>,<span class=\"string\">&quot;嘉祥县&quot;</span>,<span class=\"string\">&quot;汶上县&quot;</span>,<span class=\"string\">&quot;泗水县&quot;</span>,<span class=\"string\">&quot;梁山县&quot;</span>,<span class=\"string\">&quot;曲阜市&quot;</span>,<span class=\"string\">&quot;兖州区&quot;</span>,<span class=\"string\">&quot;邹城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_8&quot;</span>,[<span class=\"string\">&quot;泰山区&quot;</span>,<span class=\"string\">&quot;岱岳区&quot;</span>,<span class=\"string\">&quot;宁阳县&quot;</span>,<span class=\"string\">&quot;东平县&quot;</span>,<span class=\"string\">&quot;新泰市&quot;</span>,<span class=\"string\">&quot;肥城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_9&quot;</span>,[<span class=\"string\">&quot;环翠区&quot;</span>,<span class=\"string\">&quot;文登区&quot;</span>,<span class=\"string\">&quot;荣成市&quot;</span>,<span class=\"string\">&quot;乳山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_10&quot;</span>,[<span class=\"string\">&quot;东港区&quot;</span>,<span class=\"string\">&quot;岚山区&quot;</span>,<span class=\"string\">&quot;五莲县&quot;</span>,<span class=\"string\">&quot;莒县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_11&quot;</span>,[<span class=\"string\">&quot;莱城区&quot;</span>,<span class=\"string\">&quot;钢城区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_12&quot;</span>,[<span class=\"string\">&quot;兰山区&quot;</span>,<span class=\"string\">&quot;罗庄区&quot;</span>,<span class=\"string\">&quot;河东区&quot;</span>,<span class=\"string\">&quot;沂南县&quot;</span>,<span class=\"string\">&quot;郯城县&quot;</span>,<span class=\"string\">&quot;沂水县&quot;</span>,<span class=\"string\">&quot;兰陵县&quot;</span>,<span class=\"string\">&quot;费县&quot;</span>,<span class=\"string\">&quot;平邑县&quot;</span>,<span class=\"string\">&quot;莒南县&quot;</span>,<span class=\"string\">&quot;蒙阴县&quot;</span>,<span class=\"string\">&quot;临沭县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_13&quot;</span>,[<span class=\"string\">&quot;德城区&quot;</span>,<span class=\"string\">&quot;陵城区&quot;</span>,<span class=\"string\">&quot;宁津县&quot;</span>,<span class=\"string\">&quot;庆云县&quot;</span>,<span class=\"string\">&quot;临邑县&quot;</span>,<span class=\"string\">&quot;齐河县&quot;</span>,<span class=\"string\">&quot;平原县&quot;</span>,<span class=\"string\">&quot;夏津县&quot;</span>,<span class=\"string\">&quot;武城县&quot;</span>,<span class=\"string\">&quot;乐陵市&quot;</span>,<span class=\"string\">&quot;禹城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_14&quot;</span>,[<span class=\"string\">&quot;东昌府区&quot;</span>,<span class=\"string\">&quot;阳谷县&quot;</span>,<span class=\"string\">&quot;莘县&quot;</span>,<span class=\"string\">&quot;茌平县&quot;</span>,<span class=\"string\">&quot;东阿县&quot;</span>,<span class=\"string\">&quot;冠县&quot;</span>,<span class=\"string\">&quot;高唐县&quot;</span>,<span class=\"string\">&quot;临清市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_15&quot;</span>,[<span class=\"string\">&quot;滨城区&quot;</span>,<span class=\"string\">&quot;惠民县&quot;</span>,<span class=\"string\">&quot;阳信县&quot;</span>,<span class=\"string\">&quot;无棣县&quot;</span>,<span class=\"string\">&quot;沾化区&quot;</span>,<span class=\"string\">&quot;博兴县&quot;</span>,<span class=\"string\">&quot;邹平县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_16&quot;</span>,[<span class=\"string\">&quot;牡丹区&quot;</span>,<span class=\"string\">&quot;曹县&quot;</span>,<span class=\"string\">&quot;单县&quot;</span>,<span class=\"string\">&quot;成武县&quot;</span>,<span class=\"string\">&quot;巨野县&quot;</span>,<span class=\"string\">&quot;郓城县&quot;</span>,<span class=\"string\">&quot;鄄城县&quot;</span>,<span class=\"string\">&quot;定陶县&quot;</span>,<span class=\"string\">&quot;东明县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14&quot;</span>,[<span class=\"string\">&quot;济南&quot;</span>,<span class=\"string\">&quot;青岛&quot;</span>,<span class=\"string\">&quot;淄博&quot;</span>,<span class=\"string\">&quot;枣庄&quot;</span>,<span class=\"string\">&quot;东营&quot;</span>,<span class=\"string\">&quot;烟台&quot;</span>,<span class=\"string\">&quot;潍坊&quot;</span>,<span class=\"string\">&quot;济宁&quot;</span>,<span class=\"string\">&quot;泰安&quot;</span>,<span class=\"string\">&quot;威海&quot;</span>,<span class=\"string\">&quot;日照&quot;</span>,<span class=\"string\">&quot;莱芜&quot;</span>,<span class=\"string\">&quot;临沂&quot;</span>,<span class=\"string\">&quot;德州&quot;</span>,<span class=\"string\">&quot;聊城&quot;</span>,<span class=\"string\">&quot;滨州&quot;</span>,<span class=\"string\">&quot;菏泽&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_0&quot;</span>,[<span class=\"string\">&quot;中原区&quot;</span>,<span class=\"string\">&quot;二七区&quot;</span>,<span class=\"string\">&quot;管城回族区&quot;</span>,<span class=\"string\">&quot;金水区&quot;</span>,<span class=\"string\">&quot;上街区&quot;</span>,<span class=\"string\">&quot;惠济区&quot;</span>,<span class=\"string\">&quot;中牟县&quot;</span>,<span class=\"string\">&quot;巩义市&quot;</span>,<span class=\"string\">&quot;荥阳市&quot;</span>,<span class=\"string\">&quot;新密市&quot;</span>,<span class=\"string\">&quot;新郑市&quot;</span>,<span class=\"string\">&quot;登封市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_1&quot;</span>,[<span class=\"string\">&quot;龙亭区&quot;</span>,<span class=\"string\">&quot;顺河回族区&quot;</span>,<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;禹王台区&quot;</span>,<span class=\"string\">&quot;杞县&quot;</span>,<span class=\"string\">&quot;通许县&quot;</span>,<span class=\"string\">&quot;尉氏县&quot;</span>,<span class=\"string\">&quot;祥符区&quot;</span>,<span class=\"string\">&quot;兰考县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_2&quot;</span>,[<span class=\"string\">&quot;老城区&quot;</span>,<span class=\"string\">&quot;西工区&quot;</span>,<span class=\"string\">&quot;瀍河回族区&quot;</span>,<span class=\"string\">&quot;涧西区&quot;</span>,<span class=\"string\">&quot;吉利区&quot;</span>,<span class=\"string\">&quot;洛龙区&quot;</span>,<span class=\"string\">&quot;孟津县&quot;</span>,<span class=\"string\">&quot;新安县&quot;</span>,<span class=\"string\">&quot;栾川县&quot;</span>,<span class=\"string\">&quot;嵩县&quot;</span>,<span class=\"string\">&quot;汝阳县&quot;</span>,<span class=\"string\">&quot;宜阳县&quot;</span>,<span class=\"string\">&quot;洛宁县&quot;</span>,<span class=\"string\">&quot;伊川县&quot;</span>,<span class=\"string\">&quot;偃师市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_3&quot;</span>,[<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;卫东区&quot;</span>,<span class=\"string\">&quot;石龙区&quot;</span>,<span class=\"string\">&quot;湛河区&quot;</span>,<span class=\"string\">&quot;宝丰县&quot;</span>,<span class=\"string\">&quot;叶县&quot;</span>,<span class=\"string\">&quot;鲁山县&quot;</span>,<span class=\"string\">&quot;郏县&quot;</span>,<span class=\"string\">&quot;舞钢市&quot;</span>,<span class=\"string\">&quot;汝州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_4&quot;</span>,[<span class=\"string\">&quot;文峰区&quot;</span>,<span class=\"string\">&quot;北关区&quot;</span>,<span class=\"string\">&quot;殷都区&quot;</span>,<span class=\"string\">&quot;龙安区&quot;</span>,<span class=\"string\">&quot;安阳县&quot;</span>,<span class=\"string\">&quot;汤阴县&quot;</span>,<span class=\"string\">&quot;滑县&quot;</span>,<span class=\"string\">&quot;内黄县&quot;</span>,<span class=\"string\">&quot;林州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_5&quot;</span>,[<span class=\"string\">&quot;鹤山区&quot;</span>,<span class=\"string\">&quot;山城区&quot;</span>,<span class=\"string\">&quot;淇滨区&quot;</span>,<span class=\"string\">&quot;浚县&quot;</span>,<span class=\"string\">&quot;淇县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_6&quot;</span>,[<span class=\"string\">&quot;红旗区&quot;</span>,<span class=\"string\">&quot;卫滨区&quot;</span>,<span class=\"string\">&quot;凤泉区&quot;</span>,<span class=\"string\">&quot;牧野区&quot;</span>,<span class=\"string\">&quot;新乡县&quot;</span>,<span class=\"string\">&quot;获嘉县&quot;</span>,<span class=\"string\">&quot;原阳县&quot;</span>,<span class=\"string\">&quot;延津县&quot;</span>,<span class=\"string\">&quot;封丘县&quot;</span>,<span class=\"string\">&quot;长垣县&quot;</span>,<span class=\"string\">&quot;卫辉市&quot;</span>,<span class=\"string\">&quot;辉县市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_7&quot;</span>,[<span class=\"string\">&quot;解放区&quot;</span>,<span class=\"string\">&quot;中站区&quot;</span>,<span class=\"string\">&quot;马村区&quot;</span>,<span class=\"string\">&quot;山阳区&quot;</span>,<span class=\"string\">&quot;修武县&quot;</span>,<span class=\"string\">&quot;博爱县&quot;</span>,<span class=\"string\">&quot;武陟县&quot;</span>,<span class=\"string\">&quot;温县&quot;</span>,<span class=\"string\">&quot;沁阳市&quot;</span>,<span class=\"string\">&quot;孟州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_8&quot;</span>,[<span class=\"string\">&quot;华龙区&quot;</span>,<span class=\"string\">&quot;清丰县&quot;</span>,<span class=\"string\">&quot;南乐县&quot;</span>,<span class=\"string\">&quot;范县&quot;</span>,<span class=\"string\">&quot;台前县&quot;</span>,<span class=\"string\">&quot;濮阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_9&quot;</span>,[<span class=\"string\">&quot;魏都区&quot;</span>,<span class=\"string\">&quot;许昌县&quot;</span>,<span class=\"string\">&quot;鄢陵县&quot;</span>,<span class=\"string\">&quot;襄城县&quot;</span>,<span class=\"string\">&quot;禹州市&quot;</span>,<span class=\"string\">&quot;长葛市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_10&quot;</span>,[<span class=\"string\">&quot;源汇区&quot;</span>,<span class=\"string\">&quot;郾城区&quot;</span>,<span class=\"string\">&quot;召陵区&quot;</span>,<span class=\"string\">&quot;舞阳县&quot;</span>,<span class=\"string\">&quot;临颍县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_11&quot;</span>,[<span class=\"string\">&quot;湖滨区&quot;</span>,<span class=\"string\">&quot;渑池县&quot;</span>,<span class=\"string\">&quot;陕县&quot;</span>,<span class=\"string\">&quot;卢氏县&quot;</span>,<span class=\"string\">&quot;义马市&quot;</span>,<span class=\"string\">&quot;灵宝市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_12&quot;</span>,[<span class=\"string\">&quot;宛城区&quot;</span>,<span class=\"string\">&quot;卧龙区&quot;</span>,<span class=\"string\">&quot;南召县&quot;</span>,<span class=\"string\">&quot;方城县&quot;</span>,<span class=\"string\">&quot;西峡县&quot;</span>,<span class=\"string\">&quot;镇平县&quot;</span>,<span class=\"string\">&quot;内乡县&quot;</span>,<span class=\"string\">&quot;淅川县&quot;</span>,<span class=\"string\">&quot;社旗县&quot;</span>,<span class=\"string\">&quot;唐河县&quot;</span>,<span class=\"string\">&quot;新野县&quot;</span>,<span class=\"string\">&quot;桐柏县&quot;</span>,<span class=\"string\">&quot;邓州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_13&quot;</span>,[<span class=\"string\">&quot;梁园区&quot;</span>,<span class=\"string\">&quot;睢阳区&quot;</span>,<span class=\"string\">&quot;民权县&quot;</span>,<span class=\"string\">&quot;睢县&quot;</span>,<span class=\"string\">&quot;宁陵县&quot;</span>,<span class=\"string\">&quot;柘城县&quot;</span>,<span class=\"string\">&quot;虞城县&quot;</span>,<span class=\"string\">&quot;夏邑县&quot;</span>,<span class=\"string\">&quot;永城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_14&quot;</span>,[<span class=\"string\">&quot;浉河区&quot;</span>,<span class=\"string\">&quot;平桥区&quot;</span>,<span class=\"string\">&quot;罗山县&quot;</span>,<span class=\"string\">&quot;光山县&quot;</span>,<span class=\"string\">&quot;新县&quot;</span>,<span class=\"string\">&quot;商城县&quot;</span>,<span class=\"string\">&quot;固始县&quot;</span>,<span class=\"string\">&quot;潢川县&quot;</span>,<span class=\"string\">&quot;淮滨县&quot;</span>,<span class=\"string\">&quot;息县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_15&quot;</span>,[<span class=\"string\">&quot;川汇区&quot;</span>,<span class=\"string\">&quot;扶沟县&quot;</span>,<span class=\"string\">&quot;西华县&quot;</span>,<span class=\"string\">&quot;商水县&quot;</span>,<span class=\"string\">&quot;沈丘县&quot;</span>,<span class=\"string\">&quot;郸城县&quot;</span>,<span class=\"string\">&quot;淮阳县&quot;</span>,<span class=\"string\">&quot;太康县&quot;</span>,<span class=\"string\">&quot;鹿邑县&quot;</span>,<span class=\"string\">&quot;项城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_16&quot;</span>,[<span class=\"string\">&quot;驿城区&quot;</span>,<span class=\"string\">&quot;西平县&quot;</span>,<span class=\"string\">&quot;上蔡县&quot;</span>,<span class=\"string\">&quot;平舆县&quot;</span>,<span class=\"string\">&quot;正阳县&quot;</span>,<span class=\"string\">&quot;确山县&quot;</span>,<span class=\"string\">&quot;泌阳县&quot;</span>,<span class=\"string\">&quot;汝南县&quot;</span>,<span class=\"string\">&quot;遂平县&quot;</span>,<span class=\"string\">&quot;新蔡县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_17&quot;</span>,[<span class=\"string\">&quot;济源&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15&quot;</span>,[<span class=\"string\">&quot;郑州&quot;</span>,<span class=\"string\">&quot;开封&quot;</span>,<span class=\"string\">&quot;洛阳&quot;</span>,<span class=\"string\">&quot;平顶山&quot;</span>,<span class=\"string\">&quot;安阳&quot;</span>,<span class=\"string\">&quot;鹤壁&quot;</span>,<span class=\"string\">&quot;新乡&quot;</span>,<span class=\"string\">&quot;焦作&quot;</span>,<span class=\"string\">&quot;濮阳&quot;</span>,<span class=\"string\">&quot;许昌&quot;</span>,<span class=\"string\">&quot;漯河&quot;</span>,<span class=\"string\">&quot;三门峡&quot;</span>,<span class=\"string\">&quot;南阳&quot;</span>,<span class=\"string\">&quot;商丘&quot;</span>,<span class=\"string\">&quot;信阳&quot;</span>,<span class=\"string\">&quot;周口&quot;</span>,<span class=\"string\">&quot;驻马店&quot;</span>,<span class=\"string\">&quot;济源&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_0&quot;</span>,[<span class=\"string\">&quot;江岸区&quot;</span>,<span class=\"string\">&quot;江汉区&quot;</span>,<span class=\"string\">&quot;硚口区&quot;</span>,<span class=\"string\">&quot;汉阳区&quot;</span>,<span class=\"string\">&quot;武昌区&quot;</span>,<span class=\"string\">&quot;青山区&quot;</span>,<span class=\"string\">&quot;洪山区&quot;</span>,<span class=\"string\">&quot;东西湖区&quot;</span>,<span class=\"string\">&quot;汉南区&quot;</span>,<span class=\"string\">&quot;蔡甸区&quot;</span>,<span class=\"string\">&quot;江夏区&quot;</span>,<span class=\"string\">&quot;黄陂区&quot;</span>,<span class=\"string\">&quot;新洲区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_1&quot;</span>,[<span class=\"string\">&quot;黄石港区&quot;</span>,<span class=\"string\">&quot;西塞山区&quot;</span>,<span class=\"string\">&quot;下陆区&quot;</span>,<span class=\"string\">&quot;铁山区&quot;</span>,<span class=\"string\">&quot;阳新县&quot;</span>,<span class=\"string\">&quot;大冶市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_2&quot;</span>,[<span class=\"string\">&quot;茅箭区&quot;</span>,<span class=\"string\">&quot;张湾区&quot;</span>,<span class=\"string\">&quot;郧阳区&quot;</span>,<span class=\"string\">&quot;郧西县&quot;</span>,<span class=\"string\">&quot;竹山县&quot;</span>,<span class=\"string\">&quot;竹溪县&quot;</span>,<span class=\"string\">&quot;房县&quot;</span>,<span class=\"string\">&quot;丹江口市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_3&quot;</span>,[<span class=\"string\">&quot;西陵区&quot;</span>,<span class=\"string\">&quot;伍家岗区&quot;</span>,<span class=\"string\">&quot;点军区&quot;</span>,<span class=\"string\">&quot;猇亭区&quot;</span>,<span class=\"string\">&quot;夷陵区&quot;</span>,<span class=\"string\">&quot;远安县&quot;</span>,<span class=\"string\">&quot;兴山县&quot;</span>,<span class=\"string\">&quot;秭归县&quot;</span>,<span class=\"string\">&quot;长阳土家族自治县&quot;</span>,<span class=\"string\">&quot;五峰土家族自治县&quot;</span>,<span class=\"string\">&quot;宜都市&quot;</span>,<span class=\"string\">&quot;当阳市&quot;</span>,<span class=\"string\">&quot;枝江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_4&quot;</span>,[<span class=\"string\">&quot;襄城区&quot;</span>,<span class=\"string\">&quot;樊城区&quot;</span>,<span class=\"string\">&quot;襄州区&quot;</span>,<span class=\"string\">&quot;南漳县&quot;</span>,<span class=\"string\">&quot;谷城县&quot;</span>,<span class=\"string\">&quot;保康县&quot;</span>,<span class=\"string\">&quot;老河口市&quot;</span>,<span class=\"string\">&quot;枣阳市&quot;</span>,<span class=\"string\">&quot;宜城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_5&quot;</span>,[<span class=\"string\">&quot;梁子湖区&quot;</span>,<span class=\"string\">&quot;华容区&quot;</span>,<span class=\"string\">&quot;鄂城区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_6&quot;</span>,[<span class=\"string\">&quot;东宝区&quot;</span>,<span class=\"string\">&quot;掇刀区&quot;</span>,<span class=\"string\">&quot;京山县&quot;</span>,<span class=\"string\">&quot;沙洋县&quot;</span>,<span class=\"string\">&quot;钟祥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_7&quot;</span>,[<span class=\"string\">&quot;孝南区&quot;</span>,<span class=\"string\">&quot;孝昌县&quot;</span>,<span class=\"string\">&quot;大悟县&quot;</span>,<span class=\"string\">&quot;云梦县&quot;</span>,<span class=\"string\">&quot;应城市&quot;</span>,<span class=\"string\">&quot;安陆市&quot;</span>,<span class=\"string\">&quot;汉川市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_8&quot;</span>,[<span class=\"string\">&quot;沙市区&quot;</span>,<span class=\"string\">&quot;荆州区&quot;</span>,<span class=\"string\">&quot;公安县&quot;</span>,<span class=\"string\">&quot;监利县&quot;</span>,<span class=\"string\">&quot;江陵县&quot;</span>,<span class=\"string\">&quot;石首市&quot;</span>,<span class=\"string\">&quot;洪湖市&quot;</span>,<span class=\"string\">&quot;松滋市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_9&quot;</span>,[<span class=\"string\">&quot;黄州区&quot;</span>,<span class=\"string\">&quot;团风县&quot;</span>,<span class=\"string\">&quot;红安县&quot;</span>,<span class=\"string\">&quot;罗田县&quot;</span>,<span class=\"string\">&quot;英山县&quot;</span>,<span class=\"string\">&quot;浠水县&quot;</span>,<span class=\"string\">&quot;蕲春县&quot;</span>,<span class=\"string\">&quot;黄梅县&quot;</span>,<span class=\"string\">&quot;麻城市&quot;</span>,<span class=\"string\">&quot;武穴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_10&quot;</span>,[<span class=\"string\">&quot;咸安区&quot;</span>,<span class=\"string\">&quot;嘉鱼县&quot;</span>,<span class=\"string\">&quot;通城县&quot;</span>,<span class=\"string\">&quot;崇阳县&quot;</span>,<span class=\"string\">&quot;通山县&quot;</span>,<span class=\"string\">&quot;赤壁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_11&quot;</span>,[<span class=\"string\">&quot;曾都区&quot;</span>,<span class=\"string\">&quot;随县&quot;</span>,<span class=\"string\">&quot;广水市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_12&quot;</span>,[<span class=\"string\">&quot;恩施市&quot;</span>,<span class=\"string\">&quot;利川市&quot;</span>,<span class=\"string\">&quot;建始县&quot;</span>,<span class=\"string\">&quot;巴东县&quot;</span>,<span class=\"string\">&quot;宣恩县&quot;</span>,<span class=\"string\">&quot;咸丰县&quot;</span>,<span class=\"string\">&quot;来凤县&quot;</span>,<span class=\"string\">&quot;鹤峰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_13&quot;</span>, [<span class=\"string\">&quot;仙桃&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_14&quot;</span>, [<span class=\"string\">&quot;潜江&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_15&quot;</span>, [<span class=\"string\">&quot;天门&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_16&quot;</span>, [<span class=\"string\">&quot;神农架&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16&quot;</span>,[<span class=\"string\">&quot;武汉&quot;</span>,<span class=\"string\">&quot;黄石&quot;</span>,<span class=\"string\">&quot;十堰&quot;</span>,<span class=\"string\">&quot;宜昌&quot;</span>,<span class=\"string\">&quot;襄阳&quot;</span>,<span class=\"string\">&quot;鄂州&quot;</span>,<span class=\"string\">&quot;荆门&quot;</span>,<span class=\"string\">&quot;孝感&quot;</span>,<span class=\"string\">&quot;荆州&quot;</span>,<span class=\"string\">&quot;黄冈&quot;</span>,<span class=\"string\">&quot;咸宁&quot;</span>,<span class=\"string\">&quot;随州&quot;</span>,<span class=\"string\">&quot;恩施&quot;</span>,<span class=\"string\">&quot;仙桃&quot;</span>,<span class=\"string\">&quot;潜江&quot;</span>,<span class=\"string\">&quot;天门&quot;</span>,<span class=\"string\">&quot;神农架&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_0&quot;</span>,[<span class=\"string\">&quot;芙蓉区&quot;</span>,<span class=\"string\">&quot;天心区&quot;</span>,<span class=\"string\">&quot;岳麓区&quot;</span>,<span class=\"string\">&quot;开福区&quot;</span>,<span class=\"string\">&quot;雨花区&quot;</span>,<span class=\"string\">&quot;望城区&quot;</span>,<span class=\"string\">&quot;长沙县&quot;</span>,<span class=\"string\">&quot;宁乡县&quot;</span>,<span class=\"string\">&quot;浏阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_1&quot;</span>,[<span class=\"string\">&quot;荷塘区&quot;</span>,<span class=\"string\">&quot;芦淞区&quot;</span>,<span class=\"string\">&quot;石峰区&quot;</span>,<span class=\"string\">&quot;天元区&quot;</span>,<span class=\"string\">&quot;株洲县&quot;</span>,<span class=\"string\">&quot;攸县&quot;</span>,<span class=\"string\">&quot;茶陵县&quot;</span>,<span class=\"string\">&quot;炎陵县&quot;</span>,<span class=\"string\">&quot;醴陵市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_2&quot;</span>,[<span class=\"string\">&quot;雨湖区&quot;</span>,<span class=\"string\">&quot;岳塘区&quot;</span>,<span class=\"string\">&quot;湘潭县&quot;</span>,<span class=\"string\">&quot;湘乡市&quot;</span>,<span class=\"string\">&quot;韶山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_3&quot;</span>,[<span class=\"string\">&quot;珠晖区&quot;</span>,<span class=\"string\">&quot;雁峰区&quot;</span>,<span class=\"string\">&quot;石鼓区&quot;</span>,<span class=\"string\">&quot;蒸湘区&quot;</span>,<span class=\"string\">&quot;南岳区&quot;</span>,<span class=\"string\">&quot;衡阳县&quot;</span>,<span class=\"string\">&quot;衡南县&quot;</span>,<span class=\"string\">&quot;衡山县&quot;</span>,<span class=\"string\">&quot;衡东县&quot;</span>,<span class=\"string\">&quot;祁东县&quot;</span>,<span class=\"string\">&quot;耒阳市&quot;</span>,<span class=\"string\">&quot;常宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_4&quot;</span>,[<span class=\"string\">&quot;双清区&quot;</span>,<span class=\"string\">&quot;大祥区&quot;</span>,<span class=\"string\">&quot;北塔区&quot;</span>,<span class=\"string\">&quot;邵东县&quot;</span>,<span class=\"string\">&quot;新邵县&quot;</span>,<span class=\"string\">&quot;邵阳县&quot;</span>,<span class=\"string\">&quot;隆回县&quot;</span>,<span class=\"string\">&quot;洞口县&quot;</span>,<span class=\"string\">&quot;绥宁县&quot;</span>,<span class=\"string\">&quot;新宁县&quot;</span>,<span class=\"string\">&quot;城步苗族自治县&quot;</span>,<span class=\"string\">&quot;武冈市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_5&quot;</span>,[<span class=\"string\">&quot;岳阳楼区&quot;</span>,<span class=\"string\">&quot;云溪区&quot;</span>,<span class=\"string\">&quot;君山区&quot;</span>,<span class=\"string\">&quot;岳阳县&quot;</span>,<span class=\"string\">&quot;华容县&quot;</span>,<span class=\"string\">&quot;湘阴县&quot;</span>,<span class=\"string\">&quot;平江县&quot;</span>,<span class=\"string\">&quot;汨罗市&quot;</span>,<span class=\"string\">&quot;临湘市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_6&quot;</span>,[<span class=\"string\">&quot;武陵区&quot;</span>,<span class=\"string\">&quot;鼎城区&quot;</span>,<span class=\"string\">&quot;安乡县&quot;</span>,<span class=\"string\">&quot;汉寿县&quot;</span>,<span class=\"string\">&quot;澧县&quot;</span>,<span class=\"string\">&quot;临澧县&quot;</span>,<span class=\"string\">&quot;桃源县&quot;</span>,<span class=\"string\">&quot;石门县&quot;</span>,<span class=\"string\">&quot;津市市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_7&quot;</span>,[<span class=\"string\">&quot;永定区&quot;</span>,<span class=\"string\">&quot;武陵源区&quot;</span>,<span class=\"string\">&quot;慈利县&quot;</span>,<span class=\"string\">&quot;桑植县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_8&quot;</span>,[<span class=\"string\">&quot;资阳区&quot;</span>,<span class=\"string\">&quot;赫山区&quot;</span>,<span class=\"string\">&quot;南县&quot;</span>,<span class=\"string\">&quot;桃江县&quot;</span>,<span class=\"string\">&quot;安化县&quot;</span>,<span class=\"string\">&quot;沅江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_9&quot;</span>,[<span class=\"string\">&quot;北湖区&quot;</span>,<span class=\"string\">&quot;苏仙区&quot;</span>,<span class=\"string\">&quot;桂阳县&quot;</span>,<span class=\"string\">&quot;宜章县&quot;</span>,<span class=\"string\">&quot;永兴县&quot;</span>,<span class=\"string\">&quot;嘉禾县&quot;</span>,<span class=\"string\">&quot;临武县&quot;</span>,<span class=\"string\">&quot;汝城县&quot;</span>,<span class=\"string\">&quot;桂东县&quot;</span>,<span class=\"string\">&quot;安仁县&quot;</span>,<span class=\"string\">&quot;资兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_10&quot;</span>,[<span class=\"string\">&quot;零陵区&quot;</span>,<span class=\"string\">&quot;冷水滩区&quot;</span>,<span class=\"string\">&quot;祁阳县&quot;</span>,<span class=\"string\">&quot;东安县&quot;</span>,<span class=\"string\">&quot;双牌县&quot;</span>,<span class=\"string\">&quot;道县&quot;</span>,<span class=\"string\">&quot;江永县&quot;</span>,<span class=\"string\">&quot;宁远县&quot;</span>,<span class=\"string\">&quot;蓝山县&quot;</span>,<span class=\"string\">&quot;新田县&quot;</span>,<span class=\"string\">&quot;江华瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_11&quot;</span>,[<span class=\"string\">&quot;鹤城区&quot;</span>,<span class=\"string\">&quot;中方县&quot;</span>,<span class=\"string\">&quot;沅陵县&quot;</span>,<span class=\"string\">&quot;辰溪县&quot;</span>,<span class=\"string\">&quot;溆浦县&quot;</span>,<span class=\"string\">&quot;会同县&quot;</span>,<span class=\"string\">&quot;麻阳苗族自治县&quot;</span>,<span class=\"string\">&quot;新晃侗族自治县&quot;</span>,<span class=\"string\">&quot;芷江侗族自治县&quot;</span>,<span class=\"string\">&quot;靖州苗族侗族自治县&quot;</span>,<span class=\"string\">&quot;通道侗族自治县&quot;</span>,<span class=\"string\">&quot;洪江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_12&quot;</span>,[<span class=\"string\">&quot;娄星区&quot;</span>,<span class=\"string\">&quot;双峰县&quot;</span>,<span class=\"string\">&quot;新化县&quot;</span>,<span class=\"string\">&quot;冷水江市&quot;</span>,<span class=\"string\">&quot;涟源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_13&quot;</span>,[<span class=\"string\">&quot;吉首市&quot;</span>,<span class=\"string\">&quot;泸溪县&quot;</span>,<span class=\"string\">&quot;凤凰县&quot;</span>,<span class=\"string\">&quot;花垣县&quot;</span>,<span class=\"string\">&quot;保靖县&quot;</span>,<span class=\"string\">&quot;古丈县&quot;</span>,<span class=\"string\">&quot;永顺县&quot;</span>,<span class=\"string\">&quot;龙山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17&quot;</span>,[<span class=\"string\">&quot;长沙&quot;</span>,<span class=\"string\">&quot;株洲&quot;</span>,<span class=\"string\">&quot;湘潭&quot;</span>,<span class=\"string\">&quot;衡阳&quot;</span>,<span class=\"string\">&quot;邵阳&quot;</span>,<span class=\"string\">&quot;岳阳&quot;</span>,<span class=\"string\">&quot;常德&quot;</span>,<span class=\"string\">&quot;张家界&quot;</span>,<span class=\"string\">&quot;益阳&quot;</span>,<span class=\"string\">&quot;郴州&quot;</span>,<span class=\"string\">&quot;永州&quot;</span>,<span class=\"string\">&quot;怀化&quot;</span>,<span class=\"string\">&quot;娄底&quot;</span>,<span class=\"string\">&quot;湘西&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_0&quot;</span>,[<span class=\"string\">&quot;荔湾区&quot;</span>,<span class=\"string\">&quot;越秀区&quot;</span>,<span class=\"string\">&quot;海珠区&quot;</span>,<span class=\"string\">&quot;天河区&quot;</span>,<span class=\"string\">&quot;白云区&quot;</span>,<span class=\"string\">&quot;黄埔区&quot;</span>,<span class=\"string\">&quot;番禺区&quot;</span>,<span class=\"string\">&quot;花都区&quot;</span>,<span class=\"string\">&quot;南沙区&quot;</span>,<span class=\"string\">&quot;增城区&quot;</span>,<span class=\"string\">&quot;从化区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_1&quot;</span>,[<span class=\"string\">&quot;武江区&quot;</span>,<span class=\"string\">&quot;浈江区&quot;</span>,<span class=\"string\">&quot;曲江区&quot;</span>,<span class=\"string\">&quot;始兴县&quot;</span>,<span class=\"string\">&quot;仁化县&quot;</span>,<span class=\"string\">&quot;翁源县&quot;</span>,<span class=\"string\">&quot;乳源瑶族自治县&quot;</span>,<span class=\"string\">&quot;新丰县&quot;</span>,<span class=\"string\">&quot;乐昌市&quot;</span>,<span class=\"string\">&quot;南雄市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_2&quot;</span>,[<span class=\"string\">&quot;罗湖区&quot;</span>,<span class=\"string\">&quot;福田区&quot;</span>,<span class=\"string\">&quot;南山区&quot;</span>,<span class=\"string\">&quot;宝安区&quot;</span>,<span class=\"string\">&quot;龙岗区&quot;</span>,<span class=\"string\">&quot;盐田区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_3&quot;</span>,[<span class=\"string\">&quot;香洲区&quot;</span>,<span class=\"string\">&quot;斗门区&quot;</span>,<span class=\"string\">&quot;金湾区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_4&quot;</span>,[<span class=\"string\">&quot;龙湖区&quot;</span>,<span class=\"string\">&quot;金平区&quot;</span>,<span class=\"string\">&quot;濠江区&quot;</span>,<span class=\"string\">&quot;潮阳区&quot;</span>,<span class=\"string\">&quot;潮南区&quot;</span>,<span class=\"string\">&quot;澄海区&quot;</span>,<span class=\"string\">&quot;南澳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_5&quot;</span>,[<span class=\"string\">&quot;禅城区&quot;</span>,<span class=\"string\">&quot;南海区&quot;</span>,<span class=\"string\">&quot;顺德区&quot;</span>,<span class=\"string\">&quot;三水区&quot;</span>,<span class=\"string\">&quot;高明区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_6&quot;</span>,[<span class=\"string\">&quot;蓬江区&quot;</span>,<span class=\"string\">&quot;江海区&quot;</span>,<span class=\"string\">&quot;新会区&quot;</span>,<span class=\"string\">&quot;台山市&quot;</span>,<span class=\"string\">&quot;开平市&quot;</span>,<span class=\"string\">&quot;鹤山市&quot;</span>,<span class=\"string\">&quot;恩平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_7&quot;</span>,[<span class=\"string\">&quot;赤坎区&quot;</span>,<span class=\"string\">&quot;霞山区&quot;</span>,<span class=\"string\">&quot;坡头区&quot;</span>,<span class=\"string\">&quot;麻章区&quot;</span>,<span class=\"string\">&quot;遂溪县&quot;</span>,<span class=\"string\">&quot;徐闻县&quot;</span>,<span class=\"string\">&quot;廉江市&quot;</span>,<span class=\"string\">&quot;雷州市&quot;</span>,<span class=\"string\">&quot;吴川市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_8&quot;</span>,[<span class=\"string\">&quot;茂南区&quot;</span>,<span class=\"string\">&quot;电白区&quot;</span>,<span class=\"string\">&quot;高州市&quot;</span>,<span class=\"string\">&quot;化州市&quot;</span>,<span class=\"string\">&quot;信宜市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_9&quot;</span>,[<span class=\"string\">&quot;端州区&quot;</span>,<span class=\"string\">&quot;鼎湖区&quot;</span>,<span class=\"string\">&quot;广宁县&quot;</span>,<span class=\"string\">&quot;怀集县&quot;</span>,<span class=\"string\">&quot;封开县&quot;</span>,<span class=\"string\">&quot;德庆县&quot;</span>,<span class=\"string\">&quot;高要市&quot;</span>,<span class=\"string\">&quot;四会市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_10&quot;</span>,[<span class=\"string\">&quot;惠城区&quot;</span>,<span class=\"string\">&quot;惠阳区&quot;</span>,<span class=\"string\">&quot;博罗县&quot;</span>,<span class=\"string\">&quot;惠东县&quot;</span>,<span class=\"string\">&quot;龙门县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_11&quot;</span>,[<span class=\"string\">&quot;梅江区&quot;</span>,<span class=\"string\">&quot;梅县区&quot;</span>,<span class=\"string\">&quot;大埔县&quot;</span>,<span class=\"string\">&quot;丰顺县&quot;</span>,<span class=\"string\">&quot;五华县&quot;</span>,<span class=\"string\">&quot;平远县&quot;</span>,<span class=\"string\">&quot;蕉岭县&quot;</span>,<span class=\"string\">&quot;兴宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_12&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;海丰县&quot;</span>,<span class=\"string\">&quot;陆河县&quot;</span>,<span class=\"string\">&quot;陆丰市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_13&quot;</span>,[<span class=\"string\">&quot;源城区&quot;</span>,<span class=\"string\">&quot;紫金县&quot;</span>,<span class=\"string\">&quot;龙川县&quot;</span>,<span class=\"string\">&quot;连平县&quot;</span>,<span class=\"string\">&quot;和平县&quot;</span>,<span class=\"string\">&quot;东源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_14&quot;</span>,[<span class=\"string\">&quot;江城区&quot;</span>,<span class=\"string\">&quot;阳西县&quot;</span>,<span class=\"string\">&quot;阳东区&quot;</span>,<span class=\"string\">&quot;阳春市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_15&quot;</span>,[<span class=\"string\">&quot;清城区&quot;</span>,<span class=\"string\">&quot;清新区&quot;</span>,<span class=\"string\">&quot;佛冈县&quot;</span>,<span class=\"string\">&quot;阳山县&quot;</span>,<span class=\"string\">&quot;连山壮族瑶族自治县&quot;</span>,<span class=\"string\">&quot;连南瑶族自治县&quot;</span>,<span class=\"string\">&quot;英德市&quot;</span>,<span class=\"string\">&quot;连州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_16&quot;</span>,[<span class=\"string\">&quot;东宝路&quot;</span>,<span class=\"string\">&quot;花园新村&quot;</span>,<span class=\"string\">&quot;三元里&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_17&quot;</span>,[<span class=\"string\">&quot;竹苑&quot;</span>,<span class=\"string\">&quot;湖滨北路&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_18&quot;</span>,[<span class=\"string\">&quot;湘桥区&quot;</span>,<span class=\"string\">&quot;潮安区&quot;</span>,<span class=\"string\">&quot;饶平县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_19&quot;</span>,[<span class=\"string\">&quot;榕城区&quot;</span>,<span class=\"string\">&quot;揭东区&quot;</span>,<span class=\"string\">&quot;揭西县&quot;</span>,<span class=\"string\">&quot;惠来县&quot;</span>,<span class=\"string\">&quot;普宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_20&quot;</span>,[<span class=\"string\">&quot;云城区&quot;</span>,<span class=\"string\">&quot;新兴县&quot;</span>,<span class=\"string\">&quot;郁南县&quot;</span>,<span class=\"string\">&quot;云安区&quot;</span>,<span class=\"string\">&quot;罗定市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18&quot;</span>,[<span class=\"string\">&quot;广州&quot;</span>,<span class=\"string\">&quot;韶关&quot;</span>,<span class=\"string\">&quot;深圳&quot;</span>,<span class=\"string\">&quot;珠海&quot;</span>,<span class=\"string\">&quot;汕头&quot;</span>,<span class=\"string\">&quot;佛山&quot;</span>,<span class=\"string\">&quot;江门&quot;</span>,<span class=\"string\">&quot;湛江&quot;</span>,<span class=\"string\">&quot;茂名&quot;</span>,<span class=\"string\">&quot;肇庆&quot;</span>,<span class=\"string\">&quot;惠州&quot;</span>,<span class=\"string\">&quot;梅州&quot;</span>,<span class=\"string\">&quot;汕尾&quot;</span>,<span class=\"string\">&quot;河源&quot;</span>,<span class=\"string\">&quot;阳江&quot;</span>,<span class=\"string\">&quot;清远&quot;</span>,<span class=\"string\">&quot;东莞&quot;</span>,<span class=\"string\">&quot;中山&quot;</span>,<span class=\"string\">&quot;潮州&quot;</span>,<span class=\"string\">&quot;揭阳&quot;</span>,<span class=\"string\">&quot;云浮&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_0&quot;</span>,[<span class=\"string\">&quot;兴宁区&quot;</span>,<span class=\"string\">&quot;青秀区&quot;</span>,<span class=\"string\">&quot;江南区&quot;</span>,<span class=\"string\">&quot;西乡塘区&quot;</span>,<span class=\"string\">&quot;良庆区&quot;</span>,<span class=\"string\">&quot;邕宁区&quot;</span>,<span class=\"string\">&quot;武鸣县&quot;</span>,<span class=\"string\">&quot;隆安县&quot;</span>,<span class=\"string\">&quot;马山县&quot;</span>,<span class=\"string\">&quot;上林县&quot;</span>,<span class=\"string\">&quot;宾阳县&quot;</span>,<span class=\"string\">&quot;横县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_1&quot;</span>,[<span class=\"string\">&quot;城中区&quot;</span>,<span class=\"string\">&quot;鱼峰区&quot;</span>,<span class=\"string\">&quot;柳南区&quot;</span>,<span class=\"string\">&quot;柳北区&quot;</span>,<span class=\"string\">&quot;柳江县&quot;</span>,<span class=\"string\">&quot;柳城县&quot;</span>,<span class=\"string\">&quot;鹿寨县&quot;</span>,<span class=\"string\">&quot;融安县&quot;</span>,<span class=\"string\">&quot;融水苗族自治县&quot;</span>,<span class=\"string\">&quot;三江侗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_2&quot;</span>,[<span class=\"string\">&quot;秀峰区&quot;</span>,<span class=\"string\">&quot;叠彩区&quot;</span>,<span class=\"string\">&quot;象山区&quot;</span>,<span class=\"string\">&quot;七星区&quot;</span>,<span class=\"string\">&quot;雁山区&quot;</span>,<span class=\"string\">&quot;临桂区&quot;</span>,<span class=\"string\">&quot;阳朔县&quot;</span>,<span class=\"string\">&quot;灵川县&quot;</span>,<span class=\"string\">&quot;全州县&quot;</span>,<span class=\"string\">&quot;兴安县&quot;</span>,<span class=\"string\">&quot;永福县&quot;</span>,<span class=\"string\">&quot;灌阳县&quot;</span>,<span class=\"string\">&quot;龙胜各族自治县&quot;</span>,<span class=\"string\">&quot;资源县&quot;</span>,<span class=\"string\">&quot;平乐县&quot;</span>,<span class=\"string\">&quot;荔浦县&quot;</span>,<span class=\"string\">&quot;恭城瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_3&quot;</span>,[<span class=\"string\">&quot;万秀区&quot;</span>,<span class=\"string\">&quot;长洲区&quot;</span>,<span class=\"string\">&quot;龙圩区&quot;</span>,<span class=\"string\">&quot;苍梧县&quot;</span>,<span class=\"string\">&quot;藤县&quot;</span>,<span class=\"string\">&quot;蒙山县&quot;</span>,<span class=\"string\">&quot;岑溪市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_4&quot;</span>,[<span class=\"string\">&quot;海城区&quot;</span>,<span class=\"string\">&quot;银海区&quot;</span>,<span class=\"string\">&quot;铁山港区&quot;</span>,<span class=\"string\">&quot;合浦县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_5&quot;</span>,[<span class=\"string\">&quot;港口区&quot;</span>,<span class=\"string\">&quot;防城区&quot;</span>,<span class=\"string\">&quot;上思县&quot;</span>,<span class=\"string\">&quot;东兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_6&quot;</span>,[<span class=\"string\">&quot;钦南区&quot;</span>,<span class=\"string\">&quot;钦北区&quot;</span>,<span class=\"string\">&quot;灵山县&quot;</span>,<span class=\"string\">&quot;浦北县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_7&quot;</span>,[<span class=\"string\">&quot;港北区&quot;</span>,<span class=\"string\">&quot;港南区&quot;</span>,<span class=\"string\">&quot;覃塘区&quot;</span>,<span class=\"string\">&quot;平南县&quot;</span>,<span class=\"string\">&quot;桂平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_8&quot;</span>,[<span class=\"string\">&quot;玉州区&quot;</span>,<span class=\"string\">&quot;福绵区&quot;</span>,<span class=\"string\">&quot;容县&quot;</span>,<span class=\"string\">&quot;陆川县&quot;</span>,<span class=\"string\">&quot;博白县&quot;</span>,<span class=\"string\">&quot;兴业县&quot;</span>,<span class=\"string\">&quot;北流市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_9&quot;</span>,[<span class=\"string\">&quot;右江区&quot;</span>,<span class=\"string\">&quot;田阳县&quot;</span>,<span class=\"string\">&quot;田东县&quot;</span>,<span class=\"string\">&quot;平果县&quot;</span>,<span class=\"string\">&quot;德保县&quot;</span>,<span class=\"string\">&quot;靖西县&quot;</span>,<span class=\"string\">&quot;那坡县&quot;</span>,<span class=\"string\">&quot;凌云县&quot;</span>,<span class=\"string\">&quot;乐业县&quot;</span>,<span class=\"string\">&quot;田林县&quot;</span>,<span class=\"string\">&quot;西林县&quot;</span>,<span class=\"string\">&quot;隆林各族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_10&quot;</span>,[<span class=\"string\">&quot;八步区&quot;</span>,<span class=\"string\">&quot;昭平县&quot;</span>,<span class=\"string\">&quot;钟山县&quot;</span>,<span class=\"string\">&quot;富川瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_11&quot;</span>,[<span class=\"string\">&quot;金城江区&quot;</span>,<span class=\"string\">&quot;南丹县&quot;</span>,<span class=\"string\">&quot;天峨县&quot;</span>,<span class=\"string\">&quot;凤山县&quot;</span>,<span class=\"string\">&quot;东兰县&quot;</span>,<span class=\"string\">&quot;罗城仫佬族自治县&quot;</span>,<span class=\"string\">&quot;环江毛南族自治县&quot;</span>,<span class=\"string\">&quot;巴马瑶族自治县&quot;</span>,<span class=\"string\">&quot;都安瑶族自治县&quot;</span>,<span class=\"string\">&quot;大化瑶族自治县&quot;</span>,<span class=\"string\">&quot;宜州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_12&quot;</span>,[<span class=\"string\">&quot;兴宾区&quot;</span>,<span class=\"string\">&quot;忻城县&quot;</span>,<span class=\"string\">&quot;象州县&quot;</span>,<span class=\"string\">&quot;武宣县&quot;</span>,<span class=\"string\">&quot;金秀瑶族自治县&quot;</span>,<span class=\"string\">&quot;合山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_13&quot;</span>,[<span class=\"string\">&quot;江州区&quot;</span>,<span class=\"string\">&quot;扶绥县&quot;</span>,<span class=\"string\">&quot;宁明县&quot;</span>,<span class=\"string\">&quot;龙州县&quot;</span>,<span class=\"string\">&quot;大新县&quot;</span>,<span class=\"string\">&quot;天等县&quot;</span>,<span class=\"string\">&quot;凭祥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19&quot;</span>,[<span class=\"string\">&quot;南宁&quot;</span>,<span class=\"string\">&quot;柳州&quot;</span>,<span class=\"string\">&quot;桂林&quot;</span>,<span class=\"string\">&quot;梧州&quot;</span>,<span class=\"string\">&quot;北海&quot;</span>,<span class=\"string\">&quot;防城港&quot;</span>,<span class=\"string\">&quot;钦州&quot;</span>,<span class=\"string\">&quot;贵港&quot;</span>,<span class=\"string\">&quot;玉林&quot;</span>,<span class=\"string\">&quot;百色&quot;</span>,<span class=\"string\">&quot;贺州&quot;</span>,<span class=\"string\">&quot;河池&quot;</span>,<span class=\"string\">&quot;来宾&quot;</span>,<span class=\"string\">&quot;崇左&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_0&quot;</span>,[<span class=\"string\">&quot;秀英区&quot;</span>,<span class=\"string\">&quot;龙华区&quot;</span>,<span class=\"string\">&quot;琼山区&quot;</span>,<span class=\"string\">&quot;美兰区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_1&quot;</span>,[<span class=\"string\">&quot;海棠区&quot;</span>,<span class=\"string\">&quot;吉阳区&quot;</span>,<span class=\"string\">&quot;天涯区&quot;</span>,<span class=\"string\">&quot;崖州区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_2&quot;</span>,[<span class=\"string\">&quot;西沙群岛&quot;</span>,<span class=\"string\">&quot;南沙群岛&quot;</span>,<span class=\"string\">&quot;中沙群岛的岛礁及其海域&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_3&quot;</span>,[<span class=\"string\">&quot;五指山&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_4&quot;</span>,[<span class=\"string\">&quot;琼海&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_5&quot;</span>,[<span class=\"string\">&quot;儋州&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_6&quot;</span>,[<span class=\"string\">&quot;文昌&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_7&quot;</span>,[<span class=\"string\">&quot;万宁&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_8&quot;</span>,[<span class=\"string\">&quot;东方&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_9&quot;</span>,[<span class=\"string\">&quot;定安县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_10&quot;</span>,[<span class=\"string\">&quot;屯昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_11&quot;</span>,[<span class=\"string\">&quot;澄迈县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_12&quot;</span>,[<span class=\"string\">&quot;临高县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_13&quot;</span>,[<span class=\"string\">&quot;白沙黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_14&quot;</span>,[<span class=\"string\">&quot;昌江黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_15&quot;</span>,[<span class=\"string\">&quot;乐东黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_16&quot;</span>,[<span class=\"string\">&quot;陵水黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_17&quot;</span>,[<span class=\"string\">&quot;保亭黎族苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_18&quot;</span>,[<span class=\"string\">&quot;琼中黎族苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20&quot;</span>,[<span class=\"string\">&quot;海口&quot;</span>,<span class=\"string\">&quot;三亚&quot;</span>,<span class=\"string\">&quot;三沙&quot;</span>,<span class=\"string\">&quot;五指山&quot;</span>,<span class=\"string\">&quot;琼海&quot;</span>,<span class=\"string\">&quot;儋州&quot;</span>,<span class=\"string\">&quot;文昌&quot;</span>,<span class=\"string\">&quot;万宁&quot;</span>,<span class=\"string\">&quot;东方&quot;</span>,<span class=\"string\">&quot;定安县&quot;</span>,<span class=\"string\">&quot;屯昌县&quot;</span>,<span class=\"string\">&quot;澄迈县&quot;</span>,<span class=\"string\">&quot;临高县&quot;</span>,<span class=\"string\">&quot;白沙&quot;</span>,<span class=\"string\">&quot;昌江&quot;</span>,<span class=\"string\">&quot;乐东&quot;</span>,<span class=\"string\">&quot;陵水&quot;</span>,<span class=\"string\">&quot;保亭&quot;</span>,<span class=\"string\">&quot;琼中&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_21_0&quot;</span>,[<span class=\"string\">&quot;万州区&quot;</span>,<span class=\"string\">&quot;涪陵区&quot;</span>,<span class=\"string\">&quot;渝中区&quot;</span>,<span class=\"string\">&quot;大渡口区&quot;</span>,<span class=\"string\">&quot;江北区&quot;</span>,<span class=\"string\">&quot;沙坪坝区&quot;</span>,<span class=\"string\">&quot;九龙坡区&quot;</span>,<span class=\"string\">&quot;南岸区&quot;</span>,<span class=\"string\">&quot;北碚区&quot;</span>,<span class=\"string\">&quot;綦江区&quot;</span>,<span class=\"string\">&quot;大足区&quot;</span>,<span class=\"string\">&quot;渝北区&quot;</span>,<span class=\"string\">&quot;巴南区&quot;</span>,<span class=\"string\">&quot;黔江区&quot;</span>,<span class=\"string\">&quot;长寿区&quot;</span>,<span class=\"string\">&quot;江津区&quot;</span>,<span class=\"string\">&quot;合川区&quot;</span>,<span class=\"string\">&quot;永川区&quot;</span>,<span class=\"string\">&quot;南川区&quot;</span>,<span class=\"string\">&quot;潼南县&quot;</span>,<span class=\"string\">&quot;铜梁区&quot;</span>,<span class=\"string\">&quot;荣昌县&quot;</span>,<span class=\"string\">&quot;璧山区&quot;</span>,<span class=\"string\">&quot;梁平县&quot;</span>,<span class=\"string\">&quot;城口县&quot;</span>,<span class=\"string\">&quot;丰都县&quot;</span>,<span class=\"string\">&quot;垫江县&quot;</span>,<span class=\"string\">&quot;武隆县&quot;</span>,<span class=\"string\">&quot;忠县&quot;</span>,<span class=\"string\">&quot;开县&quot;</span>,<span class=\"string\">&quot;云阳县&quot;</span>,<span class=\"string\">&quot;奉节县&quot;</span>,<span class=\"string\">&quot;巫山县&quot;</span>,<span class=\"string\">&quot;巫溪县&quot;</span>,<span class=\"string\">&quot;石柱土家族自治县&quot;</span>,<span class=\"string\">&quot;秀山土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;酉阳土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;彭水苗族土家族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_21&quot;</span>,[<span class=\"string\">&quot;重庆&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_0&quot;</span>,[<span class=\"string\">&quot;锦江区&quot;</span>,<span class=\"string\">&quot;青羊区&quot;</span>,<span class=\"string\">&quot;金牛区&quot;</span>,<span class=\"string\">&quot;武侯区&quot;</span>,<span class=\"string\">&quot;成华区&quot;</span>,<span class=\"string\">&quot;龙泉驿区&quot;</span>,<span class=\"string\">&quot;青白江区&quot;</span>,<span class=\"string\">&quot;新都区&quot;</span>,<span class=\"string\">&quot;温江区&quot;</span>,<span class=\"string\">&quot;金堂县&quot;</span>,<span class=\"string\">&quot;双流县&quot;</span>,<span class=\"string\">&quot;郫县&quot;</span>,<span class=\"string\">&quot;大邑县&quot;</span>,<span class=\"string\">&quot;蒲江县&quot;</span>,<span class=\"string\">&quot;新津县&quot;</span>,<span class=\"string\">&quot;都江堰市&quot;</span>,<span class=\"string\">&quot;彭州市&quot;</span>,<span class=\"string\">&quot;邛崃市&quot;</span>,<span class=\"string\">&quot;崇州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_1&quot;</span>,[<span class=\"string\">&quot;自流井区&quot;</span>,<span class=\"string\">&quot;贡井区&quot;</span>,<span class=\"string\">&quot;大安区&quot;</span>,<span class=\"string\">&quot;沿滩区&quot;</span>,<span class=\"string\">&quot;荣县&quot;</span>,<span class=\"string\">&quot;富顺县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_2&quot;</span>,[<span class=\"string\">&quot;东区&quot;</span>,<span class=\"string\">&quot;西区&quot;</span>,<span class=\"string\">&quot;仁和区&quot;</span>,<span class=\"string\">&quot;米易县&quot;</span>,<span class=\"string\">&quot;盐边县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_3&quot;</span>,[<span class=\"string\">&quot;江阳区&quot;</span>,<span class=\"string\">&quot;纳溪区&quot;</span>,<span class=\"string\">&quot;龙马潭区&quot;</span>,<span class=\"string\">&quot;泸县&quot;</span>,<span class=\"string\">&quot;合江县&quot;</span>,<span class=\"string\">&quot;叙永县&quot;</span>,<span class=\"string\">&quot;古蔺县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_4&quot;</span>,[<span class=\"string\">&quot;旌阳区&quot;</span>,<span class=\"string\">&quot;中江县&quot;</span>,<span class=\"string\">&quot;罗江县&quot;</span>,<span class=\"string\">&quot;广汉市&quot;</span>,<span class=\"string\">&quot;什邡市&quot;</span>,<span class=\"string\">&quot;绵竹市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_5&quot;</span>,[<span class=\"string\">&quot;涪城区&quot;</span>,<span class=\"string\">&quot;游仙区&quot;</span>,<span class=\"string\">&quot;三台县&quot;</span>,<span class=\"string\">&quot;盐亭县&quot;</span>,<span class=\"string\">&quot;安县&quot;</span>,<span class=\"string\">&quot;梓潼县&quot;</span>,<span class=\"string\">&quot;北川羌族自治县&quot;</span>,<span class=\"string\">&quot;平武县&quot;</span>,<span class=\"string\">&quot;江油市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_6&quot;</span>,[<span class=\"string\">&quot;利州区&quot;</span>,<span class=\"string\">&quot;昭化区&quot;</span>,<span class=\"string\">&quot;朝天区&quot;</span>,<span class=\"string\">&quot;旺苍县&quot;</span>,<span class=\"string\">&quot;青川县&quot;</span>,<span class=\"string\">&quot;剑阁县&quot;</span>,<span class=\"string\">&quot;苍溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_7&quot;</span>,[<span class=\"string\">&quot;船山区&quot;</span>,<span class=\"string\">&quot;安居区&quot;</span>,<span class=\"string\">&quot;蓬溪县&quot;</span>,<span class=\"string\">&quot;射洪县&quot;</span>,<span class=\"string\">&quot;大英县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_8&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;东兴区&quot;</span>,<span class=\"string\">&quot;威远县&quot;</span>,<span class=\"string\">&quot;资中县&quot;</span>,<span class=\"string\">&quot;隆昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_9&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;沙湾区&quot;</span>,<span class=\"string\">&quot;五通桥区&quot;</span>,<span class=\"string\">&quot;金口河区&quot;</span>,<span class=\"string\">&quot;犍为县&quot;</span>,<span class=\"string\">&quot;井研县&quot;</span>,<span class=\"string\">&quot;夹江县&quot;</span>,<span class=\"string\">&quot;沐川县&quot;</span>,<span class=\"string\">&quot;峨边彝族自治县&quot;</span>,<span class=\"string\">&quot;马边彝族自治县&quot;</span>,<span class=\"string\">&quot;峨眉山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_10&quot;</span>,[<span class=\"string\">&quot;顺庆区&quot;</span>,<span class=\"string\">&quot;高坪区&quot;</span>,<span class=\"string\">&quot;嘉陵区&quot;</span>,<span class=\"string\">&quot;南部县&quot;</span>,<span class=\"string\">&quot;营山县&quot;</span>,<span class=\"string\">&quot;蓬安县&quot;</span>,<span class=\"string\">&quot;仪陇县&quot;</span>,<span class=\"string\">&quot;西充县&quot;</span>,<span class=\"string\">&quot;阆中市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_11&quot;</span>,[<span class=\"string\">&quot;东坡区&quot;</span>,<span class=\"string\">&quot;仁寿县&quot;</span>,<span class=\"string\">&quot;彭山区&quot;</span>,<span class=\"string\">&quot;洪雅县&quot;</span>,<span class=\"string\">&quot;丹棱县&quot;</span>,<span class=\"string\">&quot;青神县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_12&quot;</span>,[<span class=\"string\">&quot;翠屏区&quot;</span>,<span class=\"string\">&quot;南溪区&quot;</span>,<span class=\"string\">&quot;宜宾县&quot;</span>,<span class=\"string\">&quot;江安县&quot;</span>,<span class=\"string\">&quot;长宁县&quot;</span>,<span class=\"string\">&quot;高县&quot;</span>,<span class=\"string\">&quot;珙县&quot;</span>,<span class=\"string\">&quot;筠连县&quot;</span>,<span class=\"string\">&quot;兴文县&quot;</span>,<span class=\"string\">&quot;屏山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_13&quot;</span>,[<span class=\"string\">&quot;广安区&quot;</span>,<span class=\"string\">&quot;前锋区&quot;</span>,<span class=\"string\">&quot;岳池县&quot;</span>,<span class=\"string\">&quot;武胜县&quot;</span>,<span class=\"string\">&quot;邻水县&quot;</span>,<span class=\"string\">&quot;华蓥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_14&quot;</span>,[<span class=\"string\">&quot;通川区&quot;</span>,<span class=\"string\">&quot;达川区&quot;</span>,<span class=\"string\">&quot;宣汉县&quot;</span>,<span class=\"string\">&quot;开江县&quot;</span>,<span class=\"string\">&quot;大竹县&quot;</span>,<span class=\"string\">&quot;渠县&quot;</span>,<span class=\"string\">&quot;万源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_15&quot;</span>,[<span class=\"string\">&quot;雨城区&quot;</span>,<span class=\"string\">&quot;名山区&quot;</span>,<span class=\"string\">&quot;荥经县&quot;</span>,<span class=\"string\">&quot;汉源县&quot;</span>,<span class=\"string\">&quot;石棉县&quot;</span>,<span class=\"string\">&quot;天全县&quot;</span>,<span class=\"string\">&quot;芦山县&quot;</span>,<span class=\"string\">&quot;宝兴县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_16&quot;</span>,[<span class=\"string\">&quot;巴州区&quot;</span>,<span class=\"string\">&quot;恩阳区&quot;</span>,<span class=\"string\">&quot;通江县&quot;</span>,<span class=\"string\">&quot;南江县&quot;</span>,<span class=\"string\">&quot;平昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_17&quot;</span>,[<span class=\"string\">&quot;雁江区&quot;</span>,<span class=\"string\">&quot;安岳县&quot;</span>,<span class=\"string\">&quot;乐至县&quot;</span>,<span class=\"string\">&quot;简阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_18&quot;</span>,[<span class=\"string\">&quot;汶川县&quot;</span>,<span class=\"string\">&quot;理县&quot;</span>,<span class=\"string\">&quot;茂县&quot;</span>,<span class=\"string\">&quot;松潘县&quot;</span>,<span class=\"string\">&quot;九寨沟县&quot;</span>,<span class=\"string\">&quot;金川县&quot;</span>,<span class=\"string\">&quot;小金县&quot;</span>,<span class=\"string\">&quot;黑水县&quot;</span>,<span class=\"string\">&quot;马尔康县&quot;</span>,<span class=\"string\">&quot;壤塘县&quot;</span>,<span class=\"string\">&quot;阿坝县&quot;</span>,<span class=\"string\">&quot;若尔盖县&quot;</span>,<span class=\"string\">&quot;红原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_19&quot;</span>,[<span class=\"string\">&quot;康定县&quot;</span>,<span class=\"string\">&quot;泸定县&quot;</span>,<span class=\"string\">&quot;丹巴县&quot;</span>,<span class=\"string\">&quot;九龙县&quot;</span>,<span class=\"string\">&quot;雅江县&quot;</span>,<span class=\"string\">&quot;道孚县&quot;</span>,<span class=\"string\">&quot;炉霍县&quot;</span>,<span class=\"string\">&quot;甘孜县&quot;</span>,<span class=\"string\">&quot;新龙县&quot;</span>,<span class=\"string\">&quot;德格县&quot;</span>,<span class=\"string\">&quot;白玉县&quot;</span>,<span class=\"string\">&quot;石渠县&quot;</span>,<span class=\"string\">&quot;色达县&quot;</span>,<span class=\"string\">&quot;理塘县&quot;</span>,<span class=\"string\">&quot;巴塘县&quot;</span>,<span class=\"string\">&quot;乡城县&quot;</span>,<span class=\"string\">&quot;稻城县&quot;</span>,<span class=\"string\">&quot;得荣县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_20&quot;</span>,[<span class=\"string\">&quot;西昌市&quot;</span>,<span class=\"string\">&quot;木里藏族自治县&quot;</span>,<span class=\"string\">&quot;盐源县&quot;</span>,<span class=\"string\">&quot;德昌县&quot;</span>,<span class=\"string\">&quot;会理县&quot;</span>,<span class=\"string\">&quot;会东县&quot;</span>,<span class=\"string\">&quot;宁南县&quot;</span>,<span class=\"string\">&quot;普格县&quot;</span>,<span class=\"string\">&quot;布拖县&quot;</span>,<span class=\"string\">&quot;金阳县&quot;</span>,<span class=\"string\">&quot;昭觉县&quot;</span>,<span class=\"string\">&quot;喜德县&quot;</span>,<span class=\"string\">&quot;冕宁县&quot;</span>,<span class=\"string\">&quot;越西县&quot;</span>,<span class=\"string\">&quot;甘洛县&quot;</span>,<span class=\"string\">&quot;美姑县&quot;</span>,<span class=\"string\">&quot;雷波县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22&quot;</span>,[<span class=\"string\">&quot;成都&quot;</span>,<span class=\"string\">&quot;自贡&quot;</span>,<span class=\"string\">&quot;攀枝花&quot;</span>,<span class=\"string\">&quot;泸州&quot;</span>,<span class=\"string\">&quot;德阳&quot;</span>,<span class=\"string\">&quot;绵阳&quot;</span>,<span class=\"string\">&quot;广元&quot;</span>,<span class=\"string\">&quot;遂宁&quot;</span>,<span class=\"string\">&quot;内江&quot;</span>,<span class=\"string\">&quot;乐山&quot;</span>,<span class=\"string\">&quot;南充&quot;</span>,<span class=\"string\">&quot;眉山&quot;</span>,<span class=\"string\">&quot;宜宾&quot;</span>,<span class=\"string\">&quot;广安&quot;</span>,<span class=\"string\">&quot;达州&quot;</span>,<span class=\"string\">&quot;雅安&quot;</span>,<span class=\"string\">&quot;巴中&quot;</span>,<span class=\"string\">&quot;资阳&quot;</span>,<span class=\"string\">&quot;阿坝&quot;</span>,<span class=\"string\">&quot;甘孜&quot;</span>,<span class=\"string\">&quot;凉山&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_0&quot;</span>,[<span class=\"string\">&quot;南明区&quot;</span>,<span class=\"string\">&quot;云岩区&quot;</span>,<span class=\"string\">&quot;花溪区&quot;</span>,<span class=\"string\">&quot;乌当区&quot;</span>,<span class=\"string\">&quot;白云区&quot;</span>,<span class=\"string\">&quot;观山湖区&quot;</span>,<span class=\"string\">&quot;开阳县&quot;</span>,<span class=\"string\">&quot;息烽县&quot;</span>,<span class=\"string\">&quot;修文县&quot;</span>,<span class=\"string\">&quot;清镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_1&quot;</span>,[<span class=\"string\">&quot;钟山区&quot;</span>,<span class=\"string\">&quot;六枝特区&quot;</span>,<span class=\"string\">&quot;水城县&quot;</span>,<span class=\"string\">&quot;盘县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_2&quot;</span>,[<span class=\"string\">&quot;红花岗区&quot;</span>,<span class=\"string\">&quot;汇川区&quot;</span>,<span class=\"string\">&quot;遵义县&quot;</span>,<span class=\"string\">&quot;桐梓县&quot;</span>,<span class=\"string\">&quot;绥阳县&quot;</span>,<span class=\"string\">&quot;正安县&quot;</span>,<span class=\"string\">&quot;道真仡佬族苗族自治县&quot;</span>,<span class=\"string\">&quot;务川仡佬族苗族自治县&quot;</span>,<span class=\"string\">&quot;凤冈县&quot;</span>,<span class=\"string\">&quot;湄潭县&quot;</span>,<span class=\"string\">&quot;余庆县&quot;</span>,<span class=\"string\">&quot;习水县&quot;</span>,<span class=\"string\">&quot;赤水市&quot;</span>,<span class=\"string\">&quot;仁怀市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_3&quot;</span>,[<span class=\"string\">&quot;西秀区&quot;</span>,<span class=\"string\">&quot;平坝县&quot;</span>,<span class=\"string\">&quot;普定县&quot;</span>,<span class=\"string\">&quot;镇宁布依族苗族自治县&quot;</span>,<span class=\"string\">&quot;关岭布依族苗族自治县&quot;</span>,<span class=\"string\">&quot;紫云苗族布依族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_4&quot;</span>,[<span class=\"string\">&quot;七星关区&quot;</span>,<span class=\"string\">&quot;大方县&quot;</span>,<span class=\"string\">&quot;黔西县&quot;</span>,<span class=\"string\">&quot;金沙县&quot;</span>,<span class=\"string\">&quot;织金县&quot;</span>,<span class=\"string\">&quot;纳雍县&quot;</span>,<span class=\"string\">&quot;威宁彝族回族苗族自治县&quot;</span>,<span class=\"string\">&quot;赫章县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_5&quot;</span>,[<span class=\"string\">&quot;碧江区&quot;</span>,<span class=\"string\">&quot;万山区&quot;</span>,<span class=\"string\">&quot;江口县&quot;</span>,<span class=\"string\">&quot;玉屏侗族自治县&quot;</span>,<span class=\"string\">&quot;石阡县&quot;</span>,<span class=\"string\">&quot;思南县&quot;</span>,<span class=\"string\">&quot;印江土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;德江县&quot;</span>,<span class=\"string\">&quot;沿河土家族自治县&quot;</span>,<span class=\"string\">&quot;松桃苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_6&quot;</span>,[<span class=\"string\">&quot;兴义市&quot;</span>,<span class=\"string\">&quot;兴仁县&quot;</span>,<span class=\"string\">&quot;普安县&quot;</span>,<span class=\"string\">&quot;晴隆县&quot;</span>,<span class=\"string\">&quot;贞丰县&quot;</span>,<span class=\"string\">&quot;望谟县&quot;</span>,<span class=\"string\">&quot;册亨县&quot;</span>,<span class=\"string\">&quot;安龙县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_7&quot;</span>,[<span class=\"string\">&quot;凯里市&quot;</span>,<span class=\"string\">&quot;黄平县&quot;</span>,<span class=\"string\">&quot;施秉县&quot;</span>,<span class=\"string\">&quot;三穗县&quot;</span>,<span class=\"string\">&quot;镇远县&quot;</span>,<span class=\"string\">&quot;岑巩县&quot;</span>,<span class=\"string\">&quot;天柱县&quot;</span>,<span class=\"string\">&quot;锦屏县&quot;</span>,<span class=\"string\">&quot;剑河县&quot;</span>,<span class=\"string\">&quot;台江县&quot;</span>,<span class=\"string\">&quot;黎平县&quot;</span>,<span class=\"string\">&quot;榕江县&quot;</span>,<span class=\"string\">&quot;从江县&quot;</span>,<span class=\"string\">&quot;雷山县&quot;</span>,<span class=\"string\">&quot;麻江县&quot;</span>,<span class=\"string\">&quot;丹寨县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_8&quot;</span>,[<span class=\"string\">&quot;都匀市&quot;</span>,<span class=\"string\">&quot;福泉市&quot;</span>,<span class=\"string\">&quot;荔波县&quot;</span>,<span class=\"string\">&quot;贵定县&quot;</span>,<span class=\"string\">&quot;瓮安县&quot;</span>,<span class=\"string\">&quot;独山县&quot;</span>,<span class=\"string\">&quot;平塘县&quot;</span>,<span class=\"string\">&quot;罗甸县&quot;</span>,<span class=\"string\">&quot;长顺县&quot;</span>,<span class=\"string\">&quot;龙里县&quot;</span>,<span class=\"string\">&quot;惠水县&quot;</span>,<span class=\"string\">&quot;三都水族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23&quot;</span>,[<span class=\"string\">&quot;贵阳&quot;</span>,<span class=\"string\">&quot;六盘水&quot;</span>,<span class=\"string\">&quot;遵义&quot;</span>,<span class=\"string\">&quot;安顺&quot;</span>,<span class=\"string\">&quot;毕节&quot;</span>,<span class=\"string\">&quot;铜仁&quot;</span>,<span class=\"string\">&quot;黔西南&quot;</span>,<span class=\"string\">&quot;黔东南&quot;</span>,<span class=\"string\">&quot;黔南&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_0&quot;</span>,[<span class=\"string\">&quot;五华区&quot;</span>,<span class=\"string\">&quot;盘龙区&quot;</span>,<span class=\"string\">&quot;官渡区&quot;</span>,<span class=\"string\">&quot;西山区&quot;</span>,<span class=\"string\">&quot;东川区&quot;</span>,<span class=\"string\">&quot;呈贡区&quot;</span>,<span class=\"string\">&quot;晋宁县&quot;</span>,<span class=\"string\">&quot;富民县&quot;</span>,<span class=\"string\">&quot;宜良县&quot;</span>,<span class=\"string\">&quot;石林彝族自治县&quot;</span>,<span class=\"string\">&quot;嵩明县&quot;</span>,<span class=\"string\">&quot;禄劝彝族苗族自治县&quot;</span>,<span class=\"string\">&quot;寻甸回族彝族自治县&quot;</span>,<span class=\"string\">&quot;安宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_1&quot;</span>,[<span class=\"string\">&quot;麒麟区&quot;</span>,<span class=\"string\">&quot;马龙县&quot;</span>,<span class=\"string\">&quot;陆良县&quot;</span>,<span class=\"string\">&quot;师宗县&quot;</span>,<span class=\"string\">&quot;罗平县&quot;</span>,<span class=\"string\">&quot;富源县&quot;</span>,<span class=\"string\">&quot;会泽县&quot;</span>,<span class=\"string\">&quot;沾益县&quot;</span>,<span class=\"string\">&quot;宣威市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_2&quot;</span>,[<span class=\"string\">&quot;红塔区&quot;</span>,<span class=\"string\">&quot;江川县&quot;</span>,<span class=\"string\">&quot;澄江县&quot;</span>,<span class=\"string\">&quot;通海县&quot;</span>,<span class=\"string\">&quot;华宁县&quot;</span>,<span class=\"string\">&quot;易门县&quot;</span>,<span class=\"string\">&quot;峨山彝族自治县&quot;</span>,<span class=\"string\">&quot;新平彝族傣族自治县&quot;</span>,<span class=\"string\">&quot;元江哈尼族彝族傣族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_3&quot;</span>,[<span class=\"string\">&quot;隆阳区&quot;</span>,<span class=\"string\">&quot;施甸县&quot;</span>,<span class=\"string\">&quot;腾冲县&quot;</span>,<span class=\"string\">&quot;龙陵县&quot;</span>,<span class=\"string\">&quot;昌宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_4&quot;</span>,[<span class=\"string\">&quot;昭阳区&quot;</span>,<span class=\"string\">&quot;鲁甸县&quot;</span>,<span class=\"string\">&quot;巧家县&quot;</span>,<span class=\"string\">&quot;盐津县&quot;</span>,<span class=\"string\">&quot;大关县&quot;</span>,<span class=\"string\">&quot;永善县&quot;</span>,<span class=\"string\">&quot;绥江县&quot;</span>,<span class=\"string\">&quot;镇雄县&quot;</span>,<span class=\"string\">&quot;彝良县&quot;</span>,<span class=\"string\">&quot;威信县&quot;</span>,<span class=\"string\">&quot;水富县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_5&quot;</span>,[<span class=\"string\">&quot;古城区&quot;</span>,<span class=\"string\">&quot;玉龙纳西族自治县&quot;</span>,<span class=\"string\">&quot;永胜县&quot;</span>,<span class=\"string\">&quot;华坪县&quot;</span>,<span class=\"string\">&quot;宁蒗彝族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_6&quot;</span>,[<span class=\"string\">&quot;思茅区&quot;</span>,<span class=\"string\">&quot;宁洱哈尼族彝族自治县&quot;</span>,<span class=\"string\">&quot;墨江哈尼族自治县&quot;</span>,<span class=\"string\">&quot;景东彝族自治县&quot;</span>,<span class=\"string\">&quot;景谷傣族彝族自治县&quot;</span>,<span class=\"string\">&quot;镇沅彝族哈尼族拉祜族自治县&quot;</span>,<span class=\"string\">&quot;江城哈尼族彝族自治县&quot;</span>,<span class=\"string\">&quot;孟连傣族拉祜族佤族自治县&quot;</span>,<span class=\"string\">&quot;澜沧拉祜族自治县&quot;</span>,<span class=\"string\">&quot;西盟佤族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_7&quot;</span>,[<span class=\"string\">&quot;临翔区&quot;</span>,<span class=\"string\">&quot;凤庆县&quot;</span>,<span class=\"string\">&quot;云县&quot;</span>,<span class=\"string\">&quot;永德县&quot;</span>,<span class=\"string\">&quot;镇康县&quot;</span>,<span class=\"string\">&quot;双江拉祜族佤族布朗族傣族自治县&quot;</span>,<span class=\"string\">&quot;耿马傣族佤族自治县&quot;</span>,<span class=\"string\">&quot;沧源佤族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_8&quot;</span>,[<span class=\"string\">&quot;楚雄市&quot;</span>,<span class=\"string\">&quot;双柏县&quot;</span>,<span class=\"string\">&quot;牟定县&quot;</span>,<span class=\"string\">&quot;南华县&quot;</span>,<span class=\"string\">&quot;姚安县&quot;</span>,<span class=\"string\">&quot;大姚县&quot;</span>,<span class=\"string\">&quot;永仁县&quot;</span>,<span class=\"string\">&quot;元谋县&quot;</span>,<span class=\"string\">&quot;武定县&quot;</span>,<span class=\"string\">&quot;禄丰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_9&quot;</span>,[<span class=\"string\">&quot;个旧市&quot;</span>,<span class=\"string\">&quot;开远市&quot;</span>,<span class=\"string\">&quot;蒙自市&quot;</span>,<span class=\"string\">&quot;弥勒市&quot;</span>,<span class=\"string\">&quot;屏边苗族自治县&quot;</span>,<span class=\"string\">&quot;建水县&quot;</span>,<span class=\"string\">&quot;石屏县&quot;</span>,<span class=\"string\">&quot;泸西县&quot;</span>,<span class=\"string\">&quot;元阳县&quot;</span>,<span class=\"string\">&quot;红河县&quot;</span>,<span class=\"string\">&quot;金平苗族瑶族傣族自治县&quot;</span>,<span class=\"string\">&quot;绿春县&quot;</span>,<span class=\"string\">&quot;河口瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_10&quot;</span>,[<span class=\"string\">&quot;文山市&quot;</span>,<span class=\"string\">&quot;砚山县&quot;</span>,<span class=\"string\">&quot;西畴县&quot;</span>,<span class=\"string\">&quot;麻栗坡县&quot;</span>,<span class=\"string\">&quot;马关县&quot;</span>,<span class=\"string\">&quot;丘北县&quot;</span>,<span class=\"string\">&quot;广南县&quot;</span>,<span class=\"string\">&quot;富宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_11&quot;</span>,[<span class=\"string\">&quot;景洪市&quot;</span>,<span class=\"string\">&quot;勐海县&quot;</span>,<span class=\"string\">&quot;勐腊县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_12&quot;</span>,[<span class=\"string\">&quot;大理市&quot;</span>,<span class=\"string\">&quot;漾濞彝族自治县&quot;</span>,<span class=\"string\">&quot;祥云县&quot;</span>,<span class=\"string\">&quot;宾川县&quot;</span>,<span class=\"string\">&quot;弥渡县&quot;</span>,<span class=\"string\">&quot;南涧彝族自治县&quot;</span>,<span class=\"string\">&quot;巍山彝族回族自治县&quot;</span>,<span class=\"string\">&quot;永平县&quot;</span>,<span class=\"string\">&quot;云龙县&quot;</span>,<span class=\"string\">&quot;洱源县&quot;</span>,<span class=\"string\">&quot;剑川县&quot;</span>,<span class=\"string\">&quot;鹤庆县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_13&quot;</span>,[<span class=\"string\">&quot;瑞丽市&quot;</span>,<span class=\"string\">&quot;芒市&quot;</span>,<span class=\"string\">&quot;梁河县&quot;</span>,<span class=\"string\">&quot;盈江县&quot;</span>,<span class=\"string\">&quot;陇川县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_14&quot;</span>,[<span class=\"string\">&quot;泸水县&quot;</span>,<span class=\"string\">&quot;福贡县&quot;</span>,<span class=\"string\">&quot;贡山独龙族怒族自治县&quot;</span>,<span class=\"string\">&quot;兰坪白族普米族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_15&quot;</span>,[<span class=\"string\">&quot;香格里拉县&quot;</span>,<span class=\"string\">&quot;德钦县&quot;</span>,<span class=\"string\">&quot;维西傈僳族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24&quot;</span>,[<span class=\"string\">&quot;昆明&quot;</span>,<span class=\"string\">&quot;曲靖&quot;</span>,<span class=\"string\">&quot;玉溪&quot;</span>,<span class=\"string\">&quot;保山&quot;</span>,<span class=\"string\">&quot;昭通&quot;</span>,<span class=\"string\">&quot;丽江&quot;</span>,<span class=\"string\">&quot;普洱&quot;</span>,<span class=\"string\">&quot;临沧&quot;</span>,<span class=\"string\">&quot;楚雄&quot;</span>,<span class=\"string\">&quot;红河&quot;</span>,<span class=\"string\">&quot;文山&quot;</span>,<span class=\"string\">&quot;西双版纳&quot;</span>,<span class=\"string\">&quot;大理&quot;</span>,<span class=\"string\">&quot;德宏&quot;</span>,<span class=\"string\">&quot;怒江&quot;</span>,<span class=\"string\">&quot;迪庆&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_0&quot;</span>,[<span class=\"string\">&quot;城关区&quot;</span>,<span class=\"string\">&quot;林周县&quot;</span>,<span class=\"string\">&quot;当雄县&quot;</span>,<span class=\"string\">&quot;尼木县&quot;</span>,<span class=\"string\">&quot;曲水县&quot;</span>,<span class=\"string\">&quot;堆龙德庆县&quot;</span>,<span class=\"string\">&quot;达孜县&quot;</span>,<span class=\"string\">&quot;墨竹工卡县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_1&quot;</span>,[<span class=\"string\">&quot;卡若区&quot;</span>,<span class=\"string\">&quot;江达县&quot;</span>,<span class=\"string\">&quot;贡觉县&quot;</span>,<span class=\"string\">&quot;类乌齐县&quot;</span>,<span class=\"string\">&quot;丁青县&quot;</span>,<span class=\"string\">&quot;察雅县&quot;</span>,<span class=\"string\">&quot;八宿县&quot;</span>,<span class=\"string\">&quot;左贡县&quot;</span>,<span class=\"string\">&quot;芒康县&quot;</span>,<span class=\"string\">&quot;洛隆县&quot;</span>,<span class=\"string\">&quot;边坝县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_2&quot;</span>,[<span class=\"string\">&quot;乃东县&quot;</span>,<span class=\"string\">&quot;扎囊县&quot;</span>,<span class=\"string\">&quot;贡嘎县&quot;</span>,<span class=\"string\">&quot;桑日县&quot;</span>,<span class=\"string\">&quot;琼结县&quot;</span>,<span class=\"string\">&quot;曲松县&quot;</span>,<span class=\"string\">&quot;措美县&quot;</span>,<span class=\"string\">&quot;洛扎县&quot;</span>,<span class=\"string\">&quot;加查县&quot;</span>,<span class=\"string\">&quot;隆子县&quot;</span>,<span class=\"string\">&quot;错那县&quot;</span>,<span class=\"string\">&quot;浪卡子县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_3&quot;</span>,[<span class=\"string\">&quot;桑珠孜区&quot;</span>,<span class=\"string\">&quot;南木林县&quot;</span>,<span class=\"string\">&quot;江孜县&quot;</span>,<span class=\"string\">&quot;定日县&quot;</span>,<span class=\"string\">&quot;萨迦县&quot;</span>,<span class=\"string\">&quot;拉孜县&quot;</span>,<span class=\"string\">&quot;昂仁县&quot;</span>,<span class=\"string\">&quot;谢通门县&quot;</span>,<span class=\"string\">&quot;白朗县&quot;</span>,<span class=\"string\">&quot;仁布县&quot;</span>,<span class=\"string\">&quot;康马县&quot;</span>,<span class=\"string\">&quot;定结县&quot;</span>,<span class=\"string\">&quot;仲巴县&quot;</span>,<span class=\"string\">&quot;亚东县&quot;</span>,<span class=\"string\">&quot;吉隆县&quot;</span>,<span class=\"string\">&quot;聂拉木县&quot;</span>,<span class=\"string\">&quot;萨嘎县&quot;</span>,<span class=\"string\">&quot;岗巴县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_4&quot;</span>,[<span class=\"string\">&quot;那曲县&quot;</span>,<span class=\"string\">&quot;嘉黎县&quot;</span>,<span class=\"string\">&quot;比如县&quot;</span>,<span class=\"string\">&quot;聂荣县&quot;</span>,<span class=\"string\">&quot;安多县&quot;</span>,<span class=\"string\">&quot;申扎县&quot;</span>,<span class=\"string\">&quot;索县&quot;</span>,<span class=\"string\">&quot;班戈县&quot;</span>,<span class=\"string\">&quot;巴青县&quot;</span>,<span class=\"string\">&quot;尼玛县&quot;</span>,<span class=\"string\">&quot;双湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_5&quot;</span>,[<span class=\"string\">&quot;普兰县&quot;</span>,<span class=\"string\">&quot;札达县&quot;</span>,<span class=\"string\">&quot;噶尔县&quot;</span>,<span class=\"string\">&quot;日土县&quot;</span>,<span class=\"string\">&quot;革吉县&quot;</span>,<span class=\"string\">&quot;改则县&quot;</span>,<span class=\"string\">&quot;措勤县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_6&quot;</span>,[<span class=\"string\">&quot;林芝县&quot;</span>,<span class=\"string\">&quot;工布江达县&quot;</span>,<span class=\"string\">&quot;米林县&quot;</span>,<span class=\"string\">&quot;墨脱县&quot;</span>,<span class=\"string\">&quot;波密县&quot;</span>,<span class=\"string\">&quot;察隅县&quot;</span>,<span class=\"string\">&quot;朗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25&quot;</span>,[<span class=\"string\">&quot;拉萨&quot;</span>,<span class=\"string\">&quot;昌都&quot;</span>,<span class=\"string\">&quot;山南&quot;</span>,<span class=\"string\">&quot;日喀则&quot;</span>,<span class=\"string\">&quot;那曲&quot;</span>,<span class=\"string\">&quot;阿里&quot;</span>,<span class=\"string\">&quot;林芝&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_0&quot;</span>,[<span class=\"string\">&quot;新城区&quot;</span>,<span class=\"string\">&quot;碑林区&quot;</span>,<span class=\"string\">&quot;莲湖区&quot;</span>,<span class=\"string\">&quot;灞桥区&quot;</span>,<span class=\"string\">&quot;未央区&quot;</span>,<span class=\"string\">&quot;雁塔区&quot;</span>,<span class=\"string\">&quot;阎良区&quot;</span>,<span class=\"string\">&quot;临潼区&quot;</span>,<span class=\"string\">&quot;长安区&quot;</span>,<span class=\"string\">&quot;蓝田县&quot;</span>,<span class=\"string\">&quot;周至县&quot;</span>,<span class=\"string\">&quot;户县&quot;</span>,<span class=\"string\">&quot;高陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_1&quot;</span>,[<span class=\"string\">&quot;王益区&quot;</span>,<span class=\"string\">&quot;印台区&quot;</span>,<span class=\"string\">&quot;耀州区&quot;</span>,<span class=\"string\">&quot;宜君县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_2&quot;</span>,[<span class=\"string\">&quot;渭滨区&quot;</span>,<span class=\"string\">&quot;金台区&quot;</span>,<span class=\"string\">&quot;陈仓区&quot;</span>,<span class=\"string\">&quot;凤翔县&quot;</span>,<span class=\"string\">&quot;岐山县&quot;</span>,<span class=\"string\">&quot;扶风县&quot;</span>,<span class=\"string\">&quot;眉县&quot;</span>,<span class=\"string\">&quot;陇县&quot;</span>,<span class=\"string\">&quot;千阳县&quot;</span>,<span class=\"string\">&quot;麟游县&quot;</span>,<span class=\"string\">&quot;凤县&quot;</span>,<span class=\"string\">&quot;太白县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_3&quot;</span>,[<span class=\"string\">&quot;秦都区&quot;</span>,<span class=\"string\">&quot;杨陵区&quot;</span>,<span class=\"string\">&quot;渭城区&quot;</span>,<span class=\"string\">&quot;三原县&quot;</span>,<span class=\"string\">&quot;泾阳县&quot;</span>,<span class=\"string\">&quot;乾县&quot;</span>,<span class=\"string\">&quot;礼泉县&quot;</span>,<span class=\"string\">&quot;永寿县&quot;</span>,<span class=\"string\">&quot;彬县&quot;</span>,<span class=\"string\">&quot;长武县&quot;</span>,<span class=\"string\">&quot;旬邑县&quot;</span>,<span class=\"string\">&quot;淳化县&quot;</span>,<span class=\"string\">&quot;武功县&quot;</span>,<span class=\"string\">&quot;兴平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_4&quot;</span>,[<span class=\"string\">&quot;临渭区&quot;</span>,<span class=\"string\">&quot;华县&quot;</span>,<span class=\"string\">&quot;潼关县&quot;</span>,<span class=\"string\">&quot;大荔县&quot;</span>,<span class=\"string\">&quot;合阳县&quot;</span>,<span class=\"string\">&quot;澄城县&quot;</span>,<span class=\"string\">&quot;蒲城县&quot;</span>,<span class=\"string\">&quot;白水县&quot;</span>,<span class=\"string\">&quot;富平县&quot;</span>,<span class=\"string\">&quot;韩城市&quot;</span>,<span class=\"string\">&quot;华阴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_5&quot;</span>,[<span class=\"string\">&quot;宝塔区&quot;</span>,<span class=\"string\">&quot;延长县&quot;</span>,<span class=\"string\">&quot;延川县&quot;</span>,<span class=\"string\">&quot;子长县&quot;</span>,<span class=\"string\">&quot;安塞县&quot;</span>,<span class=\"string\">&quot;志丹县&quot;</span>,<span class=\"string\">&quot;吴起县&quot;</span>,<span class=\"string\">&quot;甘泉县&quot;</span>,<span class=\"string\">&quot;富县&quot;</span>,<span class=\"string\">&quot;洛川县&quot;</span>,<span class=\"string\">&quot;宜川县&quot;</span>,<span class=\"string\">&quot;黄龙县&quot;</span>,<span class=\"string\">&quot;黄陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_6&quot;</span>,[<span class=\"string\">&quot;汉台区&quot;</span>,<span class=\"string\">&quot;南郑县&quot;</span>,<span class=\"string\">&quot;城固县&quot;</span>,<span class=\"string\">&quot;洋县&quot;</span>,<span class=\"string\">&quot;西乡县&quot;</span>,<span class=\"string\">&quot;勉县&quot;</span>,<span class=\"string\">&quot;宁强县&quot;</span>,<span class=\"string\">&quot;略阳县&quot;</span>,<span class=\"string\">&quot;镇巴县&quot;</span>,<span class=\"string\">&quot;留坝县&quot;</span>,<span class=\"string\">&quot;佛坪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_7&quot;</span>,[<span class=\"string\">&quot;榆阳区&quot;</span>,<span class=\"string\">&quot;神木县&quot;</span>,<span class=\"string\">&quot;府谷县&quot;</span>,<span class=\"string\">&quot;横山县&quot;</span>,<span class=\"string\">&quot;靖边县&quot;</span>,<span class=\"string\">&quot;定边县&quot;</span>,<span class=\"string\">&quot;绥德县&quot;</span>,<span class=\"string\">&quot;米脂县&quot;</span>,<span class=\"string\">&quot;佳县&quot;</span>,<span class=\"string\">&quot;吴堡县&quot;</span>,<span class=\"string\">&quot;清涧县&quot;</span>,<span class=\"string\">&quot;子洲县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_8&quot;</span>,[<span class=\"string\">&quot;汉滨区&quot;</span>,<span class=\"string\">&quot;汉阴县&quot;</span>,<span class=\"string\">&quot;石泉县&quot;</span>,<span class=\"string\">&quot;宁陕县&quot;</span>,<span class=\"string\">&quot;紫阳县&quot;</span>,<span class=\"string\">&quot;岚皋县&quot;</span>,<span class=\"string\">&quot;平利县&quot;</span>,<span class=\"string\">&quot;镇坪县&quot;</span>,<span class=\"string\">&quot;旬阳县&quot;</span>,<span class=\"string\">&quot;白河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_9&quot;</span>,[<span class=\"string\">&quot;商州区&quot;</span>,<span class=\"string\">&quot;洛南县&quot;</span>,<span class=\"string\">&quot;丹凤县&quot;</span>,<span class=\"string\">&quot;商南县&quot;</span>,<span class=\"string\">&quot;山阳县&quot;</span>,<span class=\"string\">&quot;镇安县&quot;</span>,<span class=\"string\">&quot;柞水县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26&quot;</span>,[<span class=\"string\">&quot;西安&quot;</span>,<span class=\"string\">&quot;铜川&quot;</span>,<span class=\"string\">&quot;宝鸡&quot;</span>,<span class=\"string\">&quot;咸阳&quot;</span>,<span class=\"string\">&quot;渭南&quot;</span>,<span class=\"string\">&quot;延安&quot;</span>,<span class=\"string\">&quot;汉中&quot;</span>,<span class=\"string\">&quot;榆林&quot;</span>,<span class=\"string\">&quot;安康&quot;</span>,<span class=\"string\">&quot;商洛&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_0&quot;</span>,[<span class=\"string\">&quot;城关区&quot;</span>,<span class=\"string\">&quot;七里河区&quot;</span>,<span class=\"string\">&quot;西固区&quot;</span>,<span class=\"string\">&quot;安宁区&quot;</span>,<span class=\"string\">&quot;红古区&quot;</span>,<span class=\"string\">&quot;永登县&quot;</span>,<span class=\"string\">&quot;皋兰县&quot;</span>,<span class=\"string\">&quot;榆中县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_1&quot;</span>,[<span class=\"string\">&quot;嘉峪关&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_2&quot;</span>,[<span class=\"string\">&quot;金川区&quot;</span>,<span class=\"string\">&quot;永昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_3&quot;</span>,[<span class=\"string\">&quot;白银区&quot;</span>,<span class=\"string\">&quot;平川区&quot;</span>,<span class=\"string\">&quot;靖远县&quot;</span>,<span class=\"string\">&quot;会宁县&quot;</span>,<span class=\"string\">&quot;景泰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_4&quot;</span>,[<span class=\"string\">&quot;秦州区&quot;</span>,<span class=\"string\">&quot;麦积区&quot;</span>,<span class=\"string\">&quot;清水县&quot;</span>,<span class=\"string\">&quot;秦安县&quot;</span>,<span class=\"string\">&quot;甘谷县&quot;</span>,<span class=\"string\">&quot;武山县&quot;</span>,<span class=\"string\">&quot;张家川回族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_5&quot;</span>,[<span class=\"string\">&quot;凉州区&quot;</span>,<span class=\"string\">&quot;民勤县&quot;</span>,<span class=\"string\">&quot;古浪县&quot;</span>,<span class=\"string\">&quot;天祝藏族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_6&quot;</span>,[<span class=\"string\">&quot;甘州区&quot;</span>,<span class=\"string\">&quot;肃南裕固族自治县&quot;</span>,<span class=\"string\">&quot;民乐县&quot;</span>,<span class=\"string\">&quot;临泽县&quot;</span>,<span class=\"string\">&quot;高台县&quot;</span>,<span class=\"string\">&quot;山丹县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_7&quot;</span>,[<span class=\"string\">&quot;崆峒区&quot;</span>,<span class=\"string\">&quot;泾川县&quot;</span>,<span class=\"string\">&quot;灵台县&quot;</span>,<span class=\"string\">&quot;崇信县&quot;</span>,<span class=\"string\">&quot;华亭县&quot;</span>,<span class=\"string\">&quot;庄浪县&quot;</span>,<span class=\"string\">&quot;静宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_8&quot;</span>,[<span class=\"string\">&quot;肃州区&quot;</span>,<span class=\"string\">&quot;金塔县&quot;</span>,<span class=\"string\">&quot;瓜州县&quot;</span>,<span class=\"string\">&quot;肃北蒙古族自治县&quot;</span>,<span class=\"string\">&quot;阿克塞哈萨克族自治县&quot;</span>,<span class=\"string\">&quot;玉门市&quot;</span>,<span class=\"string\">&quot;敦煌市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_9&quot;</span>,[<span class=\"string\">&quot;西峰区&quot;</span>,<span class=\"string\">&quot;庆城县&quot;</span>,<span class=\"string\">&quot;环县&quot;</span>,<span class=\"string\">&quot;华池县&quot;</span>,<span class=\"string\">&quot;合水县&quot;</span>,<span class=\"string\">&quot;正宁县&quot;</span>,<span class=\"string\">&quot;宁县&quot;</span>,<span class=\"string\">&quot;镇原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_10&quot;</span>,[<span class=\"string\">&quot;安定区&quot;</span>,<span class=\"string\">&quot;通渭县&quot;</span>,<span class=\"string\">&quot;陇西县&quot;</span>,<span class=\"string\">&quot;渭源县&quot;</span>,<span class=\"string\">&quot;临洮县&quot;</span>,<span class=\"string\">&quot;漳县&quot;</span>,<span class=\"string\">&quot;岷县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_11&quot;</span>,[<span class=\"string\">&quot;武都区&quot;</span>,<span class=\"string\">&quot;成县&quot;</span>,<span class=\"string\">&quot;文县&quot;</span>,<span class=\"string\">&quot;宕昌县&quot;</span>,<span class=\"string\">&quot;康县&quot;</span>,<span class=\"string\">&quot;西和县&quot;</span>,<span class=\"string\">&quot;礼县&quot;</span>,<span class=\"string\">&quot;徽县&quot;</span>,<span class=\"string\">&quot;两当县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_12&quot;</span>,[<span class=\"string\">&quot;临夏市&quot;</span>,<span class=\"string\">&quot;临夏县&quot;</span>,<span class=\"string\">&quot;康乐县&quot;</span>,<span class=\"string\">&quot;永靖县&quot;</span>,<span class=\"string\">&quot;广河县&quot;</span>,<span class=\"string\">&quot;和政县&quot;</span>,<span class=\"string\">&quot;东乡族自治县&quot;</span>,<span class=\"string\">&quot;积石山保安族东乡族撒拉族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_13&quot;</span>,[<span class=\"string\">&quot;合作市&quot;</span>,<span class=\"string\">&quot;临潭县&quot;</span>,<span class=\"string\">&quot;卓尼县&quot;</span>,<span class=\"string\">&quot;舟曲县&quot;</span>,<span class=\"string\">&quot;迭部县&quot;</span>,<span class=\"string\">&quot;玛曲县&quot;</span>,<span class=\"string\">&quot;碌曲县&quot;</span>,<span class=\"string\">&quot;夏河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27&quot;</span>,[<span class=\"string\">&quot;兰州&quot;</span>,<span class=\"string\">&quot;嘉峪关&quot;</span>,<span class=\"string\">&quot;金昌&quot;</span>,<span class=\"string\">&quot;白银&quot;</span>,<span class=\"string\">&quot;天水&quot;</span>,<span class=\"string\">&quot;武威&quot;</span>,<span class=\"string\">&quot;张掖&quot;</span>,<span class=\"string\">&quot;平凉&quot;</span>,<span class=\"string\">&quot;酒泉&quot;</span>,<span class=\"string\">&quot;庆阳&quot;</span>,<span class=\"string\">&quot;定西&quot;</span>,<span class=\"string\">&quot;陇南&quot;</span>,<span class=\"string\">&quot;临夏&quot;</span>,<span class=\"string\">&quot;甘南&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_0&quot;</span>,[<span class=\"string\">&quot;城东区&quot;</span>,<span class=\"string\">&quot;城中区&quot;</span>,<span class=\"string\">&quot;城西区&quot;</span>,<span class=\"string\">&quot;城北区&quot;</span>,<span class=\"string\">&quot;大通回族土族自治县&quot;</span>,<span class=\"string\">&quot;湟中县&quot;</span>,<span class=\"string\">&quot;湟源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_1&quot;</span>,[<span class=\"string\">&quot;乐都区&quot;</span>,<span class=\"string\">&quot;平安县&quot;</span>,<span class=\"string\">&quot;民和回族土族自治县&quot;</span>,<span class=\"string\">&quot;互助土族自治县&quot;</span>,<span class=\"string\">&quot;化隆回族自治县&quot;</span>,<span class=\"string\">&quot;循化撒拉族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_2&quot;</span>,[<span class=\"string\">&quot;门源回族自治县&quot;</span>,<span class=\"string\">&quot;祁连县&quot;</span>,<span class=\"string\">&quot;海晏县&quot;</span>,<span class=\"string\">&quot;刚察县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_3&quot;</span>,[<span class=\"string\">&quot;同仁县&quot;</span>,<span class=\"string\">&quot;尖扎县&quot;</span>,<span class=\"string\">&quot;泽库县&quot;</span>,<span class=\"string\">&quot;河南蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_4&quot;</span>,[<span class=\"string\">&quot;共和县&quot;</span>,<span class=\"string\">&quot;同德县&quot;</span>,<span class=\"string\">&quot;贵德县&quot;</span>,<span class=\"string\">&quot;兴海县&quot;</span>,<span class=\"string\">&quot;贵南县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_5&quot;</span>,[<span class=\"string\">&quot;玛沁县&quot;</span>,<span class=\"string\">&quot;班玛县&quot;</span>,<span class=\"string\">&quot;甘德县&quot;</span>,<span class=\"string\">&quot;达日县&quot;</span>,<span class=\"string\">&quot;久治县&quot;</span>,<span class=\"string\">&quot;玛多县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_6&quot;</span>,[<span class=\"string\">&quot;玉树市&quot;</span>,<span class=\"string\">&quot;杂多县&quot;</span>,<span class=\"string\">&quot;称多县&quot;</span>,<span class=\"string\">&quot;治多县&quot;</span>,<span class=\"string\">&quot;囊谦县&quot;</span>,<span class=\"string\">&quot;曲麻莱县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_7&quot;</span>,[<span class=\"string\">&quot;格尔木市&quot;</span>,<span class=\"string\">&quot;德令哈市&quot;</span>,<span class=\"string\">&quot;乌兰县&quot;</span>,<span class=\"string\">&quot;都兰县&quot;</span>,<span class=\"string\">&quot;天峻县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28&quot;</span>,[<span class=\"string\">&quot;西宁&quot;</span>,<span class=\"string\">&quot;海东&quot;</span>,<span class=\"string\">&quot;海北&quot;</span>,<span class=\"string\">&quot;黄南&quot;</span>,<span class=\"string\">&quot;海南&quot;</span>,<span class=\"string\">&quot;果洛&quot;</span>,<span class=\"string\">&quot;玉树&quot;</span>,<span class=\"string\">&quot;海西&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_0&quot;</span>,[<span class=\"string\">&quot;兴庆区&quot;</span>,<span class=\"string\">&quot;西夏区&quot;</span>,<span class=\"string\">&quot;金凤区&quot;</span>,<span class=\"string\">&quot;永宁县&quot;</span>,<span class=\"string\">&quot;贺兰县&quot;</span>,<span class=\"string\">&quot;灵武市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_1&quot;</span>,[<span class=\"string\">&quot;大武口区&quot;</span>,<span class=\"string\">&quot;惠农区&quot;</span>,<span class=\"string\">&quot;平罗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_2&quot;</span>,[<span class=\"string\">&quot;利通区&quot;</span>,<span class=\"string\">&quot;红寺堡区&quot;</span>,<span class=\"string\">&quot;盐池县&quot;</span>,<span class=\"string\">&quot;同心县&quot;</span>,<span class=\"string\">&quot;青铜峡市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_3&quot;</span>,[<span class=\"string\">&quot;原州区&quot;</span>,<span class=\"string\">&quot;西吉县&quot;</span>,<span class=\"string\">&quot;隆德县&quot;</span>,<span class=\"string\">&quot;泾源县&quot;</span>,<span class=\"string\">&quot;彭阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_4&quot;</span>,[<span class=\"string\">&quot;沙坡头区&quot;</span>,<span class=\"string\">&quot;中宁县&quot;</span>,<span class=\"string\">&quot;海原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29&quot;</span>,[<span class=\"string\">&quot;银川&quot;</span>,<span class=\"string\">&quot;石嘴山&quot;</span>,<span class=\"string\">&quot;吴忠&quot;</span>,<span class=\"string\">&quot;固原&quot;</span>,<span class=\"string\">&quot;中卫&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_0&quot;</span>,[<span class=\"string\">&quot;天山区&quot;</span>,<span class=\"string\">&quot;沙依巴克区&quot;</span>,<span class=\"string\">&quot;新市区&quot;</span>,<span class=\"string\">&quot;水磨沟区&quot;</span>,<span class=\"string\">&quot;头屯河区&quot;</span>,<span class=\"string\">&quot;达坂城区&quot;</span>,<span class=\"string\">&quot;米东区&quot;</span>,<span class=\"string\">&quot;乌鲁木齐县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_1&quot;</span>,[<span class=\"string\">&quot;独山子区&quot;</span>,<span class=\"string\">&quot;克拉玛依区&quot;</span>,<span class=\"string\">&quot;白碱滩区&quot;</span>,<span class=\"string\">&quot;乌尔禾区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_2&quot;</span>,[<span class=\"string\">&quot;吐鲁番市&quot;</span>,<span class=\"string\">&quot;鄯善县&quot;</span>,<span class=\"string\">&quot;托克逊县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_3&quot;</span>,[<span class=\"string\">&quot;哈密市&quot;</span>,<span class=\"string\">&quot;巴里坤哈萨克自治县&quot;</span>,<span class=\"string\">&quot;伊吾县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_4&quot;</span>,[<span class=\"string\">&quot;昌吉市&quot;</span>,<span class=\"string\">&quot;阜康市&quot;</span>,<span class=\"string\">&quot;呼图壁县&quot;</span>,<span class=\"string\">&quot;玛纳斯县&quot;</span>,<span class=\"string\">&quot;奇台县&quot;</span>,<span class=\"string\">&quot;吉木萨尔县&quot;</span>,<span class=\"string\">&quot;木垒哈萨克自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_5&quot;</span>,[<span class=\"string\">&quot;博乐市&quot;</span>,<span class=\"string\">&quot;阿拉山口市&quot;</span>,<span class=\"string\">&quot;精河县&quot;</span>,<span class=\"string\">&quot;温泉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_6&quot;</span>,[<span class=\"string\">&quot;库尔勒市&quot;</span>,<span class=\"string\">&quot;轮台县&quot;</span>,<span class=\"string\">&quot;尉犁县&quot;</span>,<span class=\"string\">&quot;若羌县&quot;</span>,<span class=\"string\">&quot;且末县&quot;</span>,<span class=\"string\">&quot;焉耆回族自治县&quot;</span>,<span class=\"string\">&quot;和静县&quot;</span>,<span class=\"string\">&quot;和硕县&quot;</span>,<span class=\"string\">&quot;博湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_7&quot;</span>,[<span class=\"string\">&quot;阿克苏市&quot;</span>,<span class=\"string\">&quot;温宿县&quot;</span>,<span class=\"string\">&quot;库车县&quot;</span>,<span class=\"string\">&quot;沙雅县&quot;</span>,<span class=\"string\">&quot;新和县&quot;</span>,<span class=\"string\">&quot;拜城县&quot;</span>,<span class=\"string\">&quot;乌什县&quot;</span>,<span class=\"string\">&quot;阿瓦提县&quot;</span>,<span class=\"string\">&quot;柯坪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_8&quot;</span>,[<span class=\"string\">&quot;阿图什市&quot;</span>,<span class=\"string\">&quot;阿克陶县&quot;</span>,<span class=\"string\">&quot;阿合奇县&quot;</span>,<span class=\"string\">&quot;乌恰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_9&quot;</span>,[<span class=\"string\">&quot;喀什市&quot;</span>,<span class=\"string\">&quot;疏附县&quot;</span>,<span class=\"string\">&quot;疏勒县&quot;</span>,<span class=\"string\">&quot;英吉沙县&quot;</span>,<span class=\"string\">&quot;泽普县&quot;</span>,<span class=\"string\">&quot;莎车县&quot;</span>,<span class=\"string\">&quot;叶城县&quot;</span>,<span class=\"string\">&quot;麦盖提县&quot;</span>,<span class=\"string\">&quot;岳普湖县&quot;</span>,<span class=\"string\">&quot;伽师县&quot;</span>,<span class=\"string\">&quot;巴楚县&quot;</span>,<span class=\"string\">&quot;塔什库尔干塔吉克自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_10&quot;</span>,[<span class=\"string\">&quot;和田市&quot;</span>,<span class=\"string\">&quot;和田县&quot;</span>,<span class=\"string\">&quot;墨玉县&quot;</span>,<span class=\"string\">&quot;皮山县&quot;</span>,<span class=\"string\">&quot;洛浦县&quot;</span>,<span class=\"string\">&quot;策勒县&quot;</span>,<span class=\"string\">&quot;于田县&quot;</span>,<span class=\"string\">&quot;民丰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_11&quot;</span>,[<span class=\"string\">&quot;伊宁市&quot;</span>,<span class=\"string\">&quot;奎屯市&quot;</span>,<span class=\"string\">&quot;霍尔果斯市&quot;</span>,<span class=\"string\">&quot;伊宁县&quot;</span>,<span class=\"string\">&quot;察布查尔锡伯自治县&quot;</span>,<span class=\"string\">&quot;霍城县&quot;</span>,<span class=\"string\">&quot;巩留县&quot;</span>,<span class=\"string\">&quot;新源县&quot;</span>,<span class=\"string\">&quot;昭苏县&quot;</span>,<span class=\"string\">&quot;特克斯县&quot;</span>,<span class=\"string\">&quot;尼勒克县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_12&quot;</span>,[<span class=\"string\">&quot;塔城市&quot;</span>,<span class=\"string\">&quot;乌苏市&quot;</span>,<span class=\"string\">&quot;额敏县&quot;</span>,<span class=\"string\">&quot;沙湾县&quot;</span>,<span class=\"string\">&quot;托里县&quot;</span>,<span class=\"string\">&quot;裕民县&quot;</span>,<span class=\"string\">&quot;和布克赛尔蒙古自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_13&quot;</span>,[<span class=\"string\">&quot;阿勒泰市&quot;</span>,<span class=\"string\">&quot;布尔津县&quot;</span>,<span class=\"string\">&quot;富蕴县&quot;</span>,<span class=\"string\">&quot;福海县&quot;</span>,<span class=\"string\">&quot;哈巴河县&quot;</span>,<span class=\"string\">&quot;青河县&quot;</span>,<span class=\"string\">&quot;吉木乃县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_14&quot;</span>,[<span class=\"string\">&quot;石河子&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_15&quot;</span>,[<span class=\"string\">&quot;阿拉尔&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_16&quot;</span>,[<span class=\"string\">&quot;图木舒克&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_17&quot;</span>,[<span class=\"string\">&quot;五家渠&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_18&quot;</span>,[<span class=\"string\">&quot;北屯&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_19&quot;</span>,[<span class=\"string\">&quot;铁门关&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_20&quot;</span>,[<span class=\"string\">&quot;双河&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_21&quot;</span>,[<span class=\"string\">&quot;可克达拉&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30&quot;</span>,[<span class=\"string\">&quot;乌鲁木齐&quot;</span>,<span class=\"string\">&quot;克拉玛依&quot;</span>,<span class=\"string\">&quot;吐鲁番&quot;</span>,<span class=\"string\">&quot;哈密&quot;</span>,<span class=\"string\">&quot;昌吉&quot;</span>,<span class=\"string\">&quot;博尔塔拉&quot;</span>,<span class=\"string\">&quot;巴音郭楞&quot;</span>,<span class=\"string\">&quot;阿克苏&quot;</span>,<span class=\"string\">&quot;克孜勒苏&quot;</span>,<span class=\"string\">&quot;喀什&quot;</span>,<span class=\"string\">&quot;和田&quot;</span>,<span class=\"string\">&quot;伊犁&quot;</span>,<span class=\"string\">&quot;塔城&quot;</span>,<span class=\"string\">&quot;阿勒泰&quot;</span>,<span class=\"string\">&quot;石河子&quot;</span>,<span class=\"string\">&quot;阿拉尔&quot;</span>,<span class=\"string\">&quot;图木舒克&quot;</span>,<span class=\"string\">&quot;五家渠&quot;</span>,<span class=\"string\">&quot;北屯&quot;</span>,<span class=\"string\">&quot;铁门关&quot;</span>,<span class=\"string\">&quot;双河&quot;</span>,<span class=\"string\">&quot;可克达拉&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_31_0&quot;</span>,[<span class=\"string\">&quot;台北&quot;</span>, <span class=\"string\">&quot;高雄&quot;</span>, <span class=\"string\">&quot;台中&quot;</span>, <span class=\"string\">&quot;花莲&quot;</span>, <span class=\"string\">&quot;基隆&quot;</span>, <span class=\"string\">&quot;嘉义&quot;</span>, <span class=\"string\">&quot;金门&quot;</span>, <span class=\"string\">&quot;连江&quot;</span>, <span class=\"string\">&quot;苗栗&quot;</span>, <span class=\"string\">&quot;南投&quot;</span>, <span class=\"string\">&quot;澎湖&quot;</span>, <span class=\"string\">&quot;屏东&quot;</span>, <span class=\"string\">&quot;台东&quot;</span>, <span class=\"string\">&quot;台南&quot;</span>, <span class=\"string\">&quot;桃园&quot;</span>, <span class=\"string\">&quot;新竹&quot;</span>, <span class=\"string\">&quot;宜兰&quot;</span>, <span class=\"string\">&quot;云林&quot;</span>, <span class=\"string\">&quot;彰化&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_31&quot;</span>,[<span class=\"string\">&quot;台湾&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_32_0&quot;</span>,[<span class=\"string\">&quot;中西区&quot;</span>,<span class=\"string\">&quot;湾仔区&quot;</span>,<span class=\"string\">&quot;东区&quot;</span>,<span class=\"string\">&quot;南区&quot;</span>,<span class=\"string\">&quot;油尖旺区&quot;</span>,<span class=\"string\">&quot;深水埗区&quot;</span>,<span class=\"string\">&quot;九龍城区&quot;</span>,<span class=\"string\">&quot;黃大仙区&quot;</span>,<span class=\"string\">&quot;觀塘区&quot;</span>,<span class=\"string\">&quot;荃湾区&quot;</span>,<span class=\"string\">&quot;屯門区&quot;</span>,<span class=\"string\">&quot;元朗区&quot;</span>,<span class=\"string\">&quot;北区&quot;</span>,<span class=\"string\">&quot;大埔区&quot;</span>,<span class=\"string\">&quot;西贡区&quot;</span>,<span class=\"string\">&quot;沙田区&quot;</span>,<span class=\"string\">&quot;葵青区&quot;</span>,<span class=\"string\">&quot;離島区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_32&quot;</span>,[<span class=\"string\">&quot;香港特別行政区&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_33_0&quot;</span>,[<span class=\"string\">&quot;花地玛堂区&quot;</span>,<span class=\"string\">&quot;花王堂区&quot;</span>,<span class=\"string\">&quot;望德堂区&quot;</span>,<span class=\"string\">&quot;大堂区&quot;</span>,<span class=\"string\">&quot;風順堂区&quot;</span>,<span class=\"string\">&quot;嘉模堂区&quot;</span>,<span class=\"string\">&quot;路氹城&quot;</span>,<span class=\"string\">&quot;圣方济各堂区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_33&quot;</span>,[<span class=\"string\">&quot;澳门特別行政区&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0&quot;</span>,[<span class=\"string\">&quot;北京&quot;</span>,<span class=\"string\">&quot;天津&quot;</span>,<span class=\"string\">&quot;河北&quot;</span>,<span class=\"string\">&quot;山西&quot;</span>,<span class=\"string\">&quot;内蒙古&quot;</span>,<span class=\"string\">&quot;辽宁&quot;</span>,<span class=\"string\">&quot;吉林&quot;</span>,<span class=\"string\">&quot;黑龙江&quot;</span>,<span class=\"string\">&quot;上海&quot;</span>,<span class=\"string\">&quot;江苏&quot;</span>,<span class=\"string\">&quot;浙江&quot;</span>,<span class=\"string\">&quot;安徽&quot;</span>,<span class=\"string\">&quot;福建&quot;</span>,<span class=\"string\">&quot;江西&quot;</span>,<span class=\"string\">&quot;山东&quot;</span>,<span class=\"string\">&quot;河南&quot;</span>,<span class=\"string\">&quot;湖北&quot;</span>,<span class=\"string\">&quot;湖南&quot;</span>,<span class=\"string\">&quot;广东&quot;</span>,<span class=\"string\">&quot;广西&quot;</span>,<span class=\"string\">&quot;海南&quot;</span>,<span class=\"string\">&quot;重庆&quot;</span>,<span class=\"string\">&quot;四川&quot;</span>,<span class=\"string\">&quot;贵州&quot;</span>,<span class=\"string\">&quot;云南&quot;</span>,<span class=\"string\">&quot;西藏&quot;</span>,<span class=\"string\">&quot;陕西&quot;</span>,<span class=\"string\">&quot;甘肃&quot;</span>,<span class=\"string\">&quot;青海&quot;</span>,<span class=\"string\">&quot;宁夏&quot;</span>,<span class=\"string\">&quot;新疆&quot;</span>,<span class=\"string\">&quot;台湾&quot;</span>,<span class=\"string\">&quot;香港&quot;</span>,<span class=\"string\">&quot;澳门&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">var</span> s = [<span class=\"string\">&quot;s_province&quot;</span>, <span class=\"string\">&quot;s_city&quot;</span>, <span class=\"string\">&quot;s_county&quot;</span>];<span class=\"comment\">//三个select的name  </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> opt0 = [<span class=\"string\">&quot;省份&quot;</span>, <span class=\"string\">&quot;地级市&quot;</span>, <span class=\"string\">&quot;县(区)&quot;</span>];<span class=\"comment\">//初始值  </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_init_area</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">//初始化函数  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;  </span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[i]).<span class=\"property\">onchange</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;change(&quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot;)&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"title function_\">change</span>(<span class=\"number\">0</span>);  </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>** 用于h5网页的全国地址三级联动选择框，整理截至2016-03-17，地址数据来自高德地图 **</p>","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">*   全国三级城市联动 js版 </span></span><br><span class=\"line\"><span class=\"comment\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Dsy</span>(<span class=\"params\"></span>) &#123;  </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Items</span> = &#123;&#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"title class_\">Dsy</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">add</span> = <span class=\"keyword\">function</span> (<span class=\"params\">id, iArray</span>) &#123;  </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Items</span>[id] = iArray;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"title class_\">Dsy</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">Exists</span> = <span class=\"keyword\">function</span> (<span class=\"params\">id</span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">Items</span>[id]) == <span class=\"string\">&quot;undefined&quot;</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">change</span>(<span class=\"params\">v</span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;0&quot;</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; v; i++) &#123;  </span><br><span class=\"line\">        str += (<span class=\"string\">&quot;_&quot;</span> + (<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[i]).<span class=\"property\">selectedIndex</span> - <span class=\"number\">1</span>));  </span><br><span class=\"line\">    &#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> ss = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[v]);  </span><br><span class=\"line\">    <span class=\"keyword\">with</span> (ss) &#123;  </span><br><span class=\"line\">        length = <span class=\"number\">0</span>;  </span><br><span class=\"line\">        options[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Option</span>(opt0[v], <span class=\"string\">&quot;&quot;</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v &amp;&amp; <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[v - <span class=\"number\">1</span>]).<span class=\"property\">selectedIndex</span> &gt; <span class=\"number\">0</span> || !v) &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dsy.<span class=\"title class_\">Exists</span>(str)) &#123;  </span><br><span class=\"line\">                ar = dsy.<span class=\"property\">Items</span>[str];  </span><br><span class=\"line\">                <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; ar.<span class=\"property\">length</span>; i++) &#123;  </span><br><span class=\"line\">                    options[length] = <span class=\"keyword\">new</span> <span class=\"title class_\">Option</span>(ar[i], ar[i]);  </span><br><span class=\"line\">                &#125;<span class=\"comment\">//end for  </span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (v) &#123; options[<span class=\"number\">0</span>].<span class=\"property\">selected</span> = <span class=\"literal\">true</span>; &#125;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;<span class=\"comment\">//end if v  </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (++v &lt; s.<span class=\"property\">length</span>) &#123; <span class=\"title function_\">change</span>(v); &#125;  </span><br><span class=\"line\">    &#125;<span class=\"comment\">//End with  </span></span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">var</span> dsy = <span class=\"keyword\">new</span> <span class=\"title class_\">Dsy</span>();  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_0_0&quot;</span>,[<span class=\"string\">&quot;东城区&quot;</span>,<span class=\"string\">&quot;西城区&quot;</span>,<span class=\"string\">&quot;朝阳区&quot;</span>,<span class=\"string\">&quot;丰台区&quot;</span>,<span class=\"string\">&quot;石景山区&quot;</span>,<span class=\"string\">&quot;海淀区&quot;</span>,<span class=\"string\">&quot;门头沟区&quot;</span>,<span class=\"string\">&quot;房山区&quot;</span>,<span class=\"string\">&quot;通州区&quot;</span>,<span class=\"string\">&quot;顺义区&quot;</span>,<span class=\"string\">&quot;昌平区&quot;</span>,<span class=\"string\">&quot;大兴区&quot;</span>,<span class=\"string\">&quot;怀柔区&quot;</span>,<span class=\"string\">&quot;平谷区&quot;</span>,<span class=\"string\">&quot;密云县&quot;</span>,<span class=\"string\">&quot;延庆县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_0&quot;</span>,[<span class=\"string\">&quot;北京&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_1_0&quot;</span>,[<span class=\"string\">&quot;和平区&quot;</span>,<span class=\"string\">&quot;河东区&quot;</span>,<span class=\"string\">&quot;河西区&quot;</span>,<span class=\"string\">&quot;南开区&quot;</span>,<span class=\"string\">&quot;河北区&quot;</span>,<span class=\"string\">&quot;红桥区&quot;</span>,<span class=\"string\">&quot;东丽区&quot;</span>,<span class=\"string\">&quot;西青区&quot;</span>,<span class=\"string\">&quot;津南区&quot;</span>,<span class=\"string\">&quot;北辰区&quot;</span>,<span class=\"string\">&quot;武清区&quot;</span>,<span class=\"string\">&quot;宝坻区&quot;</span>,<span class=\"string\">&quot;滨海新区&quot;</span>,<span class=\"string\">&quot;宁河县&quot;</span>,<span class=\"string\">&quot;静海县&quot;</span>,<span class=\"string\">&quot;蓟县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_1&quot;</span>,[<span class=\"string\">&quot;天津&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_0&quot;</span>,[<span class=\"string\">&quot;长安区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;井陉矿区&quot;</span>,<span class=\"string\">&quot;裕华区&quot;</span>,<span class=\"string\">&quot;井陉县&quot;</span>,<span class=\"string\">&quot;正定县&quot;</span>,<span class=\"string\">&quot;栾城区&quot;</span>,<span class=\"string\">&quot;行唐县&quot;</span>,<span class=\"string\">&quot;灵寿县&quot;</span>,<span class=\"string\">&quot;高邑县&quot;</span>,<span class=\"string\">&quot;深泽县&quot;</span>,<span class=\"string\">&quot;赞皇县&quot;</span>,<span class=\"string\">&quot;无极县&quot;</span>,<span class=\"string\">&quot;平山县&quot;</span>,<span class=\"string\">&quot;元氏县&quot;</span>,<span class=\"string\">&quot;赵县&quot;</span>,<span class=\"string\">&quot;辛集市&quot;</span>,<span class=\"string\">&quot;藁城区&quot;</span>,<span class=\"string\">&quot;晋州市&quot;</span>,<span class=\"string\">&quot;新乐市&quot;</span>,<span class=\"string\">&quot;鹿泉区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_1&quot;</span>,[<span class=\"string\">&quot;路南区&quot;</span>,<span class=\"string\">&quot;路北区&quot;</span>,<span class=\"string\">&quot;古冶区&quot;</span>,<span class=\"string\">&quot;开平区&quot;</span>,<span class=\"string\">&quot;丰南区&quot;</span>,<span class=\"string\">&quot;丰润区&quot;</span>,<span class=\"string\">&quot;曹妃甸区&quot;</span>,<span class=\"string\">&quot;滦县&quot;</span>,<span class=\"string\">&quot;滦南县&quot;</span>,<span class=\"string\">&quot;乐亭县&quot;</span>,<span class=\"string\">&quot;迁西县&quot;</span>,<span class=\"string\">&quot;玉田县&quot;</span>,<span class=\"string\">&quot;遵化市&quot;</span>,<span class=\"string\">&quot;迁安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_2&quot;</span>,[<span class=\"string\">&quot;海港区&quot;</span>,<span class=\"string\">&quot;山海关区&quot;</span>,<span class=\"string\">&quot;北戴河区&quot;</span>,<span class=\"string\">&quot;青龙满族自治县&quot;</span>,<span class=\"string\">&quot;昌黎县&quot;</span>,<span class=\"string\">&quot;抚宁县&quot;</span>,<span class=\"string\">&quot;卢龙县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_3&quot;</span>,[<span class=\"string\">&quot;邯山区&quot;</span>,<span class=\"string\">&quot;丛台区&quot;</span>,<span class=\"string\">&quot;复兴区&quot;</span>,<span class=\"string\">&quot;峰峰矿区&quot;</span>,<span class=\"string\">&quot;邯郸县&quot;</span>,<span class=\"string\">&quot;临漳县&quot;</span>,<span class=\"string\">&quot;成安县&quot;</span>,<span class=\"string\">&quot;大名县&quot;</span>,<span class=\"string\">&quot;涉县&quot;</span>,<span class=\"string\">&quot;磁县&quot;</span>,<span class=\"string\">&quot;肥乡县&quot;</span>,<span class=\"string\">&quot;永年县&quot;</span>,<span class=\"string\">&quot;邱县&quot;</span>,<span class=\"string\">&quot;鸡泽县&quot;</span>,<span class=\"string\">&quot;广平县&quot;</span>,<span class=\"string\">&quot;馆陶县&quot;</span>,<span class=\"string\">&quot;魏县&quot;</span>,<span class=\"string\">&quot;曲周县&quot;</span>,<span class=\"string\">&quot;武安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_4&quot;</span>,[<span class=\"string\">&quot;桥东区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;邢台县&quot;</span>,<span class=\"string\">&quot;临城县&quot;</span>,<span class=\"string\">&quot;内丘县&quot;</span>,<span class=\"string\">&quot;柏乡县&quot;</span>,<span class=\"string\">&quot;隆尧县&quot;</span>,<span class=\"string\">&quot;任县&quot;</span>,<span class=\"string\">&quot;南和县&quot;</span>,<span class=\"string\">&quot;宁晋县&quot;</span>,<span class=\"string\">&quot;巨鹿县&quot;</span>,<span class=\"string\">&quot;新河县&quot;</span>,<span class=\"string\">&quot;广宗县&quot;</span>,<span class=\"string\">&quot;平乡县&quot;</span>,<span class=\"string\">&quot;威县&quot;</span>,<span class=\"string\">&quot;清河县&quot;</span>,<span class=\"string\">&quot;临西县&quot;</span>,<span class=\"string\">&quot;南宫市&quot;</span>,<span class=\"string\">&quot;沙河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_5&quot;</span>,[<span class=\"string\">&quot;新市区&quot;</span>,<span class=\"string\">&quot;北市区&quot;</span>,<span class=\"string\">&quot;南市区&quot;</span>,<span class=\"string\">&quot;满城县&quot;</span>,<span class=\"string\">&quot;清苑县&quot;</span>,<span class=\"string\">&quot;涞水县&quot;</span>,<span class=\"string\">&quot;阜平县&quot;</span>,<span class=\"string\">&quot;徐水县&quot;</span>,<span class=\"string\">&quot;定兴县&quot;</span>,<span class=\"string\">&quot;唐县&quot;</span>,<span class=\"string\">&quot;高阳县&quot;</span>,<span class=\"string\">&quot;容城县&quot;</span>,<span class=\"string\">&quot;涞源县&quot;</span>,<span class=\"string\">&quot;望都县&quot;</span>,<span class=\"string\">&quot;安新县&quot;</span>,<span class=\"string\">&quot;易县&quot;</span>,<span class=\"string\">&quot;曲阳县&quot;</span>,<span class=\"string\">&quot;蠡县&quot;</span>,<span class=\"string\">&quot;顺平县&quot;</span>,<span class=\"string\">&quot;博野县&quot;</span>,<span class=\"string\">&quot;雄县&quot;</span>,<span class=\"string\">&quot;涿州市&quot;</span>,<span class=\"string\">&quot;定州市&quot;</span>,<span class=\"string\">&quot;安国市&quot;</span>,<span class=\"string\">&quot;高碑店市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_6&quot;</span>,[<span class=\"string\">&quot;桥东区&quot;</span>,<span class=\"string\">&quot;桥西区&quot;</span>,<span class=\"string\">&quot;宣化区&quot;</span>,<span class=\"string\">&quot;下花园区&quot;</span>,<span class=\"string\">&quot;宣化县&quot;</span>,<span class=\"string\">&quot;张北县&quot;</span>,<span class=\"string\">&quot;康保县&quot;</span>,<span class=\"string\">&quot;沽源县&quot;</span>,<span class=\"string\">&quot;尚义县&quot;</span>,<span class=\"string\">&quot;蔚县&quot;</span>,<span class=\"string\">&quot;阳原县&quot;</span>,<span class=\"string\">&quot;怀安县&quot;</span>,<span class=\"string\">&quot;万全县&quot;</span>,<span class=\"string\">&quot;怀来县&quot;</span>,<span class=\"string\">&quot;涿鹿县&quot;</span>,<span class=\"string\">&quot;赤城县&quot;</span>,<span class=\"string\">&quot;崇礼县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_7&quot;</span>,[<span class=\"string\">&quot;双桥区&quot;</span>,<span class=\"string\">&quot;双滦区&quot;</span>,<span class=\"string\">&quot;鹰手营子矿区&quot;</span>,<span class=\"string\">&quot;承德县&quot;</span>,<span class=\"string\">&quot;兴隆县&quot;</span>,<span class=\"string\">&quot;平泉县&quot;</span>,<span class=\"string\">&quot;滦平县&quot;</span>,<span class=\"string\">&quot;隆化县&quot;</span>,<span class=\"string\">&quot;丰宁满族自治县&quot;</span>,<span class=\"string\">&quot;宽城满族自治县&quot;</span>,<span class=\"string\">&quot;围场满族蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_8&quot;</span>,[<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;运河区&quot;</span>,<span class=\"string\">&quot;沧县&quot;</span>,<span class=\"string\">&quot;青县&quot;</span>,<span class=\"string\">&quot;东光县&quot;</span>,<span class=\"string\">&quot;海兴县&quot;</span>,<span class=\"string\">&quot;盐山县&quot;</span>,<span class=\"string\">&quot;肃宁县&quot;</span>,<span class=\"string\">&quot;南皮县&quot;</span>,<span class=\"string\">&quot;吴桥县&quot;</span>,<span class=\"string\">&quot;献县&quot;</span>,<span class=\"string\">&quot;孟村回族自治县&quot;</span>,<span class=\"string\">&quot;泊头市&quot;</span>,<span class=\"string\">&quot;任丘市&quot;</span>,<span class=\"string\">&quot;黄骅市&quot;</span>,<span class=\"string\">&quot;河间市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_9&quot;</span>,[<span class=\"string\">&quot;安次区&quot;</span>,<span class=\"string\">&quot;广阳区&quot;</span>,<span class=\"string\">&quot;固安县&quot;</span>,<span class=\"string\">&quot;永清县&quot;</span>,<span class=\"string\">&quot;香河县&quot;</span>,<span class=\"string\">&quot;大城县&quot;</span>,<span class=\"string\">&quot;文安县&quot;</span>,<span class=\"string\">&quot;大厂回族自治县&quot;</span>,<span class=\"string\">&quot;霸州市&quot;</span>,<span class=\"string\">&quot;三河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2_10&quot;</span>,[<span class=\"string\">&quot;桃城区&quot;</span>,<span class=\"string\">&quot;枣强县&quot;</span>,<span class=\"string\">&quot;武邑县&quot;</span>,<span class=\"string\">&quot;武强县&quot;</span>,<span class=\"string\">&quot;饶阳县&quot;</span>,<span class=\"string\">&quot;安平县&quot;</span>,<span class=\"string\">&quot;故城县&quot;</span>,<span class=\"string\">&quot;景县&quot;</span>,<span class=\"string\">&quot;阜城县&quot;</span>,<span class=\"string\">&quot;冀州市&quot;</span>,<span class=\"string\">&quot;深州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_2&quot;</span>,[<span class=\"string\">&quot;石家庄&quot;</span>,<span class=\"string\">&quot;唐山&quot;</span>,<span class=\"string\">&quot;秦皇岛&quot;</span>,<span class=\"string\">&quot;邯郸&quot;</span>,<span class=\"string\">&quot;邢台&quot;</span>,<span class=\"string\">&quot;保定&quot;</span>,<span class=\"string\">&quot;张家口&quot;</span>,<span class=\"string\">&quot;承德&quot;</span>,<span class=\"string\">&quot;沧州&quot;</span>,<span class=\"string\">&quot;廊坊&quot;</span>,<span class=\"string\">&quot;衡水&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_0&quot;</span>,[<span class=\"string\">&quot;小店区&quot;</span>,<span class=\"string\">&quot;迎泽区&quot;</span>,<span class=\"string\">&quot;杏花岭区&quot;</span>,<span class=\"string\">&quot;尖草坪区&quot;</span>,<span class=\"string\">&quot;万柏林区&quot;</span>,<span class=\"string\">&quot;晋源区&quot;</span>,<span class=\"string\">&quot;清徐县&quot;</span>,<span class=\"string\">&quot;阳曲县&quot;</span>,<span class=\"string\">&quot;娄烦县&quot;</span>,<span class=\"string\">&quot;古交市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_1&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;矿区&quot;</span>,<span class=\"string\">&quot;南郊区&quot;</span>,<span class=\"string\">&quot;新荣区&quot;</span>,<span class=\"string\">&quot;阳高县&quot;</span>,<span class=\"string\">&quot;天镇县&quot;</span>,<span class=\"string\">&quot;广灵县&quot;</span>,<span class=\"string\">&quot;灵丘县&quot;</span>,<span class=\"string\">&quot;浑源县&quot;</span>,<span class=\"string\">&quot;左云县&quot;</span>,<span class=\"string\">&quot;大同县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_2&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;矿区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;平定县&quot;</span>,<span class=\"string\">&quot;盂县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_3&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;长治县&quot;</span>,<span class=\"string\">&quot;襄垣县&quot;</span>,<span class=\"string\">&quot;屯留县&quot;</span>,<span class=\"string\">&quot;平顺县&quot;</span>,<span class=\"string\">&quot;黎城县&quot;</span>,<span class=\"string\">&quot;壶关县&quot;</span>,<span class=\"string\">&quot;长子县&quot;</span>,<span class=\"string\">&quot;武乡县&quot;</span>,<span class=\"string\">&quot;沁县&quot;</span>,<span class=\"string\">&quot;沁源县&quot;</span>,<span class=\"string\">&quot;潞城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_4&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;沁水县&quot;</span>,<span class=\"string\">&quot;阳城县&quot;</span>,<span class=\"string\">&quot;陵川县&quot;</span>,<span class=\"string\">&quot;泽州县&quot;</span>,<span class=\"string\">&quot;高平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_5&quot;</span>,[<span class=\"string\">&quot;朔城区&quot;</span>,<span class=\"string\">&quot;平鲁区&quot;</span>,<span class=\"string\">&quot;山阴县&quot;</span>,<span class=\"string\">&quot;应县&quot;</span>,<span class=\"string\">&quot;右玉县&quot;</span>,<span class=\"string\">&quot;怀仁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_6&quot;</span>,[<span class=\"string\">&quot;榆次区&quot;</span>,<span class=\"string\">&quot;榆社县&quot;</span>,<span class=\"string\">&quot;左权县&quot;</span>,<span class=\"string\">&quot;和顺县&quot;</span>,<span class=\"string\">&quot;昔阳县&quot;</span>,<span class=\"string\">&quot;寿阳县&quot;</span>,<span class=\"string\">&quot;太谷县&quot;</span>,<span class=\"string\">&quot;祁县&quot;</span>,<span class=\"string\">&quot;平遥县&quot;</span>,<span class=\"string\">&quot;灵石县&quot;</span>,<span class=\"string\">&quot;介休市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_7&quot;</span>,[<span class=\"string\">&quot;盐湖区&quot;</span>,<span class=\"string\">&quot;临猗县&quot;</span>,<span class=\"string\">&quot;万荣县&quot;</span>,<span class=\"string\">&quot;闻喜县&quot;</span>,<span class=\"string\">&quot;稷山县&quot;</span>,<span class=\"string\">&quot;新绛县&quot;</span>,<span class=\"string\">&quot;绛县&quot;</span>,<span class=\"string\">&quot;垣曲县&quot;</span>,<span class=\"string\">&quot;夏县&quot;</span>,<span class=\"string\">&quot;平陆县&quot;</span>,<span class=\"string\">&quot;芮城县&quot;</span>,<span class=\"string\">&quot;永济市&quot;</span>,<span class=\"string\">&quot;河津市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_8&quot;</span>,[<span class=\"string\">&quot;忻府区&quot;</span>,<span class=\"string\">&quot;定襄县&quot;</span>,<span class=\"string\">&quot;五台县&quot;</span>,<span class=\"string\">&quot;代县&quot;</span>,<span class=\"string\">&quot;繁峙县&quot;</span>,<span class=\"string\">&quot;宁武县&quot;</span>,<span class=\"string\">&quot;静乐县&quot;</span>,<span class=\"string\">&quot;神池县&quot;</span>,<span class=\"string\">&quot;五寨县&quot;</span>,<span class=\"string\">&quot;岢岚县&quot;</span>,<span class=\"string\">&quot;河曲县&quot;</span>,<span class=\"string\">&quot;保德县&quot;</span>,<span class=\"string\">&quot;偏关县&quot;</span>,<span class=\"string\">&quot;原平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_9&quot;</span>,[<span class=\"string\">&quot;尧都区&quot;</span>,<span class=\"string\">&quot;曲沃县&quot;</span>,<span class=\"string\">&quot;翼城县&quot;</span>,<span class=\"string\">&quot;襄汾县&quot;</span>,<span class=\"string\">&quot;洪洞县&quot;</span>,<span class=\"string\">&quot;古县&quot;</span>,<span class=\"string\">&quot;安泽县&quot;</span>,<span class=\"string\">&quot;浮山县&quot;</span>,<span class=\"string\">&quot;吉县&quot;</span>,<span class=\"string\">&quot;乡宁县&quot;</span>,<span class=\"string\">&quot;大宁县&quot;</span>,<span class=\"string\">&quot;隰县&quot;</span>,<span class=\"string\">&quot;永和县&quot;</span>,<span class=\"string\">&quot;蒲县&quot;</span>,<span class=\"string\">&quot;汾西县&quot;</span>,<span class=\"string\">&quot;侯马市&quot;</span>,<span class=\"string\">&quot;霍州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3_10&quot;</span>,[<span class=\"string\">&quot;离石区&quot;</span>,<span class=\"string\">&quot;文水县&quot;</span>,<span class=\"string\">&quot;交城县&quot;</span>,<span class=\"string\">&quot;兴县&quot;</span>,<span class=\"string\">&quot;临县&quot;</span>,<span class=\"string\">&quot;柳林县&quot;</span>,<span class=\"string\">&quot;石楼县&quot;</span>,<span class=\"string\">&quot;岚县&quot;</span>,<span class=\"string\">&quot;方山县&quot;</span>,<span class=\"string\">&quot;中阳县&quot;</span>,<span class=\"string\">&quot;交口县&quot;</span>,<span class=\"string\">&quot;孝义市&quot;</span>,<span class=\"string\">&quot;汾阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_3&quot;</span>,[<span class=\"string\">&quot;太原&quot;</span>,<span class=\"string\">&quot;大同&quot;</span>,<span class=\"string\">&quot;阳泉&quot;</span>,<span class=\"string\">&quot;长治&quot;</span>,<span class=\"string\">&quot;晋城&quot;</span>,<span class=\"string\">&quot;朔州&quot;</span>,<span class=\"string\">&quot;晋中&quot;</span>,<span class=\"string\">&quot;运城&quot;</span>,<span class=\"string\">&quot;忻州&quot;</span>,<span class=\"string\">&quot;临汾&quot;</span>,<span class=\"string\">&quot;吕梁&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_0&quot;</span>,[<span class=\"string\">&quot;新城区&quot;</span>,<span class=\"string\">&quot;回民区&quot;</span>,<span class=\"string\">&quot;玉泉区&quot;</span>,<span class=\"string\">&quot;赛罕区&quot;</span>,<span class=\"string\">&quot;土默特左旗&quot;</span>,<span class=\"string\">&quot;托克托县&quot;</span>,<span class=\"string\">&quot;和林格尔县&quot;</span>,<span class=\"string\">&quot;清水河县&quot;</span>,<span class=\"string\">&quot;武川县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_1&quot;</span>,[<span class=\"string\">&quot;东河区&quot;</span>,<span class=\"string\">&quot;昆都仑区&quot;</span>,<span class=\"string\">&quot;青山区&quot;</span>,<span class=\"string\">&quot;石拐区&quot;</span>,<span class=\"string\">&quot;白云鄂博矿区&quot;</span>,<span class=\"string\">&quot;九原区&quot;</span>,<span class=\"string\">&quot;土默特右旗&quot;</span>,<span class=\"string\">&quot;固阳县&quot;</span>,<span class=\"string\">&quot;达尔罕茂明安联合旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_2&quot;</span>,[<span class=\"string\">&quot;海勃湾区&quot;</span>,<span class=\"string\">&quot;海南区&quot;</span>,<span class=\"string\">&quot;乌达区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_3&quot;</span>,[<span class=\"string\">&quot;红山区&quot;</span>,<span class=\"string\">&quot;元宝山区&quot;</span>,<span class=\"string\">&quot;松山区&quot;</span>,<span class=\"string\">&quot;阿鲁科尔沁旗&quot;</span>,<span class=\"string\">&quot;巴林左旗&quot;</span>,<span class=\"string\">&quot;巴林右旗&quot;</span>,<span class=\"string\">&quot;林西县&quot;</span>,<span class=\"string\">&quot;克什克腾旗&quot;</span>,<span class=\"string\">&quot;翁牛特旗&quot;</span>,<span class=\"string\">&quot;喀喇沁旗&quot;</span>,<span class=\"string\">&quot;宁城县&quot;</span>,<span class=\"string\">&quot;敖汉旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_4&quot;</span>,[<span class=\"string\">&quot;科尔沁区&quot;</span>,<span class=\"string\">&quot;科尔沁左翼中旗&quot;</span>,<span class=\"string\">&quot;科尔沁左翼后旗&quot;</span>,<span class=\"string\">&quot;开鲁县&quot;</span>,<span class=\"string\">&quot;库伦旗&quot;</span>,<span class=\"string\">&quot;奈曼旗&quot;</span>,<span class=\"string\">&quot;扎鲁特旗&quot;</span>,<span class=\"string\">&quot;霍林郭勒市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_5&quot;</span>,[<span class=\"string\">&quot;东胜区&quot;</span>,<span class=\"string\">&quot;达拉特旗&quot;</span>,<span class=\"string\">&quot;准格尔旗&quot;</span>,<span class=\"string\">&quot;鄂托克前旗&quot;</span>,<span class=\"string\">&quot;鄂托克旗&quot;</span>,<span class=\"string\">&quot;杭锦旗&quot;</span>,<span class=\"string\">&quot;乌审旗&quot;</span>,<span class=\"string\">&quot;伊金霍洛旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_6&quot;</span>,[<span class=\"string\">&quot;海拉尔区&quot;</span>,<span class=\"string\">&quot;扎赉诺尔区&quot;</span>,<span class=\"string\">&quot;阿荣旗&quot;</span>,<span class=\"string\">&quot;莫力达瓦达斡尔族自治旗&quot;</span>,<span class=\"string\">&quot;鄂伦春自治旗&quot;</span>,<span class=\"string\">&quot;鄂温克族自治旗&quot;</span>,<span class=\"string\">&quot;陈巴尔虎旗&quot;</span>,<span class=\"string\">&quot;新巴尔虎左旗&quot;</span>,<span class=\"string\">&quot;新巴尔虎右旗&quot;</span>,<span class=\"string\">&quot;满洲里市&quot;</span>,<span class=\"string\">&quot;牙克石市&quot;</span>,<span class=\"string\">&quot;扎兰屯市&quot;</span>,<span class=\"string\">&quot;额尔古纳市&quot;</span>,<span class=\"string\">&quot;根河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_7&quot;</span>,[<span class=\"string\">&quot;临河区&quot;</span>,<span class=\"string\">&quot;五原县&quot;</span>,<span class=\"string\">&quot;磴口县&quot;</span>,<span class=\"string\">&quot;乌拉特前旗&quot;</span>,<span class=\"string\">&quot;乌拉特中旗&quot;</span>,<span class=\"string\">&quot;乌拉特后旗&quot;</span>,<span class=\"string\">&quot;杭锦后旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_8&quot;</span>,[<span class=\"string\">&quot;集宁区&quot;</span>,<span class=\"string\">&quot;卓资县&quot;</span>,<span class=\"string\">&quot;化德县&quot;</span>,<span class=\"string\">&quot;商都县&quot;</span>,<span class=\"string\">&quot;兴和县&quot;</span>,<span class=\"string\">&quot;凉城县&quot;</span>,<span class=\"string\">&quot;察哈尔右翼前旗&quot;</span>,<span class=\"string\">&quot;察哈尔右翼中旗&quot;</span>,<span class=\"string\">&quot;察哈尔右翼后旗&quot;</span>,<span class=\"string\">&quot;四子王旗&quot;</span>,<span class=\"string\">&quot;丰镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_9&quot;</span>,[<span class=\"string\">&quot;乌兰浩特市&quot;</span>,<span class=\"string\">&quot;阿尔山市&quot;</span>,<span class=\"string\">&quot;科尔沁右翼前旗&quot;</span>,<span class=\"string\">&quot;科尔沁右翼中旗&quot;</span>,<span class=\"string\">&quot;扎赉特旗&quot;</span>,<span class=\"string\">&quot;突泉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_10&quot;</span>,[<span class=\"string\">&quot;二连浩特市&quot;</span>,<span class=\"string\">&quot;锡林浩特市&quot;</span>,<span class=\"string\">&quot;阿巴嘎旗&quot;</span>,<span class=\"string\">&quot;苏尼特左旗&quot;</span>,<span class=\"string\">&quot;苏尼特右旗&quot;</span>,<span class=\"string\">&quot;东乌珠穆沁旗&quot;</span>,<span class=\"string\">&quot;西乌珠穆沁旗&quot;</span>,<span class=\"string\">&quot;太仆寺旗&quot;</span>,<span class=\"string\">&quot;镶黄旗&quot;</span>,<span class=\"string\">&quot;正镶白旗&quot;</span>,<span class=\"string\">&quot;正蓝旗&quot;</span>,<span class=\"string\">&quot;多伦县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4_11&quot;</span>,[<span class=\"string\">&quot;阿拉善左旗&quot;</span>,<span class=\"string\">&quot;阿拉善右旗&quot;</span>,<span class=\"string\">&quot;额济纳旗&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_4&quot;</span>,[<span class=\"string\">&quot;呼和浩特&quot;</span>,<span class=\"string\">&quot;包头&quot;</span>,<span class=\"string\">&quot;乌海&quot;</span>,<span class=\"string\">&quot;赤峰&quot;</span>,<span class=\"string\">&quot;通辽&quot;</span>,<span class=\"string\">&quot;鄂尔多斯&quot;</span>,<span class=\"string\">&quot;呼伦贝尔&quot;</span>,<span class=\"string\">&quot;巴彦淖尔&quot;</span>,<span class=\"string\">&quot;乌兰察布&quot;</span>,<span class=\"string\">&quot;兴安盟&quot;</span>,<span class=\"string\">&quot;锡林郭勒盟&quot;</span>,<span class=\"string\">&quot;阿拉善盟&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_0&quot;</span>,[<span class=\"string\">&quot;和平区&quot;</span>,<span class=\"string\">&quot;沈河区&quot;</span>,<span class=\"string\">&quot;大东区&quot;</span>,<span class=\"string\">&quot;皇姑区&quot;</span>,<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;苏家屯区&quot;</span>,<span class=\"string\">&quot;浑南区&quot;</span>,<span class=\"string\">&quot;沈北新区&quot;</span>,<span class=\"string\">&quot;于洪区&quot;</span>,<span class=\"string\">&quot;辽中县&quot;</span>,<span class=\"string\">&quot;康平县&quot;</span>,<span class=\"string\">&quot;法库县&quot;</span>,<span class=\"string\">&quot;新民市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_1&quot;</span>,[<span class=\"string\">&quot;中山区&quot;</span>,<span class=\"string\">&quot;西岗区&quot;</span>,<span class=\"string\">&quot;沙河口区&quot;</span>,<span class=\"string\">&quot;甘井子区&quot;</span>,<span class=\"string\">&quot;旅顺口区&quot;</span>,<span class=\"string\">&quot;金州区&quot;</span>,<span class=\"string\">&quot;长海县&quot;</span>,<span class=\"string\">&quot;瓦房店市&quot;</span>,<span class=\"string\">&quot;普兰店市&quot;</span>,<span class=\"string\">&quot;庄河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_2&quot;</span>,[<span class=\"string\">&quot;铁东区&quot;</span>,<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;立山区&quot;</span>,<span class=\"string\">&quot;千山区&quot;</span>,<span class=\"string\">&quot;台安县&quot;</span>,<span class=\"string\">&quot;岫岩满族自治县&quot;</span>,<span class=\"string\">&quot;海城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_3&quot;</span>,[<span class=\"string\">&quot;新抚区&quot;</span>,<span class=\"string\">&quot;东洲区&quot;</span>,<span class=\"string\">&quot;望花区&quot;</span>,<span class=\"string\">&quot;顺城区&quot;</span>,<span class=\"string\">&quot;抚顺县&quot;</span>,<span class=\"string\">&quot;新宾满族自治县&quot;</span>,<span class=\"string\">&quot;清原满族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_4&quot;</span>,[<span class=\"string\">&quot;平山区&quot;</span>,<span class=\"string\">&quot;溪湖区&quot;</span>,<span class=\"string\">&quot;明山区&quot;</span>,<span class=\"string\">&quot;南芬区&quot;</span>,<span class=\"string\">&quot;本溪满族自治县&quot;</span>,<span class=\"string\">&quot;桓仁满族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_5&quot;</span>,[<span class=\"string\">&quot;元宝区&quot;</span>,<span class=\"string\">&quot;振兴区&quot;</span>,<span class=\"string\">&quot;振安区&quot;</span>,<span class=\"string\">&quot;宽甸满族自治县&quot;</span>,<span class=\"string\">&quot;东港市&quot;</span>,<span class=\"string\">&quot;凤城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_6&quot;</span>,[<span class=\"string\">&quot;古塔区&quot;</span>,<span class=\"string\">&quot;凌河区&quot;</span>,<span class=\"string\">&quot;太和区&quot;</span>,<span class=\"string\">&quot;黑山县&quot;</span>,<span class=\"string\">&quot;义县&quot;</span>,<span class=\"string\">&quot;凌海市&quot;</span>,<span class=\"string\">&quot;北镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_7&quot;</span>,[<span class=\"string\">&quot;站前区&quot;</span>,<span class=\"string\">&quot;西市区&quot;</span>,<span class=\"string\">&quot;鲅鱼圈区&quot;</span>,<span class=\"string\">&quot;老边区&quot;</span>,<span class=\"string\">&quot;盖州市&quot;</span>,<span class=\"string\">&quot;大石桥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_8&quot;</span>,[<span class=\"string\">&quot;海州区&quot;</span>,<span class=\"string\">&quot;新邱区&quot;</span>,<span class=\"string\">&quot;太平区&quot;</span>,<span class=\"string\">&quot;清河门区&quot;</span>,<span class=\"string\">&quot;细河区&quot;</span>,<span class=\"string\">&quot;阜新蒙古族自治县&quot;</span>,<span class=\"string\">&quot;彰武县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_9&quot;</span>,[<span class=\"string\">&quot;白塔区&quot;</span>,<span class=\"string\">&quot;文圣区&quot;</span>,<span class=\"string\">&quot;宏伟区&quot;</span>,<span class=\"string\">&quot;弓长岭区&quot;</span>,<span class=\"string\">&quot;太子河区&quot;</span>,<span class=\"string\">&quot;辽阳县&quot;</span>,<span class=\"string\">&quot;灯塔市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_10&quot;</span>,[<span class=\"string\">&quot;双台子区&quot;</span>,<span class=\"string\">&quot;兴隆台区&quot;</span>,<span class=\"string\">&quot;大洼县&quot;</span>,<span class=\"string\">&quot;盘山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_11&quot;</span>,[<span class=\"string\">&quot;银州区&quot;</span>,<span class=\"string\">&quot;清河区&quot;</span>,<span class=\"string\">&quot;铁岭县&quot;</span>,<span class=\"string\">&quot;西丰县&quot;</span>,<span class=\"string\">&quot;昌图县&quot;</span>,<span class=\"string\">&quot;调兵山市&quot;</span>,<span class=\"string\">&quot;开原市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_12&quot;</span>,[<span class=\"string\">&quot;双塔区&quot;</span>,<span class=\"string\">&quot;龙城区&quot;</span>,<span class=\"string\">&quot;朝阳县&quot;</span>,<span class=\"string\">&quot;建平县&quot;</span>,<span class=\"string\">&quot;喀喇沁左翼蒙古族自治县&quot;</span>,<span class=\"string\">&quot;北票市&quot;</span>,<span class=\"string\">&quot;凌源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5_13&quot;</span>,[<span class=\"string\">&quot;连山区&quot;</span>,<span class=\"string\">&quot;龙港区&quot;</span>,<span class=\"string\">&quot;南票区&quot;</span>,<span class=\"string\">&quot;绥中县&quot;</span>,<span class=\"string\">&quot;建昌县&quot;</span>,<span class=\"string\">&quot;兴城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_5&quot;</span>,[<span class=\"string\">&quot;沈阳&quot;</span>,<span class=\"string\">&quot;大连&quot;</span>,<span class=\"string\">&quot;鞍山&quot;</span>,<span class=\"string\">&quot;抚顺&quot;</span>,<span class=\"string\">&quot;本溪&quot;</span>,<span class=\"string\">&quot;丹东&quot;</span>,<span class=\"string\">&quot;锦州&quot;</span>,<span class=\"string\">&quot;营口&quot;</span>,<span class=\"string\">&quot;阜新&quot;</span>,<span class=\"string\">&quot;辽阳&quot;</span>,<span class=\"string\">&quot;盘锦&quot;</span>,<span class=\"string\">&quot;铁岭&quot;</span>,<span class=\"string\">&quot;朝阳&quot;</span>,<span class=\"string\">&quot;葫芦岛&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_0&quot;</span>,[<span class=\"string\">&quot;南关区&quot;</span>,<span class=\"string\">&quot;宽城区&quot;</span>,<span class=\"string\">&quot;朝阳区&quot;</span>,<span class=\"string\">&quot;二道区&quot;</span>,<span class=\"string\">&quot;绿园区&quot;</span>,<span class=\"string\">&quot;双阳区&quot;</span>,<span class=\"string\">&quot;农安县&quot;</span>,<span class=\"string\">&quot;九台区&quot;</span>,<span class=\"string\">&quot;榆树市&quot;</span>,<span class=\"string\">&quot;德惠市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_1&quot;</span>,[<span class=\"string\">&quot;昌邑区&quot;</span>,<span class=\"string\">&quot;龙潭区&quot;</span>,<span class=\"string\">&quot;船营区&quot;</span>,<span class=\"string\">&quot;丰满区&quot;</span>,<span class=\"string\">&quot;永吉县&quot;</span>,<span class=\"string\">&quot;蛟河市&quot;</span>,<span class=\"string\">&quot;桦甸市&quot;</span>,<span class=\"string\">&quot;舒兰市&quot;</span>,<span class=\"string\">&quot;磐石市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_2&quot;</span>,[<span class=\"string\">&quot;铁西区&quot;</span>,<span class=\"string\">&quot;铁东区&quot;</span>,<span class=\"string\">&quot;梨树县&quot;</span>,<span class=\"string\">&quot;伊通满族自治县&quot;</span>,<span class=\"string\">&quot;公主岭市&quot;</span>,<span class=\"string\">&quot;双辽市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_3&quot;</span>,[<span class=\"string\">&quot;龙山区&quot;</span>,<span class=\"string\">&quot;西安区&quot;</span>,<span class=\"string\">&quot;东丰县&quot;</span>,<span class=\"string\">&quot;东辽县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_4&quot;</span>,[<span class=\"string\">&quot;东昌区&quot;</span>,<span class=\"string\">&quot;二道江区&quot;</span>,<span class=\"string\">&quot;通化县&quot;</span>,<span class=\"string\">&quot;辉南县&quot;</span>,<span class=\"string\">&quot;柳河县&quot;</span>,<span class=\"string\">&quot;梅河口市&quot;</span>,<span class=\"string\">&quot;集安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_5&quot;</span>,[<span class=\"string\">&quot;浑江区&quot;</span>,<span class=\"string\">&quot;江源区&quot;</span>,<span class=\"string\">&quot;抚松县&quot;</span>,<span class=\"string\">&quot;靖宇县&quot;</span>,<span class=\"string\">&quot;长白朝鲜族自治县&quot;</span>,<span class=\"string\">&quot;临江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_6&quot;</span>,[<span class=\"string\">&quot;宁江区&quot;</span>,<span class=\"string\">&quot;前郭尔罗斯蒙古族自治县&quot;</span>,<span class=\"string\">&quot;长岭县&quot;</span>,<span class=\"string\">&quot;乾安县&quot;</span>,<span class=\"string\">&quot;扶余市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_7&quot;</span>,[<span class=\"string\">&quot;洮北区&quot;</span>,<span class=\"string\">&quot;镇赉县&quot;</span>,<span class=\"string\">&quot;通榆县&quot;</span>,<span class=\"string\">&quot;洮南市&quot;</span>,<span class=\"string\">&quot;大安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6_8&quot;</span>,[<span class=\"string\">&quot;延吉市&quot;</span>,<span class=\"string\">&quot;图们市&quot;</span>,<span class=\"string\">&quot;敦化市&quot;</span>,<span class=\"string\">&quot;珲春市&quot;</span>,<span class=\"string\">&quot;龙井市&quot;</span>,<span class=\"string\">&quot;和龙市&quot;</span>,<span class=\"string\">&quot;汪清县&quot;</span>,<span class=\"string\">&quot;安图县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_6&quot;</span>,[<span class=\"string\">&quot;长春&quot;</span>,<span class=\"string\">&quot;吉林&quot;</span>,<span class=\"string\">&quot;四平&quot;</span>,<span class=\"string\">&quot;辽源&quot;</span>,<span class=\"string\">&quot;通化&quot;</span>,<span class=\"string\">&quot;白山&quot;</span>,<span class=\"string\">&quot;松原&quot;</span>,<span class=\"string\">&quot;白城&quot;</span>,<span class=\"string\">&quot;延边&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_0&quot;</span>,[<span class=\"string\">&quot;道里区&quot;</span>,<span class=\"string\">&quot;南岗区&quot;</span>,<span class=\"string\">&quot;道外区&quot;</span>,<span class=\"string\">&quot;平房区&quot;</span>,<span class=\"string\">&quot;松北区&quot;</span>,<span class=\"string\">&quot;香坊区&quot;</span>,<span class=\"string\">&quot;呼兰区&quot;</span>,<span class=\"string\">&quot;阿城区&quot;</span>,<span class=\"string\">&quot;依兰县&quot;</span>,<span class=\"string\">&quot;方正县&quot;</span>,<span class=\"string\">&quot;宾县&quot;</span>,<span class=\"string\">&quot;巴彦县&quot;</span>,<span class=\"string\">&quot;木兰县&quot;</span>,<span class=\"string\">&quot;通河县&quot;</span>,<span class=\"string\">&quot;延寿县&quot;</span>,<span class=\"string\">&quot;双城区&quot;</span>,<span class=\"string\">&quot;尚志市&quot;</span>,<span class=\"string\">&quot;五常市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_1&quot;</span>,[<span class=\"string\">&quot;龙沙区&quot;</span>,<span class=\"string\">&quot;建华区&quot;</span>,<span class=\"string\">&quot;铁锋区&quot;</span>,<span class=\"string\">&quot;昂昂溪区&quot;</span>,<span class=\"string\">&quot;富拉尔基区&quot;</span>,<span class=\"string\">&quot;碾子山区&quot;</span>,<span class=\"string\">&quot;梅里斯达斡尔族区&quot;</span>,<span class=\"string\">&quot;龙江县&quot;</span>,<span class=\"string\">&quot;依安县&quot;</span>,<span class=\"string\">&quot;泰来县&quot;</span>,<span class=\"string\">&quot;甘南县&quot;</span>,<span class=\"string\">&quot;富裕县&quot;</span>,<span class=\"string\">&quot;克山县&quot;</span>,<span class=\"string\">&quot;克东县&quot;</span>,<span class=\"string\">&quot;拜泉县&quot;</span>,<span class=\"string\">&quot;讷河市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_2&quot;</span>,[<span class=\"string\">&quot;鸡冠区&quot;</span>,<span class=\"string\">&quot;恒山区&quot;</span>,<span class=\"string\">&quot;滴道区&quot;</span>,<span class=\"string\">&quot;梨树区&quot;</span>,<span class=\"string\">&quot;城子河区&quot;</span>,<span class=\"string\">&quot;麻山区&quot;</span>,<span class=\"string\">&quot;鸡东县&quot;</span>,<span class=\"string\">&quot;虎林市&quot;</span>,<span class=\"string\">&quot;密山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_3&quot;</span>,[<span class=\"string\">&quot;向阳区&quot;</span>,<span class=\"string\">&quot;工农区&quot;</span>,<span class=\"string\">&quot;南山区&quot;</span>,<span class=\"string\">&quot;兴安区&quot;</span>,<span class=\"string\">&quot;东山区&quot;</span>,<span class=\"string\">&quot;兴山区&quot;</span>,<span class=\"string\">&quot;萝北县&quot;</span>,<span class=\"string\">&quot;绥滨县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_4&quot;</span>,[<span class=\"string\">&quot;尖山区&quot;</span>,<span class=\"string\">&quot;岭东区&quot;</span>,<span class=\"string\">&quot;四方台区&quot;</span>,<span class=\"string\">&quot;宝山区&quot;</span>,<span class=\"string\">&quot;集贤县&quot;</span>,<span class=\"string\">&quot;友谊县&quot;</span>,<span class=\"string\">&quot;宝清县&quot;</span>,<span class=\"string\">&quot;饶河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_5&quot;</span>,[<span class=\"string\">&quot;萨尔图区&quot;</span>,<span class=\"string\">&quot;龙凤区&quot;</span>,<span class=\"string\">&quot;让胡路区&quot;</span>,<span class=\"string\">&quot;红岗区&quot;</span>,<span class=\"string\">&quot;大同区&quot;</span>,<span class=\"string\">&quot;肇州县&quot;</span>,<span class=\"string\">&quot;肇源县&quot;</span>,<span class=\"string\">&quot;林甸县&quot;</span>,<span class=\"string\">&quot;杜尔伯特蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_6&quot;</span>,[<span class=\"string\">&quot;伊春区&quot;</span>,<span class=\"string\">&quot;南岔区&quot;</span>,<span class=\"string\">&quot;友好区&quot;</span>,<span class=\"string\">&quot;西林区&quot;</span>,<span class=\"string\">&quot;翠峦区&quot;</span>,<span class=\"string\">&quot;新青区&quot;</span>,<span class=\"string\">&quot;美溪区&quot;</span>,<span class=\"string\">&quot;金山屯区&quot;</span>,<span class=\"string\">&quot;五营区&quot;</span>,<span class=\"string\">&quot;乌马河区&quot;</span>,<span class=\"string\">&quot;汤旺河区&quot;</span>,<span class=\"string\">&quot;带岭区&quot;</span>,<span class=\"string\">&quot;乌伊岭区&quot;</span>,<span class=\"string\">&quot;红星区&quot;</span>,<span class=\"string\">&quot;上甘岭区&quot;</span>,<span class=\"string\">&quot;嘉荫县&quot;</span>,<span class=\"string\">&quot;铁力市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_7&quot;</span>,[<span class=\"string\">&quot;向阳区&quot;</span>,<span class=\"string\">&quot;前进区&quot;</span>,<span class=\"string\">&quot;东风区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;桦南县&quot;</span>,<span class=\"string\">&quot;桦川县&quot;</span>,<span class=\"string\">&quot;汤原县&quot;</span>,<span class=\"string\">&quot;抚远县&quot;</span>,<span class=\"string\">&quot;同江市&quot;</span>,<span class=\"string\">&quot;富锦市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_8&quot;</span>,[<span class=\"string\">&quot;新兴区&quot;</span>,<span class=\"string\">&quot;桃山区&quot;</span>,<span class=\"string\">&quot;茄子河区&quot;</span>,<span class=\"string\">&quot;勃利县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_9&quot;</span>,[<span class=\"string\">&quot;东安区&quot;</span>,<span class=\"string\">&quot;阳明区&quot;</span>,<span class=\"string\">&quot;爱民区&quot;</span>,<span class=\"string\">&quot;西安区&quot;</span>,<span class=\"string\">&quot;东宁县&quot;</span>,<span class=\"string\">&quot;林口县&quot;</span>,<span class=\"string\">&quot;绥芬河市&quot;</span>,<span class=\"string\">&quot;海林市&quot;</span>,<span class=\"string\">&quot;宁安市&quot;</span>,<span class=\"string\">&quot;穆棱市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_10&quot;</span>,[<span class=\"string\">&quot;爱辉区&quot;</span>,<span class=\"string\">&quot;嫩江县&quot;</span>,<span class=\"string\">&quot;逊克县&quot;</span>,<span class=\"string\">&quot;孙吴县&quot;</span>,<span class=\"string\">&quot;北安市&quot;</span>,<span class=\"string\">&quot;五大连池市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_11&quot;</span>,[<span class=\"string\">&quot;北林区&quot;</span>,<span class=\"string\">&quot;望奎县&quot;</span>,<span class=\"string\">&quot;兰西县&quot;</span>,<span class=\"string\">&quot;青冈县&quot;</span>,<span class=\"string\">&quot;庆安县&quot;</span>,<span class=\"string\">&quot;明水县&quot;</span>,<span class=\"string\">&quot;绥棱县&quot;</span>,<span class=\"string\">&quot;安达市&quot;</span>,<span class=\"string\">&quot;肇东市&quot;</span>,<span class=\"string\">&quot;海伦市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7_12&quot;</span>,[<span class=\"string\">&quot;加格达奇区&quot;</span>,<span class=\"string\">&quot;呼玛县&quot;</span>,<span class=\"string\">&quot;塔河县&quot;</span>,<span class=\"string\">&quot;漠河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_7&quot;</span>,[<span class=\"string\">&quot;哈尔滨&quot;</span>,<span class=\"string\">&quot;齐齐哈尔&quot;</span>,<span class=\"string\">&quot;鸡西&quot;</span>,<span class=\"string\">&quot;鹤岗&quot;</span>,<span class=\"string\">&quot;双鸭山&quot;</span>,<span class=\"string\">&quot;大庆&quot;</span>,<span class=\"string\">&quot;伊春&quot;</span>,<span class=\"string\">&quot;佳木斯&quot;</span>,<span class=\"string\">&quot;七台河&quot;</span>,<span class=\"string\">&quot;牡丹江&quot;</span>,<span class=\"string\">&quot;黑河&quot;</span>,<span class=\"string\">&quot;绥化&quot;</span>,<span class=\"string\">&quot;大兴安岭&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_8_0&quot;</span>,[<span class=\"string\">&quot;黄浦区&quot;</span>,<span class=\"string\">&quot;徐汇区&quot;</span>,<span class=\"string\">&quot;长宁区&quot;</span>,<span class=\"string\">&quot;静安区&quot;</span>,<span class=\"string\">&quot;普陀区&quot;</span>,<span class=\"string\">&quot;闸北区&quot;</span>,<span class=\"string\">&quot;虹口区&quot;</span>,<span class=\"string\">&quot;杨浦区&quot;</span>,<span class=\"string\">&quot;闵行区&quot;</span>,<span class=\"string\">&quot;宝山区&quot;</span>,<span class=\"string\">&quot;嘉定区&quot;</span>,<span class=\"string\">&quot;浦东新区&quot;</span>,<span class=\"string\">&quot;金山区&quot;</span>,<span class=\"string\">&quot;松江区&quot;</span>,<span class=\"string\">&quot;青浦区&quot;</span>,<span class=\"string\">&quot;奉贤区&quot;</span>,<span class=\"string\">&quot;崇明县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_8&quot;</span>,[<span class=\"string\">&quot;上海&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_0&quot;</span>,[<span class=\"string\">&quot;玄武区&quot;</span>,<span class=\"string\">&quot;秦淮区&quot;</span>,<span class=\"string\">&quot;建邺区&quot;</span>,<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;浦口区&quot;</span>,<span class=\"string\">&quot;栖霞区&quot;</span>,<span class=\"string\">&quot;雨花台区&quot;</span>,<span class=\"string\">&quot;江宁区&quot;</span>,<span class=\"string\">&quot;六合区&quot;</span>,<span class=\"string\">&quot;溧水区&quot;</span>,<span class=\"string\">&quot;高淳区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_1&quot;</span>,[<span class=\"string\">&quot;崇安区&quot;</span>,<span class=\"string\">&quot;南长区&quot;</span>,<span class=\"string\">&quot;北塘区&quot;</span>,<span class=\"string\">&quot;锡山区&quot;</span>,<span class=\"string\">&quot;惠山区&quot;</span>,<span class=\"string\">&quot;滨湖区&quot;</span>,<span class=\"string\">&quot;江阴市&quot;</span>,<span class=\"string\">&quot;宜兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_2&quot;</span>,[<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;云龙区&quot;</span>,<span class=\"string\">&quot;贾汪区&quot;</span>,<span class=\"string\">&quot;泉山区&quot;</span>,<span class=\"string\">&quot;铜山区&quot;</span>,<span class=\"string\">&quot;丰县&quot;</span>,<span class=\"string\">&quot;沛县&quot;</span>,<span class=\"string\">&quot;睢宁县&quot;</span>,<span class=\"string\">&quot;新沂市&quot;</span>,<span class=\"string\">&quot;邳州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_3&quot;</span>,[<span class=\"string\">&quot;天宁区&quot;</span>,<span class=\"string\">&quot;钟楼区&quot;</span>,<span class=\"string\">&quot;戚墅堰区&quot;</span>,<span class=\"string\">&quot;新北区&quot;</span>,<span class=\"string\">&quot;武进区&quot;</span>,<span class=\"string\">&quot;溧阳市&quot;</span>,<span class=\"string\">&quot;金坛市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_4&quot;</span>,[<span class=\"string\">&quot;虎丘区&quot;</span>,<span class=\"string\">&quot;吴中区&quot;</span>,<span class=\"string\">&quot;相城区&quot;</span>,<span class=\"string\">&quot;姑苏区&quot;</span>,<span class=\"string\">&quot;吴江区&quot;</span>,<span class=\"string\">&quot;常熟市&quot;</span>,<span class=\"string\">&quot;张家港市&quot;</span>,<span class=\"string\">&quot;昆山市&quot;</span>,<span class=\"string\">&quot;太仓市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_5&quot;</span>,[<span class=\"string\">&quot;崇川区&quot;</span>,<span class=\"string\">&quot;港闸区&quot;</span>,<span class=\"string\">&quot;通州区&quot;</span>,<span class=\"string\">&quot;海安县&quot;</span>,<span class=\"string\">&quot;如东县&quot;</span>,<span class=\"string\">&quot;启东市&quot;</span>,<span class=\"string\">&quot;如皋市&quot;</span>,<span class=\"string\">&quot;海门市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_6&quot;</span>,[<span class=\"string\">&quot;连云区&quot;</span>,<span class=\"string\">&quot;海州区&quot;</span>,<span class=\"string\">&quot;赣榆区&quot;</span>,<span class=\"string\">&quot;东海县&quot;</span>,<span class=\"string\">&quot;灌云县&quot;</span>,<span class=\"string\">&quot;灌南县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_7&quot;</span>,[<span class=\"string\">&quot;清河区&quot;</span>,<span class=\"string\">&quot;淮安区&quot;</span>,<span class=\"string\">&quot;淮阴区&quot;</span>,<span class=\"string\">&quot;清浦区&quot;</span>,<span class=\"string\">&quot;涟水县&quot;</span>,<span class=\"string\">&quot;洪泽县&quot;</span>,<span class=\"string\">&quot;盱眙县&quot;</span>,<span class=\"string\">&quot;金湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_8&quot;</span>,[<span class=\"string\">&quot;亭湖区&quot;</span>,<span class=\"string\">&quot;盐都区&quot;</span>,<span class=\"string\">&quot;响水县&quot;</span>,<span class=\"string\">&quot;滨海县&quot;</span>,<span class=\"string\">&quot;阜宁县&quot;</span>,<span class=\"string\">&quot;射阳县&quot;</span>,<span class=\"string\">&quot;建湖县&quot;</span>,<span class=\"string\">&quot;东台市&quot;</span>,<span class=\"string\">&quot;大丰市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_9&quot;</span>,[<span class=\"string\">&quot;广陵区&quot;</span>,<span class=\"string\">&quot;邗江区&quot;</span>,<span class=\"string\">&quot;江都区&quot;</span>,<span class=\"string\">&quot;宝应县&quot;</span>,<span class=\"string\">&quot;仪征市&quot;</span>,<span class=\"string\">&quot;高邮市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_10&quot;</span>,[<span class=\"string\">&quot;京口区&quot;</span>,<span class=\"string\">&quot;润州区&quot;</span>,<span class=\"string\">&quot;丹徒区&quot;</span>,<span class=\"string\">&quot;丹阳市&quot;</span>,<span class=\"string\">&quot;扬中市&quot;</span>,<span class=\"string\">&quot;句容市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_11&quot;</span>,[<span class=\"string\">&quot;海陵区&quot;</span>,<span class=\"string\">&quot;高港区&quot;</span>,<span class=\"string\">&quot;姜堰区&quot;</span>,<span class=\"string\">&quot;兴化市&quot;</span>,<span class=\"string\">&quot;靖江市&quot;</span>,<span class=\"string\">&quot;泰兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9_12&quot;</span>,[<span class=\"string\">&quot;宿城区&quot;</span>,<span class=\"string\">&quot;宿豫区&quot;</span>,<span class=\"string\">&quot;沭阳县&quot;</span>,<span class=\"string\">&quot;泗阳县&quot;</span>,<span class=\"string\">&quot;泗洪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_9&quot;</span>,[<span class=\"string\">&quot;南京&quot;</span>,<span class=\"string\">&quot;无锡&quot;</span>,<span class=\"string\">&quot;徐州&quot;</span>,<span class=\"string\">&quot;常州&quot;</span>,<span class=\"string\">&quot;苏州&quot;</span>,<span class=\"string\">&quot;南通&quot;</span>,<span class=\"string\">&quot;连云港&quot;</span>,<span class=\"string\">&quot;淮安&quot;</span>,<span class=\"string\">&quot;盐城&quot;</span>,<span class=\"string\">&quot;扬州&quot;</span>,<span class=\"string\">&quot;镇江&quot;</span>,<span class=\"string\">&quot;泰州&quot;</span>,<span class=\"string\">&quot;宿迁&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_0&quot;</span>,[<span class=\"string\">&quot;上城区&quot;</span>,<span class=\"string\">&quot;下城区&quot;</span>,<span class=\"string\">&quot;江干区&quot;</span>,<span class=\"string\">&quot;拱墅区&quot;</span>,<span class=\"string\">&quot;西湖区&quot;</span>,<span class=\"string\">&quot;滨江区&quot;</span>,<span class=\"string\">&quot;萧山区&quot;</span>,<span class=\"string\">&quot;余杭区&quot;</span>,<span class=\"string\">&quot;桐庐县&quot;</span>,<span class=\"string\">&quot;淳安县&quot;</span>,<span class=\"string\">&quot;建德市&quot;</span>,<span class=\"string\">&quot;富阳市&quot;</span>,<span class=\"string\">&quot;临安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_1&quot;</span>,[<span class=\"string\">&quot;海曙区&quot;</span>,<span class=\"string\">&quot;江东区&quot;</span>,<span class=\"string\">&quot;江北区&quot;</span>,<span class=\"string\">&quot;北仑区&quot;</span>,<span class=\"string\">&quot;镇海区&quot;</span>,<span class=\"string\">&quot;鄞州区&quot;</span>,<span class=\"string\">&quot;象山县&quot;</span>,<span class=\"string\">&quot;宁海县&quot;</span>,<span class=\"string\">&quot;余姚市&quot;</span>,<span class=\"string\">&quot;慈溪市&quot;</span>,<span class=\"string\">&quot;奉化市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_2&quot;</span>,[<span class=\"string\">&quot;鹿城区&quot;</span>,<span class=\"string\">&quot;龙湾区&quot;</span>,<span class=\"string\">&quot;瓯海区&quot;</span>,<span class=\"string\">&quot;洞头县&quot;</span>,<span class=\"string\">&quot;永嘉县&quot;</span>,<span class=\"string\">&quot;平阳县&quot;</span>,<span class=\"string\">&quot;苍南县&quot;</span>,<span class=\"string\">&quot;文成县&quot;</span>,<span class=\"string\">&quot;泰顺县&quot;</span>,<span class=\"string\">&quot;瑞安市&quot;</span>,<span class=\"string\">&quot;乐清市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_3&quot;</span>,[<span class=\"string\">&quot;南湖区&quot;</span>,<span class=\"string\">&quot;秀洲区&quot;</span>,<span class=\"string\">&quot;嘉善县&quot;</span>,<span class=\"string\">&quot;海盐县&quot;</span>,<span class=\"string\">&quot;海宁市&quot;</span>,<span class=\"string\">&quot;平湖市&quot;</span>,<span class=\"string\">&quot;桐乡市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_4&quot;</span>,[<span class=\"string\">&quot;吴兴区&quot;</span>,<span class=\"string\">&quot;南浔区&quot;</span>,<span class=\"string\">&quot;德清县&quot;</span>,<span class=\"string\">&quot;长兴县&quot;</span>,<span class=\"string\">&quot;安吉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_5&quot;</span>,[<span class=\"string\">&quot;越城区&quot;</span>,<span class=\"string\">&quot;柯桥区&quot;</span>,<span class=\"string\">&quot;新昌县&quot;</span>,<span class=\"string\">&quot;诸暨市&quot;</span>,<span class=\"string\">&quot;上虞区&quot;</span>,<span class=\"string\">&quot;嵊州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_6&quot;</span>,[<span class=\"string\">&quot;婺城区&quot;</span>,<span class=\"string\">&quot;金东区&quot;</span>,<span class=\"string\">&quot;武义县&quot;</span>,<span class=\"string\">&quot;浦江县&quot;</span>,<span class=\"string\">&quot;磐安县&quot;</span>,<span class=\"string\">&quot;兰溪市&quot;</span>,<span class=\"string\">&quot;义乌市&quot;</span>,<span class=\"string\">&quot;东阳市&quot;</span>,<span class=\"string\">&quot;永康市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_7&quot;</span>,[<span class=\"string\">&quot;柯城区&quot;</span>,<span class=\"string\">&quot;衢江区&quot;</span>,<span class=\"string\">&quot;常山县&quot;</span>,<span class=\"string\">&quot;开化县&quot;</span>,<span class=\"string\">&quot;龙游县&quot;</span>,<span class=\"string\">&quot;江山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_8&quot;</span>,[<span class=\"string\">&quot;定海区&quot;</span>,<span class=\"string\">&quot;普陀区&quot;</span>,<span class=\"string\">&quot;岱山县&quot;</span>,<span class=\"string\">&quot;嵊泗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_9&quot;</span>,[<span class=\"string\">&quot;椒江区&quot;</span>,<span class=\"string\">&quot;黄岩区&quot;</span>,<span class=\"string\">&quot;路桥区&quot;</span>,<span class=\"string\">&quot;玉环县&quot;</span>,<span class=\"string\">&quot;三门县&quot;</span>,<span class=\"string\">&quot;天台县&quot;</span>,<span class=\"string\">&quot;仙居县&quot;</span>,<span class=\"string\">&quot;温岭市&quot;</span>,<span class=\"string\">&quot;临海市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10_10&quot;</span>,[<span class=\"string\">&quot;莲都区&quot;</span>,<span class=\"string\">&quot;青田县&quot;</span>,<span class=\"string\">&quot;缙云县&quot;</span>,<span class=\"string\">&quot;遂昌县&quot;</span>,<span class=\"string\">&quot;松阳县&quot;</span>,<span class=\"string\">&quot;云和县&quot;</span>,<span class=\"string\">&quot;庆元县&quot;</span>,<span class=\"string\">&quot;景宁畲族自治县&quot;</span>,<span class=\"string\">&quot;龙泉市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_10&quot;</span>,[<span class=\"string\">&quot;杭州&quot;</span>,<span class=\"string\">&quot;宁波&quot;</span>,<span class=\"string\">&quot;温州&quot;</span>,<span class=\"string\">&quot;嘉兴&quot;</span>,<span class=\"string\">&quot;湖州&quot;</span>,<span class=\"string\">&quot;绍兴&quot;</span>,<span class=\"string\">&quot;金华&quot;</span>,<span class=\"string\">&quot;衢州&quot;</span>,<span class=\"string\">&quot;舟山&quot;</span>,<span class=\"string\">&quot;台州&quot;</span>,<span class=\"string\">&quot;丽水&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_0&quot;</span>,[<span class=\"string\">&quot;瑶海区&quot;</span>,<span class=\"string\">&quot;庐阳区&quot;</span>,<span class=\"string\">&quot;蜀山区&quot;</span>,<span class=\"string\">&quot;包河区&quot;</span>,<span class=\"string\">&quot;长丰县&quot;</span>,<span class=\"string\">&quot;肥东县&quot;</span>,<span class=\"string\">&quot;肥西县&quot;</span>,<span class=\"string\">&quot;庐江县&quot;</span>,<span class=\"string\">&quot;巢湖市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_1&quot;</span>,[<span class=\"string\">&quot;镜湖区&quot;</span>,<span class=\"string\">&quot;弋江区&quot;</span>,<span class=\"string\">&quot;鸠江区&quot;</span>,<span class=\"string\">&quot;三山区&quot;</span>,<span class=\"string\">&quot;芜湖县&quot;</span>,<span class=\"string\">&quot;繁昌县&quot;</span>,<span class=\"string\">&quot;南陵县&quot;</span>,<span class=\"string\">&quot;无为县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_2&quot;</span>,[<span class=\"string\">&quot;龙子湖区&quot;</span>,<span class=\"string\">&quot;蚌山区&quot;</span>,<span class=\"string\">&quot;禹会区&quot;</span>,<span class=\"string\">&quot;淮上区&quot;</span>,<span class=\"string\">&quot;怀远县&quot;</span>,<span class=\"string\">&quot;五河县&quot;</span>,<span class=\"string\">&quot;固镇县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_3&quot;</span>,[<span class=\"string\">&quot;大通区&quot;</span>,<span class=\"string\">&quot;田家庵区&quot;</span>,<span class=\"string\">&quot;谢家集区&quot;</span>,<span class=\"string\">&quot;八公山区&quot;</span>,<span class=\"string\">&quot;潘集区&quot;</span>,<span class=\"string\">&quot;凤台县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_4&quot;</span>,[<span class=\"string\">&quot;花山区&quot;</span>,<span class=\"string\">&quot;雨山区&quot;</span>,<span class=\"string\">&quot;博望区&quot;</span>,<span class=\"string\">&quot;当涂县&quot;</span>,<span class=\"string\">&quot;含山县&quot;</span>,<span class=\"string\">&quot;和县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_5&quot;</span>,[<span class=\"string\">&quot;杜集区&quot;</span>,<span class=\"string\">&quot;相山区&quot;</span>,<span class=\"string\">&quot;烈山区&quot;</span>,<span class=\"string\">&quot;濉溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_6&quot;</span>,[<span class=\"string\">&quot;铜官山区&quot;</span>,<span class=\"string\">&quot;狮子山区&quot;</span>,<span class=\"string\">&quot;郊区&quot;</span>,<span class=\"string\">&quot;铜陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_7&quot;</span>,[<span class=\"string\">&quot;迎江区&quot;</span>,<span class=\"string\">&quot;大观区&quot;</span>,<span class=\"string\">&quot;宜秀区&quot;</span>,<span class=\"string\">&quot;怀宁县&quot;</span>,<span class=\"string\">&quot;枞阳县&quot;</span>,<span class=\"string\">&quot;潜山县&quot;</span>,<span class=\"string\">&quot;太湖县&quot;</span>,<span class=\"string\">&quot;宿松县&quot;</span>,<span class=\"string\">&quot;望江县&quot;</span>,<span class=\"string\">&quot;岳西县&quot;</span>,<span class=\"string\">&quot;桐城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_8&quot;</span>,[<span class=\"string\">&quot;屯溪区&quot;</span>,<span class=\"string\">&quot;黄山区&quot;</span>,<span class=\"string\">&quot;徽州区&quot;</span>,<span class=\"string\">&quot;歙县&quot;</span>,<span class=\"string\">&quot;休宁县&quot;</span>,<span class=\"string\">&quot;黟县&quot;</span>,<span class=\"string\">&quot;祁门县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_9&quot;</span>,[<span class=\"string\">&quot;琅琊区&quot;</span>,<span class=\"string\">&quot;南谯区&quot;</span>,<span class=\"string\">&quot;来安县&quot;</span>,<span class=\"string\">&quot;全椒县&quot;</span>,<span class=\"string\">&quot;定远县&quot;</span>,<span class=\"string\">&quot;凤阳县&quot;</span>,<span class=\"string\">&quot;天长市&quot;</span>,<span class=\"string\">&quot;明光市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_10&quot;</span>,[<span class=\"string\">&quot;颍州区&quot;</span>,<span class=\"string\">&quot;颍东区&quot;</span>,<span class=\"string\">&quot;颍泉区&quot;</span>,<span class=\"string\">&quot;临泉县&quot;</span>,<span class=\"string\">&quot;太和县&quot;</span>,<span class=\"string\">&quot;阜南县&quot;</span>,<span class=\"string\">&quot;颍上县&quot;</span>,<span class=\"string\">&quot;界首市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_11&quot;</span>,[<span class=\"string\">&quot;埇桥区&quot;</span>,<span class=\"string\">&quot;砀山县&quot;</span>,<span class=\"string\">&quot;萧县&quot;</span>,<span class=\"string\">&quot;灵璧县&quot;</span>,<span class=\"string\">&quot;泗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_12&quot;</span>,[<span class=\"string\">&quot;金安区&quot;</span>,<span class=\"string\">&quot;裕安区&quot;</span>,<span class=\"string\">&quot;寿县&quot;</span>,<span class=\"string\">&quot;霍邱县&quot;</span>,<span class=\"string\">&quot;舒城县&quot;</span>,<span class=\"string\">&quot;金寨县&quot;</span>,<span class=\"string\">&quot;霍山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_13&quot;</span>,[<span class=\"string\">&quot;谯城区&quot;</span>,<span class=\"string\">&quot;涡阳县&quot;</span>,<span class=\"string\">&quot;蒙城县&quot;</span>,<span class=\"string\">&quot;利辛县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_14&quot;</span>,[<span class=\"string\">&quot;贵池区&quot;</span>,<span class=\"string\">&quot;东至县&quot;</span>,<span class=\"string\">&quot;石台县&quot;</span>,<span class=\"string\">&quot;青阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11_15&quot;</span>,[<span class=\"string\">&quot;宣州区&quot;</span>,<span class=\"string\">&quot;郎溪县&quot;</span>,<span class=\"string\">&quot;广德县&quot;</span>,<span class=\"string\">&quot;泾县&quot;</span>,<span class=\"string\">&quot;绩溪县&quot;</span>,<span class=\"string\">&quot;旌德县&quot;</span>,<span class=\"string\">&quot;宁国市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_11&quot;</span>,[<span class=\"string\">&quot;合肥&quot;</span>,<span class=\"string\">&quot;芜湖&quot;</span>,<span class=\"string\">&quot;蚌埠&quot;</span>,<span class=\"string\">&quot;淮南&quot;</span>,<span class=\"string\">&quot;马鞍山&quot;</span>,<span class=\"string\">&quot;淮北&quot;</span>,<span class=\"string\">&quot;铜陵&quot;</span>,<span class=\"string\">&quot;安庆&quot;</span>,<span class=\"string\">&quot;黄山&quot;</span>,<span class=\"string\">&quot;滁州&quot;</span>,<span class=\"string\">&quot;阜阳&quot;</span>,<span class=\"string\">&quot;宿州&quot;</span>,<span class=\"string\">&quot;六安&quot;</span>,<span class=\"string\">&quot;亳州&quot;</span>,<span class=\"string\">&quot;池州&quot;</span>,<span class=\"string\">&quot;宣城&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_0&quot;</span>,[<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;台江区&quot;</span>,<span class=\"string\">&quot;仓山区&quot;</span>,<span class=\"string\">&quot;马尾区&quot;</span>,<span class=\"string\">&quot;晋安区&quot;</span>,<span class=\"string\">&quot;闽侯县&quot;</span>,<span class=\"string\">&quot;连江县&quot;</span>,<span class=\"string\">&quot;罗源县&quot;</span>,<span class=\"string\">&quot;闽清县&quot;</span>,<span class=\"string\">&quot;永泰县&quot;</span>,<span class=\"string\">&quot;平潭县&quot;</span>,<span class=\"string\">&quot;福清市&quot;</span>,<span class=\"string\">&quot;长乐市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_1&quot;</span>,[<span class=\"string\">&quot;思明区&quot;</span>,<span class=\"string\">&quot;海沧区&quot;</span>,<span class=\"string\">&quot;湖里区&quot;</span>,<span class=\"string\">&quot;集美区&quot;</span>,<span class=\"string\">&quot;同安区&quot;</span>,<span class=\"string\">&quot;翔安区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_2&quot;</span>,[<span class=\"string\">&quot;城厢区&quot;</span>,<span class=\"string\">&quot;涵江区&quot;</span>,<span class=\"string\">&quot;荔城区&quot;</span>,<span class=\"string\">&quot;秀屿区&quot;</span>,<span class=\"string\">&quot;仙游县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_3&quot;</span>,[<span class=\"string\">&quot;梅列区&quot;</span>,<span class=\"string\">&quot;三元区&quot;</span>,<span class=\"string\">&quot;明溪县&quot;</span>,<span class=\"string\">&quot;清流县&quot;</span>,<span class=\"string\">&quot;宁化县&quot;</span>,<span class=\"string\">&quot;大田县&quot;</span>,<span class=\"string\">&quot;尤溪县&quot;</span>,<span class=\"string\">&quot;沙县&quot;</span>,<span class=\"string\">&quot;将乐县&quot;</span>,<span class=\"string\">&quot;泰宁县&quot;</span>,<span class=\"string\">&quot;建宁县&quot;</span>,<span class=\"string\">&quot;永安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_4&quot;</span>,[<span class=\"string\">&quot;鲤城区&quot;</span>,<span class=\"string\">&quot;丰泽区&quot;</span>,<span class=\"string\">&quot;洛江区&quot;</span>,<span class=\"string\">&quot;泉港区&quot;</span>,<span class=\"string\">&quot;惠安县&quot;</span>,<span class=\"string\">&quot;安溪县&quot;</span>,<span class=\"string\">&quot;永春县&quot;</span>,<span class=\"string\">&quot;德化县&quot;</span>,<span class=\"string\">&quot;金门县&quot;</span>,<span class=\"string\">&quot;石狮市&quot;</span>,<span class=\"string\">&quot;晋江市&quot;</span>,<span class=\"string\">&quot;南安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_5&quot;</span>,[<span class=\"string\">&quot;芗城区&quot;</span>,<span class=\"string\">&quot;龙文区&quot;</span>,<span class=\"string\">&quot;云霄县&quot;</span>,<span class=\"string\">&quot;漳浦县&quot;</span>,<span class=\"string\">&quot;诏安县&quot;</span>,<span class=\"string\">&quot;长泰县&quot;</span>,<span class=\"string\">&quot;东山县&quot;</span>,<span class=\"string\">&quot;南靖县&quot;</span>,<span class=\"string\">&quot;平和县&quot;</span>,<span class=\"string\">&quot;华安县&quot;</span>,<span class=\"string\">&quot;龙海市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_6&quot;</span>,[<span class=\"string\">&quot;延平区&quot;</span>,<span class=\"string\">&quot;顺昌县&quot;</span>,<span class=\"string\">&quot;浦城县&quot;</span>,<span class=\"string\">&quot;光泽县&quot;</span>,<span class=\"string\">&quot;松溪县&quot;</span>,<span class=\"string\">&quot;政和县&quot;</span>,<span class=\"string\">&quot;邵武市&quot;</span>,<span class=\"string\">&quot;武夷山市&quot;</span>,<span class=\"string\">&quot;建瓯市&quot;</span>,<span class=\"string\">&quot;建阳区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_7&quot;</span>,[<span class=\"string\">&quot;新罗区&quot;</span>,<span class=\"string\">&quot;长汀县&quot;</span>,<span class=\"string\">&quot;永定县&quot;</span>,<span class=\"string\">&quot;上杭县&quot;</span>,<span class=\"string\">&quot;武平县&quot;</span>,<span class=\"string\">&quot;连城县&quot;</span>,<span class=\"string\">&quot;漳平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12_8&quot;</span>,[<span class=\"string\">&quot;蕉城区&quot;</span>,<span class=\"string\">&quot;霞浦县&quot;</span>,<span class=\"string\">&quot;古田县&quot;</span>,<span class=\"string\">&quot;屏南县&quot;</span>,<span class=\"string\">&quot;寿宁县&quot;</span>,<span class=\"string\">&quot;周宁县&quot;</span>,<span class=\"string\">&quot;柘荣县&quot;</span>,<span class=\"string\">&quot;福安市&quot;</span>,<span class=\"string\">&quot;福鼎市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_12&quot;</span>,[<span class=\"string\">&quot;福州&quot;</span>,<span class=\"string\">&quot;厦门&quot;</span>,<span class=\"string\">&quot;莆田&quot;</span>,<span class=\"string\">&quot;三明&quot;</span>,<span class=\"string\">&quot;泉州&quot;</span>,<span class=\"string\">&quot;漳州&quot;</span>,<span class=\"string\">&quot;南平&quot;</span>,<span class=\"string\">&quot;龙岩&quot;</span>,<span class=\"string\">&quot;宁德&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_0&quot;</span>,[<span class=\"string\">&quot;东湖区&quot;</span>,<span class=\"string\">&quot;西湖区&quot;</span>,<span class=\"string\">&quot;青云谱区&quot;</span>,<span class=\"string\">&quot;湾里区&quot;</span>,<span class=\"string\">&quot;青山湖区&quot;</span>,<span class=\"string\">&quot;南昌县&quot;</span>,<span class=\"string\">&quot;新建县&quot;</span>,<span class=\"string\">&quot;安义县&quot;</span>,<span class=\"string\">&quot;进贤县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_1&quot;</span>,[<span class=\"string\">&quot;昌江区&quot;</span>,<span class=\"string\">&quot;珠山区&quot;</span>,<span class=\"string\">&quot;浮梁县&quot;</span>,<span class=\"string\">&quot;乐平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_2&quot;</span>,[<span class=\"string\">&quot;安源区&quot;</span>,<span class=\"string\">&quot;湘东区&quot;</span>,<span class=\"string\">&quot;莲花县&quot;</span>,<span class=\"string\">&quot;上栗县&quot;</span>,<span class=\"string\">&quot;芦溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_3&quot;</span>,[<span class=\"string\">&quot;庐山区&quot;</span>,<span class=\"string\">&quot;浔阳区&quot;</span>,<span class=\"string\">&quot;九江县&quot;</span>,<span class=\"string\">&quot;武宁县&quot;</span>,<span class=\"string\">&quot;修水县&quot;</span>,<span class=\"string\">&quot;永修县&quot;</span>,<span class=\"string\">&quot;德安县&quot;</span>,<span class=\"string\">&quot;星子县&quot;</span>,<span class=\"string\">&quot;都昌县&quot;</span>,<span class=\"string\">&quot;湖口县&quot;</span>,<span class=\"string\">&quot;彭泽县&quot;</span>,<span class=\"string\">&quot;瑞昌市&quot;</span>,<span class=\"string\">&quot;共青城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_4&quot;</span>,[<span class=\"string\">&quot;渝水区&quot;</span>,<span class=\"string\">&quot;分宜县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_5&quot;</span>,[<span class=\"string\">&quot;月湖区&quot;</span>,<span class=\"string\">&quot;余江县&quot;</span>,<span class=\"string\">&quot;贵溪市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_6&quot;</span>,[<span class=\"string\">&quot;章贡区&quot;</span>,<span class=\"string\">&quot;赣县&quot;</span>,<span class=\"string\">&quot;信丰县&quot;</span>,<span class=\"string\">&quot;大余县&quot;</span>,<span class=\"string\">&quot;上犹县&quot;</span>,<span class=\"string\">&quot;崇义县&quot;</span>,<span class=\"string\">&quot;安远县&quot;</span>,<span class=\"string\">&quot;龙南县&quot;</span>,<span class=\"string\">&quot;定南县&quot;</span>,<span class=\"string\">&quot;全南县&quot;</span>,<span class=\"string\">&quot;宁都县&quot;</span>,<span class=\"string\">&quot;于都县&quot;</span>,<span class=\"string\">&quot;兴国县&quot;</span>,<span class=\"string\">&quot;会昌县&quot;</span>,<span class=\"string\">&quot;寻乌县&quot;</span>,<span class=\"string\">&quot;石城县&quot;</span>,<span class=\"string\">&quot;瑞金市&quot;</span>,<span class=\"string\">&quot;南康区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_7&quot;</span>,[<span class=\"string\">&quot;吉州区&quot;</span>,<span class=\"string\">&quot;青原区&quot;</span>,<span class=\"string\">&quot;吉安县&quot;</span>,<span class=\"string\">&quot;吉水县&quot;</span>,<span class=\"string\">&quot;峡江县&quot;</span>,<span class=\"string\">&quot;新干县&quot;</span>,<span class=\"string\">&quot;永丰县&quot;</span>,<span class=\"string\">&quot;泰和县&quot;</span>,<span class=\"string\">&quot;遂川县&quot;</span>,<span class=\"string\">&quot;万安县&quot;</span>,<span class=\"string\">&quot;安福县&quot;</span>,<span class=\"string\">&quot;永新县&quot;</span>,<span class=\"string\">&quot;井冈山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_8&quot;</span>,[<span class=\"string\">&quot;袁州区&quot;</span>,<span class=\"string\">&quot;奉新县&quot;</span>,<span class=\"string\">&quot;万载县&quot;</span>,<span class=\"string\">&quot;上高县&quot;</span>,<span class=\"string\">&quot;宜丰县&quot;</span>,<span class=\"string\">&quot;靖安县&quot;</span>,<span class=\"string\">&quot;铜鼓县&quot;</span>,<span class=\"string\">&quot;丰城市&quot;</span>,<span class=\"string\">&quot;樟树市&quot;</span>,<span class=\"string\">&quot;高安市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_9&quot;</span>,[<span class=\"string\">&quot;临川区&quot;</span>,<span class=\"string\">&quot;南城县&quot;</span>,<span class=\"string\">&quot;黎川县&quot;</span>,<span class=\"string\">&quot;南丰县&quot;</span>,<span class=\"string\">&quot;崇仁县&quot;</span>,<span class=\"string\">&quot;乐安县&quot;</span>,<span class=\"string\">&quot;宜黄县&quot;</span>,<span class=\"string\">&quot;金溪县&quot;</span>,<span class=\"string\">&quot;资溪县&quot;</span>,<span class=\"string\">&quot;东乡县&quot;</span>,<span class=\"string\">&quot;广昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13_10&quot;</span>,[<span class=\"string\">&quot;信州区&quot;</span>,<span class=\"string\">&quot;上饶县&quot;</span>,<span class=\"string\">&quot;广丰县&quot;</span>,<span class=\"string\">&quot;玉山县&quot;</span>,<span class=\"string\">&quot;铅山县&quot;</span>,<span class=\"string\">&quot;横峰县&quot;</span>,<span class=\"string\">&quot;弋阳县&quot;</span>,<span class=\"string\">&quot;余干县&quot;</span>,<span class=\"string\">&quot;鄱阳县&quot;</span>,<span class=\"string\">&quot;万年县&quot;</span>,<span class=\"string\">&quot;婺源县&quot;</span>,<span class=\"string\">&quot;德兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_13&quot;</span>,[<span class=\"string\">&quot;南昌&quot;</span>,<span class=\"string\">&quot;景德镇&quot;</span>,<span class=\"string\">&quot;萍乡&quot;</span>,<span class=\"string\">&quot;九江&quot;</span>,<span class=\"string\">&quot;新余&quot;</span>,<span class=\"string\">&quot;鹰潭&quot;</span>,<span class=\"string\">&quot;赣州&quot;</span>,<span class=\"string\">&quot;吉安&quot;</span>,<span class=\"string\">&quot;宜春&quot;</span>,<span class=\"string\">&quot;抚州&quot;</span>,<span class=\"string\">&quot;上饶&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_0&quot;</span>,[<span class=\"string\">&quot;历下区&quot;</span>,<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;槐荫区&quot;</span>,<span class=\"string\">&quot;天桥区&quot;</span>,<span class=\"string\">&quot;历城区&quot;</span>,<span class=\"string\">&quot;长清区&quot;</span>,<span class=\"string\">&quot;平阴县&quot;</span>,<span class=\"string\">&quot;济阳县&quot;</span>,<span class=\"string\">&quot;商河县&quot;</span>,<span class=\"string\">&quot;章丘市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_1&quot;</span>,[<span class=\"string\">&quot;市南区&quot;</span>,<span class=\"string\">&quot;市北区&quot;</span>,<span class=\"string\">&quot;黄岛区&quot;</span>,<span class=\"string\">&quot;崂山区&quot;</span>,<span class=\"string\">&quot;李沧区&quot;</span>,<span class=\"string\">&quot;城阳区&quot;</span>,<span class=\"string\">&quot;胶州市&quot;</span>,<span class=\"string\">&quot;即墨市&quot;</span>,<span class=\"string\">&quot;平度市&quot;</span>,<span class=\"string\">&quot;莱西市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_2&quot;</span>,[<span class=\"string\">&quot;淄川区&quot;</span>,<span class=\"string\">&quot;张店区&quot;</span>,<span class=\"string\">&quot;博山区&quot;</span>,<span class=\"string\">&quot;临淄区&quot;</span>,<span class=\"string\">&quot;周村区&quot;</span>,<span class=\"string\">&quot;桓台县&quot;</span>,<span class=\"string\">&quot;高青县&quot;</span>,<span class=\"string\">&quot;沂源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_3&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;薛城区&quot;</span>,<span class=\"string\">&quot;峄城区&quot;</span>,<span class=\"string\">&quot;台儿庄区&quot;</span>,<span class=\"string\">&quot;山亭区&quot;</span>,<span class=\"string\">&quot;滕州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_4&quot;</span>,[<span class=\"string\">&quot;东营区&quot;</span>,<span class=\"string\">&quot;河口区&quot;</span>,<span class=\"string\">&quot;垦利县&quot;</span>,<span class=\"string\">&quot;利津县&quot;</span>,<span class=\"string\">&quot;广饶县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_5&quot;</span>,[<span class=\"string\">&quot;芝罘区&quot;</span>,<span class=\"string\">&quot;福山区&quot;</span>,<span class=\"string\">&quot;牟平区&quot;</span>,<span class=\"string\">&quot;莱山区&quot;</span>,<span class=\"string\">&quot;长岛县&quot;</span>,<span class=\"string\">&quot;龙口市&quot;</span>,<span class=\"string\">&quot;莱阳市&quot;</span>,<span class=\"string\">&quot;莱州市&quot;</span>,<span class=\"string\">&quot;蓬莱市&quot;</span>,<span class=\"string\">&quot;招远市&quot;</span>,<span class=\"string\">&quot;栖霞市&quot;</span>,<span class=\"string\">&quot;海阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_6&quot;</span>,[<span class=\"string\">&quot;潍城区&quot;</span>,<span class=\"string\">&quot;寒亭区&quot;</span>,<span class=\"string\">&quot;坊子区&quot;</span>,<span class=\"string\">&quot;奎文区&quot;</span>,<span class=\"string\">&quot;临朐县&quot;</span>,<span class=\"string\">&quot;昌乐县&quot;</span>,<span class=\"string\">&quot;青州市&quot;</span>,<span class=\"string\">&quot;诸城市&quot;</span>,<span class=\"string\">&quot;寿光市&quot;</span>,<span class=\"string\">&quot;安丘市&quot;</span>,<span class=\"string\">&quot;高密市&quot;</span>,<span class=\"string\">&quot;昌邑市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_7&quot;</span>,[<span class=\"string\">&quot;任城区&quot;</span>,<span class=\"string\">&quot;微山县&quot;</span>,<span class=\"string\">&quot;鱼台县&quot;</span>,<span class=\"string\">&quot;金乡县&quot;</span>,<span class=\"string\">&quot;嘉祥县&quot;</span>,<span class=\"string\">&quot;汶上县&quot;</span>,<span class=\"string\">&quot;泗水县&quot;</span>,<span class=\"string\">&quot;梁山县&quot;</span>,<span class=\"string\">&quot;曲阜市&quot;</span>,<span class=\"string\">&quot;兖州区&quot;</span>,<span class=\"string\">&quot;邹城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_8&quot;</span>,[<span class=\"string\">&quot;泰山区&quot;</span>,<span class=\"string\">&quot;岱岳区&quot;</span>,<span class=\"string\">&quot;宁阳县&quot;</span>,<span class=\"string\">&quot;东平县&quot;</span>,<span class=\"string\">&quot;新泰市&quot;</span>,<span class=\"string\">&quot;肥城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_9&quot;</span>,[<span class=\"string\">&quot;环翠区&quot;</span>,<span class=\"string\">&quot;文登区&quot;</span>,<span class=\"string\">&quot;荣成市&quot;</span>,<span class=\"string\">&quot;乳山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_10&quot;</span>,[<span class=\"string\">&quot;东港区&quot;</span>,<span class=\"string\">&quot;岚山区&quot;</span>,<span class=\"string\">&quot;五莲县&quot;</span>,<span class=\"string\">&quot;莒县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_11&quot;</span>,[<span class=\"string\">&quot;莱城区&quot;</span>,<span class=\"string\">&quot;钢城区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_12&quot;</span>,[<span class=\"string\">&quot;兰山区&quot;</span>,<span class=\"string\">&quot;罗庄区&quot;</span>,<span class=\"string\">&quot;河东区&quot;</span>,<span class=\"string\">&quot;沂南县&quot;</span>,<span class=\"string\">&quot;郯城县&quot;</span>,<span class=\"string\">&quot;沂水县&quot;</span>,<span class=\"string\">&quot;兰陵县&quot;</span>,<span class=\"string\">&quot;费县&quot;</span>,<span class=\"string\">&quot;平邑县&quot;</span>,<span class=\"string\">&quot;莒南县&quot;</span>,<span class=\"string\">&quot;蒙阴县&quot;</span>,<span class=\"string\">&quot;临沭县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_13&quot;</span>,[<span class=\"string\">&quot;德城区&quot;</span>,<span class=\"string\">&quot;陵城区&quot;</span>,<span class=\"string\">&quot;宁津县&quot;</span>,<span class=\"string\">&quot;庆云县&quot;</span>,<span class=\"string\">&quot;临邑县&quot;</span>,<span class=\"string\">&quot;齐河县&quot;</span>,<span class=\"string\">&quot;平原县&quot;</span>,<span class=\"string\">&quot;夏津县&quot;</span>,<span class=\"string\">&quot;武城县&quot;</span>,<span class=\"string\">&quot;乐陵市&quot;</span>,<span class=\"string\">&quot;禹城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_14&quot;</span>,[<span class=\"string\">&quot;东昌府区&quot;</span>,<span class=\"string\">&quot;阳谷县&quot;</span>,<span class=\"string\">&quot;莘县&quot;</span>,<span class=\"string\">&quot;茌平县&quot;</span>,<span class=\"string\">&quot;东阿县&quot;</span>,<span class=\"string\">&quot;冠县&quot;</span>,<span class=\"string\">&quot;高唐县&quot;</span>,<span class=\"string\">&quot;临清市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_15&quot;</span>,[<span class=\"string\">&quot;滨城区&quot;</span>,<span class=\"string\">&quot;惠民县&quot;</span>,<span class=\"string\">&quot;阳信县&quot;</span>,<span class=\"string\">&quot;无棣县&quot;</span>,<span class=\"string\">&quot;沾化区&quot;</span>,<span class=\"string\">&quot;博兴县&quot;</span>,<span class=\"string\">&quot;邹平县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14_16&quot;</span>,[<span class=\"string\">&quot;牡丹区&quot;</span>,<span class=\"string\">&quot;曹县&quot;</span>,<span class=\"string\">&quot;单县&quot;</span>,<span class=\"string\">&quot;成武县&quot;</span>,<span class=\"string\">&quot;巨野县&quot;</span>,<span class=\"string\">&quot;郓城县&quot;</span>,<span class=\"string\">&quot;鄄城县&quot;</span>,<span class=\"string\">&quot;定陶县&quot;</span>,<span class=\"string\">&quot;东明县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_14&quot;</span>,[<span class=\"string\">&quot;济南&quot;</span>,<span class=\"string\">&quot;青岛&quot;</span>,<span class=\"string\">&quot;淄博&quot;</span>,<span class=\"string\">&quot;枣庄&quot;</span>,<span class=\"string\">&quot;东营&quot;</span>,<span class=\"string\">&quot;烟台&quot;</span>,<span class=\"string\">&quot;潍坊&quot;</span>,<span class=\"string\">&quot;济宁&quot;</span>,<span class=\"string\">&quot;泰安&quot;</span>,<span class=\"string\">&quot;威海&quot;</span>,<span class=\"string\">&quot;日照&quot;</span>,<span class=\"string\">&quot;莱芜&quot;</span>,<span class=\"string\">&quot;临沂&quot;</span>,<span class=\"string\">&quot;德州&quot;</span>,<span class=\"string\">&quot;聊城&quot;</span>,<span class=\"string\">&quot;滨州&quot;</span>,<span class=\"string\">&quot;菏泽&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_0&quot;</span>,[<span class=\"string\">&quot;中原区&quot;</span>,<span class=\"string\">&quot;二七区&quot;</span>,<span class=\"string\">&quot;管城回族区&quot;</span>,<span class=\"string\">&quot;金水区&quot;</span>,<span class=\"string\">&quot;上街区&quot;</span>,<span class=\"string\">&quot;惠济区&quot;</span>,<span class=\"string\">&quot;中牟县&quot;</span>,<span class=\"string\">&quot;巩义市&quot;</span>,<span class=\"string\">&quot;荥阳市&quot;</span>,<span class=\"string\">&quot;新密市&quot;</span>,<span class=\"string\">&quot;新郑市&quot;</span>,<span class=\"string\">&quot;登封市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_1&quot;</span>,[<span class=\"string\">&quot;龙亭区&quot;</span>,<span class=\"string\">&quot;顺河回族区&quot;</span>,<span class=\"string\">&quot;鼓楼区&quot;</span>,<span class=\"string\">&quot;禹王台区&quot;</span>,<span class=\"string\">&quot;杞县&quot;</span>,<span class=\"string\">&quot;通许县&quot;</span>,<span class=\"string\">&quot;尉氏县&quot;</span>,<span class=\"string\">&quot;祥符区&quot;</span>,<span class=\"string\">&quot;兰考县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_2&quot;</span>,[<span class=\"string\">&quot;老城区&quot;</span>,<span class=\"string\">&quot;西工区&quot;</span>,<span class=\"string\">&quot;瀍河回族区&quot;</span>,<span class=\"string\">&quot;涧西区&quot;</span>,<span class=\"string\">&quot;吉利区&quot;</span>,<span class=\"string\">&quot;洛龙区&quot;</span>,<span class=\"string\">&quot;孟津县&quot;</span>,<span class=\"string\">&quot;新安县&quot;</span>,<span class=\"string\">&quot;栾川县&quot;</span>,<span class=\"string\">&quot;嵩县&quot;</span>,<span class=\"string\">&quot;汝阳县&quot;</span>,<span class=\"string\">&quot;宜阳县&quot;</span>,<span class=\"string\">&quot;洛宁县&quot;</span>,<span class=\"string\">&quot;伊川县&quot;</span>,<span class=\"string\">&quot;偃师市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_3&quot;</span>,[<span class=\"string\">&quot;新华区&quot;</span>,<span class=\"string\">&quot;卫东区&quot;</span>,<span class=\"string\">&quot;石龙区&quot;</span>,<span class=\"string\">&quot;湛河区&quot;</span>,<span class=\"string\">&quot;宝丰县&quot;</span>,<span class=\"string\">&quot;叶县&quot;</span>,<span class=\"string\">&quot;鲁山县&quot;</span>,<span class=\"string\">&quot;郏县&quot;</span>,<span class=\"string\">&quot;舞钢市&quot;</span>,<span class=\"string\">&quot;汝州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_4&quot;</span>,[<span class=\"string\">&quot;文峰区&quot;</span>,<span class=\"string\">&quot;北关区&quot;</span>,<span class=\"string\">&quot;殷都区&quot;</span>,<span class=\"string\">&quot;龙安区&quot;</span>,<span class=\"string\">&quot;安阳县&quot;</span>,<span class=\"string\">&quot;汤阴县&quot;</span>,<span class=\"string\">&quot;滑县&quot;</span>,<span class=\"string\">&quot;内黄县&quot;</span>,<span class=\"string\">&quot;林州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_5&quot;</span>,[<span class=\"string\">&quot;鹤山区&quot;</span>,<span class=\"string\">&quot;山城区&quot;</span>,<span class=\"string\">&quot;淇滨区&quot;</span>,<span class=\"string\">&quot;浚县&quot;</span>,<span class=\"string\">&quot;淇县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_6&quot;</span>,[<span class=\"string\">&quot;红旗区&quot;</span>,<span class=\"string\">&quot;卫滨区&quot;</span>,<span class=\"string\">&quot;凤泉区&quot;</span>,<span class=\"string\">&quot;牧野区&quot;</span>,<span class=\"string\">&quot;新乡县&quot;</span>,<span class=\"string\">&quot;获嘉县&quot;</span>,<span class=\"string\">&quot;原阳县&quot;</span>,<span class=\"string\">&quot;延津县&quot;</span>,<span class=\"string\">&quot;封丘县&quot;</span>,<span class=\"string\">&quot;长垣县&quot;</span>,<span class=\"string\">&quot;卫辉市&quot;</span>,<span class=\"string\">&quot;辉县市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_7&quot;</span>,[<span class=\"string\">&quot;解放区&quot;</span>,<span class=\"string\">&quot;中站区&quot;</span>,<span class=\"string\">&quot;马村区&quot;</span>,<span class=\"string\">&quot;山阳区&quot;</span>,<span class=\"string\">&quot;修武县&quot;</span>,<span class=\"string\">&quot;博爱县&quot;</span>,<span class=\"string\">&quot;武陟县&quot;</span>,<span class=\"string\">&quot;温县&quot;</span>,<span class=\"string\">&quot;沁阳市&quot;</span>,<span class=\"string\">&quot;孟州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_8&quot;</span>,[<span class=\"string\">&quot;华龙区&quot;</span>,<span class=\"string\">&quot;清丰县&quot;</span>,<span class=\"string\">&quot;南乐县&quot;</span>,<span class=\"string\">&quot;范县&quot;</span>,<span class=\"string\">&quot;台前县&quot;</span>,<span class=\"string\">&quot;濮阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_9&quot;</span>,[<span class=\"string\">&quot;魏都区&quot;</span>,<span class=\"string\">&quot;许昌县&quot;</span>,<span class=\"string\">&quot;鄢陵县&quot;</span>,<span class=\"string\">&quot;襄城县&quot;</span>,<span class=\"string\">&quot;禹州市&quot;</span>,<span class=\"string\">&quot;长葛市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_10&quot;</span>,[<span class=\"string\">&quot;源汇区&quot;</span>,<span class=\"string\">&quot;郾城区&quot;</span>,<span class=\"string\">&quot;召陵区&quot;</span>,<span class=\"string\">&quot;舞阳县&quot;</span>,<span class=\"string\">&quot;临颍县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_11&quot;</span>,[<span class=\"string\">&quot;湖滨区&quot;</span>,<span class=\"string\">&quot;渑池县&quot;</span>,<span class=\"string\">&quot;陕县&quot;</span>,<span class=\"string\">&quot;卢氏县&quot;</span>,<span class=\"string\">&quot;义马市&quot;</span>,<span class=\"string\">&quot;灵宝市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_12&quot;</span>,[<span class=\"string\">&quot;宛城区&quot;</span>,<span class=\"string\">&quot;卧龙区&quot;</span>,<span class=\"string\">&quot;南召县&quot;</span>,<span class=\"string\">&quot;方城县&quot;</span>,<span class=\"string\">&quot;西峡县&quot;</span>,<span class=\"string\">&quot;镇平县&quot;</span>,<span class=\"string\">&quot;内乡县&quot;</span>,<span class=\"string\">&quot;淅川县&quot;</span>,<span class=\"string\">&quot;社旗县&quot;</span>,<span class=\"string\">&quot;唐河县&quot;</span>,<span class=\"string\">&quot;新野县&quot;</span>,<span class=\"string\">&quot;桐柏县&quot;</span>,<span class=\"string\">&quot;邓州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_13&quot;</span>,[<span class=\"string\">&quot;梁园区&quot;</span>,<span class=\"string\">&quot;睢阳区&quot;</span>,<span class=\"string\">&quot;民权县&quot;</span>,<span class=\"string\">&quot;睢县&quot;</span>,<span class=\"string\">&quot;宁陵县&quot;</span>,<span class=\"string\">&quot;柘城县&quot;</span>,<span class=\"string\">&quot;虞城县&quot;</span>,<span class=\"string\">&quot;夏邑县&quot;</span>,<span class=\"string\">&quot;永城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_14&quot;</span>,[<span class=\"string\">&quot;浉河区&quot;</span>,<span class=\"string\">&quot;平桥区&quot;</span>,<span class=\"string\">&quot;罗山县&quot;</span>,<span class=\"string\">&quot;光山县&quot;</span>,<span class=\"string\">&quot;新县&quot;</span>,<span class=\"string\">&quot;商城县&quot;</span>,<span class=\"string\">&quot;固始县&quot;</span>,<span class=\"string\">&quot;潢川县&quot;</span>,<span class=\"string\">&quot;淮滨县&quot;</span>,<span class=\"string\">&quot;息县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_15&quot;</span>,[<span class=\"string\">&quot;川汇区&quot;</span>,<span class=\"string\">&quot;扶沟县&quot;</span>,<span class=\"string\">&quot;西华县&quot;</span>,<span class=\"string\">&quot;商水县&quot;</span>,<span class=\"string\">&quot;沈丘县&quot;</span>,<span class=\"string\">&quot;郸城县&quot;</span>,<span class=\"string\">&quot;淮阳县&quot;</span>,<span class=\"string\">&quot;太康县&quot;</span>,<span class=\"string\">&quot;鹿邑县&quot;</span>,<span class=\"string\">&quot;项城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_16&quot;</span>,[<span class=\"string\">&quot;驿城区&quot;</span>,<span class=\"string\">&quot;西平县&quot;</span>,<span class=\"string\">&quot;上蔡县&quot;</span>,<span class=\"string\">&quot;平舆县&quot;</span>,<span class=\"string\">&quot;正阳县&quot;</span>,<span class=\"string\">&quot;确山县&quot;</span>,<span class=\"string\">&quot;泌阳县&quot;</span>,<span class=\"string\">&quot;汝南县&quot;</span>,<span class=\"string\">&quot;遂平县&quot;</span>,<span class=\"string\">&quot;新蔡县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15_17&quot;</span>,[<span class=\"string\">&quot;济源&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_15&quot;</span>,[<span class=\"string\">&quot;郑州&quot;</span>,<span class=\"string\">&quot;开封&quot;</span>,<span class=\"string\">&quot;洛阳&quot;</span>,<span class=\"string\">&quot;平顶山&quot;</span>,<span class=\"string\">&quot;安阳&quot;</span>,<span class=\"string\">&quot;鹤壁&quot;</span>,<span class=\"string\">&quot;新乡&quot;</span>,<span class=\"string\">&quot;焦作&quot;</span>,<span class=\"string\">&quot;濮阳&quot;</span>,<span class=\"string\">&quot;许昌&quot;</span>,<span class=\"string\">&quot;漯河&quot;</span>,<span class=\"string\">&quot;三门峡&quot;</span>,<span class=\"string\">&quot;南阳&quot;</span>,<span class=\"string\">&quot;商丘&quot;</span>,<span class=\"string\">&quot;信阳&quot;</span>,<span class=\"string\">&quot;周口&quot;</span>,<span class=\"string\">&quot;驻马店&quot;</span>,<span class=\"string\">&quot;济源&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_0&quot;</span>,[<span class=\"string\">&quot;江岸区&quot;</span>,<span class=\"string\">&quot;江汉区&quot;</span>,<span class=\"string\">&quot;硚口区&quot;</span>,<span class=\"string\">&quot;汉阳区&quot;</span>,<span class=\"string\">&quot;武昌区&quot;</span>,<span class=\"string\">&quot;青山区&quot;</span>,<span class=\"string\">&quot;洪山区&quot;</span>,<span class=\"string\">&quot;东西湖区&quot;</span>,<span class=\"string\">&quot;汉南区&quot;</span>,<span class=\"string\">&quot;蔡甸区&quot;</span>,<span class=\"string\">&quot;江夏区&quot;</span>,<span class=\"string\">&quot;黄陂区&quot;</span>,<span class=\"string\">&quot;新洲区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_1&quot;</span>,[<span class=\"string\">&quot;黄石港区&quot;</span>,<span class=\"string\">&quot;西塞山区&quot;</span>,<span class=\"string\">&quot;下陆区&quot;</span>,<span class=\"string\">&quot;铁山区&quot;</span>,<span class=\"string\">&quot;阳新县&quot;</span>,<span class=\"string\">&quot;大冶市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_2&quot;</span>,[<span class=\"string\">&quot;茅箭区&quot;</span>,<span class=\"string\">&quot;张湾区&quot;</span>,<span class=\"string\">&quot;郧阳区&quot;</span>,<span class=\"string\">&quot;郧西县&quot;</span>,<span class=\"string\">&quot;竹山县&quot;</span>,<span class=\"string\">&quot;竹溪县&quot;</span>,<span class=\"string\">&quot;房县&quot;</span>,<span class=\"string\">&quot;丹江口市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_3&quot;</span>,[<span class=\"string\">&quot;西陵区&quot;</span>,<span class=\"string\">&quot;伍家岗区&quot;</span>,<span class=\"string\">&quot;点军区&quot;</span>,<span class=\"string\">&quot;猇亭区&quot;</span>,<span class=\"string\">&quot;夷陵区&quot;</span>,<span class=\"string\">&quot;远安县&quot;</span>,<span class=\"string\">&quot;兴山县&quot;</span>,<span class=\"string\">&quot;秭归县&quot;</span>,<span class=\"string\">&quot;长阳土家族自治县&quot;</span>,<span class=\"string\">&quot;五峰土家族自治县&quot;</span>,<span class=\"string\">&quot;宜都市&quot;</span>,<span class=\"string\">&quot;当阳市&quot;</span>,<span class=\"string\">&quot;枝江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_4&quot;</span>,[<span class=\"string\">&quot;襄城区&quot;</span>,<span class=\"string\">&quot;樊城区&quot;</span>,<span class=\"string\">&quot;襄州区&quot;</span>,<span class=\"string\">&quot;南漳县&quot;</span>,<span class=\"string\">&quot;谷城县&quot;</span>,<span class=\"string\">&quot;保康县&quot;</span>,<span class=\"string\">&quot;老河口市&quot;</span>,<span class=\"string\">&quot;枣阳市&quot;</span>,<span class=\"string\">&quot;宜城市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_5&quot;</span>,[<span class=\"string\">&quot;梁子湖区&quot;</span>,<span class=\"string\">&quot;华容区&quot;</span>,<span class=\"string\">&quot;鄂城区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_6&quot;</span>,[<span class=\"string\">&quot;东宝区&quot;</span>,<span class=\"string\">&quot;掇刀区&quot;</span>,<span class=\"string\">&quot;京山县&quot;</span>,<span class=\"string\">&quot;沙洋县&quot;</span>,<span class=\"string\">&quot;钟祥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_7&quot;</span>,[<span class=\"string\">&quot;孝南区&quot;</span>,<span class=\"string\">&quot;孝昌县&quot;</span>,<span class=\"string\">&quot;大悟县&quot;</span>,<span class=\"string\">&quot;云梦县&quot;</span>,<span class=\"string\">&quot;应城市&quot;</span>,<span class=\"string\">&quot;安陆市&quot;</span>,<span class=\"string\">&quot;汉川市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_8&quot;</span>,[<span class=\"string\">&quot;沙市区&quot;</span>,<span class=\"string\">&quot;荆州区&quot;</span>,<span class=\"string\">&quot;公安县&quot;</span>,<span class=\"string\">&quot;监利县&quot;</span>,<span class=\"string\">&quot;江陵县&quot;</span>,<span class=\"string\">&quot;石首市&quot;</span>,<span class=\"string\">&quot;洪湖市&quot;</span>,<span class=\"string\">&quot;松滋市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_9&quot;</span>,[<span class=\"string\">&quot;黄州区&quot;</span>,<span class=\"string\">&quot;团风县&quot;</span>,<span class=\"string\">&quot;红安县&quot;</span>,<span class=\"string\">&quot;罗田县&quot;</span>,<span class=\"string\">&quot;英山县&quot;</span>,<span class=\"string\">&quot;浠水县&quot;</span>,<span class=\"string\">&quot;蕲春县&quot;</span>,<span class=\"string\">&quot;黄梅县&quot;</span>,<span class=\"string\">&quot;麻城市&quot;</span>,<span class=\"string\">&quot;武穴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_10&quot;</span>,[<span class=\"string\">&quot;咸安区&quot;</span>,<span class=\"string\">&quot;嘉鱼县&quot;</span>,<span class=\"string\">&quot;通城县&quot;</span>,<span class=\"string\">&quot;崇阳县&quot;</span>,<span class=\"string\">&quot;通山县&quot;</span>,<span class=\"string\">&quot;赤壁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_11&quot;</span>,[<span class=\"string\">&quot;曾都区&quot;</span>,<span class=\"string\">&quot;随县&quot;</span>,<span class=\"string\">&quot;广水市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_12&quot;</span>,[<span class=\"string\">&quot;恩施市&quot;</span>,<span class=\"string\">&quot;利川市&quot;</span>,<span class=\"string\">&quot;建始县&quot;</span>,<span class=\"string\">&quot;巴东县&quot;</span>,<span class=\"string\">&quot;宣恩县&quot;</span>,<span class=\"string\">&quot;咸丰县&quot;</span>,<span class=\"string\">&quot;来凤县&quot;</span>,<span class=\"string\">&quot;鹤峰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_13&quot;</span>, [<span class=\"string\">&quot;仙桃&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_14&quot;</span>, [<span class=\"string\">&quot;潜江&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_15&quot;</span>, [<span class=\"string\">&quot;天门&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16_16&quot;</span>, [<span class=\"string\">&quot;神农架&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_16&quot;</span>,[<span class=\"string\">&quot;武汉&quot;</span>,<span class=\"string\">&quot;黄石&quot;</span>,<span class=\"string\">&quot;十堰&quot;</span>,<span class=\"string\">&quot;宜昌&quot;</span>,<span class=\"string\">&quot;襄阳&quot;</span>,<span class=\"string\">&quot;鄂州&quot;</span>,<span class=\"string\">&quot;荆门&quot;</span>,<span class=\"string\">&quot;孝感&quot;</span>,<span class=\"string\">&quot;荆州&quot;</span>,<span class=\"string\">&quot;黄冈&quot;</span>,<span class=\"string\">&quot;咸宁&quot;</span>,<span class=\"string\">&quot;随州&quot;</span>,<span class=\"string\">&quot;恩施&quot;</span>,<span class=\"string\">&quot;仙桃&quot;</span>,<span class=\"string\">&quot;潜江&quot;</span>,<span class=\"string\">&quot;天门&quot;</span>,<span class=\"string\">&quot;神农架&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_0&quot;</span>,[<span class=\"string\">&quot;芙蓉区&quot;</span>,<span class=\"string\">&quot;天心区&quot;</span>,<span class=\"string\">&quot;岳麓区&quot;</span>,<span class=\"string\">&quot;开福区&quot;</span>,<span class=\"string\">&quot;雨花区&quot;</span>,<span class=\"string\">&quot;望城区&quot;</span>,<span class=\"string\">&quot;长沙县&quot;</span>,<span class=\"string\">&quot;宁乡县&quot;</span>,<span class=\"string\">&quot;浏阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_1&quot;</span>,[<span class=\"string\">&quot;荷塘区&quot;</span>,<span class=\"string\">&quot;芦淞区&quot;</span>,<span class=\"string\">&quot;石峰区&quot;</span>,<span class=\"string\">&quot;天元区&quot;</span>,<span class=\"string\">&quot;株洲县&quot;</span>,<span class=\"string\">&quot;攸县&quot;</span>,<span class=\"string\">&quot;茶陵县&quot;</span>,<span class=\"string\">&quot;炎陵县&quot;</span>,<span class=\"string\">&quot;醴陵市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_2&quot;</span>,[<span class=\"string\">&quot;雨湖区&quot;</span>,<span class=\"string\">&quot;岳塘区&quot;</span>,<span class=\"string\">&quot;湘潭县&quot;</span>,<span class=\"string\">&quot;湘乡市&quot;</span>,<span class=\"string\">&quot;韶山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_3&quot;</span>,[<span class=\"string\">&quot;珠晖区&quot;</span>,<span class=\"string\">&quot;雁峰区&quot;</span>,<span class=\"string\">&quot;石鼓区&quot;</span>,<span class=\"string\">&quot;蒸湘区&quot;</span>,<span class=\"string\">&quot;南岳区&quot;</span>,<span class=\"string\">&quot;衡阳县&quot;</span>,<span class=\"string\">&quot;衡南县&quot;</span>,<span class=\"string\">&quot;衡山县&quot;</span>,<span class=\"string\">&quot;衡东县&quot;</span>,<span class=\"string\">&quot;祁东县&quot;</span>,<span class=\"string\">&quot;耒阳市&quot;</span>,<span class=\"string\">&quot;常宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_4&quot;</span>,[<span class=\"string\">&quot;双清区&quot;</span>,<span class=\"string\">&quot;大祥区&quot;</span>,<span class=\"string\">&quot;北塔区&quot;</span>,<span class=\"string\">&quot;邵东县&quot;</span>,<span class=\"string\">&quot;新邵县&quot;</span>,<span class=\"string\">&quot;邵阳县&quot;</span>,<span class=\"string\">&quot;隆回县&quot;</span>,<span class=\"string\">&quot;洞口县&quot;</span>,<span class=\"string\">&quot;绥宁县&quot;</span>,<span class=\"string\">&quot;新宁县&quot;</span>,<span class=\"string\">&quot;城步苗族自治县&quot;</span>,<span class=\"string\">&quot;武冈市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_5&quot;</span>,[<span class=\"string\">&quot;岳阳楼区&quot;</span>,<span class=\"string\">&quot;云溪区&quot;</span>,<span class=\"string\">&quot;君山区&quot;</span>,<span class=\"string\">&quot;岳阳县&quot;</span>,<span class=\"string\">&quot;华容县&quot;</span>,<span class=\"string\">&quot;湘阴县&quot;</span>,<span class=\"string\">&quot;平江县&quot;</span>,<span class=\"string\">&quot;汨罗市&quot;</span>,<span class=\"string\">&quot;临湘市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_6&quot;</span>,[<span class=\"string\">&quot;武陵区&quot;</span>,<span class=\"string\">&quot;鼎城区&quot;</span>,<span class=\"string\">&quot;安乡县&quot;</span>,<span class=\"string\">&quot;汉寿县&quot;</span>,<span class=\"string\">&quot;澧县&quot;</span>,<span class=\"string\">&quot;临澧县&quot;</span>,<span class=\"string\">&quot;桃源县&quot;</span>,<span class=\"string\">&quot;石门县&quot;</span>,<span class=\"string\">&quot;津市市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_7&quot;</span>,[<span class=\"string\">&quot;永定区&quot;</span>,<span class=\"string\">&quot;武陵源区&quot;</span>,<span class=\"string\">&quot;慈利县&quot;</span>,<span class=\"string\">&quot;桑植县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_8&quot;</span>,[<span class=\"string\">&quot;资阳区&quot;</span>,<span class=\"string\">&quot;赫山区&quot;</span>,<span class=\"string\">&quot;南县&quot;</span>,<span class=\"string\">&quot;桃江县&quot;</span>,<span class=\"string\">&quot;安化县&quot;</span>,<span class=\"string\">&quot;沅江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_9&quot;</span>,[<span class=\"string\">&quot;北湖区&quot;</span>,<span class=\"string\">&quot;苏仙区&quot;</span>,<span class=\"string\">&quot;桂阳县&quot;</span>,<span class=\"string\">&quot;宜章县&quot;</span>,<span class=\"string\">&quot;永兴县&quot;</span>,<span class=\"string\">&quot;嘉禾县&quot;</span>,<span class=\"string\">&quot;临武县&quot;</span>,<span class=\"string\">&quot;汝城县&quot;</span>,<span class=\"string\">&quot;桂东县&quot;</span>,<span class=\"string\">&quot;安仁县&quot;</span>,<span class=\"string\">&quot;资兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_10&quot;</span>,[<span class=\"string\">&quot;零陵区&quot;</span>,<span class=\"string\">&quot;冷水滩区&quot;</span>,<span class=\"string\">&quot;祁阳县&quot;</span>,<span class=\"string\">&quot;东安县&quot;</span>,<span class=\"string\">&quot;双牌县&quot;</span>,<span class=\"string\">&quot;道县&quot;</span>,<span class=\"string\">&quot;江永县&quot;</span>,<span class=\"string\">&quot;宁远县&quot;</span>,<span class=\"string\">&quot;蓝山县&quot;</span>,<span class=\"string\">&quot;新田县&quot;</span>,<span class=\"string\">&quot;江华瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_11&quot;</span>,[<span class=\"string\">&quot;鹤城区&quot;</span>,<span class=\"string\">&quot;中方县&quot;</span>,<span class=\"string\">&quot;沅陵县&quot;</span>,<span class=\"string\">&quot;辰溪县&quot;</span>,<span class=\"string\">&quot;溆浦县&quot;</span>,<span class=\"string\">&quot;会同县&quot;</span>,<span class=\"string\">&quot;麻阳苗族自治县&quot;</span>,<span class=\"string\">&quot;新晃侗族自治县&quot;</span>,<span class=\"string\">&quot;芷江侗族自治县&quot;</span>,<span class=\"string\">&quot;靖州苗族侗族自治县&quot;</span>,<span class=\"string\">&quot;通道侗族自治县&quot;</span>,<span class=\"string\">&quot;洪江市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_12&quot;</span>,[<span class=\"string\">&quot;娄星区&quot;</span>,<span class=\"string\">&quot;双峰县&quot;</span>,<span class=\"string\">&quot;新化县&quot;</span>,<span class=\"string\">&quot;冷水江市&quot;</span>,<span class=\"string\">&quot;涟源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17_13&quot;</span>,[<span class=\"string\">&quot;吉首市&quot;</span>,<span class=\"string\">&quot;泸溪县&quot;</span>,<span class=\"string\">&quot;凤凰县&quot;</span>,<span class=\"string\">&quot;花垣县&quot;</span>,<span class=\"string\">&quot;保靖县&quot;</span>,<span class=\"string\">&quot;古丈县&quot;</span>,<span class=\"string\">&quot;永顺县&quot;</span>,<span class=\"string\">&quot;龙山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_17&quot;</span>,[<span class=\"string\">&quot;长沙&quot;</span>,<span class=\"string\">&quot;株洲&quot;</span>,<span class=\"string\">&quot;湘潭&quot;</span>,<span class=\"string\">&quot;衡阳&quot;</span>,<span class=\"string\">&quot;邵阳&quot;</span>,<span class=\"string\">&quot;岳阳&quot;</span>,<span class=\"string\">&quot;常德&quot;</span>,<span class=\"string\">&quot;张家界&quot;</span>,<span class=\"string\">&quot;益阳&quot;</span>,<span class=\"string\">&quot;郴州&quot;</span>,<span class=\"string\">&quot;永州&quot;</span>,<span class=\"string\">&quot;怀化&quot;</span>,<span class=\"string\">&quot;娄底&quot;</span>,<span class=\"string\">&quot;湘西&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_0&quot;</span>,[<span class=\"string\">&quot;荔湾区&quot;</span>,<span class=\"string\">&quot;越秀区&quot;</span>,<span class=\"string\">&quot;海珠区&quot;</span>,<span class=\"string\">&quot;天河区&quot;</span>,<span class=\"string\">&quot;白云区&quot;</span>,<span class=\"string\">&quot;黄埔区&quot;</span>,<span class=\"string\">&quot;番禺区&quot;</span>,<span class=\"string\">&quot;花都区&quot;</span>,<span class=\"string\">&quot;南沙区&quot;</span>,<span class=\"string\">&quot;增城区&quot;</span>,<span class=\"string\">&quot;从化区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_1&quot;</span>,[<span class=\"string\">&quot;武江区&quot;</span>,<span class=\"string\">&quot;浈江区&quot;</span>,<span class=\"string\">&quot;曲江区&quot;</span>,<span class=\"string\">&quot;始兴县&quot;</span>,<span class=\"string\">&quot;仁化县&quot;</span>,<span class=\"string\">&quot;翁源县&quot;</span>,<span class=\"string\">&quot;乳源瑶族自治县&quot;</span>,<span class=\"string\">&quot;新丰县&quot;</span>,<span class=\"string\">&quot;乐昌市&quot;</span>,<span class=\"string\">&quot;南雄市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_2&quot;</span>,[<span class=\"string\">&quot;罗湖区&quot;</span>,<span class=\"string\">&quot;福田区&quot;</span>,<span class=\"string\">&quot;南山区&quot;</span>,<span class=\"string\">&quot;宝安区&quot;</span>,<span class=\"string\">&quot;龙岗区&quot;</span>,<span class=\"string\">&quot;盐田区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_3&quot;</span>,[<span class=\"string\">&quot;香洲区&quot;</span>,<span class=\"string\">&quot;斗门区&quot;</span>,<span class=\"string\">&quot;金湾区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_4&quot;</span>,[<span class=\"string\">&quot;龙湖区&quot;</span>,<span class=\"string\">&quot;金平区&quot;</span>,<span class=\"string\">&quot;濠江区&quot;</span>,<span class=\"string\">&quot;潮阳区&quot;</span>,<span class=\"string\">&quot;潮南区&quot;</span>,<span class=\"string\">&quot;澄海区&quot;</span>,<span class=\"string\">&quot;南澳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_5&quot;</span>,[<span class=\"string\">&quot;禅城区&quot;</span>,<span class=\"string\">&quot;南海区&quot;</span>,<span class=\"string\">&quot;顺德区&quot;</span>,<span class=\"string\">&quot;三水区&quot;</span>,<span class=\"string\">&quot;高明区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_6&quot;</span>,[<span class=\"string\">&quot;蓬江区&quot;</span>,<span class=\"string\">&quot;江海区&quot;</span>,<span class=\"string\">&quot;新会区&quot;</span>,<span class=\"string\">&quot;台山市&quot;</span>,<span class=\"string\">&quot;开平市&quot;</span>,<span class=\"string\">&quot;鹤山市&quot;</span>,<span class=\"string\">&quot;恩平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_7&quot;</span>,[<span class=\"string\">&quot;赤坎区&quot;</span>,<span class=\"string\">&quot;霞山区&quot;</span>,<span class=\"string\">&quot;坡头区&quot;</span>,<span class=\"string\">&quot;麻章区&quot;</span>,<span class=\"string\">&quot;遂溪县&quot;</span>,<span class=\"string\">&quot;徐闻县&quot;</span>,<span class=\"string\">&quot;廉江市&quot;</span>,<span class=\"string\">&quot;雷州市&quot;</span>,<span class=\"string\">&quot;吴川市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_8&quot;</span>,[<span class=\"string\">&quot;茂南区&quot;</span>,<span class=\"string\">&quot;电白区&quot;</span>,<span class=\"string\">&quot;高州市&quot;</span>,<span class=\"string\">&quot;化州市&quot;</span>,<span class=\"string\">&quot;信宜市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_9&quot;</span>,[<span class=\"string\">&quot;端州区&quot;</span>,<span class=\"string\">&quot;鼎湖区&quot;</span>,<span class=\"string\">&quot;广宁县&quot;</span>,<span class=\"string\">&quot;怀集县&quot;</span>,<span class=\"string\">&quot;封开县&quot;</span>,<span class=\"string\">&quot;德庆县&quot;</span>,<span class=\"string\">&quot;高要市&quot;</span>,<span class=\"string\">&quot;四会市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_10&quot;</span>,[<span class=\"string\">&quot;惠城区&quot;</span>,<span class=\"string\">&quot;惠阳区&quot;</span>,<span class=\"string\">&quot;博罗县&quot;</span>,<span class=\"string\">&quot;惠东县&quot;</span>,<span class=\"string\">&quot;龙门县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_11&quot;</span>,[<span class=\"string\">&quot;梅江区&quot;</span>,<span class=\"string\">&quot;梅县区&quot;</span>,<span class=\"string\">&quot;大埔县&quot;</span>,<span class=\"string\">&quot;丰顺县&quot;</span>,<span class=\"string\">&quot;五华县&quot;</span>,<span class=\"string\">&quot;平远县&quot;</span>,<span class=\"string\">&quot;蕉岭县&quot;</span>,<span class=\"string\">&quot;兴宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_12&quot;</span>,[<span class=\"string\">&quot;城区&quot;</span>,<span class=\"string\">&quot;海丰县&quot;</span>,<span class=\"string\">&quot;陆河县&quot;</span>,<span class=\"string\">&quot;陆丰市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_13&quot;</span>,[<span class=\"string\">&quot;源城区&quot;</span>,<span class=\"string\">&quot;紫金县&quot;</span>,<span class=\"string\">&quot;龙川县&quot;</span>,<span class=\"string\">&quot;连平县&quot;</span>,<span class=\"string\">&quot;和平县&quot;</span>,<span class=\"string\">&quot;东源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_14&quot;</span>,[<span class=\"string\">&quot;江城区&quot;</span>,<span class=\"string\">&quot;阳西县&quot;</span>,<span class=\"string\">&quot;阳东区&quot;</span>,<span class=\"string\">&quot;阳春市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_15&quot;</span>,[<span class=\"string\">&quot;清城区&quot;</span>,<span class=\"string\">&quot;清新区&quot;</span>,<span class=\"string\">&quot;佛冈县&quot;</span>,<span class=\"string\">&quot;阳山县&quot;</span>,<span class=\"string\">&quot;连山壮族瑶族自治县&quot;</span>,<span class=\"string\">&quot;连南瑶族自治县&quot;</span>,<span class=\"string\">&quot;英德市&quot;</span>,<span class=\"string\">&quot;连州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_16&quot;</span>,[<span class=\"string\">&quot;东宝路&quot;</span>,<span class=\"string\">&quot;花园新村&quot;</span>,<span class=\"string\">&quot;三元里&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_17&quot;</span>,[<span class=\"string\">&quot;竹苑&quot;</span>,<span class=\"string\">&quot;湖滨北路&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_18&quot;</span>,[<span class=\"string\">&quot;湘桥区&quot;</span>,<span class=\"string\">&quot;潮安区&quot;</span>,<span class=\"string\">&quot;饶平县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_19&quot;</span>,[<span class=\"string\">&quot;榕城区&quot;</span>,<span class=\"string\">&quot;揭东区&quot;</span>,<span class=\"string\">&quot;揭西县&quot;</span>,<span class=\"string\">&quot;惠来县&quot;</span>,<span class=\"string\">&quot;普宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18_20&quot;</span>,[<span class=\"string\">&quot;云城区&quot;</span>,<span class=\"string\">&quot;新兴县&quot;</span>,<span class=\"string\">&quot;郁南县&quot;</span>,<span class=\"string\">&quot;云安区&quot;</span>,<span class=\"string\">&quot;罗定市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_18&quot;</span>,[<span class=\"string\">&quot;广州&quot;</span>,<span class=\"string\">&quot;韶关&quot;</span>,<span class=\"string\">&quot;深圳&quot;</span>,<span class=\"string\">&quot;珠海&quot;</span>,<span class=\"string\">&quot;汕头&quot;</span>,<span class=\"string\">&quot;佛山&quot;</span>,<span class=\"string\">&quot;江门&quot;</span>,<span class=\"string\">&quot;湛江&quot;</span>,<span class=\"string\">&quot;茂名&quot;</span>,<span class=\"string\">&quot;肇庆&quot;</span>,<span class=\"string\">&quot;惠州&quot;</span>,<span class=\"string\">&quot;梅州&quot;</span>,<span class=\"string\">&quot;汕尾&quot;</span>,<span class=\"string\">&quot;河源&quot;</span>,<span class=\"string\">&quot;阳江&quot;</span>,<span class=\"string\">&quot;清远&quot;</span>,<span class=\"string\">&quot;东莞&quot;</span>,<span class=\"string\">&quot;中山&quot;</span>,<span class=\"string\">&quot;潮州&quot;</span>,<span class=\"string\">&quot;揭阳&quot;</span>,<span class=\"string\">&quot;云浮&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_0&quot;</span>,[<span class=\"string\">&quot;兴宁区&quot;</span>,<span class=\"string\">&quot;青秀区&quot;</span>,<span class=\"string\">&quot;江南区&quot;</span>,<span class=\"string\">&quot;西乡塘区&quot;</span>,<span class=\"string\">&quot;良庆区&quot;</span>,<span class=\"string\">&quot;邕宁区&quot;</span>,<span class=\"string\">&quot;武鸣县&quot;</span>,<span class=\"string\">&quot;隆安县&quot;</span>,<span class=\"string\">&quot;马山县&quot;</span>,<span class=\"string\">&quot;上林县&quot;</span>,<span class=\"string\">&quot;宾阳县&quot;</span>,<span class=\"string\">&quot;横县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_1&quot;</span>,[<span class=\"string\">&quot;城中区&quot;</span>,<span class=\"string\">&quot;鱼峰区&quot;</span>,<span class=\"string\">&quot;柳南区&quot;</span>,<span class=\"string\">&quot;柳北区&quot;</span>,<span class=\"string\">&quot;柳江县&quot;</span>,<span class=\"string\">&quot;柳城县&quot;</span>,<span class=\"string\">&quot;鹿寨县&quot;</span>,<span class=\"string\">&quot;融安县&quot;</span>,<span class=\"string\">&quot;融水苗族自治县&quot;</span>,<span class=\"string\">&quot;三江侗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_2&quot;</span>,[<span class=\"string\">&quot;秀峰区&quot;</span>,<span class=\"string\">&quot;叠彩区&quot;</span>,<span class=\"string\">&quot;象山区&quot;</span>,<span class=\"string\">&quot;七星区&quot;</span>,<span class=\"string\">&quot;雁山区&quot;</span>,<span class=\"string\">&quot;临桂区&quot;</span>,<span class=\"string\">&quot;阳朔县&quot;</span>,<span class=\"string\">&quot;灵川县&quot;</span>,<span class=\"string\">&quot;全州县&quot;</span>,<span class=\"string\">&quot;兴安县&quot;</span>,<span class=\"string\">&quot;永福县&quot;</span>,<span class=\"string\">&quot;灌阳县&quot;</span>,<span class=\"string\">&quot;龙胜各族自治县&quot;</span>,<span class=\"string\">&quot;资源县&quot;</span>,<span class=\"string\">&quot;平乐县&quot;</span>,<span class=\"string\">&quot;荔浦县&quot;</span>,<span class=\"string\">&quot;恭城瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_3&quot;</span>,[<span class=\"string\">&quot;万秀区&quot;</span>,<span class=\"string\">&quot;长洲区&quot;</span>,<span class=\"string\">&quot;龙圩区&quot;</span>,<span class=\"string\">&quot;苍梧县&quot;</span>,<span class=\"string\">&quot;藤县&quot;</span>,<span class=\"string\">&quot;蒙山县&quot;</span>,<span class=\"string\">&quot;岑溪市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_4&quot;</span>,[<span class=\"string\">&quot;海城区&quot;</span>,<span class=\"string\">&quot;银海区&quot;</span>,<span class=\"string\">&quot;铁山港区&quot;</span>,<span class=\"string\">&quot;合浦县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_5&quot;</span>,[<span class=\"string\">&quot;港口区&quot;</span>,<span class=\"string\">&quot;防城区&quot;</span>,<span class=\"string\">&quot;上思县&quot;</span>,<span class=\"string\">&quot;东兴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_6&quot;</span>,[<span class=\"string\">&quot;钦南区&quot;</span>,<span class=\"string\">&quot;钦北区&quot;</span>,<span class=\"string\">&quot;灵山县&quot;</span>,<span class=\"string\">&quot;浦北县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_7&quot;</span>,[<span class=\"string\">&quot;港北区&quot;</span>,<span class=\"string\">&quot;港南区&quot;</span>,<span class=\"string\">&quot;覃塘区&quot;</span>,<span class=\"string\">&quot;平南县&quot;</span>,<span class=\"string\">&quot;桂平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_8&quot;</span>,[<span class=\"string\">&quot;玉州区&quot;</span>,<span class=\"string\">&quot;福绵区&quot;</span>,<span class=\"string\">&quot;容县&quot;</span>,<span class=\"string\">&quot;陆川县&quot;</span>,<span class=\"string\">&quot;博白县&quot;</span>,<span class=\"string\">&quot;兴业县&quot;</span>,<span class=\"string\">&quot;北流市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_9&quot;</span>,[<span class=\"string\">&quot;右江区&quot;</span>,<span class=\"string\">&quot;田阳县&quot;</span>,<span class=\"string\">&quot;田东县&quot;</span>,<span class=\"string\">&quot;平果县&quot;</span>,<span class=\"string\">&quot;德保县&quot;</span>,<span class=\"string\">&quot;靖西县&quot;</span>,<span class=\"string\">&quot;那坡县&quot;</span>,<span class=\"string\">&quot;凌云县&quot;</span>,<span class=\"string\">&quot;乐业县&quot;</span>,<span class=\"string\">&quot;田林县&quot;</span>,<span class=\"string\">&quot;西林县&quot;</span>,<span class=\"string\">&quot;隆林各族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_10&quot;</span>,[<span class=\"string\">&quot;八步区&quot;</span>,<span class=\"string\">&quot;昭平县&quot;</span>,<span class=\"string\">&quot;钟山县&quot;</span>,<span class=\"string\">&quot;富川瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_11&quot;</span>,[<span class=\"string\">&quot;金城江区&quot;</span>,<span class=\"string\">&quot;南丹县&quot;</span>,<span class=\"string\">&quot;天峨县&quot;</span>,<span class=\"string\">&quot;凤山县&quot;</span>,<span class=\"string\">&quot;东兰县&quot;</span>,<span class=\"string\">&quot;罗城仫佬族自治县&quot;</span>,<span class=\"string\">&quot;环江毛南族自治县&quot;</span>,<span class=\"string\">&quot;巴马瑶族自治县&quot;</span>,<span class=\"string\">&quot;都安瑶族自治县&quot;</span>,<span class=\"string\">&quot;大化瑶族自治县&quot;</span>,<span class=\"string\">&quot;宜州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_12&quot;</span>,[<span class=\"string\">&quot;兴宾区&quot;</span>,<span class=\"string\">&quot;忻城县&quot;</span>,<span class=\"string\">&quot;象州县&quot;</span>,<span class=\"string\">&quot;武宣县&quot;</span>,<span class=\"string\">&quot;金秀瑶族自治县&quot;</span>,<span class=\"string\">&quot;合山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19_13&quot;</span>,[<span class=\"string\">&quot;江州区&quot;</span>,<span class=\"string\">&quot;扶绥县&quot;</span>,<span class=\"string\">&quot;宁明县&quot;</span>,<span class=\"string\">&quot;龙州县&quot;</span>,<span class=\"string\">&quot;大新县&quot;</span>,<span class=\"string\">&quot;天等县&quot;</span>,<span class=\"string\">&quot;凭祥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_19&quot;</span>,[<span class=\"string\">&quot;南宁&quot;</span>,<span class=\"string\">&quot;柳州&quot;</span>,<span class=\"string\">&quot;桂林&quot;</span>,<span class=\"string\">&quot;梧州&quot;</span>,<span class=\"string\">&quot;北海&quot;</span>,<span class=\"string\">&quot;防城港&quot;</span>,<span class=\"string\">&quot;钦州&quot;</span>,<span class=\"string\">&quot;贵港&quot;</span>,<span class=\"string\">&quot;玉林&quot;</span>,<span class=\"string\">&quot;百色&quot;</span>,<span class=\"string\">&quot;贺州&quot;</span>,<span class=\"string\">&quot;河池&quot;</span>,<span class=\"string\">&quot;来宾&quot;</span>,<span class=\"string\">&quot;崇左&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_0&quot;</span>,[<span class=\"string\">&quot;秀英区&quot;</span>,<span class=\"string\">&quot;龙华区&quot;</span>,<span class=\"string\">&quot;琼山区&quot;</span>,<span class=\"string\">&quot;美兰区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_1&quot;</span>,[<span class=\"string\">&quot;海棠区&quot;</span>,<span class=\"string\">&quot;吉阳区&quot;</span>,<span class=\"string\">&quot;天涯区&quot;</span>,<span class=\"string\">&quot;崖州区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_2&quot;</span>,[<span class=\"string\">&quot;西沙群岛&quot;</span>,<span class=\"string\">&quot;南沙群岛&quot;</span>,<span class=\"string\">&quot;中沙群岛的岛礁及其海域&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_3&quot;</span>,[<span class=\"string\">&quot;五指山&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_4&quot;</span>,[<span class=\"string\">&quot;琼海&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_5&quot;</span>,[<span class=\"string\">&quot;儋州&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_6&quot;</span>,[<span class=\"string\">&quot;文昌&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_7&quot;</span>,[<span class=\"string\">&quot;万宁&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_8&quot;</span>,[<span class=\"string\">&quot;东方&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_9&quot;</span>,[<span class=\"string\">&quot;定安县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_10&quot;</span>,[<span class=\"string\">&quot;屯昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_11&quot;</span>,[<span class=\"string\">&quot;澄迈县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_12&quot;</span>,[<span class=\"string\">&quot;临高县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_13&quot;</span>,[<span class=\"string\">&quot;白沙黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_14&quot;</span>,[<span class=\"string\">&quot;昌江黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_15&quot;</span>,[<span class=\"string\">&quot;乐东黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_16&quot;</span>,[<span class=\"string\">&quot;陵水黎族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_17&quot;</span>,[<span class=\"string\">&quot;保亭黎族苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20_18&quot;</span>,[<span class=\"string\">&quot;琼中黎族苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_20&quot;</span>,[<span class=\"string\">&quot;海口&quot;</span>,<span class=\"string\">&quot;三亚&quot;</span>,<span class=\"string\">&quot;三沙&quot;</span>,<span class=\"string\">&quot;五指山&quot;</span>,<span class=\"string\">&quot;琼海&quot;</span>,<span class=\"string\">&quot;儋州&quot;</span>,<span class=\"string\">&quot;文昌&quot;</span>,<span class=\"string\">&quot;万宁&quot;</span>,<span class=\"string\">&quot;东方&quot;</span>,<span class=\"string\">&quot;定安县&quot;</span>,<span class=\"string\">&quot;屯昌县&quot;</span>,<span class=\"string\">&quot;澄迈县&quot;</span>,<span class=\"string\">&quot;临高县&quot;</span>,<span class=\"string\">&quot;白沙&quot;</span>,<span class=\"string\">&quot;昌江&quot;</span>,<span class=\"string\">&quot;乐东&quot;</span>,<span class=\"string\">&quot;陵水&quot;</span>,<span class=\"string\">&quot;保亭&quot;</span>,<span class=\"string\">&quot;琼中&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_21_0&quot;</span>,[<span class=\"string\">&quot;万州区&quot;</span>,<span class=\"string\">&quot;涪陵区&quot;</span>,<span class=\"string\">&quot;渝中区&quot;</span>,<span class=\"string\">&quot;大渡口区&quot;</span>,<span class=\"string\">&quot;江北区&quot;</span>,<span class=\"string\">&quot;沙坪坝区&quot;</span>,<span class=\"string\">&quot;九龙坡区&quot;</span>,<span class=\"string\">&quot;南岸区&quot;</span>,<span class=\"string\">&quot;北碚区&quot;</span>,<span class=\"string\">&quot;綦江区&quot;</span>,<span class=\"string\">&quot;大足区&quot;</span>,<span class=\"string\">&quot;渝北区&quot;</span>,<span class=\"string\">&quot;巴南区&quot;</span>,<span class=\"string\">&quot;黔江区&quot;</span>,<span class=\"string\">&quot;长寿区&quot;</span>,<span class=\"string\">&quot;江津区&quot;</span>,<span class=\"string\">&quot;合川区&quot;</span>,<span class=\"string\">&quot;永川区&quot;</span>,<span class=\"string\">&quot;南川区&quot;</span>,<span class=\"string\">&quot;潼南县&quot;</span>,<span class=\"string\">&quot;铜梁区&quot;</span>,<span class=\"string\">&quot;荣昌县&quot;</span>,<span class=\"string\">&quot;璧山区&quot;</span>,<span class=\"string\">&quot;梁平县&quot;</span>,<span class=\"string\">&quot;城口县&quot;</span>,<span class=\"string\">&quot;丰都县&quot;</span>,<span class=\"string\">&quot;垫江县&quot;</span>,<span class=\"string\">&quot;武隆县&quot;</span>,<span class=\"string\">&quot;忠县&quot;</span>,<span class=\"string\">&quot;开县&quot;</span>,<span class=\"string\">&quot;云阳县&quot;</span>,<span class=\"string\">&quot;奉节县&quot;</span>,<span class=\"string\">&quot;巫山县&quot;</span>,<span class=\"string\">&quot;巫溪县&quot;</span>,<span class=\"string\">&quot;石柱土家族自治县&quot;</span>,<span class=\"string\">&quot;秀山土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;酉阳土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;彭水苗族土家族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_21&quot;</span>,[<span class=\"string\">&quot;重庆&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_0&quot;</span>,[<span class=\"string\">&quot;锦江区&quot;</span>,<span class=\"string\">&quot;青羊区&quot;</span>,<span class=\"string\">&quot;金牛区&quot;</span>,<span class=\"string\">&quot;武侯区&quot;</span>,<span class=\"string\">&quot;成华区&quot;</span>,<span class=\"string\">&quot;龙泉驿区&quot;</span>,<span class=\"string\">&quot;青白江区&quot;</span>,<span class=\"string\">&quot;新都区&quot;</span>,<span class=\"string\">&quot;温江区&quot;</span>,<span class=\"string\">&quot;金堂县&quot;</span>,<span class=\"string\">&quot;双流县&quot;</span>,<span class=\"string\">&quot;郫县&quot;</span>,<span class=\"string\">&quot;大邑县&quot;</span>,<span class=\"string\">&quot;蒲江县&quot;</span>,<span class=\"string\">&quot;新津县&quot;</span>,<span class=\"string\">&quot;都江堰市&quot;</span>,<span class=\"string\">&quot;彭州市&quot;</span>,<span class=\"string\">&quot;邛崃市&quot;</span>,<span class=\"string\">&quot;崇州市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_1&quot;</span>,[<span class=\"string\">&quot;自流井区&quot;</span>,<span class=\"string\">&quot;贡井区&quot;</span>,<span class=\"string\">&quot;大安区&quot;</span>,<span class=\"string\">&quot;沿滩区&quot;</span>,<span class=\"string\">&quot;荣县&quot;</span>,<span class=\"string\">&quot;富顺县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_2&quot;</span>,[<span class=\"string\">&quot;东区&quot;</span>,<span class=\"string\">&quot;西区&quot;</span>,<span class=\"string\">&quot;仁和区&quot;</span>,<span class=\"string\">&quot;米易县&quot;</span>,<span class=\"string\">&quot;盐边县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_3&quot;</span>,[<span class=\"string\">&quot;江阳区&quot;</span>,<span class=\"string\">&quot;纳溪区&quot;</span>,<span class=\"string\">&quot;龙马潭区&quot;</span>,<span class=\"string\">&quot;泸县&quot;</span>,<span class=\"string\">&quot;合江县&quot;</span>,<span class=\"string\">&quot;叙永县&quot;</span>,<span class=\"string\">&quot;古蔺县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_4&quot;</span>,[<span class=\"string\">&quot;旌阳区&quot;</span>,<span class=\"string\">&quot;中江县&quot;</span>,<span class=\"string\">&quot;罗江县&quot;</span>,<span class=\"string\">&quot;广汉市&quot;</span>,<span class=\"string\">&quot;什邡市&quot;</span>,<span class=\"string\">&quot;绵竹市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_5&quot;</span>,[<span class=\"string\">&quot;涪城区&quot;</span>,<span class=\"string\">&quot;游仙区&quot;</span>,<span class=\"string\">&quot;三台县&quot;</span>,<span class=\"string\">&quot;盐亭县&quot;</span>,<span class=\"string\">&quot;安县&quot;</span>,<span class=\"string\">&quot;梓潼县&quot;</span>,<span class=\"string\">&quot;北川羌族自治县&quot;</span>,<span class=\"string\">&quot;平武县&quot;</span>,<span class=\"string\">&quot;江油市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_6&quot;</span>,[<span class=\"string\">&quot;利州区&quot;</span>,<span class=\"string\">&quot;昭化区&quot;</span>,<span class=\"string\">&quot;朝天区&quot;</span>,<span class=\"string\">&quot;旺苍县&quot;</span>,<span class=\"string\">&quot;青川县&quot;</span>,<span class=\"string\">&quot;剑阁县&quot;</span>,<span class=\"string\">&quot;苍溪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_7&quot;</span>,[<span class=\"string\">&quot;船山区&quot;</span>,<span class=\"string\">&quot;安居区&quot;</span>,<span class=\"string\">&quot;蓬溪县&quot;</span>,<span class=\"string\">&quot;射洪县&quot;</span>,<span class=\"string\">&quot;大英县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_8&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;东兴区&quot;</span>,<span class=\"string\">&quot;威远县&quot;</span>,<span class=\"string\">&quot;资中县&quot;</span>,<span class=\"string\">&quot;隆昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_9&quot;</span>,[<span class=\"string\">&quot;市中区&quot;</span>,<span class=\"string\">&quot;沙湾区&quot;</span>,<span class=\"string\">&quot;五通桥区&quot;</span>,<span class=\"string\">&quot;金口河区&quot;</span>,<span class=\"string\">&quot;犍为县&quot;</span>,<span class=\"string\">&quot;井研县&quot;</span>,<span class=\"string\">&quot;夹江县&quot;</span>,<span class=\"string\">&quot;沐川县&quot;</span>,<span class=\"string\">&quot;峨边彝族自治县&quot;</span>,<span class=\"string\">&quot;马边彝族自治县&quot;</span>,<span class=\"string\">&quot;峨眉山市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_10&quot;</span>,[<span class=\"string\">&quot;顺庆区&quot;</span>,<span class=\"string\">&quot;高坪区&quot;</span>,<span class=\"string\">&quot;嘉陵区&quot;</span>,<span class=\"string\">&quot;南部县&quot;</span>,<span class=\"string\">&quot;营山县&quot;</span>,<span class=\"string\">&quot;蓬安县&quot;</span>,<span class=\"string\">&quot;仪陇县&quot;</span>,<span class=\"string\">&quot;西充县&quot;</span>,<span class=\"string\">&quot;阆中市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_11&quot;</span>,[<span class=\"string\">&quot;东坡区&quot;</span>,<span class=\"string\">&quot;仁寿县&quot;</span>,<span class=\"string\">&quot;彭山区&quot;</span>,<span class=\"string\">&quot;洪雅县&quot;</span>,<span class=\"string\">&quot;丹棱县&quot;</span>,<span class=\"string\">&quot;青神县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_12&quot;</span>,[<span class=\"string\">&quot;翠屏区&quot;</span>,<span class=\"string\">&quot;南溪区&quot;</span>,<span class=\"string\">&quot;宜宾县&quot;</span>,<span class=\"string\">&quot;江安县&quot;</span>,<span class=\"string\">&quot;长宁县&quot;</span>,<span class=\"string\">&quot;高县&quot;</span>,<span class=\"string\">&quot;珙县&quot;</span>,<span class=\"string\">&quot;筠连县&quot;</span>,<span class=\"string\">&quot;兴文县&quot;</span>,<span class=\"string\">&quot;屏山县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_13&quot;</span>,[<span class=\"string\">&quot;广安区&quot;</span>,<span class=\"string\">&quot;前锋区&quot;</span>,<span class=\"string\">&quot;岳池县&quot;</span>,<span class=\"string\">&quot;武胜县&quot;</span>,<span class=\"string\">&quot;邻水县&quot;</span>,<span class=\"string\">&quot;华蓥市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_14&quot;</span>,[<span class=\"string\">&quot;通川区&quot;</span>,<span class=\"string\">&quot;达川区&quot;</span>,<span class=\"string\">&quot;宣汉县&quot;</span>,<span class=\"string\">&quot;开江县&quot;</span>,<span class=\"string\">&quot;大竹县&quot;</span>,<span class=\"string\">&quot;渠县&quot;</span>,<span class=\"string\">&quot;万源市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_15&quot;</span>,[<span class=\"string\">&quot;雨城区&quot;</span>,<span class=\"string\">&quot;名山区&quot;</span>,<span class=\"string\">&quot;荥经县&quot;</span>,<span class=\"string\">&quot;汉源县&quot;</span>,<span class=\"string\">&quot;石棉县&quot;</span>,<span class=\"string\">&quot;天全县&quot;</span>,<span class=\"string\">&quot;芦山县&quot;</span>,<span class=\"string\">&quot;宝兴县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_16&quot;</span>,[<span class=\"string\">&quot;巴州区&quot;</span>,<span class=\"string\">&quot;恩阳区&quot;</span>,<span class=\"string\">&quot;通江县&quot;</span>,<span class=\"string\">&quot;南江县&quot;</span>,<span class=\"string\">&quot;平昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_17&quot;</span>,[<span class=\"string\">&quot;雁江区&quot;</span>,<span class=\"string\">&quot;安岳县&quot;</span>,<span class=\"string\">&quot;乐至县&quot;</span>,<span class=\"string\">&quot;简阳市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_18&quot;</span>,[<span class=\"string\">&quot;汶川县&quot;</span>,<span class=\"string\">&quot;理县&quot;</span>,<span class=\"string\">&quot;茂县&quot;</span>,<span class=\"string\">&quot;松潘县&quot;</span>,<span class=\"string\">&quot;九寨沟县&quot;</span>,<span class=\"string\">&quot;金川县&quot;</span>,<span class=\"string\">&quot;小金县&quot;</span>,<span class=\"string\">&quot;黑水县&quot;</span>,<span class=\"string\">&quot;马尔康县&quot;</span>,<span class=\"string\">&quot;壤塘县&quot;</span>,<span class=\"string\">&quot;阿坝县&quot;</span>,<span class=\"string\">&quot;若尔盖县&quot;</span>,<span class=\"string\">&quot;红原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_19&quot;</span>,[<span class=\"string\">&quot;康定县&quot;</span>,<span class=\"string\">&quot;泸定县&quot;</span>,<span class=\"string\">&quot;丹巴县&quot;</span>,<span class=\"string\">&quot;九龙县&quot;</span>,<span class=\"string\">&quot;雅江县&quot;</span>,<span class=\"string\">&quot;道孚县&quot;</span>,<span class=\"string\">&quot;炉霍县&quot;</span>,<span class=\"string\">&quot;甘孜县&quot;</span>,<span class=\"string\">&quot;新龙县&quot;</span>,<span class=\"string\">&quot;德格县&quot;</span>,<span class=\"string\">&quot;白玉县&quot;</span>,<span class=\"string\">&quot;石渠县&quot;</span>,<span class=\"string\">&quot;色达县&quot;</span>,<span class=\"string\">&quot;理塘县&quot;</span>,<span class=\"string\">&quot;巴塘县&quot;</span>,<span class=\"string\">&quot;乡城县&quot;</span>,<span class=\"string\">&quot;稻城县&quot;</span>,<span class=\"string\">&quot;得荣县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22_20&quot;</span>,[<span class=\"string\">&quot;西昌市&quot;</span>,<span class=\"string\">&quot;木里藏族自治县&quot;</span>,<span class=\"string\">&quot;盐源县&quot;</span>,<span class=\"string\">&quot;德昌县&quot;</span>,<span class=\"string\">&quot;会理县&quot;</span>,<span class=\"string\">&quot;会东县&quot;</span>,<span class=\"string\">&quot;宁南县&quot;</span>,<span class=\"string\">&quot;普格县&quot;</span>,<span class=\"string\">&quot;布拖县&quot;</span>,<span class=\"string\">&quot;金阳县&quot;</span>,<span class=\"string\">&quot;昭觉县&quot;</span>,<span class=\"string\">&quot;喜德县&quot;</span>,<span class=\"string\">&quot;冕宁县&quot;</span>,<span class=\"string\">&quot;越西县&quot;</span>,<span class=\"string\">&quot;甘洛县&quot;</span>,<span class=\"string\">&quot;美姑县&quot;</span>,<span class=\"string\">&quot;雷波县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_22&quot;</span>,[<span class=\"string\">&quot;成都&quot;</span>,<span class=\"string\">&quot;自贡&quot;</span>,<span class=\"string\">&quot;攀枝花&quot;</span>,<span class=\"string\">&quot;泸州&quot;</span>,<span class=\"string\">&quot;德阳&quot;</span>,<span class=\"string\">&quot;绵阳&quot;</span>,<span class=\"string\">&quot;广元&quot;</span>,<span class=\"string\">&quot;遂宁&quot;</span>,<span class=\"string\">&quot;内江&quot;</span>,<span class=\"string\">&quot;乐山&quot;</span>,<span class=\"string\">&quot;南充&quot;</span>,<span class=\"string\">&quot;眉山&quot;</span>,<span class=\"string\">&quot;宜宾&quot;</span>,<span class=\"string\">&quot;广安&quot;</span>,<span class=\"string\">&quot;达州&quot;</span>,<span class=\"string\">&quot;雅安&quot;</span>,<span class=\"string\">&quot;巴中&quot;</span>,<span class=\"string\">&quot;资阳&quot;</span>,<span class=\"string\">&quot;阿坝&quot;</span>,<span class=\"string\">&quot;甘孜&quot;</span>,<span class=\"string\">&quot;凉山&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_0&quot;</span>,[<span class=\"string\">&quot;南明区&quot;</span>,<span class=\"string\">&quot;云岩区&quot;</span>,<span class=\"string\">&quot;花溪区&quot;</span>,<span class=\"string\">&quot;乌当区&quot;</span>,<span class=\"string\">&quot;白云区&quot;</span>,<span class=\"string\">&quot;观山湖区&quot;</span>,<span class=\"string\">&quot;开阳县&quot;</span>,<span class=\"string\">&quot;息烽县&quot;</span>,<span class=\"string\">&quot;修文县&quot;</span>,<span class=\"string\">&quot;清镇市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_1&quot;</span>,[<span class=\"string\">&quot;钟山区&quot;</span>,<span class=\"string\">&quot;六枝特区&quot;</span>,<span class=\"string\">&quot;水城县&quot;</span>,<span class=\"string\">&quot;盘县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_2&quot;</span>,[<span class=\"string\">&quot;红花岗区&quot;</span>,<span class=\"string\">&quot;汇川区&quot;</span>,<span class=\"string\">&quot;遵义县&quot;</span>,<span class=\"string\">&quot;桐梓县&quot;</span>,<span class=\"string\">&quot;绥阳县&quot;</span>,<span class=\"string\">&quot;正安县&quot;</span>,<span class=\"string\">&quot;道真仡佬族苗族自治县&quot;</span>,<span class=\"string\">&quot;务川仡佬族苗族自治县&quot;</span>,<span class=\"string\">&quot;凤冈县&quot;</span>,<span class=\"string\">&quot;湄潭县&quot;</span>,<span class=\"string\">&quot;余庆县&quot;</span>,<span class=\"string\">&quot;习水县&quot;</span>,<span class=\"string\">&quot;赤水市&quot;</span>,<span class=\"string\">&quot;仁怀市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_3&quot;</span>,[<span class=\"string\">&quot;西秀区&quot;</span>,<span class=\"string\">&quot;平坝县&quot;</span>,<span class=\"string\">&quot;普定县&quot;</span>,<span class=\"string\">&quot;镇宁布依族苗族自治县&quot;</span>,<span class=\"string\">&quot;关岭布依族苗族自治县&quot;</span>,<span class=\"string\">&quot;紫云苗族布依族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_4&quot;</span>,[<span class=\"string\">&quot;七星关区&quot;</span>,<span class=\"string\">&quot;大方县&quot;</span>,<span class=\"string\">&quot;黔西县&quot;</span>,<span class=\"string\">&quot;金沙县&quot;</span>,<span class=\"string\">&quot;织金县&quot;</span>,<span class=\"string\">&quot;纳雍县&quot;</span>,<span class=\"string\">&quot;威宁彝族回族苗族自治县&quot;</span>,<span class=\"string\">&quot;赫章县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_5&quot;</span>,[<span class=\"string\">&quot;碧江区&quot;</span>,<span class=\"string\">&quot;万山区&quot;</span>,<span class=\"string\">&quot;江口县&quot;</span>,<span class=\"string\">&quot;玉屏侗族自治县&quot;</span>,<span class=\"string\">&quot;石阡县&quot;</span>,<span class=\"string\">&quot;思南县&quot;</span>,<span class=\"string\">&quot;印江土家族苗族自治县&quot;</span>,<span class=\"string\">&quot;德江县&quot;</span>,<span class=\"string\">&quot;沿河土家族自治县&quot;</span>,<span class=\"string\">&quot;松桃苗族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_6&quot;</span>,[<span class=\"string\">&quot;兴义市&quot;</span>,<span class=\"string\">&quot;兴仁县&quot;</span>,<span class=\"string\">&quot;普安县&quot;</span>,<span class=\"string\">&quot;晴隆县&quot;</span>,<span class=\"string\">&quot;贞丰县&quot;</span>,<span class=\"string\">&quot;望谟县&quot;</span>,<span class=\"string\">&quot;册亨县&quot;</span>,<span class=\"string\">&quot;安龙县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_7&quot;</span>,[<span class=\"string\">&quot;凯里市&quot;</span>,<span class=\"string\">&quot;黄平县&quot;</span>,<span class=\"string\">&quot;施秉县&quot;</span>,<span class=\"string\">&quot;三穗县&quot;</span>,<span class=\"string\">&quot;镇远县&quot;</span>,<span class=\"string\">&quot;岑巩县&quot;</span>,<span class=\"string\">&quot;天柱县&quot;</span>,<span class=\"string\">&quot;锦屏县&quot;</span>,<span class=\"string\">&quot;剑河县&quot;</span>,<span class=\"string\">&quot;台江县&quot;</span>,<span class=\"string\">&quot;黎平县&quot;</span>,<span class=\"string\">&quot;榕江县&quot;</span>,<span class=\"string\">&quot;从江县&quot;</span>,<span class=\"string\">&quot;雷山县&quot;</span>,<span class=\"string\">&quot;麻江县&quot;</span>,<span class=\"string\">&quot;丹寨县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23_8&quot;</span>,[<span class=\"string\">&quot;都匀市&quot;</span>,<span class=\"string\">&quot;福泉市&quot;</span>,<span class=\"string\">&quot;荔波县&quot;</span>,<span class=\"string\">&quot;贵定县&quot;</span>,<span class=\"string\">&quot;瓮安县&quot;</span>,<span class=\"string\">&quot;独山县&quot;</span>,<span class=\"string\">&quot;平塘县&quot;</span>,<span class=\"string\">&quot;罗甸县&quot;</span>,<span class=\"string\">&quot;长顺县&quot;</span>,<span class=\"string\">&quot;龙里县&quot;</span>,<span class=\"string\">&quot;惠水县&quot;</span>,<span class=\"string\">&quot;三都水族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_23&quot;</span>,[<span class=\"string\">&quot;贵阳&quot;</span>,<span class=\"string\">&quot;六盘水&quot;</span>,<span class=\"string\">&quot;遵义&quot;</span>,<span class=\"string\">&quot;安顺&quot;</span>,<span class=\"string\">&quot;毕节&quot;</span>,<span class=\"string\">&quot;铜仁&quot;</span>,<span class=\"string\">&quot;黔西南&quot;</span>,<span class=\"string\">&quot;黔东南&quot;</span>,<span class=\"string\">&quot;黔南&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_0&quot;</span>,[<span class=\"string\">&quot;五华区&quot;</span>,<span class=\"string\">&quot;盘龙区&quot;</span>,<span class=\"string\">&quot;官渡区&quot;</span>,<span class=\"string\">&quot;西山区&quot;</span>,<span class=\"string\">&quot;东川区&quot;</span>,<span class=\"string\">&quot;呈贡区&quot;</span>,<span class=\"string\">&quot;晋宁县&quot;</span>,<span class=\"string\">&quot;富民县&quot;</span>,<span class=\"string\">&quot;宜良县&quot;</span>,<span class=\"string\">&quot;石林彝族自治县&quot;</span>,<span class=\"string\">&quot;嵩明县&quot;</span>,<span class=\"string\">&quot;禄劝彝族苗族自治县&quot;</span>,<span class=\"string\">&quot;寻甸回族彝族自治县&quot;</span>,<span class=\"string\">&quot;安宁市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_1&quot;</span>,[<span class=\"string\">&quot;麒麟区&quot;</span>,<span class=\"string\">&quot;马龙县&quot;</span>,<span class=\"string\">&quot;陆良县&quot;</span>,<span class=\"string\">&quot;师宗县&quot;</span>,<span class=\"string\">&quot;罗平县&quot;</span>,<span class=\"string\">&quot;富源县&quot;</span>,<span class=\"string\">&quot;会泽县&quot;</span>,<span class=\"string\">&quot;沾益县&quot;</span>,<span class=\"string\">&quot;宣威市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_2&quot;</span>,[<span class=\"string\">&quot;红塔区&quot;</span>,<span class=\"string\">&quot;江川县&quot;</span>,<span class=\"string\">&quot;澄江县&quot;</span>,<span class=\"string\">&quot;通海县&quot;</span>,<span class=\"string\">&quot;华宁县&quot;</span>,<span class=\"string\">&quot;易门县&quot;</span>,<span class=\"string\">&quot;峨山彝族自治县&quot;</span>,<span class=\"string\">&quot;新平彝族傣族自治县&quot;</span>,<span class=\"string\">&quot;元江哈尼族彝族傣族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_3&quot;</span>,[<span class=\"string\">&quot;隆阳区&quot;</span>,<span class=\"string\">&quot;施甸县&quot;</span>,<span class=\"string\">&quot;腾冲县&quot;</span>,<span class=\"string\">&quot;龙陵县&quot;</span>,<span class=\"string\">&quot;昌宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_4&quot;</span>,[<span class=\"string\">&quot;昭阳区&quot;</span>,<span class=\"string\">&quot;鲁甸县&quot;</span>,<span class=\"string\">&quot;巧家县&quot;</span>,<span class=\"string\">&quot;盐津县&quot;</span>,<span class=\"string\">&quot;大关县&quot;</span>,<span class=\"string\">&quot;永善县&quot;</span>,<span class=\"string\">&quot;绥江县&quot;</span>,<span class=\"string\">&quot;镇雄县&quot;</span>,<span class=\"string\">&quot;彝良县&quot;</span>,<span class=\"string\">&quot;威信县&quot;</span>,<span class=\"string\">&quot;水富县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_5&quot;</span>,[<span class=\"string\">&quot;古城区&quot;</span>,<span class=\"string\">&quot;玉龙纳西族自治县&quot;</span>,<span class=\"string\">&quot;永胜县&quot;</span>,<span class=\"string\">&quot;华坪县&quot;</span>,<span class=\"string\">&quot;宁蒗彝族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_6&quot;</span>,[<span class=\"string\">&quot;思茅区&quot;</span>,<span class=\"string\">&quot;宁洱哈尼族彝族自治县&quot;</span>,<span class=\"string\">&quot;墨江哈尼族自治县&quot;</span>,<span class=\"string\">&quot;景东彝族自治县&quot;</span>,<span class=\"string\">&quot;景谷傣族彝族自治县&quot;</span>,<span class=\"string\">&quot;镇沅彝族哈尼族拉祜族自治县&quot;</span>,<span class=\"string\">&quot;江城哈尼族彝族自治县&quot;</span>,<span class=\"string\">&quot;孟连傣族拉祜族佤族自治县&quot;</span>,<span class=\"string\">&quot;澜沧拉祜族自治县&quot;</span>,<span class=\"string\">&quot;西盟佤族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_7&quot;</span>,[<span class=\"string\">&quot;临翔区&quot;</span>,<span class=\"string\">&quot;凤庆县&quot;</span>,<span class=\"string\">&quot;云县&quot;</span>,<span class=\"string\">&quot;永德县&quot;</span>,<span class=\"string\">&quot;镇康县&quot;</span>,<span class=\"string\">&quot;双江拉祜族佤族布朗族傣族自治县&quot;</span>,<span class=\"string\">&quot;耿马傣族佤族自治县&quot;</span>,<span class=\"string\">&quot;沧源佤族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_8&quot;</span>,[<span class=\"string\">&quot;楚雄市&quot;</span>,<span class=\"string\">&quot;双柏县&quot;</span>,<span class=\"string\">&quot;牟定县&quot;</span>,<span class=\"string\">&quot;南华县&quot;</span>,<span class=\"string\">&quot;姚安县&quot;</span>,<span class=\"string\">&quot;大姚县&quot;</span>,<span class=\"string\">&quot;永仁县&quot;</span>,<span class=\"string\">&quot;元谋县&quot;</span>,<span class=\"string\">&quot;武定县&quot;</span>,<span class=\"string\">&quot;禄丰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_9&quot;</span>,[<span class=\"string\">&quot;个旧市&quot;</span>,<span class=\"string\">&quot;开远市&quot;</span>,<span class=\"string\">&quot;蒙自市&quot;</span>,<span class=\"string\">&quot;弥勒市&quot;</span>,<span class=\"string\">&quot;屏边苗族自治县&quot;</span>,<span class=\"string\">&quot;建水县&quot;</span>,<span class=\"string\">&quot;石屏县&quot;</span>,<span class=\"string\">&quot;泸西县&quot;</span>,<span class=\"string\">&quot;元阳县&quot;</span>,<span class=\"string\">&quot;红河县&quot;</span>,<span class=\"string\">&quot;金平苗族瑶族傣族自治县&quot;</span>,<span class=\"string\">&quot;绿春县&quot;</span>,<span class=\"string\">&quot;河口瑶族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_10&quot;</span>,[<span class=\"string\">&quot;文山市&quot;</span>,<span class=\"string\">&quot;砚山县&quot;</span>,<span class=\"string\">&quot;西畴县&quot;</span>,<span class=\"string\">&quot;麻栗坡县&quot;</span>,<span class=\"string\">&quot;马关县&quot;</span>,<span class=\"string\">&quot;丘北县&quot;</span>,<span class=\"string\">&quot;广南县&quot;</span>,<span class=\"string\">&quot;富宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_11&quot;</span>,[<span class=\"string\">&quot;景洪市&quot;</span>,<span class=\"string\">&quot;勐海县&quot;</span>,<span class=\"string\">&quot;勐腊县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_12&quot;</span>,[<span class=\"string\">&quot;大理市&quot;</span>,<span class=\"string\">&quot;漾濞彝族自治县&quot;</span>,<span class=\"string\">&quot;祥云县&quot;</span>,<span class=\"string\">&quot;宾川县&quot;</span>,<span class=\"string\">&quot;弥渡县&quot;</span>,<span class=\"string\">&quot;南涧彝族自治县&quot;</span>,<span class=\"string\">&quot;巍山彝族回族自治县&quot;</span>,<span class=\"string\">&quot;永平县&quot;</span>,<span class=\"string\">&quot;云龙县&quot;</span>,<span class=\"string\">&quot;洱源县&quot;</span>,<span class=\"string\">&quot;剑川县&quot;</span>,<span class=\"string\">&quot;鹤庆县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_13&quot;</span>,[<span class=\"string\">&quot;瑞丽市&quot;</span>,<span class=\"string\">&quot;芒市&quot;</span>,<span class=\"string\">&quot;梁河县&quot;</span>,<span class=\"string\">&quot;盈江县&quot;</span>,<span class=\"string\">&quot;陇川县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_14&quot;</span>,[<span class=\"string\">&quot;泸水县&quot;</span>,<span class=\"string\">&quot;福贡县&quot;</span>,<span class=\"string\">&quot;贡山独龙族怒族自治县&quot;</span>,<span class=\"string\">&quot;兰坪白族普米族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24_15&quot;</span>,[<span class=\"string\">&quot;香格里拉县&quot;</span>,<span class=\"string\">&quot;德钦县&quot;</span>,<span class=\"string\">&quot;维西傈僳族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_24&quot;</span>,[<span class=\"string\">&quot;昆明&quot;</span>,<span class=\"string\">&quot;曲靖&quot;</span>,<span class=\"string\">&quot;玉溪&quot;</span>,<span class=\"string\">&quot;保山&quot;</span>,<span class=\"string\">&quot;昭通&quot;</span>,<span class=\"string\">&quot;丽江&quot;</span>,<span class=\"string\">&quot;普洱&quot;</span>,<span class=\"string\">&quot;临沧&quot;</span>,<span class=\"string\">&quot;楚雄&quot;</span>,<span class=\"string\">&quot;红河&quot;</span>,<span class=\"string\">&quot;文山&quot;</span>,<span class=\"string\">&quot;西双版纳&quot;</span>,<span class=\"string\">&quot;大理&quot;</span>,<span class=\"string\">&quot;德宏&quot;</span>,<span class=\"string\">&quot;怒江&quot;</span>,<span class=\"string\">&quot;迪庆&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_0&quot;</span>,[<span class=\"string\">&quot;城关区&quot;</span>,<span class=\"string\">&quot;林周县&quot;</span>,<span class=\"string\">&quot;当雄县&quot;</span>,<span class=\"string\">&quot;尼木县&quot;</span>,<span class=\"string\">&quot;曲水县&quot;</span>,<span class=\"string\">&quot;堆龙德庆县&quot;</span>,<span class=\"string\">&quot;达孜县&quot;</span>,<span class=\"string\">&quot;墨竹工卡县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_1&quot;</span>,[<span class=\"string\">&quot;卡若区&quot;</span>,<span class=\"string\">&quot;江达县&quot;</span>,<span class=\"string\">&quot;贡觉县&quot;</span>,<span class=\"string\">&quot;类乌齐县&quot;</span>,<span class=\"string\">&quot;丁青县&quot;</span>,<span class=\"string\">&quot;察雅县&quot;</span>,<span class=\"string\">&quot;八宿县&quot;</span>,<span class=\"string\">&quot;左贡县&quot;</span>,<span class=\"string\">&quot;芒康县&quot;</span>,<span class=\"string\">&quot;洛隆县&quot;</span>,<span class=\"string\">&quot;边坝县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_2&quot;</span>,[<span class=\"string\">&quot;乃东县&quot;</span>,<span class=\"string\">&quot;扎囊县&quot;</span>,<span class=\"string\">&quot;贡嘎县&quot;</span>,<span class=\"string\">&quot;桑日县&quot;</span>,<span class=\"string\">&quot;琼结县&quot;</span>,<span class=\"string\">&quot;曲松县&quot;</span>,<span class=\"string\">&quot;措美县&quot;</span>,<span class=\"string\">&quot;洛扎县&quot;</span>,<span class=\"string\">&quot;加查县&quot;</span>,<span class=\"string\">&quot;隆子县&quot;</span>,<span class=\"string\">&quot;错那县&quot;</span>,<span class=\"string\">&quot;浪卡子县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_3&quot;</span>,[<span class=\"string\">&quot;桑珠孜区&quot;</span>,<span class=\"string\">&quot;南木林县&quot;</span>,<span class=\"string\">&quot;江孜县&quot;</span>,<span class=\"string\">&quot;定日县&quot;</span>,<span class=\"string\">&quot;萨迦县&quot;</span>,<span class=\"string\">&quot;拉孜县&quot;</span>,<span class=\"string\">&quot;昂仁县&quot;</span>,<span class=\"string\">&quot;谢通门县&quot;</span>,<span class=\"string\">&quot;白朗县&quot;</span>,<span class=\"string\">&quot;仁布县&quot;</span>,<span class=\"string\">&quot;康马县&quot;</span>,<span class=\"string\">&quot;定结县&quot;</span>,<span class=\"string\">&quot;仲巴县&quot;</span>,<span class=\"string\">&quot;亚东县&quot;</span>,<span class=\"string\">&quot;吉隆县&quot;</span>,<span class=\"string\">&quot;聂拉木县&quot;</span>,<span class=\"string\">&quot;萨嘎县&quot;</span>,<span class=\"string\">&quot;岗巴县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_4&quot;</span>,[<span class=\"string\">&quot;那曲县&quot;</span>,<span class=\"string\">&quot;嘉黎县&quot;</span>,<span class=\"string\">&quot;比如县&quot;</span>,<span class=\"string\">&quot;聂荣县&quot;</span>,<span class=\"string\">&quot;安多县&quot;</span>,<span class=\"string\">&quot;申扎县&quot;</span>,<span class=\"string\">&quot;索县&quot;</span>,<span class=\"string\">&quot;班戈县&quot;</span>,<span class=\"string\">&quot;巴青县&quot;</span>,<span class=\"string\">&quot;尼玛县&quot;</span>,<span class=\"string\">&quot;双湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_5&quot;</span>,[<span class=\"string\">&quot;普兰县&quot;</span>,<span class=\"string\">&quot;札达县&quot;</span>,<span class=\"string\">&quot;噶尔县&quot;</span>,<span class=\"string\">&quot;日土县&quot;</span>,<span class=\"string\">&quot;革吉县&quot;</span>,<span class=\"string\">&quot;改则县&quot;</span>,<span class=\"string\">&quot;措勤县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25_6&quot;</span>,[<span class=\"string\">&quot;林芝县&quot;</span>,<span class=\"string\">&quot;工布江达县&quot;</span>,<span class=\"string\">&quot;米林县&quot;</span>,<span class=\"string\">&quot;墨脱县&quot;</span>,<span class=\"string\">&quot;波密县&quot;</span>,<span class=\"string\">&quot;察隅县&quot;</span>,<span class=\"string\">&quot;朗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_25&quot;</span>,[<span class=\"string\">&quot;拉萨&quot;</span>,<span class=\"string\">&quot;昌都&quot;</span>,<span class=\"string\">&quot;山南&quot;</span>,<span class=\"string\">&quot;日喀则&quot;</span>,<span class=\"string\">&quot;那曲&quot;</span>,<span class=\"string\">&quot;阿里&quot;</span>,<span class=\"string\">&quot;林芝&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_0&quot;</span>,[<span class=\"string\">&quot;新城区&quot;</span>,<span class=\"string\">&quot;碑林区&quot;</span>,<span class=\"string\">&quot;莲湖区&quot;</span>,<span class=\"string\">&quot;灞桥区&quot;</span>,<span class=\"string\">&quot;未央区&quot;</span>,<span class=\"string\">&quot;雁塔区&quot;</span>,<span class=\"string\">&quot;阎良区&quot;</span>,<span class=\"string\">&quot;临潼区&quot;</span>,<span class=\"string\">&quot;长安区&quot;</span>,<span class=\"string\">&quot;蓝田县&quot;</span>,<span class=\"string\">&quot;周至县&quot;</span>,<span class=\"string\">&quot;户县&quot;</span>,<span class=\"string\">&quot;高陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_1&quot;</span>,[<span class=\"string\">&quot;王益区&quot;</span>,<span class=\"string\">&quot;印台区&quot;</span>,<span class=\"string\">&quot;耀州区&quot;</span>,<span class=\"string\">&quot;宜君县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_2&quot;</span>,[<span class=\"string\">&quot;渭滨区&quot;</span>,<span class=\"string\">&quot;金台区&quot;</span>,<span class=\"string\">&quot;陈仓区&quot;</span>,<span class=\"string\">&quot;凤翔县&quot;</span>,<span class=\"string\">&quot;岐山县&quot;</span>,<span class=\"string\">&quot;扶风县&quot;</span>,<span class=\"string\">&quot;眉县&quot;</span>,<span class=\"string\">&quot;陇县&quot;</span>,<span class=\"string\">&quot;千阳县&quot;</span>,<span class=\"string\">&quot;麟游县&quot;</span>,<span class=\"string\">&quot;凤县&quot;</span>,<span class=\"string\">&quot;太白县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_3&quot;</span>,[<span class=\"string\">&quot;秦都区&quot;</span>,<span class=\"string\">&quot;杨陵区&quot;</span>,<span class=\"string\">&quot;渭城区&quot;</span>,<span class=\"string\">&quot;三原县&quot;</span>,<span class=\"string\">&quot;泾阳县&quot;</span>,<span class=\"string\">&quot;乾县&quot;</span>,<span class=\"string\">&quot;礼泉县&quot;</span>,<span class=\"string\">&quot;永寿县&quot;</span>,<span class=\"string\">&quot;彬县&quot;</span>,<span class=\"string\">&quot;长武县&quot;</span>,<span class=\"string\">&quot;旬邑县&quot;</span>,<span class=\"string\">&quot;淳化县&quot;</span>,<span class=\"string\">&quot;武功县&quot;</span>,<span class=\"string\">&quot;兴平市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_4&quot;</span>,[<span class=\"string\">&quot;临渭区&quot;</span>,<span class=\"string\">&quot;华县&quot;</span>,<span class=\"string\">&quot;潼关县&quot;</span>,<span class=\"string\">&quot;大荔县&quot;</span>,<span class=\"string\">&quot;合阳县&quot;</span>,<span class=\"string\">&quot;澄城县&quot;</span>,<span class=\"string\">&quot;蒲城县&quot;</span>,<span class=\"string\">&quot;白水县&quot;</span>,<span class=\"string\">&quot;富平县&quot;</span>,<span class=\"string\">&quot;韩城市&quot;</span>,<span class=\"string\">&quot;华阴市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_5&quot;</span>,[<span class=\"string\">&quot;宝塔区&quot;</span>,<span class=\"string\">&quot;延长县&quot;</span>,<span class=\"string\">&quot;延川县&quot;</span>,<span class=\"string\">&quot;子长县&quot;</span>,<span class=\"string\">&quot;安塞县&quot;</span>,<span class=\"string\">&quot;志丹县&quot;</span>,<span class=\"string\">&quot;吴起县&quot;</span>,<span class=\"string\">&quot;甘泉县&quot;</span>,<span class=\"string\">&quot;富县&quot;</span>,<span class=\"string\">&quot;洛川县&quot;</span>,<span class=\"string\">&quot;宜川县&quot;</span>,<span class=\"string\">&quot;黄龙县&quot;</span>,<span class=\"string\">&quot;黄陵县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_6&quot;</span>,[<span class=\"string\">&quot;汉台区&quot;</span>,<span class=\"string\">&quot;南郑县&quot;</span>,<span class=\"string\">&quot;城固县&quot;</span>,<span class=\"string\">&quot;洋县&quot;</span>,<span class=\"string\">&quot;西乡县&quot;</span>,<span class=\"string\">&quot;勉县&quot;</span>,<span class=\"string\">&quot;宁强县&quot;</span>,<span class=\"string\">&quot;略阳县&quot;</span>,<span class=\"string\">&quot;镇巴县&quot;</span>,<span class=\"string\">&quot;留坝县&quot;</span>,<span class=\"string\">&quot;佛坪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_7&quot;</span>,[<span class=\"string\">&quot;榆阳区&quot;</span>,<span class=\"string\">&quot;神木县&quot;</span>,<span class=\"string\">&quot;府谷县&quot;</span>,<span class=\"string\">&quot;横山县&quot;</span>,<span class=\"string\">&quot;靖边县&quot;</span>,<span class=\"string\">&quot;定边县&quot;</span>,<span class=\"string\">&quot;绥德县&quot;</span>,<span class=\"string\">&quot;米脂县&quot;</span>,<span class=\"string\">&quot;佳县&quot;</span>,<span class=\"string\">&quot;吴堡县&quot;</span>,<span class=\"string\">&quot;清涧县&quot;</span>,<span class=\"string\">&quot;子洲县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_8&quot;</span>,[<span class=\"string\">&quot;汉滨区&quot;</span>,<span class=\"string\">&quot;汉阴县&quot;</span>,<span class=\"string\">&quot;石泉县&quot;</span>,<span class=\"string\">&quot;宁陕县&quot;</span>,<span class=\"string\">&quot;紫阳县&quot;</span>,<span class=\"string\">&quot;岚皋县&quot;</span>,<span class=\"string\">&quot;平利县&quot;</span>,<span class=\"string\">&quot;镇坪县&quot;</span>,<span class=\"string\">&quot;旬阳县&quot;</span>,<span class=\"string\">&quot;白河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26_9&quot;</span>,[<span class=\"string\">&quot;商州区&quot;</span>,<span class=\"string\">&quot;洛南县&quot;</span>,<span class=\"string\">&quot;丹凤县&quot;</span>,<span class=\"string\">&quot;商南县&quot;</span>,<span class=\"string\">&quot;山阳县&quot;</span>,<span class=\"string\">&quot;镇安县&quot;</span>,<span class=\"string\">&quot;柞水县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_26&quot;</span>,[<span class=\"string\">&quot;西安&quot;</span>,<span class=\"string\">&quot;铜川&quot;</span>,<span class=\"string\">&quot;宝鸡&quot;</span>,<span class=\"string\">&quot;咸阳&quot;</span>,<span class=\"string\">&quot;渭南&quot;</span>,<span class=\"string\">&quot;延安&quot;</span>,<span class=\"string\">&quot;汉中&quot;</span>,<span class=\"string\">&quot;榆林&quot;</span>,<span class=\"string\">&quot;安康&quot;</span>,<span class=\"string\">&quot;商洛&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_0&quot;</span>,[<span class=\"string\">&quot;城关区&quot;</span>,<span class=\"string\">&quot;七里河区&quot;</span>,<span class=\"string\">&quot;西固区&quot;</span>,<span class=\"string\">&quot;安宁区&quot;</span>,<span class=\"string\">&quot;红古区&quot;</span>,<span class=\"string\">&quot;永登县&quot;</span>,<span class=\"string\">&quot;皋兰县&quot;</span>,<span class=\"string\">&quot;榆中县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_1&quot;</span>,[<span class=\"string\">&quot;嘉峪关&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_2&quot;</span>,[<span class=\"string\">&quot;金川区&quot;</span>,<span class=\"string\">&quot;永昌县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_3&quot;</span>,[<span class=\"string\">&quot;白银区&quot;</span>,<span class=\"string\">&quot;平川区&quot;</span>,<span class=\"string\">&quot;靖远县&quot;</span>,<span class=\"string\">&quot;会宁县&quot;</span>,<span class=\"string\">&quot;景泰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_4&quot;</span>,[<span class=\"string\">&quot;秦州区&quot;</span>,<span class=\"string\">&quot;麦积区&quot;</span>,<span class=\"string\">&quot;清水县&quot;</span>,<span class=\"string\">&quot;秦安县&quot;</span>,<span class=\"string\">&quot;甘谷县&quot;</span>,<span class=\"string\">&quot;武山县&quot;</span>,<span class=\"string\">&quot;张家川回族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_5&quot;</span>,[<span class=\"string\">&quot;凉州区&quot;</span>,<span class=\"string\">&quot;民勤县&quot;</span>,<span class=\"string\">&quot;古浪县&quot;</span>,<span class=\"string\">&quot;天祝藏族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_6&quot;</span>,[<span class=\"string\">&quot;甘州区&quot;</span>,<span class=\"string\">&quot;肃南裕固族自治县&quot;</span>,<span class=\"string\">&quot;民乐县&quot;</span>,<span class=\"string\">&quot;临泽县&quot;</span>,<span class=\"string\">&quot;高台县&quot;</span>,<span class=\"string\">&quot;山丹县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_7&quot;</span>,[<span class=\"string\">&quot;崆峒区&quot;</span>,<span class=\"string\">&quot;泾川县&quot;</span>,<span class=\"string\">&quot;灵台县&quot;</span>,<span class=\"string\">&quot;崇信县&quot;</span>,<span class=\"string\">&quot;华亭县&quot;</span>,<span class=\"string\">&quot;庄浪县&quot;</span>,<span class=\"string\">&quot;静宁县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_8&quot;</span>,[<span class=\"string\">&quot;肃州区&quot;</span>,<span class=\"string\">&quot;金塔县&quot;</span>,<span class=\"string\">&quot;瓜州县&quot;</span>,<span class=\"string\">&quot;肃北蒙古族自治县&quot;</span>,<span class=\"string\">&quot;阿克塞哈萨克族自治县&quot;</span>,<span class=\"string\">&quot;玉门市&quot;</span>,<span class=\"string\">&quot;敦煌市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_9&quot;</span>,[<span class=\"string\">&quot;西峰区&quot;</span>,<span class=\"string\">&quot;庆城县&quot;</span>,<span class=\"string\">&quot;环县&quot;</span>,<span class=\"string\">&quot;华池县&quot;</span>,<span class=\"string\">&quot;合水县&quot;</span>,<span class=\"string\">&quot;正宁县&quot;</span>,<span class=\"string\">&quot;宁县&quot;</span>,<span class=\"string\">&quot;镇原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_10&quot;</span>,[<span class=\"string\">&quot;安定区&quot;</span>,<span class=\"string\">&quot;通渭县&quot;</span>,<span class=\"string\">&quot;陇西县&quot;</span>,<span class=\"string\">&quot;渭源县&quot;</span>,<span class=\"string\">&quot;临洮县&quot;</span>,<span class=\"string\">&quot;漳县&quot;</span>,<span class=\"string\">&quot;岷县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_11&quot;</span>,[<span class=\"string\">&quot;武都区&quot;</span>,<span class=\"string\">&quot;成县&quot;</span>,<span class=\"string\">&quot;文县&quot;</span>,<span class=\"string\">&quot;宕昌县&quot;</span>,<span class=\"string\">&quot;康县&quot;</span>,<span class=\"string\">&quot;西和县&quot;</span>,<span class=\"string\">&quot;礼县&quot;</span>,<span class=\"string\">&quot;徽县&quot;</span>,<span class=\"string\">&quot;两当县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_12&quot;</span>,[<span class=\"string\">&quot;临夏市&quot;</span>,<span class=\"string\">&quot;临夏县&quot;</span>,<span class=\"string\">&quot;康乐县&quot;</span>,<span class=\"string\">&quot;永靖县&quot;</span>,<span class=\"string\">&quot;广河县&quot;</span>,<span class=\"string\">&quot;和政县&quot;</span>,<span class=\"string\">&quot;东乡族自治县&quot;</span>,<span class=\"string\">&quot;积石山保安族东乡族撒拉族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27_13&quot;</span>,[<span class=\"string\">&quot;合作市&quot;</span>,<span class=\"string\">&quot;临潭县&quot;</span>,<span class=\"string\">&quot;卓尼县&quot;</span>,<span class=\"string\">&quot;舟曲县&quot;</span>,<span class=\"string\">&quot;迭部县&quot;</span>,<span class=\"string\">&quot;玛曲县&quot;</span>,<span class=\"string\">&quot;碌曲县&quot;</span>,<span class=\"string\">&quot;夏河县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_27&quot;</span>,[<span class=\"string\">&quot;兰州&quot;</span>,<span class=\"string\">&quot;嘉峪关&quot;</span>,<span class=\"string\">&quot;金昌&quot;</span>,<span class=\"string\">&quot;白银&quot;</span>,<span class=\"string\">&quot;天水&quot;</span>,<span class=\"string\">&quot;武威&quot;</span>,<span class=\"string\">&quot;张掖&quot;</span>,<span class=\"string\">&quot;平凉&quot;</span>,<span class=\"string\">&quot;酒泉&quot;</span>,<span class=\"string\">&quot;庆阳&quot;</span>,<span class=\"string\">&quot;定西&quot;</span>,<span class=\"string\">&quot;陇南&quot;</span>,<span class=\"string\">&quot;临夏&quot;</span>,<span class=\"string\">&quot;甘南&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_0&quot;</span>,[<span class=\"string\">&quot;城东区&quot;</span>,<span class=\"string\">&quot;城中区&quot;</span>,<span class=\"string\">&quot;城西区&quot;</span>,<span class=\"string\">&quot;城北区&quot;</span>,<span class=\"string\">&quot;大通回族土族自治县&quot;</span>,<span class=\"string\">&quot;湟中县&quot;</span>,<span class=\"string\">&quot;湟源县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_1&quot;</span>,[<span class=\"string\">&quot;乐都区&quot;</span>,<span class=\"string\">&quot;平安县&quot;</span>,<span class=\"string\">&quot;民和回族土族自治县&quot;</span>,<span class=\"string\">&quot;互助土族自治县&quot;</span>,<span class=\"string\">&quot;化隆回族自治县&quot;</span>,<span class=\"string\">&quot;循化撒拉族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_2&quot;</span>,[<span class=\"string\">&quot;门源回族自治县&quot;</span>,<span class=\"string\">&quot;祁连县&quot;</span>,<span class=\"string\">&quot;海晏县&quot;</span>,<span class=\"string\">&quot;刚察县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_3&quot;</span>,[<span class=\"string\">&quot;同仁县&quot;</span>,<span class=\"string\">&quot;尖扎县&quot;</span>,<span class=\"string\">&quot;泽库县&quot;</span>,<span class=\"string\">&quot;河南蒙古族自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_4&quot;</span>,[<span class=\"string\">&quot;共和县&quot;</span>,<span class=\"string\">&quot;同德县&quot;</span>,<span class=\"string\">&quot;贵德县&quot;</span>,<span class=\"string\">&quot;兴海县&quot;</span>,<span class=\"string\">&quot;贵南县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_5&quot;</span>,[<span class=\"string\">&quot;玛沁县&quot;</span>,<span class=\"string\">&quot;班玛县&quot;</span>,<span class=\"string\">&quot;甘德县&quot;</span>,<span class=\"string\">&quot;达日县&quot;</span>,<span class=\"string\">&quot;久治县&quot;</span>,<span class=\"string\">&quot;玛多县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_6&quot;</span>,[<span class=\"string\">&quot;玉树市&quot;</span>,<span class=\"string\">&quot;杂多县&quot;</span>,<span class=\"string\">&quot;称多县&quot;</span>,<span class=\"string\">&quot;治多县&quot;</span>,<span class=\"string\">&quot;囊谦县&quot;</span>,<span class=\"string\">&quot;曲麻莱县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28_7&quot;</span>,[<span class=\"string\">&quot;格尔木市&quot;</span>,<span class=\"string\">&quot;德令哈市&quot;</span>,<span class=\"string\">&quot;乌兰县&quot;</span>,<span class=\"string\">&quot;都兰县&quot;</span>,<span class=\"string\">&quot;天峻县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_28&quot;</span>,[<span class=\"string\">&quot;西宁&quot;</span>,<span class=\"string\">&quot;海东&quot;</span>,<span class=\"string\">&quot;海北&quot;</span>,<span class=\"string\">&quot;黄南&quot;</span>,<span class=\"string\">&quot;海南&quot;</span>,<span class=\"string\">&quot;果洛&quot;</span>,<span class=\"string\">&quot;玉树&quot;</span>,<span class=\"string\">&quot;海西&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_0&quot;</span>,[<span class=\"string\">&quot;兴庆区&quot;</span>,<span class=\"string\">&quot;西夏区&quot;</span>,<span class=\"string\">&quot;金凤区&quot;</span>,<span class=\"string\">&quot;永宁县&quot;</span>,<span class=\"string\">&quot;贺兰县&quot;</span>,<span class=\"string\">&quot;灵武市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_1&quot;</span>,[<span class=\"string\">&quot;大武口区&quot;</span>,<span class=\"string\">&quot;惠农区&quot;</span>,<span class=\"string\">&quot;平罗县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_2&quot;</span>,[<span class=\"string\">&quot;利通区&quot;</span>,<span class=\"string\">&quot;红寺堡区&quot;</span>,<span class=\"string\">&quot;盐池县&quot;</span>,<span class=\"string\">&quot;同心县&quot;</span>,<span class=\"string\">&quot;青铜峡市&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_3&quot;</span>,[<span class=\"string\">&quot;原州区&quot;</span>,<span class=\"string\">&quot;西吉县&quot;</span>,<span class=\"string\">&quot;隆德县&quot;</span>,<span class=\"string\">&quot;泾源县&quot;</span>,<span class=\"string\">&quot;彭阳县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29_4&quot;</span>,[<span class=\"string\">&quot;沙坡头区&quot;</span>,<span class=\"string\">&quot;中宁县&quot;</span>,<span class=\"string\">&quot;海原县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_29&quot;</span>,[<span class=\"string\">&quot;银川&quot;</span>,<span class=\"string\">&quot;石嘴山&quot;</span>,<span class=\"string\">&quot;吴忠&quot;</span>,<span class=\"string\">&quot;固原&quot;</span>,<span class=\"string\">&quot;中卫&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_0&quot;</span>,[<span class=\"string\">&quot;天山区&quot;</span>,<span class=\"string\">&quot;沙依巴克区&quot;</span>,<span class=\"string\">&quot;新市区&quot;</span>,<span class=\"string\">&quot;水磨沟区&quot;</span>,<span class=\"string\">&quot;头屯河区&quot;</span>,<span class=\"string\">&quot;达坂城区&quot;</span>,<span class=\"string\">&quot;米东区&quot;</span>,<span class=\"string\">&quot;乌鲁木齐县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_1&quot;</span>,[<span class=\"string\">&quot;独山子区&quot;</span>,<span class=\"string\">&quot;克拉玛依区&quot;</span>,<span class=\"string\">&quot;白碱滩区&quot;</span>,<span class=\"string\">&quot;乌尔禾区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_2&quot;</span>,[<span class=\"string\">&quot;吐鲁番市&quot;</span>,<span class=\"string\">&quot;鄯善县&quot;</span>,<span class=\"string\">&quot;托克逊县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_3&quot;</span>,[<span class=\"string\">&quot;哈密市&quot;</span>,<span class=\"string\">&quot;巴里坤哈萨克自治县&quot;</span>,<span class=\"string\">&quot;伊吾县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_4&quot;</span>,[<span class=\"string\">&quot;昌吉市&quot;</span>,<span class=\"string\">&quot;阜康市&quot;</span>,<span class=\"string\">&quot;呼图壁县&quot;</span>,<span class=\"string\">&quot;玛纳斯县&quot;</span>,<span class=\"string\">&quot;奇台县&quot;</span>,<span class=\"string\">&quot;吉木萨尔县&quot;</span>,<span class=\"string\">&quot;木垒哈萨克自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_5&quot;</span>,[<span class=\"string\">&quot;博乐市&quot;</span>,<span class=\"string\">&quot;阿拉山口市&quot;</span>,<span class=\"string\">&quot;精河县&quot;</span>,<span class=\"string\">&quot;温泉县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_6&quot;</span>,[<span class=\"string\">&quot;库尔勒市&quot;</span>,<span class=\"string\">&quot;轮台县&quot;</span>,<span class=\"string\">&quot;尉犁县&quot;</span>,<span class=\"string\">&quot;若羌县&quot;</span>,<span class=\"string\">&quot;且末县&quot;</span>,<span class=\"string\">&quot;焉耆回族自治县&quot;</span>,<span class=\"string\">&quot;和静县&quot;</span>,<span class=\"string\">&quot;和硕县&quot;</span>,<span class=\"string\">&quot;博湖县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_7&quot;</span>,[<span class=\"string\">&quot;阿克苏市&quot;</span>,<span class=\"string\">&quot;温宿县&quot;</span>,<span class=\"string\">&quot;库车县&quot;</span>,<span class=\"string\">&quot;沙雅县&quot;</span>,<span class=\"string\">&quot;新和县&quot;</span>,<span class=\"string\">&quot;拜城县&quot;</span>,<span class=\"string\">&quot;乌什县&quot;</span>,<span class=\"string\">&quot;阿瓦提县&quot;</span>,<span class=\"string\">&quot;柯坪县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_8&quot;</span>,[<span class=\"string\">&quot;阿图什市&quot;</span>,<span class=\"string\">&quot;阿克陶县&quot;</span>,<span class=\"string\">&quot;阿合奇县&quot;</span>,<span class=\"string\">&quot;乌恰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_9&quot;</span>,[<span class=\"string\">&quot;喀什市&quot;</span>,<span class=\"string\">&quot;疏附县&quot;</span>,<span class=\"string\">&quot;疏勒县&quot;</span>,<span class=\"string\">&quot;英吉沙县&quot;</span>,<span class=\"string\">&quot;泽普县&quot;</span>,<span class=\"string\">&quot;莎车县&quot;</span>,<span class=\"string\">&quot;叶城县&quot;</span>,<span class=\"string\">&quot;麦盖提县&quot;</span>,<span class=\"string\">&quot;岳普湖县&quot;</span>,<span class=\"string\">&quot;伽师县&quot;</span>,<span class=\"string\">&quot;巴楚县&quot;</span>,<span class=\"string\">&quot;塔什库尔干塔吉克自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_10&quot;</span>,[<span class=\"string\">&quot;和田市&quot;</span>,<span class=\"string\">&quot;和田县&quot;</span>,<span class=\"string\">&quot;墨玉县&quot;</span>,<span class=\"string\">&quot;皮山县&quot;</span>,<span class=\"string\">&quot;洛浦县&quot;</span>,<span class=\"string\">&quot;策勒县&quot;</span>,<span class=\"string\">&quot;于田县&quot;</span>,<span class=\"string\">&quot;民丰县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_11&quot;</span>,[<span class=\"string\">&quot;伊宁市&quot;</span>,<span class=\"string\">&quot;奎屯市&quot;</span>,<span class=\"string\">&quot;霍尔果斯市&quot;</span>,<span class=\"string\">&quot;伊宁县&quot;</span>,<span class=\"string\">&quot;察布查尔锡伯自治县&quot;</span>,<span class=\"string\">&quot;霍城县&quot;</span>,<span class=\"string\">&quot;巩留县&quot;</span>,<span class=\"string\">&quot;新源县&quot;</span>,<span class=\"string\">&quot;昭苏县&quot;</span>,<span class=\"string\">&quot;特克斯县&quot;</span>,<span class=\"string\">&quot;尼勒克县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_12&quot;</span>,[<span class=\"string\">&quot;塔城市&quot;</span>,<span class=\"string\">&quot;乌苏市&quot;</span>,<span class=\"string\">&quot;额敏县&quot;</span>,<span class=\"string\">&quot;沙湾县&quot;</span>,<span class=\"string\">&quot;托里县&quot;</span>,<span class=\"string\">&quot;裕民县&quot;</span>,<span class=\"string\">&quot;和布克赛尔蒙古自治县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_13&quot;</span>,[<span class=\"string\">&quot;阿勒泰市&quot;</span>,<span class=\"string\">&quot;布尔津县&quot;</span>,<span class=\"string\">&quot;富蕴县&quot;</span>,<span class=\"string\">&quot;福海县&quot;</span>,<span class=\"string\">&quot;哈巴河县&quot;</span>,<span class=\"string\">&quot;青河县&quot;</span>,<span class=\"string\">&quot;吉木乃县&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_14&quot;</span>,[<span class=\"string\">&quot;石河子&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_15&quot;</span>,[<span class=\"string\">&quot;阿拉尔&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_16&quot;</span>,[<span class=\"string\">&quot;图木舒克&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_17&quot;</span>,[<span class=\"string\">&quot;五家渠&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_18&quot;</span>,[<span class=\"string\">&quot;北屯&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_19&quot;</span>,[<span class=\"string\">&quot;铁门关&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_20&quot;</span>,[<span class=\"string\">&quot;双河&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30_21&quot;</span>,[<span class=\"string\">&quot;可克达拉&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_30&quot;</span>,[<span class=\"string\">&quot;乌鲁木齐&quot;</span>,<span class=\"string\">&quot;克拉玛依&quot;</span>,<span class=\"string\">&quot;吐鲁番&quot;</span>,<span class=\"string\">&quot;哈密&quot;</span>,<span class=\"string\">&quot;昌吉&quot;</span>,<span class=\"string\">&quot;博尔塔拉&quot;</span>,<span class=\"string\">&quot;巴音郭楞&quot;</span>,<span class=\"string\">&quot;阿克苏&quot;</span>,<span class=\"string\">&quot;克孜勒苏&quot;</span>,<span class=\"string\">&quot;喀什&quot;</span>,<span class=\"string\">&quot;和田&quot;</span>,<span class=\"string\">&quot;伊犁&quot;</span>,<span class=\"string\">&quot;塔城&quot;</span>,<span class=\"string\">&quot;阿勒泰&quot;</span>,<span class=\"string\">&quot;石河子&quot;</span>,<span class=\"string\">&quot;阿拉尔&quot;</span>,<span class=\"string\">&quot;图木舒克&quot;</span>,<span class=\"string\">&quot;五家渠&quot;</span>,<span class=\"string\">&quot;北屯&quot;</span>,<span class=\"string\">&quot;铁门关&quot;</span>,<span class=\"string\">&quot;双河&quot;</span>,<span class=\"string\">&quot;可克达拉&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_31_0&quot;</span>,[<span class=\"string\">&quot;台北&quot;</span>, <span class=\"string\">&quot;高雄&quot;</span>, <span class=\"string\">&quot;台中&quot;</span>, <span class=\"string\">&quot;花莲&quot;</span>, <span class=\"string\">&quot;基隆&quot;</span>, <span class=\"string\">&quot;嘉义&quot;</span>, <span class=\"string\">&quot;金门&quot;</span>, <span class=\"string\">&quot;连江&quot;</span>, <span class=\"string\">&quot;苗栗&quot;</span>, <span class=\"string\">&quot;南投&quot;</span>, <span class=\"string\">&quot;澎湖&quot;</span>, <span class=\"string\">&quot;屏东&quot;</span>, <span class=\"string\">&quot;台东&quot;</span>, <span class=\"string\">&quot;台南&quot;</span>, <span class=\"string\">&quot;桃园&quot;</span>, <span class=\"string\">&quot;新竹&quot;</span>, <span class=\"string\">&quot;宜兰&quot;</span>, <span class=\"string\">&quot;云林&quot;</span>, <span class=\"string\">&quot;彰化&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_31&quot;</span>,[<span class=\"string\">&quot;台湾&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_32_0&quot;</span>,[<span class=\"string\">&quot;中西区&quot;</span>,<span class=\"string\">&quot;湾仔区&quot;</span>,<span class=\"string\">&quot;东区&quot;</span>,<span class=\"string\">&quot;南区&quot;</span>,<span class=\"string\">&quot;油尖旺区&quot;</span>,<span class=\"string\">&quot;深水埗区&quot;</span>,<span class=\"string\">&quot;九龍城区&quot;</span>,<span class=\"string\">&quot;黃大仙区&quot;</span>,<span class=\"string\">&quot;觀塘区&quot;</span>,<span class=\"string\">&quot;荃湾区&quot;</span>,<span class=\"string\">&quot;屯門区&quot;</span>,<span class=\"string\">&quot;元朗区&quot;</span>,<span class=\"string\">&quot;北区&quot;</span>,<span class=\"string\">&quot;大埔区&quot;</span>,<span class=\"string\">&quot;西贡区&quot;</span>,<span class=\"string\">&quot;沙田区&quot;</span>,<span class=\"string\">&quot;葵青区&quot;</span>,<span class=\"string\">&quot;離島区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_32&quot;</span>,[<span class=\"string\">&quot;香港特別行政区&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_33_0&quot;</span>,[<span class=\"string\">&quot;花地玛堂区&quot;</span>,<span class=\"string\">&quot;花王堂区&quot;</span>,<span class=\"string\">&quot;望德堂区&quot;</span>,<span class=\"string\">&quot;大堂区&quot;</span>,<span class=\"string\">&quot;風順堂区&quot;</span>,<span class=\"string\">&quot;嘉模堂区&quot;</span>,<span class=\"string\">&quot;路氹城&quot;</span>,<span class=\"string\">&quot;圣方济各堂区&quot;</span>]);  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0_33&quot;</span>,[<span class=\"string\">&quot;澳门特別行政区&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\">dsy.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;0&quot;</span>,[<span class=\"string\">&quot;北京&quot;</span>,<span class=\"string\">&quot;天津&quot;</span>,<span class=\"string\">&quot;河北&quot;</span>,<span class=\"string\">&quot;山西&quot;</span>,<span class=\"string\">&quot;内蒙古&quot;</span>,<span class=\"string\">&quot;辽宁&quot;</span>,<span class=\"string\">&quot;吉林&quot;</span>,<span class=\"string\">&quot;黑龙江&quot;</span>,<span class=\"string\">&quot;上海&quot;</span>,<span class=\"string\">&quot;江苏&quot;</span>,<span class=\"string\">&quot;浙江&quot;</span>,<span class=\"string\">&quot;安徽&quot;</span>,<span class=\"string\">&quot;福建&quot;</span>,<span class=\"string\">&quot;江西&quot;</span>,<span class=\"string\">&quot;山东&quot;</span>,<span class=\"string\">&quot;河南&quot;</span>,<span class=\"string\">&quot;湖北&quot;</span>,<span class=\"string\">&quot;湖南&quot;</span>,<span class=\"string\">&quot;广东&quot;</span>,<span class=\"string\">&quot;广西&quot;</span>,<span class=\"string\">&quot;海南&quot;</span>,<span class=\"string\">&quot;重庆&quot;</span>,<span class=\"string\">&quot;四川&quot;</span>,<span class=\"string\">&quot;贵州&quot;</span>,<span class=\"string\">&quot;云南&quot;</span>,<span class=\"string\">&quot;西藏&quot;</span>,<span class=\"string\">&quot;陕西&quot;</span>,<span class=\"string\">&quot;甘肃&quot;</span>,<span class=\"string\">&quot;青海&quot;</span>,<span class=\"string\">&quot;宁夏&quot;</span>,<span class=\"string\">&quot;新疆&quot;</span>,<span class=\"string\">&quot;台湾&quot;</span>,<span class=\"string\">&quot;香港&quot;</span>,<span class=\"string\">&quot;澳门&quot;</span>]);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">var</span> s = [<span class=\"string\">&quot;s_province&quot;</span>, <span class=\"string\">&quot;s_city&quot;</span>, <span class=\"string\">&quot;s_county&quot;</span>];<span class=\"comment\">//三个select的name  </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> opt0 = [<span class=\"string\">&quot;省份&quot;</span>, <span class=\"string\">&quot;地级市&quot;</span>, <span class=\"string\">&quot;县(区)&quot;</span>];<span class=\"comment\">//初始值  </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_init_area</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">//初始化函数  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;  </span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(s[i]).<span class=\"property\">onchange</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;change(&quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot;)&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"title function_\">change</span>(<span class=\"number\">0</span>);  </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>"},{"title":"字节跳动面试题","date":"2019-10-16T16:00:00.000Z","_content":"\n字节跳动面试题，2019年，记录下来\n<!-- more -->\n\n#### 一、add(1)(2)(3)\n释义：高阶函数（接收函数作为参数传递或者将函数作为返回值输出的函数，满足一条即可），常见的Array.map，Array.filter，Array.reduce\n答案：这是一道常见的面试题，主要考察闭包和函数的toString方法吧，网上给出的结果如下：\n\n```js\nfunction add(a) {\n    function sum(b) {\n        a += b;\n        return sum;\n    }\n    sum.toString = function() {\n        return a;\n    }\n    return sum;\n}\n```\n分析：然后执行 add(1)(2)(3)(4)(5)... 参数可以无限多个，最终返回的类似 f 15这种。查阅了很多文档，这题貌似也没有多个解决办法，就像1+1只能等于2这样子。\n问题：但如果非要抬杠的话，不妨执行下下面的代码（直接输出的是一个function，要想输出数字，需要加toString()）\n\n```js\nvar res = add(1)(2)(3)(4)(5)\nconsole.log(typeof res) // 输出\"function\"\nres = add(1)(2)(3)(4)(5).toString()\nconsole.log(res === 15)\nconsole.log(typeof res) // 输出\"number\n```\n\n扩展：怎么实现 add(1)(2)(3)() = 6？\n答案：既然最后一次执行没参数，那可以不用上面的方法写（主要是没彻底搞清楚上面方法的原理）。思路是判断arguments是否有值，有的话返回函数，没有的话返回累加的结果。\n\n```js\nfunction add2(a) {\n    a = a || 0;\n    function sum(b) {\n        b = b || 0;\n        a += b;\n        return arguments.length ? sum : a;\n    }\n    return sum;\n}\nvar res = add2(1)(2)(3)(4)(5)();\nconsole.log(res) // 15 \nconsole.log(typeof res) // \"number\" \n```\n\n相关：\n+ https://muyiy.cn/question/program/50.html\n+ https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134\n\n#### 二、BFC\nBFC概念：BFC是块级格式上下文，是页面盒模型布局中的一种 CSS 渲染模式，相当于一个独立的容器，里面的元素和外部的元素相互不影响\nBFC特性：\n+ 内部box会在垂直方向，一个接一个地放置\n+ Box垂直方向的距离由margin决定，在一个BFC中，两个相邻的块级盒子的垂直外边距会产生折叠\n+ 在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）\n+ 形成了BFC的区域不会与float box重叠\n+ 计算BFC高度时，浮动元素也参与计算\n\nBFC主要作用：\n+ 清除浮动\n+ 防止统一BFC容器中的相邻元素之间外边距重叠问题\n\n更多释义参照 https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context        https://www.cnblogs.com/chen-cong/p/7862832.html\n\n#### 三、协商缓存、强制缓存\n###### 强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\n1.cache-control: max-age=xxxx，public\n+ 客户端和代理服务器都可以缓存该资源；\n+ 客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200\n+ 如果用户做了刷新操作，就向服务器发起http请求\n2.cache-control: max-age=xxxx，private\n+ 只让客户端可以缓存该资源；代理服务器不缓存\n+ 客户端在xxx秒内直接读取缓存,statu code:200\n3.cache-control: max-age=xxxx，immutable\n+ 客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200\n+ 即使用户做了刷新操作，也不向服务器发起http请求\n4.cache-control: no-cache\n+ 跳过设置强缓存，但是不妨碍设置协商缓存；\n+ 一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了no-cache就不会走强缓存了，每次请求都回询问服务端。\n5.cache-control: no-store\n+ 不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。\n###### 协商缓存：\n解释：每次请求返回来response header中的etag和last-modified，在下次请求时在request header（对应if-none-matched 和 if-modified-since）就把这两个带上，服务端把你带过来的标识进行对比，然后判断资源是否更改了，如果更改就直接返回新的资源，和更新对应的response header的标识etag、last-modified。\n协商缓存过程：\n+ 发请求-->看资源是否过期-->过期-->请求服务器-->服务器对比资源是否真的过期-->没过期-->返回304状态码-->客户端用缓存的老资源\n+ 发请求-->看资源是否过期-->过期-->请求服务器-->服务器对比资源是否真的过期-->过期-->返回200状态码-->客户端如第一次接收该资源一样，记下它的cache-control中的max-age、etag、last-modified等\n\n1.etag\n文件hash，每个文件有一个，改动文件了就变了，每个文件唯一，就像用webpack打包的时候，每个资源都会有这个东西\n2.last-modified\n文件的修改时间(精确到秒)\n\n+ etag较last-modified优势：（1.一些文件也许会周期性的更改，但实际内容并没改变，此时不需要重新请求；2.某些文件更改非常频繁，比如1s内改了10次，此时last-modified是无法判断的；3.某些服务器不能精确得到文件的最后修改时间）\n\n* 转自：https://www.jianshu.com/p/9c95db596df5\n\n#### 四、盒模型\n1.标准盒模型：元素占用宽度 = width + padding + border + margin\n2.IE盒模型：元素占用宽度 = width（包含了padding和border） + margin\n\n* 设置元素的box-sizing: border-box能强制使用IE盒模型（也称怪异模式）\n\n#### 五、简单实现VUE的双向绑定\n\n\n#### 六、写一个Event类，可以on和emit事件\n\n\n#### 七、实现快速排序\n\n\n#### 八、以下代码输出啥？\n```js\nfor(var i = 0; i < 6; i++) {\n setTimeout(function(){\n  console.log(new Date(), i);\n })\n}\n```\n##### 8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？\n\n##### 8.2 如果想让上面代码隔1s输出一次，怎样改？\n\n##### 8.3 用promise实现8.2的需求？\n\n##### 8.4 用async await实现8.2的需求？\n\n\n#### 九、说说事件循环机制？ \n\n\n#### 十、说说VUE里虚拟dom的原理？\n\n","source":"_posts/字节跳动面试题.md","raw":"---\ntitle: 字节跳动面试题\ndate: 2019-10-17\ncategories: 前端\ntags: \n    - 前端\n    - JS\n#description: \n---\n\n字节跳动面试题，2019年，记录下来\n<!-- more -->\n\n#### 一、add(1)(2)(3)\n释义：高阶函数（接收函数作为参数传递或者将函数作为返回值输出的函数，满足一条即可），常见的Array.map，Array.filter，Array.reduce\n答案：这是一道常见的面试题，主要考察闭包和函数的toString方法吧，网上给出的结果如下：\n\n```js\nfunction add(a) {\n    function sum(b) {\n        a += b;\n        return sum;\n    }\n    sum.toString = function() {\n        return a;\n    }\n    return sum;\n}\n```\n分析：然后执行 add(1)(2)(3)(4)(5)... 参数可以无限多个，最终返回的类似 f 15这种。查阅了很多文档，这题貌似也没有多个解决办法，就像1+1只能等于2这样子。\n问题：但如果非要抬杠的话，不妨执行下下面的代码（直接输出的是一个function，要想输出数字，需要加toString()）\n\n```js\nvar res = add(1)(2)(3)(4)(5)\nconsole.log(typeof res) // 输出\"function\"\nres = add(1)(2)(3)(4)(5).toString()\nconsole.log(res === 15)\nconsole.log(typeof res) // 输出\"number\n```\n\n扩展：怎么实现 add(1)(2)(3)() = 6？\n答案：既然最后一次执行没参数，那可以不用上面的方法写（主要是没彻底搞清楚上面方法的原理）。思路是判断arguments是否有值，有的话返回函数，没有的话返回累加的结果。\n\n```js\nfunction add2(a) {\n    a = a || 0;\n    function sum(b) {\n        b = b || 0;\n        a += b;\n        return arguments.length ? sum : a;\n    }\n    return sum;\n}\nvar res = add2(1)(2)(3)(4)(5)();\nconsole.log(res) // 15 \nconsole.log(typeof res) // \"number\" \n```\n\n相关：\n+ https://muyiy.cn/question/program/50.html\n+ https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134\n\n#### 二、BFC\nBFC概念：BFC是块级格式上下文，是页面盒模型布局中的一种 CSS 渲染模式，相当于一个独立的容器，里面的元素和外部的元素相互不影响\nBFC特性：\n+ 内部box会在垂直方向，一个接一个地放置\n+ Box垂直方向的距离由margin决定，在一个BFC中，两个相邻的块级盒子的垂直外边距会产生折叠\n+ 在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）\n+ 形成了BFC的区域不会与float box重叠\n+ 计算BFC高度时，浮动元素也参与计算\n\nBFC主要作用：\n+ 清除浮动\n+ 防止统一BFC容器中的相邻元素之间外边距重叠问题\n\n更多释义参照 https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context        https://www.cnblogs.com/chen-cong/p/7862832.html\n\n#### 三、协商缓存、强制缓存\n###### 强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\n1.cache-control: max-age=xxxx，public\n+ 客户端和代理服务器都可以缓存该资源；\n+ 客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200\n+ 如果用户做了刷新操作，就向服务器发起http请求\n2.cache-control: max-age=xxxx，private\n+ 只让客户端可以缓存该资源；代理服务器不缓存\n+ 客户端在xxx秒内直接读取缓存,statu code:200\n3.cache-control: max-age=xxxx，immutable\n+ 客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200\n+ 即使用户做了刷新操作，也不向服务器发起http请求\n4.cache-control: no-cache\n+ 跳过设置强缓存，但是不妨碍设置协商缓存；\n+ 一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了no-cache就不会走强缓存了，每次请求都回询问服务端。\n5.cache-control: no-store\n+ 不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。\n###### 协商缓存：\n解释：每次请求返回来response header中的etag和last-modified，在下次请求时在request header（对应if-none-matched 和 if-modified-since）就把这两个带上，服务端把你带过来的标识进行对比，然后判断资源是否更改了，如果更改就直接返回新的资源，和更新对应的response header的标识etag、last-modified。\n协商缓存过程：\n+ 发请求-->看资源是否过期-->过期-->请求服务器-->服务器对比资源是否真的过期-->没过期-->返回304状态码-->客户端用缓存的老资源\n+ 发请求-->看资源是否过期-->过期-->请求服务器-->服务器对比资源是否真的过期-->过期-->返回200状态码-->客户端如第一次接收该资源一样，记下它的cache-control中的max-age、etag、last-modified等\n\n1.etag\n文件hash，每个文件有一个，改动文件了就变了，每个文件唯一，就像用webpack打包的时候，每个资源都会有这个东西\n2.last-modified\n文件的修改时间(精确到秒)\n\n+ etag较last-modified优势：（1.一些文件也许会周期性的更改，但实际内容并没改变，此时不需要重新请求；2.某些文件更改非常频繁，比如1s内改了10次，此时last-modified是无法判断的；3.某些服务器不能精确得到文件的最后修改时间）\n\n* 转自：https://www.jianshu.com/p/9c95db596df5\n\n#### 四、盒模型\n1.标准盒模型：元素占用宽度 = width + padding + border + margin\n2.IE盒模型：元素占用宽度 = width（包含了padding和border） + margin\n\n* 设置元素的box-sizing: border-box能强制使用IE盒模型（也称怪异模式）\n\n#### 五、简单实现VUE的双向绑定\n\n\n#### 六、写一个Event类，可以on和emit事件\n\n\n#### 七、实现快速排序\n\n\n#### 八、以下代码输出啥？\n```js\nfor(var i = 0; i < 6; i++) {\n setTimeout(function(){\n  console.log(new Date(), i);\n })\n}\n```\n##### 8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？\n\n##### 8.2 如果想让上面代码隔1s输出一次，怎样改？\n\n##### 8.3 用promise实现8.2的需求？\n\n##### 8.4 用async await实现8.2的需求？\n\n\n#### 九、说说事件循环机制？ \n\n\n#### 十、说说VUE里虚拟dom的原理？\n\n","slug":"字节跳动面试题","published":1,"updated":"2022-06-15T08:27:49.985Z","_id":"cl4e3az0l003jk4rq9852f1yb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>字节跳动面试题，2019年，记录下来</p>\n<span id=\"more\"></span>\n\n<h4 id=\"一、add-1-2-3\"><a href=\"#一、add-1-2-3\" class=\"headerlink\" title=\"一、add(1)(2)(3)\"></a>一、add(1)(2)(3)</h4><p>释义：高阶函数（接收函数作为参数传递或者将函数作为返回值输出的函数，满足一条即可），常见的Array.map，Array.filter，Array.reduce<br>答案：这是一道常见的面试题，主要考察闭包和函数的toString方法吧，网上给出的结果如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        a += b;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析：然后执行 add(1)(2)(3)(4)(5)… 参数可以无限多个，最终返回的类似 f 15这种。查阅了很多文档，这题貌似也没有多个解决办法，就像1+1只能等于2这样子。<br>问题：但如果非要抬杠的话，不妨执行下下面的代码（直接输出的是一个function，要想输出数字，需要加toString()）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// 输出&quot;function&quot;</span></span><br><span class=\"line\">res = <span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res === <span class=\"number\">15</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// 输出&quot;number</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展：怎么实现 add(1)(2)(3)() &#x3D; 6？<br>答案：既然最后一次执行没参数，那可以不用上面的方法写（主要是没彻底搞清楚上面方法的原理）。思路是判断arguments是否有值，有的话返回函数，没有的话返回累加的结果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add2</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    a = a || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        b = b || <span class=\"number\">0</span>;</span><br><span class=\"line\">        a += b;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span> ? sum : a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"title function_\">add2</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>)();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res) <span class=\"comment\">// 15 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// &quot;number&quot; </span></span><br></pre></td></tr></table></figure>\n\n<p>相关：</p>\n<ul>\n<li><a href=\"https://muyiy.cn/question/program/50.html\">https://muyiy.cn/question/program/50.html</a></li>\n<li><a href=\"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134\">https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134</a></li>\n</ul>\n<h4 id=\"二、BFC\"><a href=\"#二、BFC\" class=\"headerlink\" title=\"二、BFC\"></a>二、BFC</h4><p>BFC概念：BFC是块级格式上下文，是页面盒模型布局中的一种 CSS 渲染模式，相当于一个独立的容器，里面的元素和外部的元素相互不影响<br>BFC特性：</p>\n<ul>\n<li>内部box会在垂直方向，一个接一个地放置</li>\n<li>Box垂直方向的距离由margin决定，在一个BFC中，两个相邻的块级盒子的垂直外边距会产生折叠</li>\n<li>在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）</li>\n<li>形成了BFC的区域不会与float box重叠</li>\n<li>计算BFC高度时，浮动元素也参与计算</li>\n</ul>\n<p>BFC主要作用：</p>\n<ul>\n<li>清除浮动</li>\n<li>防止统一BFC容器中的相邻元素之间外边距重叠问题</li>\n</ul>\n<p>更多释义参照 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a>        <a href=\"https://www.cnblogs.com/chen-cong/p/7862832.html\">https://www.cnblogs.com/chen-cong/p/7862832.html</a></p>\n<h4 id=\"三、协商缓存、强制缓存\"><a href=\"#三、协商缓存、强制缓存\" class=\"headerlink\" title=\"三、协商缓存、强制缓存\"></a>三、协商缓存、强制缓存</h4><h6 id=\"强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\"><a href=\"#强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\" class=\"headerlink\" title=\"强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\"></a>强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器</h6><p>1.cache-control: max-age&#x3D;xxxx，public</p>\n<ul>\n<li>客户端和代理服务器都可以缓存该资源；</li>\n<li>客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200</li>\n<li>如果用户做了刷新操作，就向服务器发起http请求<br>2.cache-control: max-age&#x3D;xxxx，private</li>\n<li>只让客户端可以缓存该资源；代理服务器不缓存</li>\n<li>客户端在xxx秒内直接读取缓存,statu code:200<br>3.cache-control: max-age&#x3D;xxxx，immutable</li>\n<li>客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200</li>\n<li>即使用户做了刷新操作，也不向服务器发起http请求<br>4.cache-control: no-cache</li>\n<li>跳过设置强缓存，但是不妨碍设置协商缓存；</li>\n<li>一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了no-cache就不会走强缓存了，每次请求都回询问服务端。<br>5.cache-control: no-store</li>\n<li>不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。</li>\n</ul>\n<h6 id=\"协商缓存：\"><a href=\"#协商缓存：\" class=\"headerlink\" title=\"协商缓存：\"></a>协商缓存：</h6><p>解释：每次请求返回来response header中的etag和last-modified，在下次请求时在request header（对应if-none-matched 和 if-modified-since）就把这两个带上，服务端把你带过来的标识进行对比，然后判断资源是否更改了，如果更改就直接返回新的资源，和更新对应的response header的标识etag、last-modified。<br>协商缓存过程：</p>\n<ul>\n<li>发请求–&gt;看资源是否过期–&gt;过期–&gt;请求服务器–&gt;服务器对比资源是否真的过期–&gt;没过期–&gt;返回304状态码–&gt;客户端用缓存的老资源</li>\n<li>发请求–&gt;看资源是否过期–&gt;过期–&gt;请求服务器–&gt;服务器对比资源是否真的过期–&gt;过期–&gt;返回200状态码–&gt;客户端如第一次接收该资源一样，记下它的cache-control中的max-age、etag、last-modified等</li>\n</ul>\n<p>1.etag<br>文件hash，每个文件有一个，改动文件了就变了，每个文件唯一，就像用webpack打包的时候，每个资源都会有这个东西<br>2.last-modified<br>文件的修改时间(精确到秒)</p>\n<ul>\n<li>etag较last-modified优势：（1.一些文件也许会周期性的更改，但实际内容并没改变，此时不需要重新请求；2.某些文件更改非常频繁，比如1s内改了10次，此时last-modified是无法判断的；3.某些服务器不能精确得到文件的最后修改时间）</li>\n</ul>\n<ul>\n<li>转自：<a href=\"https://www.jianshu.com/p/9c95db596df5\">https://www.jianshu.com/p/9c95db596df5</a></li>\n</ul>\n<h4 id=\"四、盒模型\"><a href=\"#四、盒模型\" class=\"headerlink\" title=\"四、盒模型\"></a>四、盒模型</h4><p>1.标准盒模型：元素占用宽度 &#x3D; width + padding + border + margin<br>2.IE盒模型：元素占用宽度 &#x3D; width（包含了padding和border） + margin</p>\n<ul>\n<li>设置元素的box-sizing: border-box能强制使用IE盒模型（也称怪异模式）</li>\n</ul>\n<h4 id=\"五、简单实现VUE的双向绑定\"><a href=\"#五、简单实现VUE的双向绑定\" class=\"headerlink\" title=\"五、简单实现VUE的双向绑定\"></a>五、简单实现VUE的双向绑定</h4><h4 id=\"六、写一个Event类，可以on和emit事件\"><a href=\"#六、写一个Event类，可以on和emit事件\" class=\"headerlink\" title=\"六、写一个Event类，可以on和emit事件\"></a>六、写一个Event类，可以on和emit事件</h4><h4 id=\"七、实现快速排序\"><a href=\"#七、实现快速排序\" class=\"headerlink\" title=\"七、实现快速排序\"></a>七、实现快速排序</h4><h4 id=\"八、以下代码输出啥？\"><a href=\"#八、以下代码输出啥？\" class=\"headerlink\" title=\"八、以下代码输出啥？\"></a>八、以下代码输出啥？</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\"> <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(), i);</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8-1-如果想让上面代码中的i分别输出-1-2-3-4-5-，该怎么改？\"><a href=\"#8-1-如果想让上面代码中的i分别输出-1-2-3-4-5-，该怎么改？\" class=\"headerlink\" title=\"8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？\"></a>8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？</h5><h5 id=\"8-2-如果想让上面代码隔1s输出一次，怎样改？\"><a href=\"#8-2-如果想让上面代码隔1s输出一次，怎样改？\" class=\"headerlink\" title=\"8.2 如果想让上面代码隔1s输出一次，怎样改？\"></a>8.2 如果想让上面代码隔1s输出一次，怎样改？</h5><h5 id=\"8-3-用promise实现8-2的需求？\"><a href=\"#8-3-用promise实现8-2的需求？\" class=\"headerlink\" title=\"8.3 用promise实现8.2的需求？\"></a>8.3 用promise实现8.2的需求？</h5><h5 id=\"8-4-用async-await实现8-2的需求？\"><a href=\"#8-4-用async-await实现8-2的需求？\" class=\"headerlink\" title=\"8.4 用async await实现8.2的需求？\"></a>8.4 用async await实现8.2的需求？</h5><h4 id=\"九、说说事件循环机制？\"><a href=\"#九、说说事件循环机制？\" class=\"headerlink\" title=\"九、说说事件循环机制？\"></a>九、说说事件循环机制？</h4><h4 id=\"十、说说VUE里虚拟dom的原理？\"><a href=\"#十、说说VUE里虚拟dom的原理？\" class=\"headerlink\" title=\"十、说说VUE里虚拟dom的原理？\"></a>十、说说VUE里虚拟dom的原理？</h4>","site":{"data":{}},"excerpt":"<p>字节跳动面试题，2019年，记录下来</p>","more":"<h4 id=\"一、add-1-2-3\"><a href=\"#一、add-1-2-3\" class=\"headerlink\" title=\"一、add(1)(2)(3)\"></a>一、add(1)(2)(3)</h4><p>释义：高阶函数（接收函数作为参数传递或者将函数作为返回值输出的函数，满足一条即可），常见的Array.map，Array.filter，Array.reduce<br>答案：这是一道常见的面试题，主要考察闭包和函数的toString方法吧，网上给出的结果如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        a += b;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析：然后执行 add(1)(2)(3)(4)(5)… 参数可以无限多个，最终返回的类似 f 15这种。查阅了很多文档，这题貌似也没有多个解决办法，就像1+1只能等于2这样子。<br>问题：但如果非要抬杠的话，不妨执行下下面的代码（直接输出的是一个function，要想输出数字，需要加toString()）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// 输出&quot;function&quot;</span></span><br><span class=\"line\">res = <span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res === <span class=\"number\">15</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// 输出&quot;number</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展：怎么实现 add(1)(2)(3)() &#x3D; 6？<br>答案：既然最后一次执行没参数，那可以不用上面的方法写（主要是没彻底搞清楚上面方法的原理）。思路是判断arguments是否有值，有的话返回函数，没有的话返回累加的结果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add2</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    a = a || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        b = b || <span class=\"number\">0</span>;</span><br><span class=\"line\">        a += b;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span> ? sum : a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"title function_\">add2</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>)(<span class=\"number\">5</span>)();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res) <span class=\"comment\">// 15 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> res) <span class=\"comment\">// &quot;number&quot; </span></span><br></pre></td></tr></table></figure>\n\n<p>相关：</p>\n<ul>\n<li><a href=\"https://muyiy.cn/question/program/50.html\">https://muyiy.cn/question/program/50.html</a></li>\n<li><a href=\"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134\">https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/134</a></li>\n</ul>\n<h4 id=\"二、BFC\"><a href=\"#二、BFC\" class=\"headerlink\" title=\"二、BFC\"></a>二、BFC</h4><p>BFC概念：BFC是块级格式上下文，是页面盒模型布局中的一种 CSS 渲染模式，相当于一个独立的容器，里面的元素和外部的元素相互不影响<br>BFC特性：</p>\n<ul>\n<li>内部box会在垂直方向，一个接一个地放置</li>\n<li>Box垂直方向的距离由margin决定，在一个BFC中，两个相邻的块级盒子的垂直外边距会产生折叠</li>\n<li>在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）</li>\n<li>形成了BFC的区域不会与float box重叠</li>\n<li>计算BFC高度时，浮动元素也参与计算</li>\n</ul>\n<p>BFC主要作用：</p>\n<ul>\n<li>清除浮动</li>\n<li>防止统一BFC容器中的相邻元素之间外边距重叠问题</li>\n</ul>\n<p>更多释义参照 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a>        <a href=\"https://www.cnblogs.com/chen-cong/p/7862832.html\">https://www.cnblogs.com/chen-cong/p/7862832.html</a></p>\n<h4 id=\"三、协商缓存、强制缓存\"><a href=\"#三、协商缓存、强制缓存\" class=\"headerlink\" title=\"三、协商缓存、强制缓存\"></a>三、协商缓存、强制缓存</h4><h6 id=\"强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\"><a href=\"#强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\" class=\"headerlink\" title=\"强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器\"></a>强制缓存：就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器</h6><p>1.cache-control: max-age&#x3D;xxxx，public</p>\n<ul>\n<li>客户端和代理服务器都可以缓存该资源；</li>\n<li>客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200</li>\n<li>如果用户做了刷新操作，就向服务器发起http请求<br>2.cache-control: max-age&#x3D;xxxx，private</li>\n<li>只让客户端可以缓存该资源；代理服务器不缓存</li>\n<li>客户端在xxx秒内直接读取缓存,statu code:200<br>3.cache-control: max-age&#x3D;xxxx，immutable</li>\n<li>客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,statu code:200</li>\n<li>即使用户做了刷新操作，也不向服务器发起http请求<br>4.cache-control: no-cache</li>\n<li>跳过设置强缓存，但是不妨碍设置协商缓存；</li>\n<li>一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了no-cache就不会走强缓存了，每次请求都回询问服务端。<br>5.cache-control: no-store</li>\n<li>不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。</li>\n</ul>\n<h6 id=\"协商缓存：\"><a href=\"#协商缓存：\" class=\"headerlink\" title=\"协商缓存：\"></a>协商缓存：</h6><p>解释：每次请求返回来response header中的etag和last-modified，在下次请求时在request header（对应if-none-matched 和 if-modified-since）就把这两个带上，服务端把你带过来的标识进行对比，然后判断资源是否更改了，如果更改就直接返回新的资源，和更新对应的response header的标识etag、last-modified。<br>协商缓存过程：</p>\n<ul>\n<li>发请求–&gt;看资源是否过期–&gt;过期–&gt;请求服务器–&gt;服务器对比资源是否真的过期–&gt;没过期–&gt;返回304状态码–&gt;客户端用缓存的老资源</li>\n<li>发请求–&gt;看资源是否过期–&gt;过期–&gt;请求服务器–&gt;服务器对比资源是否真的过期–&gt;过期–&gt;返回200状态码–&gt;客户端如第一次接收该资源一样，记下它的cache-control中的max-age、etag、last-modified等</li>\n</ul>\n<p>1.etag<br>文件hash，每个文件有一个，改动文件了就变了，每个文件唯一，就像用webpack打包的时候，每个资源都会有这个东西<br>2.last-modified<br>文件的修改时间(精确到秒)</p>\n<ul>\n<li>etag较last-modified优势：（1.一些文件也许会周期性的更改，但实际内容并没改变，此时不需要重新请求；2.某些文件更改非常频繁，比如1s内改了10次，此时last-modified是无法判断的；3.某些服务器不能精确得到文件的最后修改时间）</li>\n</ul>\n<ul>\n<li>转自：<a href=\"https://www.jianshu.com/p/9c95db596df5\">https://www.jianshu.com/p/9c95db596df5</a></li>\n</ul>\n<h4 id=\"四、盒模型\"><a href=\"#四、盒模型\" class=\"headerlink\" title=\"四、盒模型\"></a>四、盒模型</h4><p>1.标准盒模型：元素占用宽度 &#x3D; width + padding + border + margin<br>2.IE盒模型：元素占用宽度 &#x3D; width（包含了padding和border） + margin</p>\n<ul>\n<li>设置元素的box-sizing: border-box能强制使用IE盒模型（也称怪异模式）</li>\n</ul>\n<h4 id=\"五、简单实现VUE的双向绑定\"><a href=\"#五、简单实现VUE的双向绑定\" class=\"headerlink\" title=\"五、简单实现VUE的双向绑定\"></a>五、简单实现VUE的双向绑定</h4><h4 id=\"六、写一个Event类，可以on和emit事件\"><a href=\"#六、写一个Event类，可以on和emit事件\" class=\"headerlink\" title=\"六、写一个Event类，可以on和emit事件\"></a>六、写一个Event类，可以on和emit事件</h4><h4 id=\"七、实现快速排序\"><a href=\"#七、实现快速排序\" class=\"headerlink\" title=\"七、实现快速排序\"></a>七、实现快速排序</h4><h4 id=\"八、以下代码输出啥？\"><a href=\"#八、以下代码输出啥？\" class=\"headerlink\" title=\"八、以下代码输出啥？\"></a>八、以下代码输出啥？</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\"> <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(), i);</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8-1-如果想让上面代码中的i分别输出-1-2-3-4-5-，该怎么改？\"><a href=\"#8-1-如果想让上面代码中的i分别输出-1-2-3-4-5-，该怎么改？\" class=\"headerlink\" title=\"8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？\"></a>8.1 如果想让上面代码中的i分别输出 1 2 3 4 5 ，该怎么改？</h5><h5 id=\"8-2-如果想让上面代码隔1s输出一次，怎样改？\"><a href=\"#8-2-如果想让上面代码隔1s输出一次，怎样改？\" class=\"headerlink\" title=\"8.2 如果想让上面代码隔1s输出一次，怎样改？\"></a>8.2 如果想让上面代码隔1s输出一次，怎样改？</h5><h5 id=\"8-3-用promise实现8-2的需求？\"><a href=\"#8-3-用promise实现8-2的需求？\" class=\"headerlink\" title=\"8.3 用promise实现8.2的需求？\"></a>8.3 用promise实现8.2的需求？</h5><h5 id=\"8-4-用async-await实现8-2的需求？\"><a href=\"#8-4-用async-await实现8-2的需求？\" class=\"headerlink\" title=\"8.4 用async await实现8.2的需求？\"></a>8.4 用async await实现8.2的需求？</h5><h4 id=\"九、说说事件循环机制？\"><a href=\"#九、说说事件循环机制？\" class=\"headerlink\" title=\"九、说说事件循环机制？\"></a>九、说说事件循环机制？</h4><h4 id=\"十、说说VUE里虚拟dom的原理？\"><a href=\"#十、说说VUE里虚拟dom的原理？\" class=\"headerlink\" title=\"十、说说VUE里虚拟dom的原理？\"></a>十、说说VUE里虚拟dom的原理？</h4>"},{"title":"从0开始搭建日志分析系统（二）","date":"2018-01-08T16:00:00.000Z","_content":"\n从0开始搭建日志分析系统（二）：日志分析\n<!-- more -->\n\n### 闲话\n前一篇文章我们已经收集到日志了，并且每天有定时任务把当天的日志切割压缩，接下来是对每天的日志进行分析\n最开始的思路是使用nodejs提供的fs模块来按行读取文件，然后分析过滤每一行，最后对结果以html方式输出，\n但是在实际操作中发现fs读取文件太慢（200m左右的大概需要一个半小时，如果整个过程一切顺利还好，就怕跑\n到90%了挂了，又得重新来，白白浪费时间），在逐步的改进过程中，发现linux自带很多日志操作命令能跨世纪\n般的提高效率，使用linux命令能把200m左右的日志分析时间减少到1分钟之内，在此不得不感叹linux的强大。\n参考：\n<http://blog.csdn.net/teamlet/article/details/38046409/>\n<https://www.cnblogs.com/yougewe/p/5173635.html>\n主要使用命令：\ncat grep sed sort uniq\n\n### 一、部署项目<https://github.com/17it/logfactory.git>\n+ clone项目到任意目录\n思路：\n1.使用cat命令，按照指定规则先过滤日志\n```bash\ncat out.log | grep \"xx\" > xx-first.log\n```\n2.sed命令替换掉每行日志前面的时间（此处时间格式可能不一致）\n```bash\nsed 's/^....\\-..\\-.. ..\\:..\\: //g' xx-first.log > xx-second.log\n```\n3.sort命令进行排序\n```bash\nsort xx-second.log > xx-tmp.log\n```\n4.uniq -c去重，并统计相同日志行的数量\n```bash\nuniq -c xx-tmp.log > xx-uniq.log\n```\n5.再次使用sort命令排序去重后的日志（按照数量降序 -nr）\n```bash\nsort -nr xx-uniq.log > xx-first.log\n```\n6.sed命令替换每行头尾空格，替换成js里数组的形式，方便后续使用\n```bash\nsed -e 's/ *$/\\\",/' xx-first.log > xx-second.log && sed -e 's/^  */\\\"/' xx-second.log > xx.log\n```\n7.移除过程中生成的-*.log临时文件\n```bash\nrm -f xx-*.log\"\n```\n\n核心代码：\n```bash\nvar filename = path.join(__dirname, '../src/') + self.name;\nvar exec = require('child_process').exec;\nvar cmdstr = \"cat \" + path.join(__dirname, \"../out_log.log\") + \" | grep \" + self.name + \":http > \" + filename + \"-first.log && sed 's/^....\\-..\\-.. ..\\:..\\: //g' \" + filename + \"-first.log > \" + filename + \"-second.log && sort \" + filename + \"-second.log > \" + filename + \"-tmp.log && uniq -c \" + filename + \"-tmp.log > \" + filename + \"-uniq.log && sort -nr \" + filename + \"-uniq.log > \" + filename + \"-first.log && sed -e 's/ *$/\\\",/' \" + filename + \"-first.log > \" + filename + \"-second.log && sed -e 's/^  */\\\"/' \" + filename + \"-second.log > \" + filename + \".log && rm -f \" + filename + \"-*.log\";\nexec(cmdstr, function(err,stdout,stderr){\n    if(err) {\n        console.log('cat out_log.log error: '+ stderr);\n        return;\n    }\n    console.log(stdout);\n    if(files.length > 0) {\n        transFile.init(files[0]);\n    }else {\n        self.second();\n    }\n});\n```\n+ 可能需要修改代码里的目录或者筛选名，然后直接执行node main/start\n接下来静静的等待静态html的生成吧,因为每次会生成新的html文件，所以这里需要配置一个静态文件目录（/root/study），以便访问\n```bash\nserver {\n    listen       80;\n    #listen       [::]:80 default_server;\n    server_name  17it.ren;\n    autoindex on;\n    root         /root/study;\n\n    # Load configuration files for the default server block.\n    #include /etc/nginx/default.d/*.conf;\n\n    location / {\n      root /root/study;\n      index index.html;\n      autoindex on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n```","source":"_posts/从0开始搭建日志分析系统（二）.md","raw":"---\ntitle: 从0开始搭建日志分析系统（二）\ndate: 2018-01-09\ncategories: Nginx\ntags: \n    - Linux\n    - Nginx\n#description: \n---\n\n从0开始搭建日志分析系统（二）：日志分析\n<!-- more -->\n\n### 闲话\n前一篇文章我们已经收集到日志了，并且每天有定时任务把当天的日志切割压缩，接下来是对每天的日志进行分析\n最开始的思路是使用nodejs提供的fs模块来按行读取文件，然后分析过滤每一行，最后对结果以html方式输出，\n但是在实际操作中发现fs读取文件太慢（200m左右的大概需要一个半小时，如果整个过程一切顺利还好，就怕跑\n到90%了挂了，又得重新来，白白浪费时间），在逐步的改进过程中，发现linux自带很多日志操作命令能跨世纪\n般的提高效率，使用linux命令能把200m左右的日志分析时间减少到1分钟之内，在此不得不感叹linux的强大。\n参考：\n<http://blog.csdn.net/teamlet/article/details/38046409/>\n<https://www.cnblogs.com/yougewe/p/5173635.html>\n主要使用命令：\ncat grep sed sort uniq\n\n### 一、部署项目<https://github.com/17it/logfactory.git>\n+ clone项目到任意目录\n思路：\n1.使用cat命令，按照指定规则先过滤日志\n```bash\ncat out.log | grep \"xx\" > xx-first.log\n```\n2.sed命令替换掉每行日志前面的时间（此处时间格式可能不一致）\n```bash\nsed 's/^....\\-..\\-.. ..\\:..\\: //g' xx-first.log > xx-second.log\n```\n3.sort命令进行排序\n```bash\nsort xx-second.log > xx-tmp.log\n```\n4.uniq -c去重，并统计相同日志行的数量\n```bash\nuniq -c xx-tmp.log > xx-uniq.log\n```\n5.再次使用sort命令排序去重后的日志（按照数量降序 -nr）\n```bash\nsort -nr xx-uniq.log > xx-first.log\n```\n6.sed命令替换每行头尾空格，替换成js里数组的形式，方便后续使用\n```bash\nsed -e 's/ *$/\\\",/' xx-first.log > xx-second.log && sed -e 's/^  */\\\"/' xx-second.log > xx.log\n```\n7.移除过程中生成的-*.log临时文件\n```bash\nrm -f xx-*.log\"\n```\n\n核心代码：\n```bash\nvar filename = path.join(__dirname, '../src/') + self.name;\nvar exec = require('child_process').exec;\nvar cmdstr = \"cat \" + path.join(__dirname, \"../out_log.log\") + \" | grep \" + self.name + \":http > \" + filename + \"-first.log && sed 's/^....\\-..\\-.. ..\\:..\\: //g' \" + filename + \"-first.log > \" + filename + \"-second.log && sort \" + filename + \"-second.log > \" + filename + \"-tmp.log && uniq -c \" + filename + \"-tmp.log > \" + filename + \"-uniq.log && sort -nr \" + filename + \"-uniq.log > \" + filename + \"-first.log && sed -e 's/ *$/\\\",/' \" + filename + \"-first.log > \" + filename + \"-second.log && sed -e 's/^  */\\\"/' \" + filename + \"-second.log > \" + filename + \".log && rm -f \" + filename + \"-*.log\";\nexec(cmdstr, function(err,stdout,stderr){\n    if(err) {\n        console.log('cat out_log.log error: '+ stderr);\n        return;\n    }\n    console.log(stdout);\n    if(files.length > 0) {\n        transFile.init(files[0]);\n    }else {\n        self.second();\n    }\n});\n```\n+ 可能需要修改代码里的目录或者筛选名，然后直接执行node main/start\n接下来静静的等待静态html的生成吧,因为每次会生成新的html文件，所以这里需要配置一个静态文件目录（/root/study），以便访问\n```bash\nserver {\n    listen       80;\n    #listen       [::]:80 default_server;\n    server_name  17it.ren;\n    autoindex on;\n    root         /root/study;\n\n    # Load configuration files for the default server block.\n    #include /etc/nginx/default.d/*.conf;\n\n    location / {\n      root /root/study;\n      index index.html;\n      autoindex on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n```","slug":"从0开始搭建日志分析系统（二）","published":1,"updated":"2022-06-15T08:20:40.775Z","_id":"cl4e3az0l003nk4rqaa3ow7gs","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从0开始搭建日志分析系统（二）：日志分析</p>\n<span id=\"more\"></span>\n\n<h3 id=\"闲话\"><a href=\"#闲话\" class=\"headerlink\" title=\"闲话\"></a>闲话</h3><p>前一篇文章我们已经收集到日志了，并且每天有定时任务把当天的日志切割压缩，接下来是对每天的日志进行分析<br>最开始的思路是使用nodejs提供的fs模块来按行读取文件，然后分析过滤每一行，最后对结果以html方式输出，<br>但是在实际操作中发现fs读取文件太慢（200m左右的大概需要一个半小时，如果整个过程一切顺利还好，就怕跑<br>到90%了挂了，又得重新来，白白浪费时间），在逐步的改进过程中，发现linux自带很多日志操作命令能跨世纪<br>般的提高效率，使用linux命令能把200m左右的日志分析时间减少到1分钟之内，在此不得不感叹linux的强大。<br>参考：<br><a href=\"http://blog.csdn.net/teamlet/article/details/38046409/\">http://blog.csdn.net/teamlet/article/details/38046409/</a><br><a href=\"https://www.cnblogs.com/yougewe/p/5173635.html\">https://www.cnblogs.com/yougewe/p/5173635.html</a><br>主要使用命令：<br>cat grep sed sort uniq</p>\n<h3 id=\"一、部署项目https-github-com-17it-logfactory-git\"><a href=\"#一、部署项目https-github-com-17it-logfactory-git\" class=\"headerlink\" title=\"一、部署项目https://github.com/17it/logfactory.git\"></a>一、部署项目<a href=\"https://github.com/17it/logfactory.git\">https://github.com/17it/logfactory.git</a></h3><ul>\n<li>clone项目到任意目录<br>思路：<br>1.使用cat命令，按照指定规则先过滤日志<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> out.log | grep <span class=\"string\">&quot;xx&quot;</span> &gt; xx-first.log</span><br></pre></td></tr></table></figure>\n2.sed命令替换掉每行日志前面的时间（此处时间格式可能不一致）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">&#x27;s/^....\\-..\\-.. ..\\:..\\: //g&#x27;</span> xx-first.log &gt; xx-second.log</span><br></pre></td></tr></table></figure>\n3.sort命令进行排序<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span> xx-second.log &gt; xx-tmp.log</span><br></pre></td></tr></table></figure>\n4.uniq -c去重，并统计相同日志行的数量<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uniq</span> -c xx-tmp.log &gt; xx-uniq.log</span><br></pre></td></tr></table></figure>\n5.再次使用sort命令排序去重后的日志（按照数量降序 -nr）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span> -nr xx-uniq.log &gt; xx-first.log</span><br></pre></td></tr></table></figure>\n6.sed命令替换每行头尾空格，替换成js里数组的形式，方便后续使用<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -e <span class=\"string\">&#x27;s/ *$/\\&quot;,/&#x27;</span> xx-first.log &gt; xx-second.log &amp;&amp; sed -e <span class=\"string\">&#x27;s/^  */\\&quot;/&#x27;</span> xx-second.log &gt; xx.log</span><br></pre></td></tr></table></figure>\n7.移除过程中生成的-*.log临时文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f xx-*.<span class=\"built_in\">log</span><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>核心代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var filename = path.join(__dirname, <span class=\"string\">&#x27;../src/&#x27;</span>) + self.name;</span><br><span class=\"line\">var <span class=\"built_in\">exec</span> = require(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"built_in\">exec</span>;</span><br><span class=\"line\">var cmdstr = <span class=\"string\">&quot;cat &quot;</span> + path.join(__dirname, <span class=\"string\">&quot;../out_log.log&quot;</span>) + <span class=\"string\">&quot; | grep &quot;</span> + self.name + <span class=\"string\">&quot;:http &gt; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &amp;&amp; sed &#x27;s/^....\\-..\\-.. ..\\:..\\: //g&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &amp;&amp; sort &quot;</span> + filename + <span class=\"string\">&quot;-second.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-tmp.log &amp;&amp; uniq -c &quot;</span> + filename + <span class=\"string\">&quot;-tmp.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-uniq.log &amp;&amp; sort -nr &quot;</span> + filename + <span class=\"string\">&quot;-uniq.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &amp;&amp; sed -e &#x27;s/ *$/\\&quot;,/&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &amp;&amp; sed -e &#x27;s/^  */\\&quot;/&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;.log &amp;&amp; rm -f &quot;</span> + filename + <span class=\"string\">&quot;-*.log&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(cmdstr, <span class=\"keyword\">function</span>(err,stdout,stderr)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">        console.log(<span class=\"string\">&#x27;cat out_log.log error: &#x27;</span>+ stderr);</span><br><span class=\"line\">        <span class=\"built_in\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(stdout);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(files.length &gt; 0) &#123;</span><br><span class=\"line\">        transFile.init(files[0]);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        self.second();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可能需要修改代码里的目录或者筛选名，然后直接执行node main&#x2F;start<br>接下来静静的等待静态html的生成吧,因为每次会生成新的html文件，所以这里需要配置一个静态文件目录（&#x2F;root&#x2F;study），以便访问<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    <span class=\"comment\">#listen       [::]:80 default_server;</span></span><br><span class=\"line\">    server_name  17it.ren;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    root         /root/study;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></span><br><span class=\"line\">    <span class=\"comment\">#include /etc/nginx/default.d/*.conf;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      root /root/study;</span><br><span class=\"line\">      index index.html;</span><br><span class=\"line\">      autoindex on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 404 /404.html;</span><br><span class=\"line\">        location = /40x.html &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>从0开始搭建日志分析系统（二）：日志分析</p>","more":"<h3 id=\"闲话\"><a href=\"#闲话\" class=\"headerlink\" title=\"闲话\"></a>闲话</h3><p>前一篇文章我们已经收集到日志了，并且每天有定时任务把当天的日志切割压缩，接下来是对每天的日志进行分析<br>最开始的思路是使用nodejs提供的fs模块来按行读取文件，然后分析过滤每一行，最后对结果以html方式输出，<br>但是在实际操作中发现fs读取文件太慢（200m左右的大概需要一个半小时，如果整个过程一切顺利还好，就怕跑<br>到90%了挂了，又得重新来，白白浪费时间），在逐步的改进过程中，发现linux自带很多日志操作命令能跨世纪<br>般的提高效率，使用linux命令能把200m左右的日志分析时间减少到1分钟之内，在此不得不感叹linux的强大。<br>参考：<br><a href=\"http://blog.csdn.net/teamlet/article/details/38046409/\">http://blog.csdn.net/teamlet/article/details/38046409/</a><br><a href=\"https://www.cnblogs.com/yougewe/p/5173635.html\">https://www.cnblogs.com/yougewe/p/5173635.html</a><br>主要使用命令：<br>cat grep sed sort uniq</p>\n<h3 id=\"一、部署项目https-github-com-17it-logfactory-git\"><a href=\"#一、部署项目https-github-com-17it-logfactory-git\" class=\"headerlink\" title=\"一、部署项目https://github.com/17it/logfactory.git\"></a>一、部署项目<a href=\"https://github.com/17it/logfactory.git\">https://github.com/17it/logfactory.git</a></h3><ul>\n<li>clone项目到任意目录<br>思路：<br>1.使用cat命令，按照指定规则先过滤日志<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> out.log | grep <span class=\"string\">&quot;xx&quot;</span> &gt; xx-first.log</span><br></pre></td></tr></table></figure>\n2.sed命令替换掉每行日志前面的时间（此处时间格式可能不一致）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">&#x27;s/^....\\-..\\-.. ..\\:..\\: //g&#x27;</span> xx-first.log &gt; xx-second.log</span><br></pre></td></tr></table></figure>\n3.sort命令进行排序<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span> xx-second.log &gt; xx-tmp.log</span><br></pre></td></tr></table></figure>\n4.uniq -c去重，并统计相同日志行的数量<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uniq</span> -c xx-tmp.log &gt; xx-uniq.log</span><br></pre></td></tr></table></figure>\n5.再次使用sort命令排序去重后的日志（按照数量降序 -nr）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span> -nr xx-uniq.log &gt; xx-first.log</span><br></pre></td></tr></table></figure>\n6.sed命令替换每行头尾空格，替换成js里数组的形式，方便后续使用<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -e <span class=\"string\">&#x27;s/ *$/\\&quot;,/&#x27;</span> xx-first.log &gt; xx-second.log &amp;&amp; sed -e <span class=\"string\">&#x27;s/^  */\\&quot;/&#x27;</span> xx-second.log &gt; xx.log</span><br></pre></td></tr></table></figure>\n7.移除过程中生成的-*.log临时文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f xx-*.<span class=\"built_in\">log</span><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>核心代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var filename = path.join(__dirname, <span class=\"string\">&#x27;../src/&#x27;</span>) + self.name;</span><br><span class=\"line\">var <span class=\"built_in\">exec</span> = require(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"built_in\">exec</span>;</span><br><span class=\"line\">var cmdstr = <span class=\"string\">&quot;cat &quot;</span> + path.join(__dirname, <span class=\"string\">&quot;../out_log.log&quot;</span>) + <span class=\"string\">&quot; | grep &quot;</span> + self.name + <span class=\"string\">&quot;:http &gt; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &amp;&amp; sed &#x27;s/^....\\-..\\-.. ..\\:..\\: //g&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &amp;&amp; sort &quot;</span> + filename + <span class=\"string\">&quot;-second.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-tmp.log &amp;&amp; uniq -c &quot;</span> + filename + <span class=\"string\">&quot;-tmp.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-uniq.log &amp;&amp; sort -nr &quot;</span> + filename + <span class=\"string\">&quot;-uniq.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &amp;&amp; sed -e &#x27;s/ *$/\\&quot;,/&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-first.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &amp;&amp; sed -e &#x27;s/^  */\\&quot;/&#x27; &quot;</span> + filename + <span class=\"string\">&quot;-second.log &gt; &quot;</span> + filename + <span class=\"string\">&quot;.log &amp;&amp; rm -f &quot;</span> + filename + <span class=\"string\">&quot;-*.log&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(cmdstr, <span class=\"keyword\">function</span>(err,stdout,stderr)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">        console.log(<span class=\"string\">&#x27;cat out_log.log error: &#x27;</span>+ stderr);</span><br><span class=\"line\">        <span class=\"built_in\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(stdout);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(files.length &gt; 0) &#123;</span><br><span class=\"line\">        transFile.init(files[0]);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        self.second();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可能需要修改代码里的目录或者筛选名，然后直接执行node main&#x2F;start<br>接下来静静的等待静态html的生成吧,因为每次会生成新的html文件，所以这里需要配置一个静态文件目录（&#x2F;root&#x2F;study），以便访问<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    <span class=\"comment\">#listen       [::]:80 default_server;</span></span><br><span class=\"line\">    server_name  17it.ren;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    root         /root/study;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></span><br><span class=\"line\">    <span class=\"comment\">#include /etc/nginx/default.d/*.conf;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      root /root/study;</span><br><span class=\"line\">      index index.html;</span><br><span class=\"line\">      autoindex on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 404 /404.html;</span><br><span class=\"line\">        location = /40x.html &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"css容器垂直水平居中","date":"2017-07-17T16:00:00.000Z","_content":"\ncss容器垂直水平居中常用方法，持续更新中...\n<!-- more -->\n\n### 一、借助伪类after\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div>\n        <div>头部</div>\n        <div>中部</div>\n        <div>尾部</div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    z-index: 2011;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.5);\n}\n.out>div {\n    text-align: left;\n    display: inline-block;\n    vertical-align: middle;\n    background-color: #fff;\n    width: 90%;\n    border-radius: 3px;\n    font-size: 16px;\n    overflow: hidden;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n}\n.out:after {\n    /* 最重要的是这步 */\n    content: \"\";\n    display: inline-block;\n    height: 100%;\n    width: 0;\n    vertical-align: middle;\n}\n```\n\n### 二、display:table\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div class=\"cell\">\n        <div class=\"content\">\n        \t<div>头部</div>\n            <div>中部</div>\n            <div>尾部</div>\n        </div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    display: table;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    background: rgba(0, 0, 0, 0.5);\n}\n.cell {\n     /* 关键步骤 */\n     display: table-cell;\n     vertical-align: middle;\n }\n .content {\n     background: #fff;\n     width: 60%;\n     margin: 0 auto;\n }\n```\n\n### 三、借助js\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div class=\"cell\">\n        <div>头部</div>\n        <div>中部</div>\n        <div>尾部</div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    z-index: 2017;\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    text-align: center;\n}\n.cell {\n    position: relative;\n    background: #fff;\n    width: 60%;\n    margin: 0 auto;\n}\n```\n+ 3、js\n```js\n  window.onload = function () {\n      var out = document.querySelector('.out');\n      var cell = document.querySelector('.cell');\n      var oh = out.offsetHeight;\n      var ch = cell.offsetHeight;\n\n      cell.style.top = (oh - ch) / 2 + 'px';\n  }\n```\n\n### 四、flex\n+ 1、html\n```html\n<div class=\"box\">\n     <section class=\"inner\">我是内容</section>\n</div>\n```\n+ 2、css\n```css\n.box {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.inner {\n    margin: 50px 0;\n}\n```\n\n\n持续更新中。。。\n\n\n\n","source":"_posts/实用-css容器垂直水平居中.md","raw":"---\ntitle: css容器垂直水平居中\ndate: 2017-07-18\ncategories: 前端实用\ntags: \n    - css\n    - 垂直居中\n#description: \n---\n\ncss容器垂直水平居中常用方法，持续更新中...\n<!-- more -->\n\n### 一、借助伪类after\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div>\n        <div>头部</div>\n        <div>中部</div>\n        <div>尾部</div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    z-index: 2011;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.5);\n}\n.out>div {\n    text-align: left;\n    display: inline-block;\n    vertical-align: middle;\n    background-color: #fff;\n    width: 90%;\n    border-radius: 3px;\n    font-size: 16px;\n    overflow: hidden;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n}\n.out:after {\n    /* 最重要的是这步 */\n    content: \"\";\n    display: inline-block;\n    height: 100%;\n    width: 0;\n    vertical-align: middle;\n}\n```\n\n### 二、display:table\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div class=\"cell\">\n        <div class=\"content\">\n        \t<div>头部</div>\n            <div>中部</div>\n            <div>尾部</div>\n        </div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    display: table;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    background: rgba(0, 0, 0, 0.5);\n}\n.cell {\n     /* 关键步骤 */\n     display: table-cell;\n     vertical-align: middle;\n }\n .content {\n     background: #fff;\n     width: 60%;\n     margin: 0 auto;\n }\n```\n\n### 三、借助js\n\n+ 1、html\n```html\n<div class=\"out\">\n    <div class=\"cell\">\n        <div>头部</div>\n        <div>中部</div>\n        <div>尾部</div>\n    </div>\n</div>\n```\n+ 2、css\n```CSS\n.out {\n    z-index: 2017;\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    text-align: center;\n}\n.cell {\n    position: relative;\n    background: #fff;\n    width: 60%;\n    margin: 0 auto;\n}\n```\n+ 3、js\n```js\n  window.onload = function () {\n      var out = document.querySelector('.out');\n      var cell = document.querySelector('.cell');\n      var oh = out.offsetHeight;\n      var ch = cell.offsetHeight;\n\n      cell.style.top = (oh - ch) / 2 + 'px';\n  }\n```\n\n### 四、flex\n+ 1、html\n```html\n<div class=\"box\">\n     <section class=\"inner\">我是内容</section>\n</div>\n```\n+ 2、css\n```css\n.box {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.inner {\n    margin: 50px 0;\n}\n```\n\n\n持续更新中。。。\n\n\n\n","slug":"实用-css容器垂直水平居中","published":1,"updated":"2022-06-15T08:19:57.579Z","_id":"cl4e3az0m003qk4rqsiidmujr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>css容器垂直水平居中常用方法，持续更新中…</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、借助伪类after\"><a href=\"#一、借助伪类after\" class=\"headerlink\" title=\"一、借助伪类after\"></a>一、借助伪类after</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2011</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.out</span>&gt;<span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.out</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 最重要的是这步 */</span></span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、display-table\"><a href=\"#二、display-table\" class=\"headerlink\" title=\"二、display:table\"></a>二、display:table</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">        \t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.cell</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">/* 关键步骤 */</span></span><br><span class=\"line\">     <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">     <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">     <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"三、借助js\"><a href=\"#三、借助js\" class=\"headerlink\" title=\"三、借助js\"></a>三、借助js</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2017</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.cell</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>3、js<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> out = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.out&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cell = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.cell&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oh = out.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ch = cell.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cell.<span class=\"property\">style</span>.<span class=\"property\">top</span> = (oh - ch) / <span class=\"number\">2</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"四、flex\"><a href=\"#四、flex\" class=\"headerlink\" title=\"四、flex\"></a>四、flex</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span>我是内容<span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>持续更新中。。。</p>\n","site":{"data":{}},"excerpt":"<p>css容器垂直水平居中常用方法，持续更新中…</p>","more":"<h3 id=\"一、借助伪类after\"><a href=\"#一、借助伪类after\" class=\"headerlink\" title=\"一、借助伪类after\"></a>一、借助伪类after</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2011</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.out</span>&gt;<span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.out</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 最重要的是这步 */</span></span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、display-table\"><a href=\"#二、display-table\" class=\"headerlink\" title=\"二、display:table\"></a>二、display:table</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">        \t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.cell</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">/* 关键步骤 */</span></span><br><span class=\"line\">     <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">     <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">     <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"三、借助js\"><a href=\"#三、借助js\" class=\"headerlink\" title=\"三、借助js\"></a>三、借助js</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;out&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>头部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>尾部<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.out</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2017</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.cell</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>3、js<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> out = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.out&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cell = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.cell&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oh = out.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ch = cell.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cell.<span class=\"property\">style</span>.<span class=\"property\">top</span> = (oh - ch) / <span class=\"number\">2</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"四、flex\"><a href=\"#四、flex\" class=\"headerlink\" title=\"四、flex\"></a>四、flex</h3><ul>\n<li>1、html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span>我是内容<span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>2、css<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>持续更新中。。。</p>"},{"title":"微信开发本地调试","date":"2018-11-01T16:00:00.000Z","_content":"\n本次项目需要支持在微信中运作，由于在微信后台有配置可信域名，如果直接在微信里打开本地页面可能会导致某些诡异的错误，所以想法就是开发的时候在微信里访问 test-lebz.le.com ，然后代理到本地项目，这样就不用每次小修改都提交git，然后到测试服务器部署一遍。\n<!-- more -->\n### 现有条件\n* 现在已经能够通过 10.112.41.200 绑定代理，把相应域名代理到开发者本地ip。但是众所周知这个服务不能绑定本地具体某个端口，比如gameStatic项目的8010端口。所以我们下面要做的就是怎样让本地支持不带端口访问。\n### 现有基础上拓展\n一、本地安装nginx\n1、安装和启动可以参考 https://www.cnblogs.com/meng1314-shuai/p/8335140.html\n2、配置nginx\n  a.修改nginx.conf如下\n```js\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n#pid        logs/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    keepalive_timeout  65;\n\n    include /usr/local/etc/nginx/conf.d/*.conf;\n}\n```\n  b.找到 nginx 配置文件放置文件夹，新建conf.d目录，在里面添加 game.conf 文件，内容如下。\n```js\nserver {\n        listen        80;\n        server_name     _;\n        charset utf-8;\n        add_header Set-Cookie 'client_ip=$proxy_add_x_forwarded_for;domain=lebz.le.com;path=/;';\n        large_client_header_buffers 4 32k;\n\n        location ~ ^/gameApi {\n                proxy_pass http://127.0.0.1:8888;\n        }\n\n        # 商城代理\n        location ~ ^/store {\n                proxy_pass  http://127.0.0.1:3002;\n        }\n\n\t      # 本地调试gameStatic项目\n\t      location ~ {\n                proxy_pass  http://127.0.0.1:8010;\n        }\n\n        index index.html;\n        root  /letv/www;\n}\n```\n3、重启nginx服务\n```bash\nsudo nginx -s reload\n```\n4、测试\n本地正常启动gameStatic/storeClient项目，然后去掉8010端口，如果能访问，则说明正确。\n\n二、其他\n1、至此gameStatic项目就可以了，直接在微信里打开 http://test-lebz.le.com 就能访问本地代码，每次本地修改的代码也能直接反映在微信网页上。\n2、如果想调试水果大转盘和摇一摇，则还需要把gameApi项目clone到本地，然后启动项目（首次执行一次就行）。\n```bash\nnpm run build:test\npm2 start pm2.json\n```\n\n三、上面准备工作都可以了，接下来在手机上绑定代理，方法有两种，原理差不多。\n1、方法1：10.112.41.200 设置代理\n注意不要和别人已有的设置冲突，设置好代理后，在手机上绑定host。\n2、方法2：比方法1更好，可以用spy-debugger调试\n  a.本地绑定host （127.0.0.1 test-lebz.le.com）\n  b.本地开启spy-debugger\n  c.手机绑本地spy-debugger代理：本地ip + 端口 9888","source":"_posts/微信开发本地调试.md","raw":"---\ntitle: 微信开发本地调试\ndate: 2018-11-02\ncategories: VUE JS\ntags: \n    - VUE\n    - JS\n#description:\n---\n\n本次项目需要支持在微信中运作，由于在微信后台有配置可信域名，如果直接在微信里打开本地页面可能会导致某些诡异的错误，所以想法就是开发的时候在微信里访问 test-lebz.le.com ，然后代理到本地项目，这样就不用每次小修改都提交git，然后到测试服务器部署一遍。\n<!-- more -->\n### 现有条件\n* 现在已经能够通过 10.112.41.200 绑定代理，把相应域名代理到开发者本地ip。但是众所周知这个服务不能绑定本地具体某个端口，比如gameStatic项目的8010端口。所以我们下面要做的就是怎样让本地支持不带端口访问。\n### 现有基础上拓展\n一、本地安装nginx\n1、安装和启动可以参考 https://www.cnblogs.com/meng1314-shuai/p/8335140.html\n2、配置nginx\n  a.修改nginx.conf如下\n```js\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n#pid        logs/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    keepalive_timeout  65;\n\n    include /usr/local/etc/nginx/conf.d/*.conf;\n}\n```\n  b.找到 nginx 配置文件放置文件夹，新建conf.d目录，在里面添加 game.conf 文件，内容如下。\n```js\nserver {\n        listen        80;\n        server_name     _;\n        charset utf-8;\n        add_header Set-Cookie 'client_ip=$proxy_add_x_forwarded_for;domain=lebz.le.com;path=/;';\n        large_client_header_buffers 4 32k;\n\n        location ~ ^/gameApi {\n                proxy_pass http://127.0.0.1:8888;\n        }\n\n        # 商城代理\n        location ~ ^/store {\n                proxy_pass  http://127.0.0.1:3002;\n        }\n\n\t      # 本地调试gameStatic项目\n\t      location ~ {\n                proxy_pass  http://127.0.0.1:8010;\n        }\n\n        index index.html;\n        root  /letv/www;\n}\n```\n3、重启nginx服务\n```bash\nsudo nginx -s reload\n```\n4、测试\n本地正常启动gameStatic/storeClient项目，然后去掉8010端口，如果能访问，则说明正确。\n\n二、其他\n1、至此gameStatic项目就可以了，直接在微信里打开 http://test-lebz.le.com 就能访问本地代码，每次本地修改的代码也能直接反映在微信网页上。\n2、如果想调试水果大转盘和摇一摇，则还需要把gameApi项目clone到本地，然后启动项目（首次执行一次就行）。\n```bash\nnpm run build:test\npm2 start pm2.json\n```\n\n三、上面准备工作都可以了，接下来在手机上绑定代理，方法有两种，原理差不多。\n1、方法1：10.112.41.200 设置代理\n注意不要和别人已有的设置冲突，设置好代理后，在手机上绑定host。\n2、方法2：比方法1更好，可以用spy-debugger调试\n  a.本地绑定host （127.0.0.1 test-lebz.le.com）\n  b.本地开启spy-debugger\n  c.手机绑本地spy-debugger代理：本地ip + 端口 9888","slug":"微信开发本地调试","published":1,"updated":"2022-06-15T08:25:44.038Z","_id":"cl4e3az0o003tk4rqsz51vbwk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本次项目需要支持在微信中运作，由于在微信后台有配置可信域名，如果直接在微信里打开本地页面可能会导致某些诡异的错误，所以想法就是开发的时候在微信里访问 test-lebz.le.com ，然后代理到本地项目，这样就不用每次小修改都提交git，然后到测试服务器部署一遍。</p>\n<span id=\"more\"></span>\n<h3 id=\"现有条件\"><a href=\"#现有条件\" class=\"headerlink\" title=\"现有条件\"></a>现有条件</h3><ul>\n<li>现在已经能够通过 10.112.41.200 绑定代理，把相应域名代理到开发者本地ip。但是众所周知这个服务不能绑定本地具体某个端口，比如gameStatic项目的8010端口。所以我们下面要做的就是怎样让本地支持不带端口访问。</li>\n</ul>\n<h3 id=\"现有基础上拓展\"><a href=\"#现有基础上拓展\" class=\"headerlink\" title=\"现有基础上拓展\"></a>现有基础上拓展</h3><p>一、本地安装nginx<br>1、安装和启动可以参考 <a href=\"https://www.cnblogs.com/meng1314-shuai/p/8335140.html\">https://www.cnblogs.com/meng1314-shuai/p/8335140.html</a><br>2、配置nginx<br>  a.修改nginx.conf如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#user  nobody;</span><br><span class=\"line\">worker_processes  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  notice;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  info;</span><br><span class=\"line\">#pid        logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    #log_format  main  <span class=\"string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    #access_log  logs/access.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    keepalive_timeout  <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    include /usr/local/etc/nginx/conf.<span class=\"property\">d</span><span class=\"comment\">/*.conf;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>  b.找到 nginx 配置文件放置文件夹，新建conf.d目录，在里面添加 game.conf 文件，内容如下。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen        <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name     _;</span><br><span class=\"line\">        charset utf-<span class=\"number\">8</span>;</span><br><span class=\"line\">        add_header <span class=\"title class_\">Set</span>-<span class=\"title class_\">Cookie</span> <span class=\"string\">&#x27;client_ip=$proxy_add_x_forwarded_for;domain=lebz.le.com;path=/;&#x27;</span>;</span><br><span class=\"line\">        large_client_header_buffers <span class=\"number\">4</span> 32k;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ ^/gameApi &#123;</span><br><span class=\"line\">                proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:8888;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 商城代理</span><br><span class=\"line\">        location ~ ^/store &#123;</span><br><span class=\"line\">                proxy_pass  <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:3002;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t      # 本地调试gameStatic项目</span><br><span class=\"line\">\t      location ~ &#123;</span><br><span class=\"line\">                proxy_pass  <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:8010;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        index index.<span class=\"property\">html</span>;</span><br><span class=\"line\">        root  /letv/www;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、重启nginx服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>4、测试<br>本地正常启动gameStatic&#x2F;storeClient项目，然后去掉8010端口，如果能访问，则说明正确。</p>\n<p>二、其他<br>1、至此gameStatic项目就可以了，直接在微信里打开 <a href=\"http://test-lebz.le.com/\">http://test-lebz.le.com</a> 就能访问本地代码，每次本地修改的代码也能直接反映在微信网页上。<br>2、如果想调试水果大转盘和摇一摇，则还需要把gameApi项目clone到本地，然后启动项目（首次执行一次就行）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build:<span class=\"built_in\">test</span></span><br><span class=\"line\">pm2 start pm2.json</span><br></pre></td></tr></table></figure>\n\n<p>三、上面准备工作都可以了，接下来在手机上绑定代理，方法有两种，原理差不多。<br>1、方法1：10.112.41.200 设置代理<br>注意不要和别人已有的设置冲突，设置好代理后，在手机上绑定host。<br>2、方法2：比方法1更好，可以用spy-debugger调试<br>  a.本地绑定host （127.0.0.1 test-lebz.le.com）<br>  b.本地开启spy-debugger<br>  c.手机绑本地spy-debugger代理：本地ip + 端口 9888</p>\n","site":{"data":{}},"excerpt":"<p>本次项目需要支持在微信中运作，由于在微信后台有配置可信域名，如果直接在微信里打开本地页面可能会导致某些诡异的错误，所以想法就是开发的时候在微信里访问 test-lebz.le.com ，然后代理到本地项目，这样就不用每次小修改都提交git，然后到测试服务器部署一遍。</p>","more":"<h3 id=\"现有条件\"><a href=\"#现有条件\" class=\"headerlink\" title=\"现有条件\"></a>现有条件</h3><ul>\n<li>现在已经能够通过 10.112.41.200 绑定代理，把相应域名代理到开发者本地ip。但是众所周知这个服务不能绑定本地具体某个端口，比如gameStatic项目的8010端口。所以我们下面要做的就是怎样让本地支持不带端口访问。</li>\n</ul>\n<h3 id=\"现有基础上拓展\"><a href=\"#现有基础上拓展\" class=\"headerlink\" title=\"现有基础上拓展\"></a>现有基础上拓展</h3><p>一、本地安装nginx<br>1、安装和启动可以参考 <a href=\"https://www.cnblogs.com/meng1314-shuai/p/8335140.html\">https://www.cnblogs.com/meng1314-shuai/p/8335140.html</a><br>2、配置nginx<br>  a.修改nginx.conf如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#user  nobody;</span><br><span class=\"line\">worker_processes  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  notice;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  info;</span><br><span class=\"line\">#pid        logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    #log_format  main  <span class=\"string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    #access_log  logs/access.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    keepalive_timeout  <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    include /usr/local/etc/nginx/conf.<span class=\"property\">d</span><span class=\"comment\">/*.conf;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>  b.找到 nginx 配置文件放置文件夹，新建conf.d目录，在里面添加 game.conf 文件，内容如下。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen        <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name     _;</span><br><span class=\"line\">        charset utf-<span class=\"number\">8</span>;</span><br><span class=\"line\">        add_header <span class=\"title class_\">Set</span>-<span class=\"title class_\">Cookie</span> <span class=\"string\">&#x27;client_ip=$proxy_add_x_forwarded_for;domain=lebz.le.com;path=/;&#x27;</span>;</span><br><span class=\"line\">        large_client_header_buffers <span class=\"number\">4</span> 32k;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ ^/gameApi &#123;</span><br><span class=\"line\">                proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:8888;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 商城代理</span><br><span class=\"line\">        location ~ ^/store &#123;</span><br><span class=\"line\">                proxy_pass  <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:3002;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t      # 本地调试gameStatic项目</span><br><span class=\"line\">\t      location ~ &#123;</span><br><span class=\"line\">                proxy_pass  <span class=\"attr\">http</span>:<span class=\"comment\">//127.0.0.1:8010;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        index index.<span class=\"property\">html</span>;</span><br><span class=\"line\">        root  /letv/www;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、重启nginx服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>4、测试<br>本地正常启动gameStatic&#x2F;storeClient项目，然后去掉8010端口，如果能访问，则说明正确。</p>\n<p>二、其他<br>1、至此gameStatic项目就可以了，直接在微信里打开 <a href=\"http://test-lebz.le.com/\">http://test-lebz.le.com</a> 就能访问本地代码，每次本地修改的代码也能直接反映在微信网页上。<br>2、如果想调试水果大转盘和摇一摇，则还需要把gameApi项目clone到本地，然后启动项目（首次执行一次就行）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build:<span class=\"built_in\">test</span></span><br><span class=\"line\">pm2 start pm2.json</span><br></pre></td></tr></table></figure>\n\n<p>三、上面准备工作都可以了，接下来在手机上绑定代理，方法有两种，原理差不多。<br>1、方法1：10.112.41.200 设置代理<br>注意不要和别人已有的设置冲突，设置好代理后，在手机上绑定host。<br>2、方法2：比方法1更好，可以用spy-debugger调试<br>  a.本地绑定host （127.0.0.1 test-lebz.le.com）<br>  b.本地开启spy-debugger<br>  c.手机绑本地spy-debugger代理：本地ip + 端口 9888</p>"},{"title":"正则表达式","date":"2021-12-09T16:00:00.000Z","_content":"\n正则，熟悉的陌生人，经常用，却很少总结\n<!-- more -->\n\n### 一、概念\n正则表达式是描述字符模式的对象。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。\n\n三种生成方式：\n+ const reg = eval('/hello/i')  -  不推荐\n+ const reg = /hello/i\n+ const reg = new RegExp('hello', 'i')\n\n#### 正则可视化网站：https://regexper.com/\n[图片1](图片1.png)\n\n### 二、修饰符\n修饰符与其他语法特殊，字面量方法声名的时候放到//后，构造函数声明的时候，作为第二个参数传入。整个正则表达式可以理解为正则表达式规则字符串+修饰符。\n+ g：global 执行一个全局匹配\n+ s：dotAll模式：可以让点（.）符号匹配任意单个字符\n+ i：ignore case执行一个不区分大小写的匹配\n+ u：unicode模式：正确处理大于\\uFFFF的Unicode字符\n+ m: multiple lines多行匹配，仅有换行符的时候生效\n+ y：sticky模式：确保匹配必须从剩余的第一个未知开始\n\n常用的 igm 就不多做解释了，说说不常见的 umy ~\n#### dotAll模式 - s修饰符\ns修饰符，可以让点（.）符号匹配任意单个字符\n```js\nlet se = /foo.bar/\nconsole.log('without s', se.test('foo\\nbar')) // false\nse = /foo.bar/s\nconsole.log('with s', se.test('foo\\nbar')) // true\n```\n#### sticky模式 - y修饰符\ny修饰符的作用与g修饰符类似，不同的地方，g修饰符只要剩余未知中存在匹配就可以；而y修饰符确保匹配必须从剩余的第一个未知开始，这也就是“粘连”的涵义\n```js\nlet str = 'aaa_aa_a'\nlet ye = /a+/g\nlet ye2 = /a+/y\nconsole.log('ye', ye.exec(str)); // aaa\nconsole.log('ye2', ye2.exec(str)); // aaa\nconsole.log('ye', ye.exec(str)); // aa\nconsole.log('ye2', ye2.exec(str)); // null\n```\n#### unicode模式 - u修饰符\n用来正确处理大于\\uFFFF的Unicode字符；\\uD83D\\uDC2A -> 🐪  是一个四个字节的UTF-16编码\n```js\n/\\uD83D/u.test('\\uD83D\\uDC2A') // false\n/\\uD83D/.test('\\uD83D\\uDC2A') // true\n```\n#### 扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\n\n### 三、方法和属性\n```js\nlet reg = new RegExp('hello', 'ig');\n// 常用方法\nconsole.log('test:', reg.test('hello world')); // true\nconsole.log('lastIndex', reg.lastIndex); // 5\nconsole.log('exec:', reg.exec('hello , i am from Hello World')); // ['Hello']\nconsole.log('lastIndex', reg.lastIndex); // 23\n// 常用属性\nconsole.log('source:', reg.source); // hello\nconsole.log('flags:', reg.flags); // gi\nconsole.log('global:', reg.global); // true\nconsole.log('ignoreCase:', reg.ignoreCase); // true\nconsole.log('multiline:', reg.multiline); // false\n// 不常用的方法和属性\nconsole.log('dotAll:', reg.dotAll); // false\nconsole.log('sticky:', reg.sticky); // false\nconsole.log('unicode:', reg.unicode); // false\nreg.compile('world', 'i'); // 重新编译成 /world/i\n```\n#### 3.1: lastIndex\n返回一个整数，表示下一次开始搜索的位置。该属性可读写，但是只在进行连续搜索时有意义（/g 或 /s）\n```js\nconst reg = /a+/g\nconst str = 'aaa_aa'\nconsole.log(reg.exec(str)) // aaa\nconsole.log(reg.lastIndex) // 3\nconsole.log(reg.exec(str)) // aa\nconsole.log(reg.lastIndex) // 6\nconsole.log(reg.exec(str)) // null\nconsole.log(reg.lastIndex) // 0\n// 第二圈，从头来\nconsole.log(reg.exec(str)) // aaa\nconsole.log(reg.lastIndex) // 3\n```\n* 注意：带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串\n```js\n// 带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串\nconst r = /aa/g\nconsole.log(r.test('aa')) // true\nconsole.log(r.lastIndex) // 2\nconsole.log(r.test('_aa_')) // false\nr.lastIndex = 1 // 将lastIndex手动改成1\nconsole.log(r.test('_aa_')) // true\n```\n#### 3.2: STRING与正则相关的方法 match、replace、search、split\n+ 1 match 返回一个数组，成员是所有匹配的子字符串；匹配失败返回null\n```js\nlet str = '_x_x'\nconsole.log(str.match(/x/)) // ['x', index: 1, input: '_x_x']\nconsole.log(str.match(/x/g)) // ['x', 'x']\nconsole.log(str.match(/y/)) // null\n// 设置正则表达式的lastIndex属性，对match方法无效\nlet reg = /x/g\nreg.lastIndex = 5\nconsole.log(reg.exec(str)) // null\nconsole.log(str.match(reg)) // ['x', 'x']\n```\n+ 2 search 返回第一个满足条件的匹配结果在整个字符串中的位置\n```js\nconsole.log('_x_x'.search(/x/)) // 1\nconsole.log('_x_x'.search(/y/)) // -1\n```\n+ 3 split 按照正则规则分割字符串，返回一个由分割后的各个部分组成的数组\n```js\nconsole.log('a,  b,c, d'.split(/, */)) // [ 'a', 'b', 'c', 'd' ]\n// 第二个参数是返回数组的最大成员数\nconsole.log('a,  b,c, d'.split(/, */, 2)) // [ 'a', 'b' ]\nconsole.log('aaa**a*'.split(/a*/)) // [ '', '*', '*', '*' ]\n// 如果正则表达式带有括号，则括号匹配的部分也会作为数组成员返回\nconsole.log('aaa*a*'.split(/(a*)/)) // [\"\", \"aaa\", \"*\", \"\", \"*\", \"a\", \"*\"]\n```\n+ 4 replace - 可以替换匹配的值\n```js\nconsole.log('aaa'.replace(/a/, 'b')) // baa\nconsole.log('aaa'.replace(/a/g, 'b')) // bbb\n\n// 一、replace方法的第二个参数可以使用美元符号$，用来指代所替换的内容\n// 1、$&：匹配的子字符串\nconsole.log('abc'.replace(/b/, '$&')) // abc\n// 2、$`：匹配结果前面的文本\nconsole.log('abc'.replace(/b/, '$`')) // aac\n// 3、$'：匹配结果后面的文本\nconsole.log('abc'.replace(/b/, '$\\'')) // acc\n// 4、$n：匹配成功的第n组内容，n是从1开始的自然数\nconsole.log('abc'.replace(/(b)/, '$1d')) // abdc\n// 5、$$：指代美元符号$\nconsole.log('abc'.replace(/b/, '$$')) // a$c\n\n// 二、replace方法的第二个参数还可以是一个函数\nconst res = '3 and 5'.replace(/[0-9]+/g, (match) => {\n  return 2 * match\n})\nconsole.log(res) // 6 and 10\n```\n### 四、语法\n* 原义字符(字面量字符)  \n* 元字符(点字符.、非打印字符、预定义类、边界)   \n* 转义符\\   \n* 字符类[]   \n* 字符类取反[^]  \n* 范围类[-]  \n* 选择符|  \n* 量词  \n* 贪婪与懒惰(量词后加?)\n* 分组()与反向引用(非捕获组 ?:)   \n* 零宽断言（前瞻(?= 先行断言、?! 先行否定断言)    后顾(?<= 后行断言、?<! 后行否定断言)）\n\n#### 4.1 原义字符(字面量字符)\n如果某个字符只表示它字面的含义，那么它们就叫做“字面量字符”（literal characters）\n```js\n/dog/.test('IT dog') // dog为原义字符\n```\n#### 4.2 元字符\n有一部分字符有特殊含义，不代表字面的意思。它们叫做“元字符”（metacharacters）\n```js\n// 1、点字符（.）- 除了换行(\\n)、行结束符(\\u2028)、回车(\\r)、段分隔符(\\u2029)外的其他任意单字符\nconsole.log(/c..t/.test('c\\nt')) // false\nconsole.log(/c.t/.test('cat')) // true\n// 2、非打印字符\n// \\cx：control + 控制字符(只能是字母)，如：\\cM = \\r\nconsole.log(/a\\cMb/.test('a\\rb'), /a\\cMb/.test('a\\cMb')) // true false\n// [\\b]：匹配退格键(\\u0008) 或 其本身\nconsole.log(/[\\b]/.test('\\u0008'), /[\\b]/.test('[\\b]')) // true true\n// \\n：换行符，等价于 \\x0a 和 本身\nconsole.log(/a\\nb/.test('a\\nb'), /a\\nb/.test('a\\x0ab')) // true true\n// \\r：回车符，等价于 \\x0d 和 本身\nconsole.log(/a\\rb/.test('a\\rb'), /a\\rb/.test('a\\x0db')) // true true\n// \\t：制表符，等价于 \\x09 和 本身\nconsole.log(/a\\tb/.test('a\\tb'), /a\\tb/.test('a\\x09b')) // true true\n// \\v：垂直制表符，等价于 \\x0b 和 本身\nconsole.log(/a\\vb/.test('a\\vb'), /a\\vb/.test('a\\x0bb')) // true true\n// \\f：换页符，等价于 \\x0c 和 本身\nconsole.log(/a\\fb/.test('a\\fb'), /a\\fb/.test('a\\x0cb')) // true true\n// \\0：匹配null字符（\\u0000）和 本身\nconsole.log(/a\\0b/.test('a\\0b'), /a\\0b/.test('a\\u0000b')) // true true\n// \\xxx：查找以八进制数xxx规定的字符（如：\\127 = W）\nconsole.log(/\\127/.test('hello \\127'), /\\127/.test('hello World')) // true true\n// \\xdd：查找以16进制数dd规定的字符（如：\\x57 = W）\nconsole.log(/\\x57/.test('hello \\x57'), /\\x57/.test('hello World')) // true true\n// \\uhhhh：匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的字符（如：\\u0057 = W）\nconsole.log(/\\u0057/.test('hello \\u0057'), /\\u0057/.test('hello World')) // true true\n// 3、预定义类：是某些常见模式的简写方式\n// \\d：数字字符，等价于[0-9]\nconsole.log(/\\d/.test('123')) // true\n// \\D：非数字，等价于[^0-9]\nconsole.log(/\\D/.test('123')) // false\n// \\w：单词字符（字母、数字、下划线），等价于[0-9_a-zA-Z]\nconsole.log(/\\w/.test('1'), /\\w/.test('a'), /\\w/.test('_')) // true true true\n// \\W：非单词字符，等价于[^0-9_a-zA-Z]\nconsole.log(/\\W/.test('1'), /\\W/.test('a'), /\\W/.test('_')) // false false false\n// \\s：空白符，等价于[\\t\\n\\x0B\\f\\r]\nconsole.log(/\\s/.test(' '), /\\s/.test('\\t')) // true true\n// \\S：非空白符，等价于[^\\t\\n\\x0B\\f\\r]\nconsole.log(/\\S/.test(' '), /\\S/.test('\\t')) // false false\n// 4、边界\n// ^：以..开头\nconsole.log(/^hello/.test('hello world'), /^hello/.test(' hello world')) // true false\n// &：以..结尾\nconsole.log(/world$/.test('hello world'), /world$/.test('hello world ')) // true false\n// \\b：匹配一个单词边界，也就是指单词和空格间的位置\nconsole.log(/\\bworld/.test('helloworld'), /\\bworld/.test('hello world')) // false true\n// 注：\"hello world\"，\"hello-world\"，\"hello&world\",\"hello-world\",\"hello world233\"都会返回true\n// 注：可以是\"hello_world\"，\"hello2world\"，\"helloaworld\"，\"helloworld\"都返回false\n// \\B：匹配非单词边界\nconsole.log(/\\Bworld/.test('helloworld'), /\\Bworld/.test('hello world')) // true false\n```\n#### 4.3 转义符\\\n对于那些有特殊含义的字符，如果要匹配它们本身，就需要在它们前面要加上反斜杠。\n```js\n// 需要转义的，一共12个字符 ^.[$()|*+?{\\\n// 注：用 new RegExp 生成的需要转义的正则，需要两个\\\\\nconsole.log((new RegExp('1\\\\+1')).test('1+1')) // true\n```\n#### 4.4 字符类 []\n表示有一系列字符可供选择，只要匹配其中一个就可以了\n```js\nconsole.log(/[abc]/.test('hello')) // false\nconsole.log(/[abc]/.test('apple')) // true\n// 常见的 [12345]  [a-zA-Z0-9]\n```\n#### 4.5 字符类取反[^] - 也叫\"脱字符\"\n表示除了字符类之中的字符，其他字符都可以匹配 - 中括号内第一个为^\n```js\nconsole.log(/[^abc]/.test('hello')) // true\nconsole.log(/[^abc]/.test('aabbcc')) // false\n// 扩展：[^] 表示任意字符，跟 . 相比，也包括换行符\nconsole.log(/[^]/.test('abc'), /[^]/.test('\\n'), /[^]/.test('$')) // true true true\nconsole.log(/./.test('abc'), /./.test('\\n'), /./.test('$')) // true false true\n```\n#### 4.6 范围类[-] - 也叫\"连字符\"\n表示一定范围内\n```js\nconsole.log(/[0-9]/.test('123')) // true\nconsole.log(/[a-z]/.test('abc')) // true\nconsole.log(/[a-zA-Z_0-9]/.test('a_b1')) // true\nconsole.log(/[\\u4E00-\\u9FA5]/.test('你hello')) // true\n```\n#### 4.7 选择符|\n表示“或关系”（OR）\n```js\nconsole.log(/cat|dog/.test('cat'), /cat|dog/.test('at')) // true false\nconsole.log(/cat|dog|fish/.test('cat')) // true\n// 选择符会包括它前后的多个字符，比如上面的cat、dog、fish，可用()改变这一行为\nconsole.log(/(at|do)g/.test('atg')) // true\n```\n#### 4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数\n```js\n// 1、匹配n次：{n}\nconsole.log(/a{2}/.test('abc'), /a{2}/.test('aabc')) // false true\n// 2、匹配至少m次，最多n次：{m,n}\nconsole.log(/a{1,3}/.test('baaaac')) // true\n// 3、匹配至少m次，最多不限：{m,}\nconsole.log(/a{2,}/.test('abc'), /a{2,}/.test('aaaabc')) // false true\n// 4、匹配0次或多次，相当于{0,}：*\nconsole.log(/a*/.test('bc'), /a*/.test('abc')) // true true\n// 5、匹配0次或1次，相当于{0,1}：?\nconsole.log(/https?/.test('http://'), /https?/.test('https://')) // true true\n// 6、匹配一次或多次，相当于{1,}：+\nconsole.log(/a+/.test('bc'), /a+/.test('aaaabc')) // false true\n```\n#### 4.9 贪婪与懒惰(量词后加?)\n* 上面的量词符，默认情况下都是最大可能匹配，即匹配到下一个字符不满足匹配规则为止，这被称为贪婪模式\n* 要开启懒惰模式，需要在量词后加?\n* 贪婪模式量词： {x,y}  {x,}  ?   *   +\n* 懒惰模式量词： {x,y}? {x,}?  ??  *?  +?\n```js\nconst str = 'baaaac'\nconsole.log(str.match(/ba{1,4}/), str.match(/ba{1,4}?/)) // ['baaaa']  ['ba']\nconsole.log(str.match(/ba{2,}/), str.match(/ba{2,}?/)) // ['baaaa']  ['baa']\nconsole.log(str.match(/ba?/), str.match(/ba??/)) // ['ba']  ['b']\nconsole.log(str.match(/ba*/), str.match(/ba*?/)) // ['baaaa']  ['b']\nconsole.log(str.match(/ba+/), str.match(/ba+?/)) // ['baaaa']  ['ba']\n```\n#### 4.10 分组()与反向引用(非捕获组 ?:)\n```js\n// 一、分组（子表达式）可以理解为，数学运算中的括号，用于计算的分组使用\nconsole.log(/abc{2}/.exec('1abcc2')) // ['abcc', index: 1, input: '1abcc2']\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/.exec('2021-12-01'))\n// 上面的返回值 [\"2021-12-01\", \"2021\", \"12\", \"01\", index: 0, input: \"2021-12-01\"]\n// 1、对比上面两个返回结果可以看出，第二个带分组的，会在匹配结果里返回每个分组匹配到的结果，即'2021','12','01'\n// 2、使用组匹配时，不宜同时使用g修饰符，否则match方法不会捕获分组的内容(但exec方法不受影响)\nconsole.log('2021-12-01'.match(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/g)) // [\"2021-12-01\"]\nconsole.log('2021-12-01'.match(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/)) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/g.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\n// 3、分组的用途\n'2021-12-01'.replace(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/, '$1+$2+$3') // 2021+12+01\n'2021-12-01'.replace(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/, ($1,$2,$3,$4) => { // 2021+12+01\n  return `${$2}+${$3}+${$4}`\n})\n// 注：如果replace第二个参数是function，则分组匹配结果时候从$2开始，$1是整个匹配到的结果\n// 4、\\n：表示第n个括号匹配的内容\n// 用于匹配网页标签 [\"<p class=\"cs\">hello</p>\", \"p\", \" class=\"cs\"]\nconsole.log(/<([^>]+)([^>]*)>[^<]*<\\/\\1>/.exec('<p class=\"cs\">hello</p>'))\n// \\n是内容完全匹配，而不仅是格式匹配\nconsole.log(/(.)+.*\\1/.exec('hello world')) // [\"hello wo\", \"o\"]\nconsole.log(/(.).*\\1/.exec('hello world')) // [\"llo worl\", \"l\"]\n// 分析：上面两者之所以分组中匹配到的不一样，是因为正则默认是\"贪婪模式\"，可以改为懒惰模式\nconsole.log(/(.)+?.*\\1/.exec('hello world')) // [\"hello worl\", \"l\"]\n// 二、反向引用(非捕获组 ?:) - 放在分组最前面\n// 表示不返回该组匹配的内容，即匹配的结果中不计入这个括号里匹配到的结果\nconsole.log(/^(?:\\d{4})[/-](\\d{2})[/-](\\d{2})$/.exec('2021-12-01')) // [\"2021-12-01\", \"12\", \"01\"]\nconsole.log(/^(\\d{4})[/-](\\d{2})[/-](\\d{2})$/.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\n```\n#### 4.11 零宽断言\n```js\n// 1、前瞻lookahead(?= 先行断言、?! 先行否定断言、负向先行断言)\n'hello world'.match(/l(?=o)/) // [\"l\", index: 3]\n// x(?=y)：表示x后面必须有y，才能匹配上；括号里的部分y不会返回\n// x(?!y)：相反，表示x后面必须没有y，才能匹配上；括号里的部分y不会返回\n'hello world'.replace(/l(?=o)/g, ' ') // \"hel o world\"\n'hello world'.replace(/l(?!o)/g, ' ') // \"he lo wor d\"\n// 2、后顾lookbehind(?<= 后行断言、?<! 后行否定断言、负向后行断言) - 慎用，有些平台不支持\n// (?<=y)x：表示x前面必须有y，才能匹配上；括号里的部分y不会返回\n// (?<!y)x：相反，表示x前面必须没有y，才能匹配上；括号里的部分y不会返回\nconsole.log('hello world'.replace(/(?<=e)l/g, ' ')) // \"he lo world\"\nconsole.log('hello world'.replace(/(?<!e)l/g, ' ')) // \"hel o wor d\"\n// 3、前面讲到，前瞻是匹配x后面有没有y，那如果不写x呢？(相当于indexOf，但exec不会匹配结果)\nconsole.log(/(?=abc)/.exec(\"cbacbac\"), /(?=abc)/.test(\"cbacbac\")) // null false\nconsole.log(/(?=abc)/.exec(\"cbacabc\"), /(?=abc)/.test(\"cbacabc\")) // [\"\", index: 4] true\n// 4、那么对于后顾，如果不带x，我们能做什么呢？\nconsole.log(/(?!\\d)/.exec(\"123\"), /(?!\\d)/.test(\"123\")) // [\"\", index: 3] true\n// 进一步改造上面这个不带x的后顾正则 - 匹配不全是某种规则的字符\nconsole.log(/^(?!\\d+$)/.exec('123'), /^(?!\\d+$)/.test('123')) // null false\n// 使用场景，金额每三位用,分隔\n'1234567'.replace(/(\\d)(?=(\\d{3})+$)/g, '$1,') // \"1,234,567\"\n'1234567'.match(/(\\d)(?=(\\d{3})+$)/g) // [\"1\", \"4\"]\n```\n### 五、常用正则举例\n```js\n// 1、手机号\nreg = /^1[3456789]\\d{9}$/\n// 2、身份证(15位数字 或 17位数字+数字或x)\nreg = /^[1-9]\\d{14}(\\d{2}[0-9xX])?$/\n// 3、密码 - 数字、字母、下划线最少两种，8-16位：https://juejin.cn/post/6946016272245063716#heading-4\nreg = /^(?!(\\d+|[a-zA-Z]+|_+)$)\\w{8,16}$/\nreg = /^(?!\\d+$)(?![a-zA-Z]+$)(?!_+$)\\w{8,16}$/ // 等价\n// 前瞻并不支持ios14以下，所以在H5上，为了兼容，最好用方法\nfun = (str) => {\n  const match = [/[A-Za-z]/, /\\d/, /_/].filter(i => i.test(str)).length >= 2\n  return match && /^\\w{8,16}$/.test(str)\n}\n// 4、计算字符串字节数 - 中文占2字节，其余的1字节\nfun = (str) => str.replace(/\\u4e00-\\u9fa5/g, 'aa').length\n// 5、多个空格换成一个\nfun = (str) => str.replace(/\\s+/g, ' ')\n// 6、是否包含连续相同的字符串 - 前瞻\nreg = /(?=(\\w+)\\1)/ // /(?=(\\w+)\\1)/.test(\"cbacbabc\") true\n// 7、最多两位小数\nreg = /^\\d*\\.?\\d{0,2}$/\n// 8、去除所有的html标签\nfun = (str) => str.replace(/<[^>]+>/gi, '')\n// 9、获取url参数\nfun = (name) => {\n  const r = window.location.search.substr(1)\n  const eg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')\n\n  return r.match(eg) ? r.match(eg)[2] : ''\n}\n// 10、阿拉伯数字替换成对应的中文大写\narr = [\"零\",\"壹\",\"贰\",\"叁\",\"肆\",\"伍\",\"陆\",\"柒\",\"捌\",\"玖\"]\nfun = (str) => str.replace(/\\d/g, (m) => {\n  return arr[m]\n})\n```\n","source":"_posts/正则.md","raw":"---\ntitle: 正则表达式\ndate: 2021-12-10\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n正则，熟悉的陌生人，经常用，却很少总结\n<!-- more -->\n\n### 一、概念\n正则表达式是描述字符模式的对象。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。\n\n三种生成方式：\n+ const reg = eval('/hello/i')  -  不推荐\n+ const reg = /hello/i\n+ const reg = new RegExp('hello', 'i')\n\n#### 正则可视化网站：https://regexper.com/\n[图片1](图片1.png)\n\n### 二、修饰符\n修饰符与其他语法特殊，字面量方法声名的时候放到//后，构造函数声明的时候，作为第二个参数传入。整个正则表达式可以理解为正则表达式规则字符串+修饰符。\n+ g：global 执行一个全局匹配\n+ s：dotAll模式：可以让点（.）符号匹配任意单个字符\n+ i：ignore case执行一个不区分大小写的匹配\n+ u：unicode模式：正确处理大于\\uFFFF的Unicode字符\n+ m: multiple lines多行匹配，仅有换行符的时候生效\n+ y：sticky模式：确保匹配必须从剩余的第一个未知开始\n\n常用的 igm 就不多做解释了，说说不常见的 umy ~\n#### dotAll模式 - s修饰符\ns修饰符，可以让点（.）符号匹配任意单个字符\n```js\nlet se = /foo.bar/\nconsole.log('without s', se.test('foo\\nbar')) // false\nse = /foo.bar/s\nconsole.log('with s', se.test('foo\\nbar')) // true\n```\n#### sticky模式 - y修饰符\ny修饰符的作用与g修饰符类似，不同的地方，g修饰符只要剩余未知中存在匹配就可以；而y修饰符确保匹配必须从剩余的第一个未知开始，这也就是“粘连”的涵义\n```js\nlet str = 'aaa_aa_a'\nlet ye = /a+/g\nlet ye2 = /a+/y\nconsole.log('ye', ye.exec(str)); // aaa\nconsole.log('ye2', ye2.exec(str)); // aaa\nconsole.log('ye', ye.exec(str)); // aa\nconsole.log('ye2', ye2.exec(str)); // null\n```\n#### unicode模式 - u修饰符\n用来正确处理大于\\uFFFF的Unicode字符；\\uD83D\\uDC2A -> 🐪  是一个四个字节的UTF-16编码\n```js\n/\\uD83D/u.test('\\uD83D\\uDC2A') // false\n/\\uD83D/.test('\\uD83D\\uDC2A') // true\n```\n#### 扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\n\n### 三、方法和属性\n```js\nlet reg = new RegExp('hello', 'ig');\n// 常用方法\nconsole.log('test:', reg.test('hello world')); // true\nconsole.log('lastIndex', reg.lastIndex); // 5\nconsole.log('exec:', reg.exec('hello , i am from Hello World')); // ['Hello']\nconsole.log('lastIndex', reg.lastIndex); // 23\n// 常用属性\nconsole.log('source:', reg.source); // hello\nconsole.log('flags:', reg.flags); // gi\nconsole.log('global:', reg.global); // true\nconsole.log('ignoreCase:', reg.ignoreCase); // true\nconsole.log('multiline:', reg.multiline); // false\n// 不常用的方法和属性\nconsole.log('dotAll:', reg.dotAll); // false\nconsole.log('sticky:', reg.sticky); // false\nconsole.log('unicode:', reg.unicode); // false\nreg.compile('world', 'i'); // 重新编译成 /world/i\n```\n#### 3.1: lastIndex\n返回一个整数，表示下一次开始搜索的位置。该属性可读写，但是只在进行连续搜索时有意义（/g 或 /s）\n```js\nconst reg = /a+/g\nconst str = 'aaa_aa'\nconsole.log(reg.exec(str)) // aaa\nconsole.log(reg.lastIndex) // 3\nconsole.log(reg.exec(str)) // aa\nconsole.log(reg.lastIndex) // 6\nconsole.log(reg.exec(str)) // null\nconsole.log(reg.lastIndex) // 0\n// 第二圈，从头来\nconsole.log(reg.exec(str)) // aaa\nconsole.log(reg.lastIndex) // 3\n```\n* 注意：带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串\n```js\n// 带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串\nconst r = /aa/g\nconsole.log(r.test('aa')) // true\nconsole.log(r.lastIndex) // 2\nconsole.log(r.test('_aa_')) // false\nr.lastIndex = 1 // 将lastIndex手动改成1\nconsole.log(r.test('_aa_')) // true\n```\n#### 3.2: STRING与正则相关的方法 match、replace、search、split\n+ 1 match 返回一个数组，成员是所有匹配的子字符串；匹配失败返回null\n```js\nlet str = '_x_x'\nconsole.log(str.match(/x/)) // ['x', index: 1, input: '_x_x']\nconsole.log(str.match(/x/g)) // ['x', 'x']\nconsole.log(str.match(/y/)) // null\n// 设置正则表达式的lastIndex属性，对match方法无效\nlet reg = /x/g\nreg.lastIndex = 5\nconsole.log(reg.exec(str)) // null\nconsole.log(str.match(reg)) // ['x', 'x']\n```\n+ 2 search 返回第一个满足条件的匹配结果在整个字符串中的位置\n```js\nconsole.log('_x_x'.search(/x/)) // 1\nconsole.log('_x_x'.search(/y/)) // -1\n```\n+ 3 split 按照正则规则分割字符串，返回一个由分割后的各个部分组成的数组\n```js\nconsole.log('a,  b,c, d'.split(/, */)) // [ 'a', 'b', 'c', 'd' ]\n// 第二个参数是返回数组的最大成员数\nconsole.log('a,  b,c, d'.split(/, */, 2)) // [ 'a', 'b' ]\nconsole.log('aaa**a*'.split(/a*/)) // [ '', '*', '*', '*' ]\n// 如果正则表达式带有括号，则括号匹配的部分也会作为数组成员返回\nconsole.log('aaa*a*'.split(/(a*)/)) // [\"\", \"aaa\", \"*\", \"\", \"*\", \"a\", \"*\"]\n```\n+ 4 replace - 可以替换匹配的值\n```js\nconsole.log('aaa'.replace(/a/, 'b')) // baa\nconsole.log('aaa'.replace(/a/g, 'b')) // bbb\n\n// 一、replace方法的第二个参数可以使用美元符号$，用来指代所替换的内容\n// 1、$&：匹配的子字符串\nconsole.log('abc'.replace(/b/, '$&')) // abc\n// 2、$`：匹配结果前面的文本\nconsole.log('abc'.replace(/b/, '$`')) // aac\n// 3、$'：匹配结果后面的文本\nconsole.log('abc'.replace(/b/, '$\\'')) // acc\n// 4、$n：匹配成功的第n组内容，n是从1开始的自然数\nconsole.log('abc'.replace(/(b)/, '$1d')) // abdc\n// 5、$$：指代美元符号$\nconsole.log('abc'.replace(/b/, '$$')) // a$c\n\n// 二、replace方法的第二个参数还可以是一个函数\nconst res = '3 and 5'.replace(/[0-9]+/g, (match) => {\n  return 2 * match\n})\nconsole.log(res) // 6 and 10\n```\n### 四、语法\n* 原义字符(字面量字符)  \n* 元字符(点字符.、非打印字符、预定义类、边界)   \n* 转义符\\   \n* 字符类[]   \n* 字符类取反[^]  \n* 范围类[-]  \n* 选择符|  \n* 量词  \n* 贪婪与懒惰(量词后加?)\n* 分组()与反向引用(非捕获组 ?:)   \n* 零宽断言（前瞻(?= 先行断言、?! 先行否定断言)    后顾(?<= 后行断言、?<! 后行否定断言)）\n\n#### 4.1 原义字符(字面量字符)\n如果某个字符只表示它字面的含义，那么它们就叫做“字面量字符”（literal characters）\n```js\n/dog/.test('IT dog') // dog为原义字符\n```\n#### 4.2 元字符\n有一部分字符有特殊含义，不代表字面的意思。它们叫做“元字符”（metacharacters）\n```js\n// 1、点字符（.）- 除了换行(\\n)、行结束符(\\u2028)、回车(\\r)、段分隔符(\\u2029)外的其他任意单字符\nconsole.log(/c..t/.test('c\\nt')) // false\nconsole.log(/c.t/.test('cat')) // true\n// 2、非打印字符\n// \\cx：control + 控制字符(只能是字母)，如：\\cM = \\r\nconsole.log(/a\\cMb/.test('a\\rb'), /a\\cMb/.test('a\\cMb')) // true false\n// [\\b]：匹配退格键(\\u0008) 或 其本身\nconsole.log(/[\\b]/.test('\\u0008'), /[\\b]/.test('[\\b]')) // true true\n// \\n：换行符，等价于 \\x0a 和 本身\nconsole.log(/a\\nb/.test('a\\nb'), /a\\nb/.test('a\\x0ab')) // true true\n// \\r：回车符，等价于 \\x0d 和 本身\nconsole.log(/a\\rb/.test('a\\rb'), /a\\rb/.test('a\\x0db')) // true true\n// \\t：制表符，等价于 \\x09 和 本身\nconsole.log(/a\\tb/.test('a\\tb'), /a\\tb/.test('a\\x09b')) // true true\n// \\v：垂直制表符，等价于 \\x0b 和 本身\nconsole.log(/a\\vb/.test('a\\vb'), /a\\vb/.test('a\\x0bb')) // true true\n// \\f：换页符，等价于 \\x0c 和 本身\nconsole.log(/a\\fb/.test('a\\fb'), /a\\fb/.test('a\\x0cb')) // true true\n// \\0：匹配null字符（\\u0000）和 本身\nconsole.log(/a\\0b/.test('a\\0b'), /a\\0b/.test('a\\u0000b')) // true true\n// \\xxx：查找以八进制数xxx规定的字符（如：\\127 = W）\nconsole.log(/\\127/.test('hello \\127'), /\\127/.test('hello World')) // true true\n// \\xdd：查找以16进制数dd规定的字符（如：\\x57 = W）\nconsole.log(/\\x57/.test('hello \\x57'), /\\x57/.test('hello World')) // true true\n// \\uhhhh：匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的字符（如：\\u0057 = W）\nconsole.log(/\\u0057/.test('hello \\u0057'), /\\u0057/.test('hello World')) // true true\n// 3、预定义类：是某些常见模式的简写方式\n// \\d：数字字符，等价于[0-9]\nconsole.log(/\\d/.test('123')) // true\n// \\D：非数字，等价于[^0-9]\nconsole.log(/\\D/.test('123')) // false\n// \\w：单词字符（字母、数字、下划线），等价于[0-9_a-zA-Z]\nconsole.log(/\\w/.test('1'), /\\w/.test('a'), /\\w/.test('_')) // true true true\n// \\W：非单词字符，等价于[^0-9_a-zA-Z]\nconsole.log(/\\W/.test('1'), /\\W/.test('a'), /\\W/.test('_')) // false false false\n// \\s：空白符，等价于[\\t\\n\\x0B\\f\\r]\nconsole.log(/\\s/.test(' '), /\\s/.test('\\t')) // true true\n// \\S：非空白符，等价于[^\\t\\n\\x0B\\f\\r]\nconsole.log(/\\S/.test(' '), /\\S/.test('\\t')) // false false\n// 4、边界\n// ^：以..开头\nconsole.log(/^hello/.test('hello world'), /^hello/.test(' hello world')) // true false\n// &：以..结尾\nconsole.log(/world$/.test('hello world'), /world$/.test('hello world ')) // true false\n// \\b：匹配一个单词边界，也就是指单词和空格间的位置\nconsole.log(/\\bworld/.test('helloworld'), /\\bworld/.test('hello world')) // false true\n// 注：\"hello world\"，\"hello-world\"，\"hello&world\",\"hello-world\",\"hello world233\"都会返回true\n// 注：可以是\"hello_world\"，\"hello2world\"，\"helloaworld\"，\"helloworld\"都返回false\n// \\B：匹配非单词边界\nconsole.log(/\\Bworld/.test('helloworld'), /\\Bworld/.test('hello world')) // true false\n```\n#### 4.3 转义符\\\n对于那些有特殊含义的字符，如果要匹配它们本身，就需要在它们前面要加上反斜杠。\n```js\n// 需要转义的，一共12个字符 ^.[$()|*+?{\\\n// 注：用 new RegExp 生成的需要转义的正则，需要两个\\\\\nconsole.log((new RegExp('1\\\\+1')).test('1+1')) // true\n```\n#### 4.4 字符类 []\n表示有一系列字符可供选择，只要匹配其中一个就可以了\n```js\nconsole.log(/[abc]/.test('hello')) // false\nconsole.log(/[abc]/.test('apple')) // true\n// 常见的 [12345]  [a-zA-Z0-9]\n```\n#### 4.5 字符类取反[^] - 也叫\"脱字符\"\n表示除了字符类之中的字符，其他字符都可以匹配 - 中括号内第一个为^\n```js\nconsole.log(/[^abc]/.test('hello')) // true\nconsole.log(/[^abc]/.test('aabbcc')) // false\n// 扩展：[^] 表示任意字符，跟 . 相比，也包括换行符\nconsole.log(/[^]/.test('abc'), /[^]/.test('\\n'), /[^]/.test('$')) // true true true\nconsole.log(/./.test('abc'), /./.test('\\n'), /./.test('$')) // true false true\n```\n#### 4.6 范围类[-] - 也叫\"连字符\"\n表示一定范围内\n```js\nconsole.log(/[0-9]/.test('123')) // true\nconsole.log(/[a-z]/.test('abc')) // true\nconsole.log(/[a-zA-Z_0-9]/.test('a_b1')) // true\nconsole.log(/[\\u4E00-\\u9FA5]/.test('你hello')) // true\n```\n#### 4.7 选择符|\n表示“或关系”（OR）\n```js\nconsole.log(/cat|dog/.test('cat'), /cat|dog/.test('at')) // true false\nconsole.log(/cat|dog|fish/.test('cat')) // true\n// 选择符会包括它前后的多个字符，比如上面的cat、dog、fish，可用()改变这一行为\nconsole.log(/(at|do)g/.test('atg')) // true\n```\n#### 4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数\n```js\n// 1、匹配n次：{n}\nconsole.log(/a{2}/.test('abc'), /a{2}/.test('aabc')) // false true\n// 2、匹配至少m次，最多n次：{m,n}\nconsole.log(/a{1,3}/.test('baaaac')) // true\n// 3、匹配至少m次，最多不限：{m,}\nconsole.log(/a{2,}/.test('abc'), /a{2,}/.test('aaaabc')) // false true\n// 4、匹配0次或多次，相当于{0,}：*\nconsole.log(/a*/.test('bc'), /a*/.test('abc')) // true true\n// 5、匹配0次或1次，相当于{0,1}：?\nconsole.log(/https?/.test('http://'), /https?/.test('https://')) // true true\n// 6、匹配一次或多次，相当于{1,}：+\nconsole.log(/a+/.test('bc'), /a+/.test('aaaabc')) // false true\n```\n#### 4.9 贪婪与懒惰(量词后加?)\n* 上面的量词符，默认情况下都是最大可能匹配，即匹配到下一个字符不满足匹配规则为止，这被称为贪婪模式\n* 要开启懒惰模式，需要在量词后加?\n* 贪婪模式量词： {x,y}  {x,}  ?   *   +\n* 懒惰模式量词： {x,y}? {x,}?  ??  *?  +?\n```js\nconst str = 'baaaac'\nconsole.log(str.match(/ba{1,4}/), str.match(/ba{1,4}?/)) // ['baaaa']  ['ba']\nconsole.log(str.match(/ba{2,}/), str.match(/ba{2,}?/)) // ['baaaa']  ['baa']\nconsole.log(str.match(/ba?/), str.match(/ba??/)) // ['ba']  ['b']\nconsole.log(str.match(/ba*/), str.match(/ba*?/)) // ['baaaa']  ['b']\nconsole.log(str.match(/ba+/), str.match(/ba+?/)) // ['baaaa']  ['ba']\n```\n#### 4.10 分组()与反向引用(非捕获组 ?:)\n```js\n// 一、分组（子表达式）可以理解为，数学运算中的括号，用于计算的分组使用\nconsole.log(/abc{2}/.exec('1abcc2')) // ['abcc', index: 1, input: '1abcc2']\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/.exec('2021-12-01'))\n// 上面的返回值 [\"2021-12-01\", \"2021\", \"12\", \"01\", index: 0, input: \"2021-12-01\"]\n// 1、对比上面两个返回结果可以看出，第二个带分组的，会在匹配结果里返回每个分组匹配到的结果，即'2021','12','01'\n// 2、使用组匹配时，不宜同时使用g修饰符，否则match方法不会捕获分组的内容(但exec方法不受影响)\nconsole.log('2021-12-01'.match(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/g)) // [\"2021-12-01\"]\nconsole.log('2021-12-01'.match(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/)) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/g.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\nconsole.log(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\n// 3、分组的用途\n'2021-12-01'.replace(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/, '$1+$2+$3') // 2021+12+01\n'2021-12-01'.replace(/(\\d{4})[/-](\\d{2})[/-](\\d{2})/, ($1,$2,$3,$4) => { // 2021+12+01\n  return `${$2}+${$3}+${$4}`\n})\n// 注：如果replace第二个参数是function，则分组匹配结果时候从$2开始，$1是整个匹配到的结果\n// 4、\\n：表示第n个括号匹配的内容\n// 用于匹配网页标签 [\"<p class=\"cs\">hello</p>\", \"p\", \" class=\"cs\"]\nconsole.log(/<([^>]+)([^>]*)>[^<]*<\\/\\1>/.exec('<p class=\"cs\">hello</p>'))\n// \\n是内容完全匹配，而不仅是格式匹配\nconsole.log(/(.)+.*\\1/.exec('hello world')) // [\"hello wo\", \"o\"]\nconsole.log(/(.).*\\1/.exec('hello world')) // [\"llo worl\", \"l\"]\n// 分析：上面两者之所以分组中匹配到的不一样，是因为正则默认是\"贪婪模式\"，可以改为懒惰模式\nconsole.log(/(.)+?.*\\1/.exec('hello world')) // [\"hello worl\", \"l\"]\n// 二、反向引用(非捕获组 ?:) - 放在分组最前面\n// 表示不返回该组匹配的内容，即匹配的结果中不计入这个括号里匹配到的结果\nconsole.log(/^(?:\\d{4})[/-](\\d{2})[/-](\\d{2})$/.exec('2021-12-01')) // [\"2021-12-01\", \"12\", \"01\"]\nconsole.log(/^(\\d{4})[/-](\\d{2})[/-](\\d{2})$/.exec('2021-12-01')) // [\"2021-12-01\", \"2021\", \"12\", \"01\"]\n```\n#### 4.11 零宽断言\n```js\n// 1、前瞻lookahead(?= 先行断言、?! 先行否定断言、负向先行断言)\n'hello world'.match(/l(?=o)/) // [\"l\", index: 3]\n// x(?=y)：表示x后面必须有y，才能匹配上；括号里的部分y不会返回\n// x(?!y)：相反，表示x后面必须没有y，才能匹配上；括号里的部分y不会返回\n'hello world'.replace(/l(?=o)/g, ' ') // \"hel o world\"\n'hello world'.replace(/l(?!o)/g, ' ') // \"he lo wor d\"\n// 2、后顾lookbehind(?<= 后行断言、?<! 后行否定断言、负向后行断言) - 慎用，有些平台不支持\n// (?<=y)x：表示x前面必须有y，才能匹配上；括号里的部分y不会返回\n// (?<!y)x：相反，表示x前面必须没有y，才能匹配上；括号里的部分y不会返回\nconsole.log('hello world'.replace(/(?<=e)l/g, ' ')) // \"he lo world\"\nconsole.log('hello world'.replace(/(?<!e)l/g, ' ')) // \"hel o wor d\"\n// 3、前面讲到，前瞻是匹配x后面有没有y，那如果不写x呢？(相当于indexOf，但exec不会匹配结果)\nconsole.log(/(?=abc)/.exec(\"cbacbac\"), /(?=abc)/.test(\"cbacbac\")) // null false\nconsole.log(/(?=abc)/.exec(\"cbacabc\"), /(?=abc)/.test(\"cbacabc\")) // [\"\", index: 4] true\n// 4、那么对于后顾，如果不带x，我们能做什么呢？\nconsole.log(/(?!\\d)/.exec(\"123\"), /(?!\\d)/.test(\"123\")) // [\"\", index: 3] true\n// 进一步改造上面这个不带x的后顾正则 - 匹配不全是某种规则的字符\nconsole.log(/^(?!\\d+$)/.exec('123'), /^(?!\\d+$)/.test('123')) // null false\n// 使用场景，金额每三位用,分隔\n'1234567'.replace(/(\\d)(?=(\\d{3})+$)/g, '$1,') // \"1,234,567\"\n'1234567'.match(/(\\d)(?=(\\d{3})+$)/g) // [\"1\", \"4\"]\n```\n### 五、常用正则举例\n```js\n// 1、手机号\nreg = /^1[3456789]\\d{9}$/\n// 2、身份证(15位数字 或 17位数字+数字或x)\nreg = /^[1-9]\\d{14}(\\d{2}[0-9xX])?$/\n// 3、密码 - 数字、字母、下划线最少两种，8-16位：https://juejin.cn/post/6946016272245063716#heading-4\nreg = /^(?!(\\d+|[a-zA-Z]+|_+)$)\\w{8,16}$/\nreg = /^(?!\\d+$)(?![a-zA-Z]+$)(?!_+$)\\w{8,16}$/ // 等价\n// 前瞻并不支持ios14以下，所以在H5上，为了兼容，最好用方法\nfun = (str) => {\n  const match = [/[A-Za-z]/, /\\d/, /_/].filter(i => i.test(str)).length >= 2\n  return match && /^\\w{8,16}$/.test(str)\n}\n// 4、计算字符串字节数 - 中文占2字节，其余的1字节\nfun = (str) => str.replace(/\\u4e00-\\u9fa5/g, 'aa').length\n// 5、多个空格换成一个\nfun = (str) => str.replace(/\\s+/g, ' ')\n// 6、是否包含连续相同的字符串 - 前瞻\nreg = /(?=(\\w+)\\1)/ // /(?=(\\w+)\\1)/.test(\"cbacbabc\") true\n// 7、最多两位小数\nreg = /^\\d*\\.?\\d{0,2}$/\n// 8、去除所有的html标签\nfun = (str) => str.replace(/<[^>]+>/gi, '')\n// 9、获取url参数\nfun = (name) => {\n  const r = window.location.search.substr(1)\n  const eg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')\n\n  return r.match(eg) ? r.match(eg)[2] : ''\n}\n// 10、阿拉伯数字替换成对应的中文大写\narr = [\"零\",\"壹\",\"贰\",\"叁\",\"肆\",\"伍\",\"陆\",\"柒\",\"捌\",\"玖\"]\nfun = (str) => str.replace(/\\d/g, (m) => {\n  return arr[m]\n})\n```\n","slug":"正则","published":1,"updated":"2022-06-15T08:29:28.124Z","_id":"cl4e3az0s003yk4rq66a3ejwm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>正则，熟悉的陌生人，经常用，却很少总结</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、概念\"><a href=\"#一、概念\" class=\"headerlink\" title=\"一、概念\"></a>一、概念</h3><p>正则表达式是描述字符模式的对象。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p>\n<p>三种生成方式：</p>\n<ul>\n<li>const reg &#x3D; eval(‘&#x2F;hello&#x2F;i’)  -  不推荐</li>\n<li>const reg &#x3D; &#x2F;hello&#x2F;i</li>\n<li>const reg &#x3D; new RegExp(‘hello’, ‘i’)</li>\n</ul>\n<h4 id=\"正则可视化网站：https-regexper-com\"><a href=\"#正则可视化网站：https-regexper-com\" class=\"headerlink\" title=\"正则可视化网站：https://regexper.com/\"></a>正则可视化网站：<a href=\"https://regexper.com/\">https://regexper.com/</a></h4><p><a href=\"%E5%9B%BE%E7%89%871.png\">图片1</a></p>\n<h3 id=\"二、修饰符\"><a href=\"#二、修饰符\" class=\"headerlink\" title=\"二、修饰符\"></a>二、修饰符</h3><p>修饰符与其他语法特殊，字面量方法声名的时候放到&#x2F;&#x2F;后，构造函数声明的时候，作为第二个参数传入。整个正则表达式可以理解为正则表达式规则字符串+修饰符。</p>\n<ul>\n<li>g：global 执行一个全局匹配</li>\n<li>s：dotAll模式：可以让点（.）符号匹配任意单个字符</li>\n<li>i：ignore case执行一个不区分大小写的匹配</li>\n<li>u：unicode模式：正确处理大于\\uFFFF的Unicode字符</li>\n<li>m: multiple lines多行匹配，仅有换行符的时候生效</li>\n<li>y：sticky模式：确保匹配必须从剩余的第一个未知开始</li>\n</ul>\n<p>常用的 igm 就不多做解释了，说说不常见的 umy ~</p>\n<h4 id=\"dotAll模式-s修饰符\"><a href=\"#dotAll模式-s修饰符\" class=\"headerlink\" title=\"dotAll模式 - s修饰符\"></a>dotAll模式 - s修饰符</h4><p>s修饰符，可以让点（.）符号匹配任意单个字符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> se = <span class=\"regexp\">/foo.bar/</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;without s&#x27;</span>, se.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;foo\\nbar&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">se = <span class=\"regexp\">/foo.bar/</span>s</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;with s&#x27;</span>, se.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;foo\\nbar&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"sticky模式-y修饰符\"><a href=\"#sticky模式-y修饰符\" class=\"headerlink\" title=\"sticky模式 - y修饰符\"></a>sticky模式 - y修饰符</h4><p>y修饰符的作用与g修饰符类似，不同的地方，g修饰符只要剩余未知中存在匹配就可以；而y修饰符确保匹配必须从剩余的第一个未知开始，这也就是“粘连”的涵义</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;aaa_aa_a&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ye = <span class=\"regexp\">/a+/g</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ye2 = <span class=\"regexp\">/a+/y</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye&#x27;</span>, ye.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye2&#x27;</span>, ye2.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye&#x27;</span>, ye.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye2&#x27;</span>, ye2.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"unicode模式-u修饰符\"><a href=\"#unicode模式-u修饰符\" class=\"headerlink\" title=\"unicode模式 - u修饰符\"></a>unicode模式 - u修饰符</h4><p>用来正确处理大于\\uFFFF的Unicode字符；\\uD83D\\uDC2A -&gt; 🐪  是一个四个字节的UTF-16编码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\uD83D/u.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\uD83D\\uDC2A&#x27;</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\">/\\uD83D/.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\uD83D\\uDC2A&#x27;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"扩展：常用汉字的unicode编码范围-u4E00（一）-u9FA5（龥）-https-www-qqxiuzi-cn-zh-hanzi-unicode-bianma-php\"><a href=\"#扩展：常用汉字的unicode编码范围-u4E00（一）-u9FA5（龥）-https-www-qqxiuzi-cn-zh-hanzi-unicode-bianma-php\" class=\"headerlink\" title=\"扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\"></a>扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     <a href=\"https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\">https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php</a></h4><h3 id=\"三、方法和属性\"><a href=\"#三、方法和属性\" class=\"headerlink\" title=\"三、方法和属性\"></a>三、方法和属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;hello&#x27;</span>, <span class=\"string\">&#x27;ig&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;test:&#x27;</span>, reg.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lastIndex&#x27;</span>, reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec:&#x27;</span>, reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello , i am from Hello World&#x27;</span>)); <span class=\"comment\">// [&#x27;Hello&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lastIndex&#x27;</span>, reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 23</span></span><br><span class=\"line\"><span class=\"comment\">// 常用属性</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;source:&#x27;</span>, reg.<span class=\"property\">source</span>); <span class=\"comment\">// hello</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;flags:&#x27;</span>, reg.<span class=\"property\">flags</span>); <span class=\"comment\">// gi</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;global:&#x27;</span>, reg.<span class=\"property\">global</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ignoreCase:&#x27;</span>, reg.<span class=\"property\">ignoreCase</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;multiline:&#x27;</span>, reg.<span class=\"property\">multiline</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 不常用的方法和属性</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;dotAll:&#x27;</span>, reg.<span class=\"property\">dotAll</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;sticky:&#x27;</span>, reg.<span class=\"property\">sticky</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;unicode:&#x27;</span>, reg.<span class=\"property\">unicode</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">reg.<span class=\"title function_\">compile</span>(<span class=\"string\">&#x27;world&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>); <span class=\"comment\">// 重新编译成 /world/i</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-1-lastIndex\"><a href=\"#3-1-lastIndex\" class=\"headerlink\" title=\"3.1: lastIndex\"></a>3.1: lastIndex</h4><p>返回一个整数，表示下一次开始搜索的位置。该属性可读写，但是只在进行连续搜索时有意义（&#x2F;g 或 &#x2F;s）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/a+/g</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;aaa_aa&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"comment\">// 第二圈，从头来</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意：带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"regexp\">/aa/g</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aa&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_aa_&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">r.<span class=\"property\">lastIndex</span> = <span class=\"number\">1</span> <span class=\"comment\">// 将lastIndex手动改成1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_aa_&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-2-STRING与正则相关的方法-match、replace、search、split\"><a href=\"#3-2-STRING与正则相关的方法-match、replace、search、split\" class=\"headerlink\" title=\"3.2: STRING与正则相关的方法 match、replace、search、split\"></a>3.2: STRING与正则相关的方法 match、replace、search、split</h4><ul>\n<li>1 match 返回一个数组，成员是所有匹配的子字符串；匹配失败返回null<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;_x_x&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/x/</span>)) <span class=\"comment\">// [&#x27;x&#x27;, index: 1, input: &#x27;_x_x&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/x/g</span>)) <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/y/</span>)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"comment\">// 设置正则表达式的lastIndex属性，对match方法无效</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/x/g</span></span><br><span class=\"line\">reg.<span class=\"property\">lastIndex</span> = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(reg)) <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure></li>\n<li>2 search 返回第一个满足条件的匹配结果在整个字符串中的位置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;_x_x&#x27;</span>.<span class=\"title function_\">search</span>(<span class=\"regexp\">/x/</span>)) <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;_x_x&#x27;</span>.<span class=\"title function_\">search</span>(<span class=\"regexp\">/y/</span>)) <span class=\"comment\">// -1</span></span><br></pre></td></tr></table></figure></li>\n<li>3 split 按照正则规则分割字符串，返回一个由分割后的各个部分组成的数组<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a,  b,c, d&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/, */</span>)) <span class=\"comment\">// [ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27; ]</span></span><br><span class=\"line\"><span class=\"comment\">// 第二个参数是返回数组的最大成员数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a,  b,c, d&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/, */</span>, <span class=\"number\">2</span>)) <span class=\"comment\">// [ &#x27;a&#x27;, &#x27;b&#x27; ]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa**a*&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/a*/</span>)) <span class=\"comment\">// [ &#x27;&#x27;, &#x27;*&#x27;, &#x27;*&#x27;, &#x27;*&#x27; ]</span></span><br><span class=\"line\"><span class=\"comment\">// 如果正则表达式带有括号，则括号匹配的部分也会作为数组成员返回</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa*a*&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/(a*)/</span>)) <span class=\"comment\">// [&quot;&quot;, &quot;aaa&quot;, &quot;*&quot;, &quot;&quot;, &quot;*&quot;, &quot;a&quot;, &quot;*&quot;]</span></span><br></pre></td></tr></table></figure></li>\n<li>4 replace - 可以替换匹配的值<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/a/</span>, <span class=\"string\">&#x27;b&#x27;</span>)) <span class=\"comment\">// baa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/a/g</span>, <span class=\"string\">&#x27;b&#x27;</span>)) <span class=\"comment\">// bbb</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一、replace方法的第二个参数可以使用美元符号$，用来指代所替换的内容</span></span><br><span class=\"line\"><span class=\"comment\">// 1、$&amp;：匹配的子字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$&amp;&#x27;</span>)) <span class=\"comment\">// abc</span></span><br><span class=\"line\"><span class=\"comment\">// 2、$`：匹配结果前面的文本</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$`&#x27;</span>)) <span class=\"comment\">// aac</span></span><br><span class=\"line\"><span class=\"comment\">// 3、$&#x27;：匹配结果后面的文本</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$\\&#x27;&#x27;</span>)) <span class=\"comment\">// acc</span></span><br><span class=\"line\"><span class=\"comment\">// 4、$n：匹配成功的第n组内容，n是从1开始的自然数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(b)/</span>, <span class=\"string\">&#x27;$1d&#x27;</span>)) <span class=\"comment\">// abdc</span></span><br><span class=\"line\"><span class=\"comment\">// 5、$$：指代美元符号$</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$$&#x27;</span>)) <span class=\"comment\">// a$c</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二、replace方法的第二个参数还可以是一个函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> res = <span class=\"string\">&#x27;3 and 5&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/[0-9]+/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">2</span> * match</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res) <span class=\"comment\">// 6 and 10</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"四、语法\"><a href=\"#四、语法\" class=\"headerlink\" title=\"四、语法\"></a>四、语法</h3><ul>\n<li>原义字符(字面量字符)  </li>\n<li>元字符(点字符.、非打印字符、预定义类、边界)   </li>\n<li>转义符\\   </li>\n<li>字符类[]   </li>\n<li>字符类取反[^]  </li>\n<li>范围类[-]  </li>\n<li>选择符|  </li>\n<li>量词  </li>\n<li>贪婪与懒惰(量词后加?)</li>\n<li>分组()与反向引用(非捕获组 ?:)   </li>\n<li>零宽断言（前瞻(?&#x3D; 先行断言、?! 先行否定断言)    后顾(?&lt;&#x3D; 后行断言、?&lt;! 后行否定断言)）</li>\n</ul>\n<h4 id=\"4-1-原义字符-字面量字符\"><a href=\"#4-1-原义字符-字面量字符\" class=\"headerlink\" title=\"4.1 原义字符(字面量字符)\"></a>4.1 原义字符(字面量字符)</h4><p>如果某个字符只表示它字面的含义，那么它们就叫做“字面量字符”（literal characters）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dog/.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;IT dog&#x27;</span>) <span class=\"comment\">// dog为原义字符</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-元字符\"><a href=\"#4-2-元字符\" class=\"headerlink\" title=\"4.2 元字符\"></a>4.2 元字符</h4><p>有一部分字符有特殊含义，不代表字面的意思。它们叫做“元字符”（metacharacters）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、点字符（.）- 除了换行(\\n)、行结束符(\\u2028)、回车(\\r)、段分隔符(\\u2029)外的其他任意单字符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/c..t/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;c\\nt&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/c.t/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 2、非打印字符</span></span><br><span class=\"line\"><span class=\"comment\">// \\cx：control + 控制字符(只能是字母)，如：\\cM = \\r</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\cMb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\rb&#x27;</span>), <span class=\"regexp\">/a\\cMb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\cMb&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// [\\b]：匹配退格键(\\u0008) 或 其本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[\\b]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\u0008&#x27;</span>), <span class=\"regexp\">/[\\b]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;[\\b]&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\n：换行符，等价于 \\x0a 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\nb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\nb&#x27;</span>), <span class=\"regexp\">/a\\nb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0ab&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\r：回车符，等价于 \\x0d 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\rb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\rb&#x27;</span>), <span class=\"regexp\">/a\\rb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0db&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\t：制表符，等价于 \\x09 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\tb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\tb&#x27;</span>), <span class=\"regexp\">/a\\tb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x09b&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\v：垂直制表符，等价于 \\x0b 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\vb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\vb&#x27;</span>), <span class=\"regexp\">/a\\vb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0bb&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\f：换页符，等价于 \\x0c 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\fb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\fb&#x27;</span>), <span class=\"regexp\">/a\\fb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0cb&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\0：匹配null字符（\\u0000）和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\0b/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\0b&#x27;</span>), <span class=\"regexp\">/a\\0b/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\u0000b&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\xxx：查找以八进制数xxx规定的字符（如：\\127 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\127/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\127&#x27;</span>), <span class=\"regexp\">/\\127/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\xdd：查找以16进制数dd规定的字符（如：\\x57 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\x57/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\x57&#x27;</span>), <span class=\"regexp\">/\\x57/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\uhhhh：匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的字符（如：\\u0057 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\u0057/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\u0057&#x27;</span>), <span class=\"regexp\">/\\u0057/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 3、预定义类：是某些常见模式的简写方式</span></span><br><span class=\"line\"><span class=\"comment\">// \\d：数字字符，等价于[0-9]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\d/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// \\D：非数字，等价于[^0-9]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\D/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// \\w：单词字符（字母、数字、下划线），等价于[0-9_a-zA-Z]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1&#x27;</span>), <span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a&#x27;</span>), <span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_&#x27;</span>)) <span class=\"comment\">// true true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\W：非单词字符，等价于[^0-9_a-zA-Z]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1&#x27;</span>), <span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a&#x27;</span>), <span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_&#x27;</span>)) <span class=\"comment\">// false false false</span></span><br><span class=\"line\"><span class=\"comment\">// \\s：空白符，等价于[\\t\\n\\x0B\\f\\r]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\s/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; &#x27;</span>), <span class=\"regexp\">/\\s/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\t&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\S：非空白符，等价于[^\\t\\n\\x0B\\f\\r]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\S/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; &#x27;</span>), <span class=\"regexp\">/\\S/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\t&#x27;</span>)) <span class=\"comment\">// false false</span></span><br><span class=\"line\"><span class=\"comment\">// 4、边界</span></span><br><span class=\"line\"><span class=\"comment\">// ^：以..开头</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^hello/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>), <span class=\"regexp\">/^hello/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; hello world&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// &amp;：以..结尾</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/world$/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>), <span class=\"regexp\">/world$/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world &#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// \\b：匹配一个单词边界，也就是指单词和空格间的位置</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;helloworld&#x27;</span>), <span class=\"regexp\">/\\bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 注：&quot;hello world&quot;，&quot;hello-world&quot;，&quot;hello&amp;world&quot;,&quot;hello-world&quot;,&quot;hello world233&quot;都会返回true</span></span><br><span class=\"line\"><span class=\"comment\">// 注：可以是&quot;hello_world&quot;，&quot;hello2world&quot;，&quot;helloaworld&quot;，&quot;helloworld&quot;都返回false</span></span><br><span class=\"line\"><span class=\"comment\">// \\B：匹配非单词边界</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\Bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;helloworld&#x27;</span>), <span class=\"regexp\">/\\Bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// true false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-转义符\"><a href=\"#4-3-转义符\" class=\"headerlink\" title=\"4.3 转义符\\\"></a>4.3 转义符\\</h4><p>对于那些有特殊含义的字符，如果要匹配它们本身，就需要在它们前面要加上反斜杠。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 需要转义的，一共12个字符 ^.[$()|*+?&#123;\\</span></span><br><span class=\"line\"><span class=\"comment\">// 注：用 new RegExp 生成的需要转义的正则，需要两个\\\\</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>((<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;1\\\\+1&#x27;</span>)).<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1+1&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-字符类\"><a href=\"#4-4-字符类\" class=\"headerlink\" title=\"4.4 字符类 []\"></a>4.4 字符类 []</h4><p>表示有一系列字符可供选择，只要匹配其中一个就可以了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;apple&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 常见的 [12345]  [a-zA-Z0-9]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-5-字符类取反-也叫”脱字符”\"><a href=\"#4-5-字符类取反-也叫”脱字符”\" class=\"headerlink\" title=\"4.5 字符类取反[^] - 也叫”脱字符”\"></a>4.5 字符类取反[^] - 也叫”脱字符”</h4><p>表示除了字符类之中的字符，其他字符都可以匹配 - 中括号内第一个为^</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aabbcc&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 扩展：[^] 表示任意字符，跟 . 相比，也包括换行符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\n&#x27;</span>), <span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;$&#x27;</span>)) <span class=\"comment\">// true true true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\n&#x27;</span>), <span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;$&#x27;</span>)) <span class=\"comment\">// true false true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-6-范围类-也叫”连字符”\"><a href=\"#4-6-范围类-也叫”连字符”\" class=\"headerlink\" title=\"4.6 范围类[-] - 也叫”连字符”\"></a>4.6 范围类[-] - 也叫”连字符”</h4><p>表示一定范围内</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[0-9]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[a-z]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[a-zA-Z_0-9]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a_b1&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[\\u4E00-\\u9FA5]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;你hello&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-7-选择符\"><a href=\"#4-7-选择符\" class=\"headerlink\" title=\"4.7 选择符|\"></a>4.7 选择符|</h4><p>表示“或关系”（OR）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/cat|dog/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>), <span class=\"regexp\">/cat|dog/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;at&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/cat|dog|fish/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 选择符会包括它前后的多个字符，比如上面的cat、dog、fish，可用()改变这一行为</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(at|do)g/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;atg&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-8-量词-m-n-，用于限定子模式出现在正则表达式的次数\"><a href=\"#4-8-量词-m-n-，用于限定子模式出现在正则表达式的次数\" class=\"headerlink\" title=\"4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数\"></a>4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、匹配n次：&#123;n&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;2&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/a&#123;2&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 2、匹配至少m次，最多n次：&#123;m,n&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;1,3&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;baaaac&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 3、匹配至少m次，最多不限：&#123;m,&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;2,&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/a&#123;2,&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aaaabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 4、匹配0次或多次，相当于&#123;0,&#125;：*</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a*/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;bc&#x27;</span>), <span class=\"regexp\">/a*/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 5、匹配0次或1次，相当于&#123;0,1&#125;：?</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/https?/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;http://&#x27;</span>), <span class=\"regexp\">/https?/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;https://&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 6、匹配一次或多次，相当于&#123;1,&#125;：+</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a+/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;bc&#x27;</span>), <span class=\"regexp\">/a+/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aaaabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-9-贪婪与懒惰-量词后加\"><a href=\"#4-9-贪婪与懒惰-量词后加\" class=\"headerlink\" title=\"4.9 贪婪与懒惰(量词后加?)\"></a>4.9 贪婪与懒惰(量词后加?)</h4><ul>\n<li>上面的量词符，默认情况下都是最大可能匹配，即匹配到下一个字符不满足匹配规则为止，这被称为贪婪模式</li>\n<li>要开启懒惰模式，需要在量词后加?</li>\n<li>贪婪模式量词： {x,y}  {x,}  ?   *   +</li>\n<li>懒惰模式量词： {x,y}? {x,}?  ??  *?  +?<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;baaaac&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;1,4&#125;/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;1,4&#125;?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;ba&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;2,&#125;/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;2,&#125;?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;baa&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba?/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba??/</span>)) <span class=\"comment\">// [&#x27;ba&#x27;]  [&#x27;b&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba*/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba*?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;b&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba+/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba+?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;ba&#x27;]</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"4-10-分组-与反向引用-非捕获组\"><a href=\"#4-10-分组-与反向引用-非捕获组\" class=\"headerlink\" title=\"4.10 分组()与反向引用(非捕获组 ?:)\"></a>4.10 分组()与反向引用(非捕获组 ?:)</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一、分组（子表达式）可以理解为，数学运算中的括号，用于计算的分组使用</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/abc&#123;2&#125;/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;1abcc2&#x27;</span>)) <span class=\"comment\">// [&#x27;abcc&#x27;, index: 1, input: &#x27;1abcc2&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">// 上面的返回值 [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;, index: 0, input: &quot;2021-12-01&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 1、对比上面两个返回结果可以看出，第二个带分组的，会在匹配结果里返回每个分组匹配到的结果，即&#x27;2021&#x27;,&#x27;12&#x27;,&#x27;01&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 2、使用组匹配时，不宜同时使用g修饰符，否则match方法不会捕获分组的内容(但exec方法不受影响)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/g</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/g</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 3、分组的用途</span></span><br><span class=\"line\"><span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>, <span class=\"string\">&#x27;$1+$2+$3&#x27;</span>) <span class=\"comment\">// 2021+12+01</span></span><br><span class=\"line\"><span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>, <span class=\"function\">(<span class=\"params\">$<span class=\"number\">1</span>,$<span class=\"number\">2</span>,$<span class=\"number\">3</span>,$<span class=\"number\">4</span></span>) =&gt;</span> &#123; <span class=\"comment\">// 2021+12+01</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;$<span class=\"number\">2</span>&#125;</span>+<span class=\"subst\">$&#123;$<span class=\"number\">3</span>&#125;</span>+<span class=\"subst\">$&#123;$<span class=\"number\">4</span>&#125;</span>`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 注：如果replace第二个参数是function，则分组匹配结果时候从$2开始，$1是整个匹配到的结果</span></span><br><span class=\"line\"><span class=\"comment\">// 4、\\n：表示第n个括号匹配的内容</span></span><br><span class=\"line\"><span class=\"comment\">// 用于匹配网页标签 [&quot;&lt;p class=&quot;cs&quot;&gt;hello&lt;/p&gt;&quot;, &quot;p&quot;, &quot; class=&quot;cs&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/&lt;([^&gt;]+)([^&gt;]*)&gt;[^&lt;]*&lt;\\/\\1&gt;/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;&lt;p class=&quot;cs&quot;&gt;hello&lt;/p&gt;&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">// \\n是内容完全匹配，而不仅是格式匹配</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.)+.*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;hello wo&quot;, &quot;o&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.).*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;llo worl&quot;, &quot;l&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 分析：上面两者之所以分组中匹配到的不一样，是因为正则默认是&quot;贪婪模式&quot;，可以改为懒惰模式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.)+?.*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;hello worl&quot;, &quot;l&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 二、反向引用(非捕获组 ?:) - 放在分组最前面</span></span><br><span class=\"line\"><span class=\"comment\">// 表示不返回该组匹配的内容，即匹配的结果中不计入这个括号里匹配到的结果</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(?:\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)$/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)$/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-11-零宽断言\"><a href=\"#4-11-零宽断言\" class=\"headerlink\" title=\"4.11 零宽断言\"></a>4.11 零宽断言</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、前瞻lookahead(?= 先行断言、?! 先行否定断言、负向先行断言)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/l(?=o)/</span>) <span class=\"comment\">// [&quot;l&quot;, index: 3]</span></span><br><span class=\"line\"><span class=\"comment\">// x(?=y)：表示x后面必须有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"comment\">// x(?!y)：相反，表示x后面必须没有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/l(?=o)/g</span>, <span class=\"string\">&#x27; &#x27;</span>) <span class=\"comment\">// &quot;hel o world&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/l(?!o)/g</span>, <span class=\"string\">&#x27; &#x27;</span>) <span class=\"comment\">// &quot;he lo wor d&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 2、后顾lookbehind(?&lt;= 后行断言、?&lt;! 后行否定断言、负向后行断言) - 慎用，有些平台不支持</span></span><br><span class=\"line\"><span class=\"comment\">// (?&lt;=y)x：表示x前面必须有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"comment\">// (?&lt;!y)x：相反，表示x前面必须没有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(?&lt;=e)l/g</span>, <span class=\"string\">&#x27; &#x27;</span>)) <span class=\"comment\">// &quot;he lo world&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(?&lt;!e)l/g</span>, <span class=\"string\">&#x27; &#x27;</span>)) <span class=\"comment\">// &quot;hel o wor d&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 3、前面讲到，前瞻是匹配x后面有没有y，那如果不写x呢？(相当于indexOf，但exec不会匹配结果)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cbacbac&quot;</span>), <span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;cbacbac&quot;</span>)) <span class=\"comment\">// null false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cbacabc&quot;</span>), <span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;cbacabc&quot;</span>)) <span class=\"comment\">// [&quot;&quot;, index: 4] true</span></span><br><span class=\"line\"><span class=\"comment\">// 4、那么对于后顾，如果不带x，我们能做什么呢？</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?!\\d)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;123&quot;</span>), <span class=\"regexp\">/(?!\\d)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;123&quot;</span>)) <span class=\"comment\">// [&quot;&quot;, index: 3] true</span></span><br><span class=\"line\"><span class=\"comment\">// 进一步改造上面这个不带x的后顾正则 - 匹配不全是某种规则的字符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(?!\\d+$)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;123&#x27;</span>), <span class=\"regexp\">/^(?!\\d+$)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// null false</span></span><br><span class=\"line\"><span class=\"comment\">// 使用场景，金额每三位用,分隔</span></span><br><span class=\"line\"><span class=\"string\">&#x27;1234567&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+$)/g</span>, <span class=\"string\">&#x27;$1,&#x27;</span>) <span class=\"comment\">// &quot;1,234,567&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;1234567&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+$)/g</span>) <span class=\"comment\">// [&quot;1&quot;, &quot;4&quot;]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"五、常用正则举例\"><a href=\"#五、常用正则举例\" class=\"headerlink\" title=\"五、常用正则举例\"></a>五、常用正则举例</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、手机号</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^1[3456789]\\d&#123;9&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">// 2、身份证(15位数字 或 17位数字+数字或x)</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^[1-9]\\d&#123;14&#125;(\\d&#123;2&#125;[0-9xX])?$/</span></span><br><span class=\"line\"><span class=\"comment\">// 3、密码 - 数字、字母、下划线最少两种，8-16位：https://juejin.cn/post/6946016272245063716#heading-4</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^(?!(\\d+|[a-zA-Z]+|_+)$)\\w&#123;8,16&#125;$/</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^(?!\\d+$)(?![a-zA-Z]+$)(?!_+$)\\w&#123;8,16&#125;$/</span> <span class=\"comment\">// 等价</span></span><br><span class=\"line\"><span class=\"comment\">// 前瞻并不支持ios14以下，所以在H5上，为了兼容，最好用方法</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> match = [<span class=\"regexp\">/[A-Za-z]/</span>, <span class=\"regexp\">/\\d/</span>, <span class=\"regexp\">/_/</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i.<span class=\"title function_\">test</span>(str)).<span class=\"property\">length</span> &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> match &amp;&amp; <span class=\"regexp\">/^\\w&#123;8,16&#125;$/</span>.<span class=\"title function_\">test</span>(str)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 4、计算字符串字节数 - 中文占2字节，其余的1字节</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\u4e00-\\u9fa5/g</span>, <span class=\"string\">&#x27;aa&#x27;</span>).<span class=\"property\">length</span></span><br><span class=\"line\"><span class=\"comment\">// 5、多个空格换成一个</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 6、是否包含连续相同的字符串 - 前瞻</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/(?=(\\w+)\\1)/</span> <span class=\"comment\">// /(?=(\\w+)\\1)/.test(&quot;cbacbabc&quot;) true</span></span><br><span class=\"line\"><span class=\"comment\">// 7、最多两位小数</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^\\d*\\.?\\d&#123;0,2&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">// 8、去除所有的html标签</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/gi</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 9、获取url参数</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">name</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> r = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">search</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> eg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;(^|&amp;)&#x27;</span> + name + <span class=\"string\">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> r.<span class=\"title function_\">match</span>(eg) ? r.<span class=\"title function_\">match</span>(eg)[<span class=\"number\">2</span>] : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 10、阿拉伯数字替换成对应的中文大写</span></span><br><span class=\"line\">arr = [<span class=\"string\">&quot;零&quot;</span>,<span class=\"string\">&quot;壹&quot;</span>,<span class=\"string\">&quot;贰&quot;</span>,<span class=\"string\">&quot;叁&quot;</span>,<span class=\"string\">&quot;肆&quot;</span>,<span class=\"string\">&quot;伍&quot;</span>,<span class=\"string\">&quot;陆&quot;</span>,<span class=\"string\">&quot;柒&quot;</span>,<span class=\"string\">&quot;捌&quot;</span>,<span class=\"string\">&quot;玖&quot;</span>]</span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>, <span class=\"function\">(<span class=\"params\">m</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr[m]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>正则，熟悉的陌生人，经常用，却很少总结</p>","more":"<h3 id=\"一、概念\"><a href=\"#一、概念\" class=\"headerlink\" title=\"一、概念\"></a>一、概念</h3><p>正则表达式是描述字符模式的对象。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p>\n<p>三种生成方式：</p>\n<ul>\n<li>const reg &#x3D; eval(‘&#x2F;hello&#x2F;i’)  -  不推荐</li>\n<li>const reg &#x3D; &#x2F;hello&#x2F;i</li>\n<li>const reg &#x3D; new RegExp(‘hello’, ‘i’)</li>\n</ul>\n<h4 id=\"正则可视化网站：https-regexper-com\"><a href=\"#正则可视化网站：https-regexper-com\" class=\"headerlink\" title=\"正则可视化网站：https://regexper.com/\"></a>正则可视化网站：<a href=\"https://regexper.com/\">https://regexper.com/</a></h4><p><a href=\"%E5%9B%BE%E7%89%871.png\">图片1</a></p>\n<h3 id=\"二、修饰符\"><a href=\"#二、修饰符\" class=\"headerlink\" title=\"二、修饰符\"></a>二、修饰符</h3><p>修饰符与其他语法特殊，字面量方法声名的时候放到&#x2F;&#x2F;后，构造函数声明的时候，作为第二个参数传入。整个正则表达式可以理解为正则表达式规则字符串+修饰符。</p>\n<ul>\n<li>g：global 执行一个全局匹配</li>\n<li>s：dotAll模式：可以让点（.）符号匹配任意单个字符</li>\n<li>i：ignore case执行一个不区分大小写的匹配</li>\n<li>u：unicode模式：正确处理大于\\uFFFF的Unicode字符</li>\n<li>m: multiple lines多行匹配，仅有换行符的时候生效</li>\n<li>y：sticky模式：确保匹配必须从剩余的第一个未知开始</li>\n</ul>\n<p>常用的 igm 就不多做解释了，说说不常见的 umy ~</p>\n<h4 id=\"dotAll模式-s修饰符\"><a href=\"#dotAll模式-s修饰符\" class=\"headerlink\" title=\"dotAll模式 - s修饰符\"></a>dotAll模式 - s修饰符</h4><p>s修饰符，可以让点（.）符号匹配任意单个字符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> se = <span class=\"regexp\">/foo.bar/</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;without s&#x27;</span>, se.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;foo\\nbar&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">se = <span class=\"regexp\">/foo.bar/</span>s</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;with s&#x27;</span>, se.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;foo\\nbar&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"sticky模式-y修饰符\"><a href=\"#sticky模式-y修饰符\" class=\"headerlink\" title=\"sticky模式 - y修饰符\"></a>sticky模式 - y修饰符</h4><p>y修饰符的作用与g修饰符类似，不同的地方，g修饰符只要剩余未知中存在匹配就可以；而y修饰符确保匹配必须从剩余的第一个未知开始，这也就是“粘连”的涵义</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;aaa_aa_a&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ye = <span class=\"regexp\">/a+/g</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ye2 = <span class=\"regexp\">/a+/y</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye&#x27;</span>, ye.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye2&#x27;</span>, ye2.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye&#x27;</span>, ye.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// aa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ye2&#x27;</span>, ye2.<span class=\"title function_\">exec</span>(str)); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"unicode模式-u修饰符\"><a href=\"#unicode模式-u修饰符\" class=\"headerlink\" title=\"unicode模式 - u修饰符\"></a>unicode模式 - u修饰符</h4><p>用来正确处理大于\\uFFFF的Unicode字符；\\uD83D\\uDC2A -&gt; 🐪  是一个四个字节的UTF-16编码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\uD83D/u.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\uD83D\\uDC2A&#x27;</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\">/\\uD83D/.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\uD83D\\uDC2A&#x27;</span>) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"扩展：常用汉字的unicode编码范围-u4E00（一）-u9FA5（龥）-https-www-qqxiuzi-cn-zh-hanzi-unicode-bianma-php\"><a href=\"#扩展：常用汉字的unicode编码范围-u4E00（一）-u9FA5（龥）-https-www-qqxiuzi-cn-zh-hanzi-unicode-bianma-php\" class=\"headerlink\" title=\"扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\"></a>扩展：常用汉字的unicode编码范围 \\u4E00（一）-  \\u9FA5（龥）    \t\t     <a href=\"https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php\">https://www.qqxiuzi.cn/zh/hanzi-unicode-bianma.php</a></h4><h3 id=\"三、方法和属性\"><a href=\"#三、方法和属性\" class=\"headerlink\" title=\"三、方法和属性\"></a>三、方法和属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;hello&#x27;</span>, <span class=\"string\">&#x27;ig&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;test:&#x27;</span>, reg.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lastIndex&#x27;</span>, reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;exec:&#x27;</span>, reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello , i am from Hello World&#x27;</span>)); <span class=\"comment\">// [&#x27;Hello&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lastIndex&#x27;</span>, reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 23</span></span><br><span class=\"line\"><span class=\"comment\">// 常用属性</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;source:&#x27;</span>, reg.<span class=\"property\">source</span>); <span class=\"comment\">// hello</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;flags:&#x27;</span>, reg.<span class=\"property\">flags</span>); <span class=\"comment\">// gi</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;global:&#x27;</span>, reg.<span class=\"property\">global</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ignoreCase:&#x27;</span>, reg.<span class=\"property\">ignoreCase</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;multiline:&#x27;</span>, reg.<span class=\"property\">multiline</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 不常用的方法和属性</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;dotAll:&#x27;</span>, reg.<span class=\"property\">dotAll</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;sticky:&#x27;</span>, reg.<span class=\"property\">sticky</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;unicode:&#x27;</span>, reg.<span class=\"property\">unicode</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">reg.<span class=\"title function_\">compile</span>(<span class=\"string\">&#x27;world&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>); <span class=\"comment\">// 重新编译成 /world/i</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-1-lastIndex\"><a href=\"#3-1-lastIndex\" class=\"headerlink\" title=\"3.1: lastIndex\"></a>3.1: lastIndex</h4><p>返回一个整数，表示下一次开始搜索的位置。该属性可读写，但是只在进行连续搜索时有意义（&#x2F;g 或 &#x2F;s）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/a+/g</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;aaa_aa&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"comment\">// 第二圈，从头来</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// aaa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意：带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 带有g修饰符时，正则表达式内部会记住上一次的lastIndex属性，这时不应该更换所要匹配的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"regexp\">/aa/g</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aa&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"property\">lastIndex</span>) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_aa_&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\">r.<span class=\"property\">lastIndex</span> = <span class=\"number\">1</span> <span class=\"comment\">// 将lastIndex手动改成1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(r.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_aa_&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-2-STRING与正则相关的方法-match、replace、search、split\"><a href=\"#3-2-STRING与正则相关的方法-match、replace、search、split\" class=\"headerlink\" title=\"3.2: STRING与正则相关的方法 match、replace、search、split\"></a>3.2: STRING与正则相关的方法 match、replace、search、split</h4><ul>\n<li>1 match 返回一个数组，成员是所有匹配的子字符串；匹配失败返回null<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;_x_x&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/x/</span>)) <span class=\"comment\">// [&#x27;x&#x27;, index: 1, input: &#x27;_x_x&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/x/g</span>)) <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/y/</span>)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"comment\">// 设置正则表达式的lastIndex属性，对match方法无效</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/x/g</span></span><br><span class=\"line\">reg.<span class=\"property\">lastIndex</span> = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(str)) <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(reg)) <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure></li>\n<li>2 search 返回第一个满足条件的匹配结果在整个字符串中的位置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;_x_x&#x27;</span>.<span class=\"title function_\">search</span>(<span class=\"regexp\">/x/</span>)) <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;_x_x&#x27;</span>.<span class=\"title function_\">search</span>(<span class=\"regexp\">/y/</span>)) <span class=\"comment\">// -1</span></span><br></pre></td></tr></table></figure></li>\n<li>3 split 按照正则规则分割字符串，返回一个由分割后的各个部分组成的数组<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a,  b,c, d&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/, */</span>)) <span class=\"comment\">// [ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27; ]</span></span><br><span class=\"line\"><span class=\"comment\">// 第二个参数是返回数组的最大成员数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a,  b,c, d&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/, */</span>, <span class=\"number\">2</span>)) <span class=\"comment\">// [ &#x27;a&#x27;, &#x27;b&#x27; ]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa**a*&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/a*/</span>)) <span class=\"comment\">// [ &#x27;&#x27;, &#x27;*&#x27;, &#x27;*&#x27;, &#x27;*&#x27; ]</span></span><br><span class=\"line\"><span class=\"comment\">// 如果正则表达式带有括号，则括号匹配的部分也会作为数组成员返回</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa*a*&#x27;</span>.<span class=\"title function_\">split</span>(<span class=\"regexp\">/(a*)/</span>)) <span class=\"comment\">// [&quot;&quot;, &quot;aaa&quot;, &quot;*&quot;, &quot;&quot;, &quot;*&quot;, &quot;a&quot;, &quot;*&quot;]</span></span><br></pre></td></tr></table></figure></li>\n<li>4 replace - 可以替换匹配的值<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/a/</span>, <span class=\"string\">&#x27;b&#x27;</span>)) <span class=\"comment\">// baa</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aaa&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/a/g</span>, <span class=\"string\">&#x27;b&#x27;</span>)) <span class=\"comment\">// bbb</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一、replace方法的第二个参数可以使用美元符号$，用来指代所替换的内容</span></span><br><span class=\"line\"><span class=\"comment\">// 1、$&amp;：匹配的子字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$&amp;&#x27;</span>)) <span class=\"comment\">// abc</span></span><br><span class=\"line\"><span class=\"comment\">// 2、$`：匹配结果前面的文本</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$`&#x27;</span>)) <span class=\"comment\">// aac</span></span><br><span class=\"line\"><span class=\"comment\">// 3、$&#x27;：匹配结果后面的文本</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$\\&#x27;&#x27;</span>)) <span class=\"comment\">// acc</span></span><br><span class=\"line\"><span class=\"comment\">// 4、$n：匹配成功的第n组内容，n是从1开始的自然数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(b)/</span>, <span class=\"string\">&#x27;$1d&#x27;</span>)) <span class=\"comment\">// abdc</span></span><br><span class=\"line\"><span class=\"comment\">// 5、$$：指代美元符号$</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/b/</span>, <span class=\"string\">&#x27;$$&#x27;</span>)) <span class=\"comment\">// a$c</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二、replace方法的第二个参数还可以是一个函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> res = <span class=\"string\">&#x27;3 and 5&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/[0-9]+/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">2</span> * match</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res) <span class=\"comment\">// 6 and 10</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"四、语法\"><a href=\"#四、语法\" class=\"headerlink\" title=\"四、语法\"></a>四、语法</h3><ul>\n<li>原义字符(字面量字符)  </li>\n<li>元字符(点字符.、非打印字符、预定义类、边界)   </li>\n<li>转义符\\   </li>\n<li>字符类[]   </li>\n<li>字符类取反[^]  </li>\n<li>范围类[-]  </li>\n<li>选择符|  </li>\n<li>量词  </li>\n<li>贪婪与懒惰(量词后加?)</li>\n<li>分组()与反向引用(非捕获组 ?:)   </li>\n<li>零宽断言（前瞻(?&#x3D; 先行断言、?! 先行否定断言)    后顾(?&lt;&#x3D; 后行断言、?&lt;! 后行否定断言)）</li>\n</ul>\n<h4 id=\"4-1-原义字符-字面量字符\"><a href=\"#4-1-原义字符-字面量字符\" class=\"headerlink\" title=\"4.1 原义字符(字面量字符)\"></a>4.1 原义字符(字面量字符)</h4><p>如果某个字符只表示它字面的含义，那么它们就叫做“字面量字符”（literal characters）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dog/.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;IT dog&#x27;</span>) <span class=\"comment\">// dog为原义字符</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-元字符\"><a href=\"#4-2-元字符\" class=\"headerlink\" title=\"4.2 元字符\"></a>4.2 元字符</h4><p>有一部分字符有特殊含义，不代表字面的意思。它们叫做“元字符”（metacharacters）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、点字符（.）- 除了换行(\\n)、行结束符(\\u2028)、回车(\\r)、段分隔符(\\u2029)外的其他任意单字符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/c..t/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;c\\nt&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/c.t/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 2、非打印字符</span></span><br><span class=\"line\"><span class=\"comment\">// \\cx：control + 控制字符(只能是字母)，如：\\cM = \\r</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\cMb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\rb&#x27;</span>), <span class=\"regexp\">/a\\cMb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\cMb&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// [\\b]：匹配退格键(\\u0008) 或 其本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[\\b]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\u0008&#x27;</span>), <span class=\"regexp\">/[\\b]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;[\\b]&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\n：换行符，等价于 \\x0a 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\nb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\nb&#x27;</span>), <span class=\"regexp\">/a\\nb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0ab&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\r：回车符，等价于 \\x0d 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\rb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\rb&#x27;</span>), <span class=\"regexp\">/a\\rb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0db&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\t：制表符，等价于 \\x09 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\tb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\tb&#x27;</span>), <span class=\"regexp\">/a\\tb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x09b&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\v：垂直制表符，等价于 \\x0b 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\vb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\vb&#x27;</span>), <span class=\"regexp\">/a\\vb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0bb&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\f：换页符，等价于 \\x0c 和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\fb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\fb&#x27;</span>), <span class=\"regexp\">/a\\fb/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\x0cb&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\0：匹配null字符（\\u0000）和 本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a\\0b/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\0b&#x27;</span>), <span class=\"regexp\">/a\\0b/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a\\u0000b&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\xxx：查找以八进制数xxx规定的字符（如：\\127 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\127/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\127&#x27;</span>), <span class=\"regexp\">/\\127/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\xdd：查找以16进制数dd规定的字符（如：\\x57 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\x57/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\x57&#x27;</span>), <span class=\"regexp\">/\\x57/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\uhhhh：匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的字符（如：\\u0057 = W）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\u0057/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello \\u0057&#x27;</span>), <span class=\"regexp\">/\\u0057/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello World&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 3、预定义类：是某些常见模式的简写方式</span></span><br><span class=\"line\"><span class=\"comment\">// \\d：数字字符，等价于[0-9]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\d/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// \\D：非数字，等价于[^0-9]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\D/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// \\w：单词字符（字母、数字、下划线），等价于[0-9_a-zA-Z]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1&#x27;</span>), <span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a&#x27;</span>), <span class=\"regexp\">/\\w/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_&#x27;</span>)) <span class=\"comment\">// true true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\W：非单词字符，等价于[^0-9_a-zA-Z]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1&#x27;</span>), <span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a&#x27;</span>), <span class=\"regexp\">/\\W/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;_&#x27;</span>)) <span class=\"comment\">// false false false</span></span><br><span class=\"line\"><span class=\"comment\">// \\s：空白符，等价于[\\t\\n\\x0B\\f\\r]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\s/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; &#x27;</span>), <span class=\"regexp\">/\\s/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\t&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// \\S：非空白符，等价于[^\\t\\n\\x0B\\f\\r]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\S/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; &#x27;</span>), <span class=\"regexp\">/\\S/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\t&#x27;</span>)) <span class=\"comment\">// false false</span></span><br><span class=\"line\"><span class=\"comment\">// 4、边界</span></span><br><span class=\"line\"><span class=\"comment\">// ^：以..开头</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^hello/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>), <span class=\"regexp\">/^hello/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27; hello world&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// &amp;：以..结尾</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/world$/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>), <span class=\"regexp\">/world$/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world &#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"comment\">// \\b：匹配一个单词边界，也就是指单词和空格间的位置</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;helloworld&#x27;</span>), <span class=\"regexp\">/\\bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 注：&quot;hello world&quot;，&quot;hello-world&quot;，&quot;hello&amp;world&quot;,&quot;hello-world&quot;,&quot;hello world233&quot;都会返回true</span></span><br><span class=\"line\"><span class=\"comment\">// 注：可以是&quot;hello_world&quot;，&quot;hello2world&quot;，&quot;helloaworld&quot;，&quot;helloworld&quot;都返回false</span></span><br><span class=\"line\"><span class=\"comment\">// \\B：匹配非单词边界</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/\\Bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;helloworld&#x27;</span>), <span class=\"regexp\">/\\Bworld/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// true false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-转义符\"><a href=\"#4-3-转义符\" class=\"headerlink\" title=\"4.3 转义符\\\"></a>4.3 转义符\\</h4><p>对于那些有特殊含义的字符，如果要匹配它们本身，就需要在它们前面要加上反斜杠。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 需要转义的，一共12个字符 ^.[$()|*+?&#123;\\</span></span><br><span class=\"line\"><span class=\"comment\">// 注：用 new RegExp 生成的需要转义的正则，需要两个\\\\</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>((<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;1\\\\+1&#x27;</span>)).<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;1+1&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-字符类\"><a href=\"#4-4-字符类\" class=\"headerlink\" title=\"4.4 字符类 []\"></a>4.4 字符类 []</h4><p>表示有一系列字符可供选择，只要匹配其中一个就可以了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;apple&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 常见的 [12345]  [a-zA-Z0-9]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-5-字符类取反-也叫”脱字符”\"><a href=\"#4-5-字符类取反-也叫”脱字符”\" class=\"headerlink\" title=\"4.5 字符类取反[^] - 也叫”脱字符”\"></a>4.5 字符类取反[^] - 也叫”脱字符”</h4><p>表示除了字符类之中的字符，其他字符都可以匹配 - 中括号内第一个为^</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^abc]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aabbcc&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 扩展：[^] 表示任意字符，跟 . 相比，也包括换行符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\n&#x27;</span>), <span class=\"regexp\">/[^]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;$&#x27;</span>)) <span class=\"comment\">// true true true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;\\n&#x27;</span>), <span class=\"regexp\">/./</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;$&#x27;</span>)) <span class=\"comment\">// true false true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-6-范围类-也叫”连字符”\"><a href=\"#4-6-范围类-也叫”连字符”\" class=\"headerlink\" title=\"4.6 范围类[-] - 也叫”连字符”\"></a>4.6 范围类[-] - 也叫”连字符”</h4><p>表示一定范围内</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[0-9]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[a-z]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[a-zA-Z_0-9]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;a_b1&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/[\\u4E00-\\u9FA5]/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;你hello&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-7-选择符\"><a href=\"#4-7-选择符\" class=\"headerlink\" title=\"4.7 选择符|\"></a>4.7 选择符|</h4><p>表示“或关系”（OR）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/cat|dog/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>), <span class=\"regexp\">/cat|dog/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;at&#x27;</span>)) <span class=\"comment\">// true false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/cat|dog|fish/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;cat&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 选择符会包括它前后的多个字符，比如上面的cat、dog、fish，可用()改变这一行为</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(at|do)g/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;atg&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-8-量词-m-n-，用于限定子模式出现在正则表达式的次数\"><a href=\"#4-8-量词-m-n-，用于限定子模式出现在正则表达式的次数\" class=\"headerlink\" title=\"4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数\"></a>4.8 量词 ?*+{m,n}，用于限定子模式出现在正则表达式的次数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、匹配n次：&#123;n&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;2&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/a&#123;2&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 2、匹配至少m次，最多n次：&#123;m,n&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;1,3&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;baaaac&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 3、匹配至少m次，最多不限：&#123;m,&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a&#123;2,&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>), <span class=\"regexp\">/a&#123;2,&#125;/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aaaabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br><span class=\"line\"><span class=\"comment\">// 4、匹配0次或多次，相当于&#123;0,&#125;：*</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a*/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;bc&#x27;</span>), <span class=\"regexp\">/a*/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;abc&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 5、匹配0次或1次，相当于&#123;0,1&#125;：?</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/https?/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;http://&#x27;</span>), <span class=\"regexp\">/https?/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;https://&#x27;</span>)) <span class=\"comment\">// true true</span></span><br><span class=\"line\"><span class=\"comment\">// 6、匹配一次或多次，相当于&#123;1,&#125;：+</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/a+/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;bc&#x27;</span>), <span class=\"regexp\">/a+/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;aaaabc&#x27;</span>)) <span class=\"comment\">// false true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-9-贪婪与懒惰-量词后加\"><a href=\"#4-9-贪婪与懒惰-量词后加\" class=\"headerlink\" title=\"4.9 贪婪与懒惰(量词后加?)\"></a>4.9 贪婪与懒惰(量词后加?)</h4><ul>\n<li>上面的量词符，默认情况下都是最大可能匹配，即匹配到下一个字符不满足匹配规则为止，这被称为贪婪模式</li>\n<li>要开启懒惰模式，需要在量词后加?</li>\n<li>贪婪模式量词： {x,y}  {x,}  ?   *   +</li>\n<li>懒惰模式量词： {x,y}? {x,}?  ??  *?  +?<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;baaaac&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;1,4&#125;/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;1,4&#125;?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;ba&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;2,&#125;/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba&#123;2,&#125;?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;baa&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba?/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba??/</span>)) <span class=\"comment\">// [&#x27;ba&#x27;]  [&#x27;b&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba*/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba*?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;b&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba+/</span>), str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ba+?/</span>)) <span class=\"comment\">// [&#x27;baaaa&#x27;]  [&#x27;ba&#x27;]</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"4-10-分组-与反向引用-非捕获组\"><a href=\"#4-10-分组-与反向引用-非捕获组\" class=\"headerlink\" title=\"4.10 分组()与反向引用(非捕获组 ?:)\"></a>4.10 分组()与反向引用(非捕获组 ?:)</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一、分组（子表达式）可以理解为，数学运算中的括号，用于计算的分组使用</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/abc&#123;2&#125;/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;1abcc2&#x27;</span>)) <span class=\"comment\">// [&#x27;abcc&#x27;, index: 1, input: &#x27;1abcc2&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">// 上面的返回值 [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;, index: 0, input: &quot;2021-12-01&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 1、对比上面两个返回结果可以看出，第二个带分组的，会在匹配结果里返回每个分组匹配到的结果，即&#x27;2021&#x27;,&#x27;12&#x27;,&#x27;01&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 2、使用组匹配时，不宜同时使用g修饰符，否则match方法不会捕获分组的内容(但exec方法不受影响)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/g</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/g</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 3、分组的用途</span></span><br><span class=\"line\"><span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>, <span class=\"string\">&#x27;$1+$2+$3&#x27;</span>) <span class=\"comment\">// 2021+12+01</span></span><br><span class=\"line\"><span class=\"string\">&#x27;2021-12-01&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)/</span>, <span class=\"function\">(<span class=\"params\">$<span class=\"number\">1</span>,$<span class=\"number\">2</span>,$<span class=\"number\">3</span>,$<span class=\"number\">4</span></span>) =&gt;</span> &#123; <span class=\"comment\">// 2021+12+01</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;$<span class=\"number\">2</span>&#125;</span>+<span class=\"subst\">$&#123;$<span class=\"number\">3</span>&#125;</span>+<span class=\"subst\">$&#123;$<span class=\"number\">4</span>&#125;</span>`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 注：如果replace第二个参数是function，则分组匹配结果时候从$2开始，$1是整个匹配到的结果</span></span><br><span class=\"line\"><span class=\"comment\">// 4、\\n：表示第n个括号匹配的内容</span></span><br><span class=\"line\"><span class=\"comment\">// 用于匹配网页标签 [&quot;&lt;p class=&quot;cs&quot;&gt;hello&lt;/p&gt;&quot;, &quot;p&quot;, &quot; class=&quot;cs&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/&lt;([^&gt;]+)([^&gt;]*)&gt;[^&lt;]*&lt;\\/\\1&gt;/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;&lt;p class=&quot;cs&quot;&gt;hello&lt;/p&gt;&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">// \\n是内容完全匹配，而不仅是格式匹配</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.)+.*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;hello wo&quot;, &quot;o&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.).*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;llo worl&quot;, &quot;l&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 分析：上面两者之所以分组中匹配到的不一样，是因为正则默认是&quot;贪婪模式&quot;，可以改为懒惰模式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(.)+?.*\\1/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)) <span class=\"comment\">// [&quot;hello worl&quot;, &quot;l&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 二、反向引用(非捕获组 ?:) - 放在分组最前面</span></span><br><span class=\"line\"><span class=\"comment\">// 表示不返回该组匹配的内容，即匹配的结果中不计入这个括号里匹配到的结果</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(?:\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)$/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(\\d&#123;4&#125;)[/-](\\d&#123;2&#125;)[/-](\\d&#123;2&#125;)$/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;2021-12-01&#x27;</span>)) <span class=\"comment\">// [&quot;2021-12-01&quot;, &quot;2021&quot;, &quot;12&quot;, &quot;01&quot;]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-11-零宽断言\"><a href=\"#4-11-零宽断言\" class=\"headerlink\" title=\"4.11 零宽断言\"></a>4.11 零宽断言</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、前瞻lookahead(?= 先行断言、?! 先行否定断言、负向先行断言)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/l(?=o)/</span>) <span class=\"comment\">// [&quot;l&quot;, index: 3]</span></span><br><span class=\"line\"><span class=\"comment\">// x(?=y)：表示x后面必须有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"comment\">// x(?!y)：相反，表示x后面必须没有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/l(?=o)/g</span>, <span class=\"string\">&#x27; &#x27;</span>) <span class=\"comment\">// &quot;hel o world&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/l(?!o)/g</span>, <span class=\"string\">&#x27; &#x27;</span>) <span class=\"comment\">// &quot;he lo wor d&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 2、后顾lookbehind(?&lt;= 后行断言、?&lt;! 后行否定断言、负向后行断言) - 慎用，有些平台不支持</span></span><br><span class=\"line\"><span class=\"comment\">// (?&lt;=y)x：表示x前面必须有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"comment\">// (?&lt;!y)x：相反，表示x前面必须没有y，才能匹配上；括号里的部分y不会返回</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(?&lt;=e)l/g</span>, <span class=\"string\">&#x27; &#x27;</span>)) <span class=\"comment\">// &quot;he lo world&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(?&lt;!e)l/g</span>, <span class=\"string\">&#x27; &#x27;</span>)) <span class=\"comment\">// &quot;hel o wor d&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 3、前面讲到，前瞻是匹配x后面有没有y，那如果不写x呢？(相当于indexOf，但exec不会匹配结果)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cbacbac&quot;</span>), <span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;cbacbac&quot;</span>)) <span class=\"comment\">// null false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cbacabc&quot;</span>), <span class=\"regexp\">/(?=abc)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;cbacabc&quot;</span>)) <span class=\"comment\">// [&quot;&quot;, index: 4] true</span></span><br><span class=\"line\"><span class=\"comment\">// 4、那么对于后顾，如果不带x，我们能做什么呢？</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/(?!\\d)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;123&quot;</span>), <span class=\"regexp\">/(?!\\d)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;123&quot;</span>)) <span class=\"comment\">// [&quot;&quot;, index: 3] true</span></span><br><span class=\"line\"><span class=\"comment\">// 进一步改造上面这个不带x的后顾正则 - 匹配不全是某种规则的字符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/^(?!\\d+$)/</span>.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;123&#x27;</span>), <span class=\"regexp\">/^(?!\\d+$)/</span>.<span class=\"title function_\">test</span>(<span class=\"string\">&#x27;123&#x27;</span>)) <span class=\"comment\">// null false</span></span><br><span class=\"line\"><span class=\"comment\">// 使用场景，金额每三位用,分隔</span></span><br><span class=\"line\"><span class=\"string\">&#x27;1234567&#x27;</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+$)/g</span>, <span class=\"string\">&#x27;$1,&#x27;</span>) <span class=\"comment\">// &quot;1,234,567&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;1234567&#x27;</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+$)/g</span>) <span class=\"comment\">// [&quot;1&quot;, &quot;4&quot;]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"五、常用正则举例\"><a href=\"#五、常用正则举例\" class=\"headerlink\" title=\"五、常用正则举例\"></a>五、常用正则举例</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、手机号</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^1[3456789]\\d&#123;9&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">// 2、身份证(15位数字 或 17位数字+数字或x)</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^[1-9]\\d&#123;14&#125;(\\d&#123;2&#125;[0-9xX])?$/</span></span><br><span class=\"line\"><span class=\"comment\">// 3、密码 - 数字、字母、下划线最少两种，8-16位：https://juejin.cn/post/6946016272245063716#heading-4</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^(?!(\\d+|[a-zA-Z]+|_+)$)\\w&#123;8,16&#125;$/</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^(?!\\d+$)(?![a-zA-Z]+$)(?!_+$)\\w&#123;8,16&#125;$/</span> <span class=\"comment\">// 等价</span></span><br><span class=\"line\"><span class=\"comment\">// 前瞻并不支持ios14以下，所以在H5上，为了兼容，最好用方法</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> match = [<span class=\"regexp\">/[A-Za-z]/</span>, <span class=\"regexp\">/\\d/</span>, <span class=\"regexp\">/_/</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i.<span class=\"title function_\">test</span>(str)).<span class=\"property\">length</span> &gt;= <span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> match &amp;&amp; <span class=\"regexp\">/^\\w&#123;8,16&#125;$/</span>.<span class=\"title function_\">test</span>(str)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 4、计算字符串字节数 - 中文占2字节，其余的1字节</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\u4e00-\\u9fa5/g</span>, <span class=\"string\">&#x27;aa&#x27;</span>).<span class=\"property\">length</span></span><br><span class=\"line\"><span class=\"comment\">// 5、多个空格换成一个</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 6、是否包含连续相同的字符串 - 前瞻</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/(?=(\\w+)\\1)/</span> <span class=\"comment\">// /(?=(\\w+)\\1)/.test(&quot;cbacbabc&quot;) true</span></span><br><span class=\"line\"><span class=\"comment\">// 7、最多两位小数</span></span><br><span class=\"line\">reg = <span class=\"regexp\">/^\\d*\\.?\\d&#123;0,2&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">// 8、去除所有的html标签</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/gi</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 9、获取url参数</span></span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">name</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> r = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">search</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> eg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;(^|&amp;)&#x27;</span> + name + <span class=\"string\">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> r.<span class=\"title function_\">match</span>(eg) ? r.<span class=\"title function_\">match</span>(eg)[<span class=\"number\">2</span>] : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 10、阿拉伯数字替换成对应的中文大写</span></span><br><span class=\"line\">arr = [<span class=\"string\">&quot;零&quot;</span>,<span class=\"string\">&quot;壹&quot;</span>,<span class=\"string\">&quot;贰&quot;</span>,<span class=\"string\">&quot;叁&quot;</span>,<span class=\"string\">&quot;肆&quot;</span>,<span class=\"string\">&quot;伍&quot;</span>,<span class=\"string\">&quot;陆&quot;</span>,<span class=\"string\">&quot;柒&quot;</span>,<span class=\"string\">&quot;捌&quot;</span>,<span class=\"string\">&quot;玖&quot;</span>]</span><br><span class=\"line\">fun = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>, <span class=\"function\">(<span class=\"params\">m</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr[m]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"让js文件支持cmd、node、script标签方式引用","date":"2018-10-07T16:00:00.000Z","_content":"\n让js文件支持cmd、node、script标签方式引用\n<!-- more -->\n我们纯手生写的js文件，怎样同时支持cmd、node、script标签方式引用，只需要给他简单的套用一层外壳\n####\n```js\n(function (global, factory) {\n  \"use strict\";\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = global.document ?\n      factory(global, true) :\n      function (w) {\n        if (!w.document) {\n          throw new Error(\"requires a window with a document\");\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  \"use strict\";\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"xxx\", [], function () {\n      return u;\n    });\n  }\n\n  if (!noGlobal) {\n    window.xxx = u;\n  }\n  return u;\n});\n```\n\n实践出真知\n```js\nvar util = {\n  VERSION: '1.0.01',\n  fun: function(){\n    alert('fun');\n  }\n};\n\n(function (global, factory) {\n  \"use strict\";\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = global.document ?\n      factory(global, true) :\n      function (w) {\n        if (!w.document) {\n          throw new Error(\"requires a window with a document\");\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  \"use strict\";\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"util\", [], function () {\n      return u;\n    });\n  }\n\n  if (!noGlobal) {\n    window.util = u;\n  }\n  return u;\n});\n```\n现在试着用 require 、import、和直接script标签方式引用吧！！！\n","source":"_posts/让js文件支持cmd、node、script标签方式引用.md","raw":"---\ntitle: 让js文件支持cmd、node、script标签方式引用\ndate: 2018-10-08\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n让js文件支持cmd、node、script标签方式引用\n<!-- more -->\n我们纯手生写的js文件，怎样同时支持cmd、node、script标签方式引用，只需要给他简单的套用一层外壳\n####\n```js\n(function (global, factory) {\n  \"use strict\";\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = global.document ?\n      factory(global, true) :\n      function (w) {\n        if (!w.document) {\n          throw new Error(\"requires a window with a document\");\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  \"use strict\";\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"xxx\", [], function () {\n      return u;\n    });\n  }\n\n  if (!noGlobal) {\n    window.xxx = u;\n  }\n  return u;\n});\n```\n\n实践出真知\n```js\nvar util = {\n  VERSION: '1.0.01',\n  fun: function(){\n    alert('fun');\n  }\n};\n\n(function (global, factory) {\n  \"use strict\";\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = global.document ?\n      factory(global, true) :\n      function (w) {\n        if (!w.document) {\n          throw new Error(\"requires a window with a document\");\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  \"use strict\";\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"util\", [], function () {\n      return u;\n    });\n  }\n\n  if (!noGlobal) {\n    window.util = u;\n  }\n  return u;\n});\n```\n现在试着用 require 、import、和直接script标签方式引用吧！！！\n","slug":"让js文件支持cmd、node、script标签方式引用","published":1,"updated":"2022-06-15T08:25:06.449Z","_id":"cl4e3az0t0040k4rqomrkyx4c","comments":1,"layout":"post","photos":[],"link":"","content":"<p>让js文件支持cmd、node、script标签方式引用</p>\n<span id=\"more\"></span>\n<p>我们纯手生写的js文件，怎样同时支持cmd、node、script标签方式引用，只需要给他简单的套用一层外壳<br>####</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">global</span>, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span> === <span class=\"string\">&quot;object&quot;</span> &amp;&amp; <span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">document</span> ?</span><br><span class=\"line\">      <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>, <span class=\"literal\">true</span>) :</span><br><span class=\"line\">      <span class=\"keyword\">function</span> (<span class=\"params\">w</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!w.<span class=\"property\">document</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;requires a window with a document&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">factory</span>(w);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span> !== <span class=\"string\">&quot;undefined&quot;</span> ? <span class=\"variable language_\">window</span> : <span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">window</span>, noGlobal</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> define === <span class=\"string\">&quot;function&quot;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>(<span class=\"string\">&quot;xxx&quot;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!noGlobal) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">xxx</span> = u;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>实践出真知</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> util = &#123;</span><br><span class=\"line\">  <span class=\"attr\">VERSION</span>: <span class=\"string\">&#x27;1.0.01&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">fun</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;fun&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">global</span>, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span> === <span class=\"string\">&quot;object&quot;</span> &amp;&amp; <span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">document</span> ?</span><br><span class=\"line\">      <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>, <span class=\"literal\">true</span>) :</span><br><span class=\"line\">      <span class=\"keyword\">function</span> (<span class=\"params\">w</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!w.<span class=\"property\">document</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;requires a window with a document&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">factory</span>(w);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span> !== <span class=\"string\">&quot;undefined&quot;</span> ? <span class=\"variable language_\">window</span> : <span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">window</span>, noGlobal</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> define === <span class=\"string\">&quot;function&quot;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>(<span class=\"string\">&quot;util&quot;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!noGlobal) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">util</span> = u;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>现在试着用 require 、import、和直接script标签方式引用吧！！！</p>\n","site":{"data":{}},"excerpt":"<p>让js文件支持cmd、node、script标签方式引用</p>","more":"<p>我们纯手生写的js文件，怎样同时支持cmd、node、script标签方式引用，只需要给他简单的套用一层外壳<br>####</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">global</span>, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span> === <span class=\"string\">&quot;object&quot;</span> &amp;&amp; <span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">document</span> ?</span><br><span class=\"line\">      <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>, <span class=\"literal\">true</span>) :</span><br><span class=\"line\">      <span class=\"keyword\">function</span> (<span class=\"params\">w</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!w.<span class=\"property\">document</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;requires a window with a document&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">factory</span>(w);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span> !== <span class=\"string\">&quot;undefined&quot;</span> ? <span class=\"variable language_\">window</span> : <span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">window</span>, noGlobal</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> define === <span class=\"string\">&quot;function&quot;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>(<span class=\"string\">&quot;xxx&quot;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!noGlobal) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">xxx</span> = u;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>实践出真知</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> util = &#123;</span><br><span class=\"line\">  <span class=\"attr\">VERSION</span>: <span class=\"string\">&#x27;1.0.01&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">fun</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;fun&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">global</span>, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span> === <span class=\"string\">&quot;object&quot;</span> &amp;&amp; <span class=\"keyword\">typeof</span> <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">document</span> ?</span><br><span class=\"line\">      <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>, <span class=\"literal\">true</span>) :</span><br><span class=\"line\">      <span class=\"keyword\">function</span> (<span class=\"params\">w</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!w.<span class=\"property\">document</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;requires a window with a document&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">factory</span>(w);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">factory</span>(<span class=\"variable language_\">global</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span> !== <span class=\"string\">&quot;undefined&quot;</span> ? <span class=\"variable language_\">window</span> : <span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">window</span>, noGlobal</span>) &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> define === <span class=\"string\">&quot;function&quot;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>(<span class=\"string\">&quot;util&quot;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!noGlobal) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">util</span> = u;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> u;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>现在试着用 require 、import、和直接script标签方式引用吧！！！</p>"},{"title":"css图标 - webfont","date":"2017-03-04T16:00:00.000Z","_content":"\n对于网页中很多常见的小图标，我们可以使用图片来代替，但是图片太多不仅很难管理，而且还增加网络请求，下下策。所以会想到webfont。\n<!-- more -->\n### 引用步骤\n- 把常用的图标或者自己个性化的图标制成webfont文件，其中以 16进制的编码表示，至于怎么制作，以后再说。\n- 网页中引用该字体，样式中编写 伪元素样式（before,after）\n\n//以下样式是为了兼容很多浏览器\n```CSS\n@font-face{\n\tfont-family:'XXX';/*\n \t给你的自定义WebFont命名 */\n\tsrc:url('xxx.eot');\n\tsrc:url('xxx.eot?#iefix')format('embedded-opentype'),url('xxx.woff')format('woff'),url('xxxn.ttf')format('truetype'),url('xxx.svg#micon')format('svg');\n\tfont-weight:normal;\n\tfont-style:normal;\n\t...\n}\n.icon{\n\tfont-family: 'MyFont';\n\tspeak:none; /* 无障碍阅读所需要的，告诉屏幕阅读器不要读这个字符 */\n\tfont-size:14px;\n\tfont-variant:normal;\n\tfont-weight:normal;\n\ttext-transform: none;\n\t...\n}\n.icon_open:before{\n\tcontent:\"\\f001\"; /* 相应图标的编码 */\n\t...\n}\n```\nHTML如下：\n```HTML\n<a href=\"open.html\"><i class=\"icon icon_open\"></i>Open</a>\n```\n\n### ** 拓展：优秀的图标网站 **\n1.<https://icomoon.io/app/>\n2.<http://ionicons.com/>\n3.<http://fontello.com/>\n","source":"_posts/谈谈css里面的一些小知识.md","raw":"---\ntitle: css图标 - webfont\ndate: 2017-03-05\ncategories: CSS\ntags: \n    - CSS\n#description:\n---\n\n对于网页中很多常见的小图标，我们可以使用图片来代替，但是图片太多不仅很难管理，而且还增加网络请求，下下策。所以会想到webfont。\n<!-- more -->\n### 引用步骤\n- 把常用的图标或者自己个性化的图标制成webfont文件，其中以 16进制的编码表示，至于怎么制作，以后再说。\n- 网页中引用该字体，样式中编写 伪元素样式（before,after）\n\n//以下样式是为了兼容很多浏览器\n```CSS\n@font-face{\n\tfont-family:'XXX';/*\n \t给你的自定义WebFont命名 */\n\tsrc:url('xxx.eot');\n\tsrc:url('xxx.eot?#iefix')format('embedded-opentype'),url('xxx.woff')format('woff'),url('xxxn.ttf')format('truetype'),url('xxx.svg#micon')format('svg');\n\tfont-weight:normal;\n\tfont-style:normal;\n\t...\n}\n.icon{\n\tfont-family: 'MyFont';\n\tspeak:none; /* 无障碍阅读所需要的，告诉屏幕阅读器不要读这个字符 */\n\tfont-size:14px;\n\tfont-variant:normal;\n\tfont-weight:normal;\n\ttext-transform: none;\n\t...\n}\n.icon_open:before{\n\tcontent:\"\\f001\"; /* 相应图标的编码 */\n\t...\n}\n```\nHTML如下：\n```HTML\n<a href=\"open.html\"><i class=\"icon icon_open\"></i>Open</a>\n```\n\n### ** 拓展：优秀的图标网站 **\n1.<https://icomoon.io/app/>\n2.<http://ionicons.com/>\n3.<http://fontello.com/>\n","slug":"谈谈css里面的一些小知识","published":1,"updated":"2022-06-15T08:08:35.064Z","_id":"cl4e3az0t0042k4rq0yqf43uv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>对于网页中很多常见的小图标，我们可以使用图片来代替，但是图片太多不仅很难管理，而且还增加网络请求，下下策。所以会想到webfont。</p>\n<span id=\"more\"></span>\n<h3 id=\"引用步骤\"><a href=\"#引用步骤\" class=\"headerlink\" title=\"引用步骤\"></a>引用步骤</h3><ul>\n<li>把常用的图标或者自己个性化的图标制成webfont文件，其中以 16进制的编码表示，至于怎么制作，以后再说。</li>\n<li>网页中引用该字体，样式中编写 伪元素样式（before,after）</li>\n</ul>\n<p>&#x2F;&#x2F;以下样式是为了兼容很多浏览器</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>:<span class=\"string\">&#x27;XXX&#x27;</span>;<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> \t给你的自定义WebFont命名 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">src</span>:<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.eot&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">src</span>:<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.eot?#iefix&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;embedded-opentype&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.woff&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;woff&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxxn.ttf&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.svg#micon&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;svg&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">font-style</span>:normal;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;MyFont&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">speak</span>:none; <span class=\"comment\">/* 无障碍阅读所需要的，告诉屏幕阅读器不要读这个字符 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>:<span class=\"number\">14px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-variant</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">text-transform</span>: none;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon_open</span><span class=\"selector-pseudo\">:before</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>:<span class=\"string\">&quot;\\f001&quot;</span>; <span class=\"comment\">/* 相应图标的编码 */</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>HTML如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;open.html&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon icon_open&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>Open<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展：优秀的图标网站\"><a href=\"#拓展：优秀的图标网站\" class=\"headerlink\" title=\"** 拓展：优秀的图标网站 **\"></a>** 拓展：优秀的图标网站 **</h3><p>1.<a href=\"https://icomoon.io/app/\">https://icomoon.io/app/</a><br>2.<a href=\"http://ionicons.com/\">http://ionicons.com/</a><br>3.<a href=\"http://fontello.com/\">http://fontello.com/</a></p>\n","site":{"data":{}},"excerpt":"<p>对于网页中很多常见的小图标，我们可以使用图片来代替，但是图片太多不仅很难管理，而且还增加网络请求，下下策。所以会想到webfont。</p>","more":"<h3 id=\"引用步骤\"><a href=\"#引用步骤\" class=\"headerlink\" title=\"引用步骤\"></a>引用步骤</h3><ul>\n<li>把常用的图标或者自己个性化的图标制成webfont文件，其中以 16进制的编码表示，至于怎么制作，以后再说。</li>\n<li>网页中引用该字体，样式中编写 伪元素样式（before,after）</li>\n</ul>\n<p>&#x2F;&#x2F;以下样式是为了兼容很多浏览器</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>:<span class=\"string\">&#x27;XXX&#x27;</span>;<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> \t给你的自定义WebFont命名 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">src</span>:<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.eot&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">src</span>:<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.eot?#iefix&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;embedded-opentype&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.woff&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;woff&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxxn.ttf&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>),<span class=\"built_in\">url</span>(<span class=\"string\">&#x27;xxx.svg#micon&#x27;</span>)<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;svg&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">font-style</span>:normal;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;MyFont&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">speak</span>:none; <span class=\"comment\">/* 无障碍阅读所需要的，告诉屏幕阅读器不要读这个字符 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>:<span class=\"number\">14px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-variant</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>:normal;</span><br><span class=\"line\">\t<span class=\"attribute\">text-transform</span>: none;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon_open</span><span class=\"selector-pseudo\">:before</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>:<span class=\"string\">&quot;\\f001&quot;</span>; <span class=\"comment\">/* 相应图标的编码 */</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>HTML如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;open.html&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon icon_open&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>Open<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展：优秀的图标网站\"><a href=\"#拓展：优秀的图标网站\" class=\"headerlink\" title=\"** 拓展：优秀的图标网站 **\"></a>** 拓展：优秀的图标网站 **</h3><p>1.<a href=\"https://icomoon.io/app/\">https://icomoon.io/app/</a><br>2.<a href=\"http://ionicons.com/\">http://ionicons.com/</a><br>3.<a href=\"http://fontello.com/\">http://fontello.com/</a></p>"},{"title":"谈谈NODE_ENV","date":"2018-10-27T16:00:00.000Z","_content":"\n在开发项目的时候，不可避免的就是各个环境（正式/开发/测试）对应不同的配置信息。我们选择在构建项目的时候根据不同的命令（NODE_ENV）让代码引用不同的配置，而不是建不同的分支或者在服务器上修改配置文件。\n<!-- more -->\n说说几种类型得项目在构建的时候使用NODE_ENV区分环境的场景。\n####\n一、vue项目（以vue-admin框架为例）\na.package.json文件配置不同打包命令\n```bash\n\"build\": \"node build/build.js\",\n\"dev:build\": \"NODE_ENV=development node build/build.js\"\n```\nb.build.js最上方添加代码\n```js\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'production'\n```\nc.webpack.prod.conf.js文件里根据env引用不同的配置文件\n```js\nconst env = process.env.NODE_ENV == 'production' ? require('../config/prod.env') :  require('../config/dev.build.env')\n```\n二、pomelo项目\na.package.json文件配置不同打包命令\n```bash\n\"build\": \"NODE_ENV=production pomelo start -e production --daemon\",\n\"build:dev\": \"NODE_ENV=dev pomelo start --daemon\",\n\"build:test\": \"NODE_ENV=test pomelo start --daemon\",\n```\nb.config.js根据env输出不同的配置\n```js\nconst env = process.env.NODE_ENV\nconst config = {\n  production: { },\n  dev: {},\n  tst: {}\n}\nmodule.exports = {\n  Config: config[env]\n}\n```\n三、babel项目\n场景：以上俩项目都是基于运行时获取的env，我们只要配置正确即可。但有些项目我们只需要编译成静态文件，然后用服务启动，如果只是用之前的配置的话，最终编译输出的会是process.env.NODE_ENV，启动服务就会报错。\n拿babel编译项目举例，搜索好久才寻得结果，参照 https://github.com/Tencent/wepy/issues/835 。\na. 安装插件 babel-plugin-transform-node-env-inline\n```bash\nnpm i -D babel-plugin-transform-node-env-inline\n```\nb. .babelrc 文件配置plugins transform-node-env-inline （关键）\n```bash\n  \"plugins\": [\n    \"transform-node-env-inline\",\n    \"xxxx\"\n  ]\n```\nc. package.json 中配置不同的编译命令\n```js\n\"build\": \"NODE_ENV=production babel src -d dist\",\n\"build:dev\": \"NODE_ENV=dev babel src -d dist\",\n\"build:test\": \"NODE_ENV=test babel src -d dist\"\n```\nd. config.js里根据env加载不同配置\n```js\nconst envType = process.env.NODE_ENV\nconst config = {\n  production: { },\n  dev: {},\n  tst: {}\n}\nexport let config = config[env]\n```\n\n** 总结一句话就是首先在package.json里用NODE_ENV配置不同的打包/编译命令；然后在配置里根据process.env.NODE_ENV获取环境，输出不同的配置。（如果项目不支持运行时动态获取，可以想办法让其支持，比如安装插件 babel-plugin-transform-node-env-inline）\n** 很多框架可能自行封装过，比如nuxt框架，请参照 https://zh.nuxtjs.org/api/configuration-env\n","source":"_posts/谈谈node_env.md","raw":"---\ntitle: 谈谈NODE_ENV\ndate: 2018-10-28\ncategories: NODE JS\ntags: \n    - NODE\n    - JS\n#description: \n---\n\n在开发项目的时候，不可避免的就是各个环境（正式/开发/测试）对应不同的配置信息。我们选择在构建项目的时候根据不同的命令（NODE_ENV）让代码引用不同的配置，而不是建不同的分支或者在服务器上修改配置文件。\n<!-- more -->\n说说几种类型得项目在构建的时候使用NODE_ENV区分环境的场景。\n####\n一、vue项目（以vue-admin框架为例）\na.package.json文件配置不同打包命令\n```bash\n\"build\": \"node build/build.js\",\n\"dev:build\": \"NODE_ENV=development node build/build.js\"\n```\nb.build.js最上方添加代码\n```js\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'production'\n```\nc.webpack.prod.conf.js文件里根据env引用不同的配置文件\n```js\nconst env = process.env.NODE_ENV == 'production' ? require('../config/prod.env') :  require('../config/dev.build.env')\n```\n二、pomelo项目\na.package.json文件配置不同打包命令\n```bash\n\"build\": \"NODE_ENV=production pomelo start -e production --daemon\",\n\"build:dev\": \"NODE_ENV=dev pomelo start --daemon\",\n\"build:test\": \"NODE_ENV=test pomelo start --daemon\",\n```\nb.config.js根据env输出不同的配置\n```js\nconst env = process.env.NODE_ENV\nconst config = {\n  production: { },\n  dev: {},\n  tst: {}\n}\nmodule.exports = {\n  Config: config[env]\n}\n```\n三、babel项目\n场景：以上俩项目都是基于运行时获取的env，我们只要配置正确即可。但有些项目我们只需要编译成静态文件，然后用服务启动，如果只是用之前的配置的话，最终编译输出的会是process.env.NODE_ENV，启动服务就会报错。\n拿babel编译项目举例，搜索好久才寻得结果，参照 https://github.com/Tencent/wepy/issues/835 。\na. 安装插件 babel-plugin-transform-node-env-inline\n```bash\nnpm i -D babel-plugin-transform-node-env-inline\n```\nb. .babelrc 文件配置plugins transform-node-env-inline （关键）\n```bash\n  \"plugins\": [\n    \"transform-node-env-inline\",\n    \"xxxx\"\n  ]\n```\nc. package.json 中配置不同的编译命令\n```js\n\"build\": \"NODE_ENV=production babel src -d dist\",\n\"build:dev\": \"NODE_ENV=dev babel src -d dist\",\n\"build:test\": \"NODE_ENV=test babel src -d dist\"\n```\nd. config.js里根据env加载不同配置\n```js\nconst envType = process.env.NODE_ENV\nconst config = {\n  production: { },\n  dev: {},\n  tst: {}\n}\nexport let config = config[env]\n```\n\n** 总结一句话就是首先在package.json里用NODE_ENV配置不同的打包/编译命令；然后在配置里根据process.env.NODE_ENV获取环境，输出不同的配置。（如果项目不支持运行时动态获取，可以想办法让其支持，比如安装插件 babel-plugin-transform-node-env-inline）\n** 很多框架可能自行封装过，比如nuxt框架，请参照 https://zh.nuxtjs.org/api/configuration-env\n","slug":"谈谈node_env","published":1,"updated":"2022-06-15T08:25:27.845Z","_id":"cl4e3az0u0047k4rqapyytbko","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在开发项目的时候，不可避免的就是各个环境（正式&#x2F;开发&#x2F;测试）对应不同的配置信息。我们选择在构建项目的时候根据不同的命令（NODE_ENV）让代码引用不同的配置，而不是建不同的分支或者在服务器上修改配置文件。</p>\n<span id=\"more\"></span>\n<p>说说几种类型得项目在构建的时候使用NODE_ENV区分环境的场景。<br>####<br>一、vue项目（以vue-admin框架为例）<br>a.package.json文件配置不同打包命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;node build/build.js&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;dev:build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=development node build/build.js&quot;</span></span><br></pre></td></tr></table></figure>\n<p>b.build.js最上方添加代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> || <span class=\"string\">&#x27;production&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>c.webpack.prod.conf.js文件里根据env引用不同的配置文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> == <span class=\"string\">&#x27;production&#x27;</span> ? <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config/prod.env&#x27;</span>) :  <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config/dev.build.env&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>二、pomelo项目<br>a.package.json文件配置不同打包命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=production pomelo start -e production --daemon&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:dev&quot;</span>: <span class=\"string\">&quot;NODE_ENV=dev pomelo start --daemon&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:test&quot;</span>: <span class=\"string\">&quot;NODE_ENV=test pomelo start --daemon&quot;</span>,</span><br></pre></td></tr></table></figure>\n<p>b.config.js根据env输出不同的配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">production</span>: &#123; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">tst</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Config</span>: config[env]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>三、babel项目<br>场景：以上俩项目都是基于运行时获取的env，我们只要配置正确即可。但有些项目我们只需要编译成静态文件，然后用服务启动，如果只是用之前的配置的话，最终编译输出的会是process.env.NODE_ENV，启动服务就会报错。<br>拿babel编译项目举例，搜索好久才寻得结果，参照 <a href=\"https://github.com/Tencent/wepy/issues/835\">https://github.com/Tencent/wepy/issues/835</a> 。<br>a. 安装插件 babel-plugin-transform-node-env-inline</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-plugin-transform-node-env-inline</span><br></pre></td></tr></table></figure>\n<p>b. .babelrc 文件配置plugins transform-node-env-inline （关键）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">  <span class=\"string\">&quot;transform-node-env-inline&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;xxxx&quot;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>c. package.json 中配置不同的编译命令</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=production babel src -d dist&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:dev&quot;</span>: <span class=\"string\">&quot;NODE_ENV=dev babel src -d dist&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:test&quot;</span>: <span class=\"string\">&quot;NODE_ENV=test babel src -d dist&quot;</span></span><br></pre></td></tr></table></figure>\n<p>d. config.js里根据env加载不同配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> envType = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">production</span>: &#123; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">tst</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> config = config[env]</span><br></pre></td></tr></table></figure>\n\n<p>** 总结一句话就是首先在package.json里用NODE_ENV配置不同的打包&#x2F;编译命令；然后在配置里根据process.env.NODE_ENV获取环境，输出不同的配置。（如果项目不支持运行时动态获取，可以想办法让其支持，比如安装插件 babel-plugin-transform-node-env-inline）<br>** 很多框架可能自行封装过，比如nuxt框架，请参照 <a href=\"https://zh.nuxtjs.org/api/configuration-env\">https://zh.nuxtjs.org/api/configuration-env</a></p>\n","site":{"data":{}},"excerpt":"<p>在开发项目的时候，不可避免的就是各个环境（正式&#x2F;开发&#x2F;测试）对应不同的配置信息。我们选择在构建项目的时候根据不同的命令（NODE_ENV）让代码引用不同的配置，而不是建不同的分支或者在服务器上修改配置文件。</p>","more":"<p>说说几种类型得项目在构建的时候使用NODE_ENV区分环境的场景。<br>####<br>一、vue项目（以vue-admin框架为例）<br>a.package.json文件配置不同打包命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;node build/build.js&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;dev:build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=development node build/build.js&quot;</span></span><br></pre></td></tr></table></figure>\n<p>b.build.js最上方添加代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> || <span class=\"string\">&#x27;production&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>c.webpack.prod.conf.js文件里根据env引用不同的配置文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> == <span class=\"string\">&#x27;production&#x27;</span> ? <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config/prod.env&#x27;</span>) :  <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config/dev.build.env&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>二、pomelo项目<br>a.package.json文件配置不同打包命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=production pomelo start -e production --daemon&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:dev&quot;</span>: <span class=\"string\">&quot;NODE_ENV=dev pomelo start --daemon&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:test&quot;</span>: <span class=\"string\">&quot;NODE_ENV=test pomelo start --daemon&quot;</span>,</span><br></pre></td></tr></table></figure>\n<p>b.config.js根据env输出不同的配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">production</span>: &#123; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">tst</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Config</span>: config[env]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>三、babel项目<br>场景：以上俩项目都是基于运行时获取的env，我们只要配置正确即可。但有些项目我们只需要编译成静态文件，然后用服务启动，如果只是用之前的配置的话，最终编译输出的会是process.env.NODE_ENV，启动服务就会报错。<br>拿babel编译项目举例，搜索好久才寻得结果，参照 <a href=\"https://github.com/Tencent/wepy/issues/835\">https://github.com/Tencent/wepy/issues/835</a> 。<br>a. 安装插件 babel-plugin-transform-node-env-inline</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-plugin-transform-node-env-inline</span><br></pre></td></tr></table></figure>\n<p>b. .babelrc 文件配置plugins transform-node-env-inline （关键）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">  <span class=\"string\">&quot;transform-node-env-inline&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;xxxx&quot;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>c. package.json 中配置不同的编译命令</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;NODE_ENV=production babel src -d dist&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:dev&quot;</span>: <span class=\"string\">&quot;NODE_ENV=dev babel src -d dist&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;build:test&quot;</span>: <span class=\"string\">&quot;NODE_ENV=test babel src -d dist&quot;</span></span><br></pre></td></tr></table></figure>\n<p>d. config.js里根据env加载不同配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> envType = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">production</span>: &#123; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">tst</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> config = config[env]</span><br></pre></td></tr></table></figure>\n\n<p>** 总结一句话就是首先在package.json里用NODE_ENV配置不同的打包&#x2F;编译命令；然后在配置里根据process.env.NODE_ENV获取环境，输出不同的配置。（如果项目不支持运行时动态获取，可以想办法让其支持，比如安装插件 babel-plugin-transform-node-env-inline）<br>** 很多框架可能自行封装过，比如nuxt框架，请参照 <a href=\"https://zh.nuxtjs.org/api/configuration-env\">https://zh.nuxtjs.org/api/configuration-env</a></p>"},{"title":"水滴筹笔试题","date":"2019-10-08T16:00:00.000Z","_content":"\n水滴筹笔试题，2019年，记录下来\n<!-- more -->\n\n#### 一、http请求\n一次完整的HTTP请求，期间一共需要 3 次握手。\n\n#### 二、js小数\n在js中，0.1 + 0.2 > 0.3 （0.1 + 0.2 = 0.30000004）\n\n#### 三、测试 文案的font-size是多少px（答案： 12px）\n```css\n* {\n    font-size: 12px !important;\n}\n#test {\n    font-size: 14px;\n}\ndiv{\n    font-size: 18px;\n}\n.test1 {\n    font-size: 20px;\n}\n.test2 {\n    font-size: 22px;\n}\n.test1.test2{\n    font-size: 28px;\n}\n```\n```html\n<div id='test' class='test1 test2' style=\"font-size: 17px;\">测试</div>\n```\n    \n解释：!important的优先级竟然高于内联样式。\n优先级顺序：!important > 内联样式  > id选择器样式 > 类选择器样式 > 元素选择器样式\n\n#### 四、红色区域的大小是（160px * 160px）\n```css\n.box{\n    width: 200px;\n    height: 200px;\n    padding: 20px;\n    border: 20px solid black;\n    margin: 20px;\n    background: red;\n    box-sizing: border-box;\n}\n```\n知识延伸：\n+ 标准盒模型：元素的实际占位 = width + padding + border + margin\n+ IE盒模型：元素实际占位 = width + margin （其中width包含了padding和border）\n+ 这里设置box-sizing为border-box，实际上就用了IE盒模型（也称怪异模式），其中width=200px包含了padding和border。但是border左右共40px为黑色，所以红色部分为200-40=160px；（如果去掉box-sizing属性，那么红色部分就是width加上左右padding，200+20*2=240px了）\n\n#### 五、以下代码输出结果为  8\n```js\nconsole.log(foo())\nfunction foo() {\n    return bar();\n    var bar = function() {return 5;};\n    var bar = () => 6;\n    var bar = (function() { return 7; })();\n    function bar() {\n        return 8;\n    }\n}\n```\n解析：主要知识点是变量提升和函数提升（），参照 https://www.cnblogs.com/kawask/p/6225317.html\n+ 变量提升即将变量声明提升到它所在作用域的最开始的部分\n+ 函数声明式和函数字面量式。只有函数声明才存在函数提升\n\n#### 六、控制台输出结果为  false\n```js\nlocalStorage.setItem('show', false)\nconsole.log(localStorage.show)\n```\n解析：localStorage可以直接通过.的方式取值，同localStorage.getItem\n\n#### 七、控制台输出结果为     0 3 2 1\n```js\nsetTimeout(function(){\n    console.log('1')\n}, 0)\nnew Promise(function(resolve, reject) {\n    resolve(2)\n    console.log(0)\n}).then(console.log)\nconsole.log(3)\n```\n\n#### 八、控制台输出结果为     5\n```js\nvar a = 5;\nfunction todo() {\n    var a = 9;\n    return function() {\n        a = 7;\n    }\n}\ntodo()();\nconsole.log(a)\n```\n解析：因为todo函数内部定义的变量a是局部变量，外边访问不到\n\n#### 九、控制台输出结果为 [\"S\", \"h\", \"u\", \"i\", \"d\", \"i\"]    \n```js\n(function(){\n    var g = 'hello Shuidi';\n    var t = [].filter.call(g, function(el, index){\n       return index > 5\n    });\n    console.log(t);\n}())\n```\n解析： 字符串强制转成数组 ？\n\n#### 十、代码题：点击li元素的时候输出其索引值 0,1,2\n```html\n<ul id=\"ul\">\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>\n```\n```js\n// 答案\nvar ul = document.getElementById('ul');\nvar lis = ul.childNodes;\n// 筛选出li\nlis = [].filter.call(lis, function(item) {\n    return item.nodeType == 1 && item.nodeName == 'LI';\n});\nlis.map(function(item, index) {\n    item.addEventListener('click', function() {\n        console.log(index);\n    }, false);\n});\n```\n\n#### 十一、代码题：实现get函数\n```js\n// 实现效果\nlet obj = {foo: {bar: {name: 'biz'}}};\nget(obj, 'foo.bar.name'); // 输出 biz\nobj = {};\nget(obj, 'foo.bar.name'); // 输出 undefined\nget(obj, 'foo.bar.name', 'biz'); // 输出 biz\n```\n```js\n// 代码\nfunction get(obj, path, def){\n    if(typeof path == 'string') {\n        path = path.split('.');\n    }\n    let attr = path.splice(0, 1);\n    obj = obj[attr[0]];\n    if(path.length && obj) {\n        return get(obj, path, def);\n    }\n    return obj || def;\n}\n```\n\n#### 十二、代码题：请解码被多次编码的 URL\n例子： https%25253A%25252F%25252Fwww.baidu.com%25252F%25253Ftest%25253D1\n条件： 被编码次数未知\n结果： https://www.baidu.com/?test=1\n```js\nfunction dec(url) {\n    let temp = decodeURIComponent(url);\n    return temp == url ? temp : dec(temp);\n}\n```\n\n#### 十三、代码题\n下面的数据结构中，不同层级的key可能会相同，实现一个方法，调用时更新上面数组的key值，是所有的key对应的值变更为新的随机数，并保证更新前相同的key更新为新值后也依然相同即可\n```js\nvar arr = [{\n    key: 0.123123,\n    child: {\n        key: 0.3213313,\n        child: {\n            key: 0.123123,\n            child: {\n                key: 0.723793\n            }\n        }\n    }\n},{\n    key: 0.788798,\n    child: {\n        key: 0.312308,\n        child: {\n            key: 0.123123,\n            child: {\n                key: 0.866668\n            }\n        }\n    }\n}];\n```\n \n```js\n// 答案\nfunction updateKey(arr) {\n    let temp = {};\n    var updateObj = function(obj) {\n        let key = obj['key'];\n        temp[key] = temp[key] || Math.random();\n        obj['key'] = temp[key];\n        if(obj['child']) {\n            updateObj(obj['child']);\n        }\n    }\n    for(let i = 0; i < arr.length; i++) {\n        updateObj(arr[i]);\n    }\n}\n```\n","source":"_posts/水滴筹笔试题.md","raw":"---\ntitle: 水滴筹笔试题\ndate: 2019-10-09\ncategories: 前端\ntags: \n    - 前端\n    - JS\n#description: \n---\n\n水滴筹笔试题，2019年，记录下来\n<!-- more -->\n\n#### 一、http请求\n一次完整的HTTP请求，期间一共需要 3 次握手。\n\n#### 二、js小数\n在js中，0.1 + 0.2 > 0.3 （0.1 + 0.2 = 0.30000004）\n\n#### 三、测试 文案的font-size是多少px（答案： 12px）\n```css\n* {\n    font-size: 12px !important;\n}\n#test {\n    font-size: 14px;\n}\ndiv{\n    font-size: 18px;\n}\n.test1 {\n    font-size: 20px;\n}\n.test2 {\n    font-size: 22px;\n}\n.test1.test2{\n    font-size: 28px;\n}\n```\n```html\n<div id='test' class='test1 test2' style=\"font-size: 17px;\">测试</div>\n```\n    \n解释：!important的优先级竟然高于内联样式。\n优先级顺序：!important > 内联样式  > id选择器样式 > 类选择器样式 > 元素选择器样式\n\n#### 四、红色区域的大小是（160px * 160px）\n```css\n.box{\n    width: 200px;\n    height: 200px;\n    padding: 20px;\n    border: 20px solid black;\n    margin: 20px;\n    background: red;\n    box-sizing: border-box;\n}\n```\n知识延伸：\n+ 标准盒模型：元素的实际占位 = width + padding + border + margin\n+ IE盒模型：元素实际占位 = width + margin （其中width包含了padding和border）\n+ 这里设置box-sizing为border-box，实际上就用了IE盒模型（也称怪异模式），其中width=200px包含了padding和border。但是border左右共40px为黑色，所以红色部分为200-40=160px；（如果去掉box-sizing属性，那么红色部分就是width加上左右padding，200+20*2=240px了）\n\n#### 五、以下代码输出结果为  8\n```js\nconsole.log(foo())\nfunction foo() {\n    return bar();\n    var bar = function() {return 5;};\n    var bar = () => 6;\n    var bar = (function() { return 7; })();\n    function bar() {\n        return 8;\n    }\n}\n```\n解析：主要知识点是变量提升和函数提升（），参照 https://www.cnblogs.com/kawask/p/6225317.html\n+ 变量提升即将变量声明提升到它所在作用域的最开始的部分\n+ 函数声明式和函数字面量式。只有函数声明才存在函数提升\n\n#### 六、控制台输出结果为  false\n```js\nlocalStorage.setItem('show', false)\nconsole.log(localStorage.show)\n```\n解析：localStorage可以直接通过.的方式取值，同localStorage.getItem\n\n#### 七、控制台输出结果为     0 3 2 1\n```js\nsetTimeout(function(){\n    console.log('1')\n}, 0)\nnew Promise(function(resolve, reject) {\n    resolve(2)\n    console.log(0)\n}).then(console.log)\nconsole.log(3)\n```\n\n#### 八、控制台输出结果为     5\n```js\nvar a = 5;\nfunction todo() {\n    var a = 9;\n    return function() {\n        a = 7;\n    }\n}\ntodo()();\nconsole.log(a)\n```\n解析：因为todo函数内部定义的变量a是局部变量，外边访问不到\n\n#### 九、控制台输出结果为 [\"S\", \"h\", \"u\", \"i\", \"d\", \"i\"]    \n```js\n(function(){\n    var g = 'hello Shuidi';\n    var t = [].filter.call(g, function(el, index){\n       return index > 5\n    });\n    console.log(t);\n}())\n```\n解析： 字符串强制转成数组 ？\n\n#### 十、代码题：点击li元素的时候输出其索引值 0,1,2\n```html\n<ul id=\"ul\">\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>\n```\n```js\n// 答案\nvar ul = document.getElementById('ul');\nvar lis = ul.childNodes;\n// 筛选出li\nlis = [].filter.call(lis, function(item) {\n    return item.nodeType == 1 && item.nodeName == 'LI';\n});\nlis.map(function(item, index) {\n    item.addEventListener('click', function() {\n        console.log(index);\n    }, false);\n});\n```\n\n#### 十一、代码题：实现get函数\n```js\n// 实现效果\nlet obj = {foo: {bar: {name: 'biz'}}};\nget(obj, 'foo.bar.name'); // 输出 biz\nobj = {};\nget(obj, 'foo.bar.name'); // 输出 undefined\nget(obj, 'foo.bar.name', 'biz'); // 输出 biz\n```\n```js\n// 代码\nfunction get(obj, path, def){\n    if(typeof path == 'string') {\n        path = path.split('.');\n    }\n    let attr = path.splice(0, 1);\n    obj = obj[attr[0]];\n    if(path.length && obj) {\n        return get(obj, path, def);\n    }\n    return obj || def;\n}\n```\n\n#### 十二、代码题：请解码被多次编码的 URL\n例子： https%25253A%25252F%25252Fwww.baidu.com%25252F%25253Ftest%25253D1\n条件： 被编码次数未知\n结果： https://www.baidu.com/?test=1\n```js\nfunction dec(url) {\n    let temp = decodeURIComponent(url);\n    return temp == url ? temp : dec(temp);\n}\n```\n\n#### 十三、代码题\n下面的数据结构中，不同层级的key可能会相同，实现一个方法，调用时更新上面数组的key值，是所有的key对应的值变更为新的随机数，并保证更新前相同的key更新为新值后也依然相同即可\n```js\nvar arr = [{\n    key: 0.123123,\n    child: {\n        key: 0.3213313,\n        child: {\n            key: 0.123123,\n            child: {\n                key: 0.723793\n            }\n        }\n    }\n},{\n    key: 0.788798,\n    child: {\n        key: 0.312308,\n        child: {\n            key: 0.123123,\n            child: {\n                key: 0.866668\n            }\n        }\n    }\n}];\n```\n \n```js\n// 答案\nfunction updateKey(arr) {\n    let temp = {};\n    var updateObj = function(obj) {\n        let key = obj['key'];\n        temp[key] = temp[key] || Math.random();\n        obj['key'] = temp[key];\n        if(obj['child']) {\n            updateObj(obj['child']);\n        }\n    }\n    for(let i = 0; i < arr.length; i++) {\n        updateObj(arr[i]);\n    }\n}\n```\n","slug":"水滴筹笔试题","published":1,"updated":"2022-06-15T08:27:29.810Z","_id":"cl4e3az0u004ak4rq0py6lia2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>水滴筹笔试题，2019年，记录下来</p>\n<span id=\"more\"></span>\n\n<h4 id=\"一、http请求\"><a href=\"#一、http请求\" class=\"headerlink\" title=\"一、http请求\"></a>一、http请求</h4><p>一次完整的HTTP请求，期间一共需要 3 次握手。</p>\n<h4 id=\"二、js小数\"><a href=\"#二、js小数\" class=\"headerlink\" title=\"二、js小数\"></a>二、js小数</h4><p>在js中，0.1 + 0.2 &gt; 0.3 （0.1 + 0.2 &#x3D; 0.30000004）</p>\n<h4 id=\"三、测试-文案的font-size是多少px（答案：-12px）\"><a href=\"#三、测试-文案的font-size是多少px（答案：-12px）\" class=\"headerlink\" title=\"三、测试 文案的font-size是多少px（答案： 12px）\"></a>三、测试 文案的font-size是多少px（答案： 12px）</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#test</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.test2</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">28px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;test&#x27;</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;test1 test2&#x27;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 17px;&quot;</span>&gt;</span>测试<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解释：!important的优先级竟然高于内联样式。<br>优先级顺序：!important &gt; 内联样式  &gt; id选择器样式 &gt; 类选择器样式 &gt; 元素选择器样式</p>\n<h4 id=\"四、红色区域的大小是（160px-160px）\"><a href=\"#四、红色区域的大小是（160px-160px）\" class=\"headerlink\" title=\"四、红色区域的大小是（160px * 160px）\"></a>四、红色区域的大小是（160px * 160px）</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid black;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>知识延伸：</p>\n<ul>\n<li>标准盒模型：元素的实际占位 &#x3D; width + padding + border + margin</li>\n<li>IE盒模型：元素实际占位 &#x3D; width + margin （其中width包含了padding和border）</li>\n<li>这里设置box-sizing为border-box，实际上就用了IE盒模型（也称怪异模式），其中width&#x3D;200px包含了padding和border。但是border左右共40px为黑色，所以红色部分为200-40&#x3D;160px；（如果去掉box-sizing属性，那么红色部分就是width加上左右padding，200+20*2&#x3D;240px了）</li>\n</ul>\n<h4 id=\"五、以下代码输出结果为-8\"><a href=\"#五、以下代码输出结果为-8\" class=\"headerlink\" title=\"五、以下代码输出结果为  8\"></a>五、以下代码输出结果为  8</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">foo</span>())</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">bar</span>();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bar = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"number\">5</span>;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"title function_\">bar</span> = (<span class=\"params\"></span>) =&gt; <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bar = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">7</span>; &#125;)();</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>解析：主要知识点是变量提升和函数提升（），参照 <a href=\"https://www.cnblogs.com/kawask/p/6225317.html\">https://www.cnblogs.com/kawask/p/6225317.html</a></p>\n<ul>\n<li>变量提升即将变量声明提升到它所在作用域的最开始的部分</li>\n<li>函数声明式和函数字面量式。只有函数声明才存在函数提升</li>\n</ul>\n<h4 id=\"六、控制台输出结果为-false\"><a href=\"#六、控制台输出结果为-false\" class=\"headerlink\" title=\"六、控制台输出结果为  false\"></a>六、控制台输出结果为  false</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;show&#x27;</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"property\">show</span>)</span><br></pre></td></tr></table></figure>\n<p>解析：localStorage可以直接通过.的方式取值，同localStorage.getItem</p>\n<h4 id=\"七、控制台输出结果为-0-3-2-1\"><a href=\"#七、控制台输出结果为-0-3-2-1\" class=\"headerlink\" title=\"七、控制台输出结果为     0 3 2 1\"></a>七、控制台输出结果为     0 3 2 1</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"variable language_\">console</span>.<span class=\"property\">log</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"八、控制台输出结果为-5\"><a href=\"#八、控制台输出结果为-5\" class=\"headerlink\" title=\"八、控制台输出结果为     5\"></a>八、控制台输出结果为     5</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">todo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        a = <span class=\"number\">7</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">todo</span>()();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br></pre></td></tr></table></figure>\n<p>解析：因为todo函数内部定义的变量a是局部变量，外边访问不到</p>\n<h4 id=\"九、控制台输出结果为-“S”-“h”-“u”-“i”-“d”-“i”\"><a href=\"#九、控制台输出结果为-“S”-“h”-“u”-“i”-“d”-“i”\" class=\"headerlink\" title=\"九、控制台输出结果为 [“S”, “h”, “u”, “i”, “d”, “i”]\"></a>九、控制台输出结果为 [“S”, “h”, “u”, “i”, “d”, “i”]</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> g = <span class=\"string\">&#x27;hello Shuidi&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t = [].<span class=\"property\">filter</span>.<span class=\"title function_\">call</span>(g, <span class=\"keyword\">function</span>(<span class=\"params\">el, index</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> index &gt; <span class=\"number\">5</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);</span><br><span class=\"line\">&#125;())</span><br></pre></td></tr></table></figure>\n<p>解析： 字符串强制转成数组 ？</p>\n<h4 id=\"十、代码题：点击li元素的时候输出其索引值-0-1-2\"><a href=\"#十、代码题：点击li元素的时候输出其索引值-0-1-2\" class=\"headerlink\" title=\"十、代码题：点击li元素的时候输出其索引值 0,1,2\"></a>十、代码题：点击li元素的时候输出其索引值 0,1,2</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第一条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第二条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第三条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 答案</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ul = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> lis = ul.<span class=\"property\">childNodes</span>;</span><br><span class=\"line\"><span class=\"comment\">// 筛选出li</span></span><br><span class=\"line\">lis = [].<span class=\"property\">filter</span>.<span class=\"title function_\">call</span>(lis, <span class=\"keyword\">function</span>(<span class=\"params\">item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.<span class=\"property\">nodeType</span> == <span class=\"number\">1</span> &amp;&amp; item.<span class=\"property\">nodeName</span> == <span class=\"string\">&#x27;LI&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">lis.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    item.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index);</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十一、代码题：实现get函数\"><a href=\"#十一、代码题：实现get函数\" class=\"headerlink\" title=\"十一、代码题：实现get函数\"></a>十一、代码题：实现get函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 实现效果</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">foo</span>: &#123;<span class=\"attr\">bar</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;biz&#x27;</span>&#125;&#125;&#125;;</span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>); <span class=\"comment\">// 输出 biz</span></span><br><span class=\"line\">obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>); <span class=\"comment\">// 输出 undefined</span></span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>, <span class=\"string\">&#x27;biz&#x27;</span>); <span class=\"comment\">// 输出 biz</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 代码</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">get</span>(<span class=\"params\">obj, path, def</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> path == <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        path = path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> attr = path.<span class=\"title function_\">splice</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    obj = obj[attr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(path.<span class=\"property\">length</span> &amp;&amp; obj) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">get</span>(obj, path, def);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj || def;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十二、代码题：请解码被多次编码的-URL\"><a href=\"#十二、代码题：请解码被多次编码的-URL\" class=\"headerlink\" title=\"十二、代码题：请解码被多次编码的 URL\"></a>十二、代码题：请解码被多次编码的 URL</h4><p>例子： https%25253A%25252F%25252F<a href=\"http://www.baidu.com%25252F%25253Ftest%25253D1\">www.baidu.com%25252F%25253Ftest%25253D1</a><br>条件： 被编码次数未知<br>结果： <a href=\"https://www.baidu.com/?test=1\">https://www.baidu.com/?test=1</a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dec</span>(<span class=\"params\">url</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = <span class=\"built_in\">decodeURIComponent</span>(url);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp == url ? temp : <span class=\"title function_\">dec</span>(temp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十三、代码题\"><a href=\"#十三、代码题\" class=\"headerlink\" title=\"十三、代码题\"></a>十三、代码题</h4><p>下面的数据结构中，不同层级的key可能会相同，实现一个方法，调用时更新上面数组的key值，是所有的key对应的值变更为新的随机数，并保证更新前相同的key更新为新值后也依然相同即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [&#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">    <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">key</span>: <span class=\"number\">0.3213313</span>,</span><br><span class=\"line\">        <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">            <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">key</span>: <span class=\"number\">0.723793</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"number\">0.788798</span>,</span><br><span class=\"line\">    <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">key</span>: <span class=\"number\">0.312308</span>,</span><br><span class=\"line\">        <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">            <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">key</span>: <span class=\"number\">0.866668</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;];</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 答案</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">updateKey</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> updateObj = <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> key = obj[<span class=\"string\">&#x27;key&#x27;</span>];</span><br><span class=\"line\">        temp[key] = temp[key] || <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>();</span><br><span class=\"line\">        obj[<span class=\"string\">&#x27;key&#x27;</span>] = temp[key];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj[<span class=\"string\">&#x27;child&#x27;</span>]) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">updateObj</span>(obj[<span class=\"string\">&#x27;child&#x27;</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">updateObj</span>(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>水滴筹笔试题，2019年，记录下来</p>","more":"<h4 id=\"一、http请求\"><a href=\"#一、http请求\" class=\"headerlink\" title=\"一、http请求\"></a>一、http请求</h4><p>一次完整的HTTP请求，期间一共需要 3 次握手。</p>\n<h4 id=\"二、js小数\"><a href=\"#二、js小数\" class=\"headerlink\" title=\"二、js小数\"></a>二、js小数</h4><p>在js中，0.1 + 0.2 &gt; 0.3 （0.1 + 0.2 &#x3D; 0.30000004）</p>\n<h4 id=\"三、测试-文案的font-size是多少px（答案：-12px）\"><a href=\"#三、测试-文案的font-size是多少px（答案：-12px）\" class=\"headerlink\" title=\"三、测试 文案的font-size是多少px（答案： 12px）\"></a>三、测试 文案的font-size是多少px（答案： 12px）</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#test</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test1</span><span class=\"selector-class\">.test2</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">28px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;test&#x27;</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;test1 test2&#x27;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 17px;&quot;</span>&gt;</span>测试<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解释：!important的优先级竟然高于内联样式。<br>优先级顺序：!important &gt; 内联样式  &gt; id选择器样式 &gt; 类选择器样式 &gt; 元素选择器样式</p>\n<h4 id=\"四、红色区域的大小是（160px-160px）\"><a href=\"#四、红色区域的大小是（160px-160px）\" class=\"headerlink\" title=\"四、红色区域的大小是（160px * 160px）\"></a>四、红色区域的大小是（160px * 160px）</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid black;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>知识延伸：</p>\n<ul>\n<li>标准盒模型：元素的实际占位 &#x3D; width + padding + border + margin</li>\n<li>IE盒模型：元素实际占位 &#x3D; width + margin （其中width包含了padding和border）</li>\n<li>这里设置box-sizing为border-box，实际上就用了IE盒模型（也称怪异模式），其中width&#x3D;200px包含了padding和border。但是border左右共40px为黑色，所以红色部分为200-40&#x3D;160px；（如果去掉box-sizing属性，那么红色部分就是width加上左右padding，200+20*2&#x3D;240px了）</li>\n</ul>\n<h4 id=\"五、以下代码输出结果为-8\"><a href=\"#五、以下代码输出结果为-8\" class=\"headerlink\" title=\"五、以下代码输出结果为  8\"></a>五、以下代码输出结果为  8</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">foo</span>())</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">bar</span>();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bar = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"number\">5</span>;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"title function_\">bar</span> = (<span class=\"params\"></span>) =&gt; <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bar = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">7</span>; &#125;)();</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>解析：主要知识点是变量提升和函数提升（），参照 <a href=\"https://www.cnblogs.com/kawask/p/6225317.html\">https://www.cnblogs.com/kawask/p/6225317.html</a></p>\n<ul>\n<li>变量提升即将变量声明提升到它所在作用域的最开始的部分</li>\n<li>函数声明式和函数字面量式。只有函数声明才存在函数提升</li>\n</ul>\n<h4 id=\"六、控制台输出结果为-false\"><a href=\"#六、控制台输出结果为-false\" class=\"headerlink\" title=\"六、控制台输出结果为  false\"></a>六、控制台输出结果为  false</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;show&#x27;</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"property\">show</span>)</span><br></pre></td></tr></table></figure>\n<p>解析：localStorage可以直接通过.的方式取值，同localStorage.getItem</p>\n<h4 id=\"七、控制台输出结果为-0-3-2-1\"><a href=\"#七、控制台输出结果为-0-3-2-1\" class=\"headerlink\" title=\"七、控制台输出结果为     0 3 2 1\"></a>七、控制台输出结果为     0 3 2 1</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"variable language_\">console</span>.<span class=\"property\">log</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"八、控制台输出结果为-5\"><a href=\"#八、控制台输出结果为-5\" class=\"headerlink\" title=\"八、控制台输出结果为     5\"></a>八、控制台输出结果为     5</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">todo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        a = <span class=\"number\">7</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">todo</span>()();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br></pre></td></tr></table></figure>\n<p>解析：因为todo函数内部定义的变量a是局部变量，外边访问不到</p>\n<h4 id=\"九、控制台输出结果为-“S”-“h”-“u”-“i”-“d”-“i”\"><a href=\"#九、控制台输出结果为-“S”-“h”-“u”-“i”-“d”-“i”\" class=\"headerlink\" title=\"九、控制台输出结果为 [“S”, “h”, “u”, “i”, “d”, “i”]\"></a>九、控制台输出结果为 [“S”, “h”, “u”, “i”, “d”, “i”]</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> g = <span class=\"string\">&#x27;hello Shuidi&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t = [].<span class=\"property\">filter</span>.<span class=\"title function_\">call</span>(g, <span class=\"keyword\">function</span>(<span class=\"params\">el, index</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> index &gt; <span class=\"number\">5</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t);</span><br><span class=\"line\">&#125;())</span><br></pre></td></tr></table></figure>\n<p>解析： 字符串强制转成数组 ？</p>\n<h4 id=\"十、代码题：点击li元素的时候输出其索引值-0-1-2\"><a href=\"#十、代码题：点击li元素的时候输出其索引值-0-1-2\" class=\"headerlink\" title=\"十、代码题：点击li元素的时候输出其索引值 0,1,2\"></a>十、代码题：点击li元素的时候输出其索引值 0,1,2</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第一条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第二条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>这是第三条<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 答案</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ul = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> lis = ul.<span class=\"property\">childNodes</span>;</span><br><span class=\"line\"><span class=\"comment\">// 筛选出li</span></span><br><span class=\"line\">lis = [].<span class=\"property\">filter</span>.<span class=\"title function_\">call</span>(lis, <span class=\"keyword\">function</span>(<span class=\"params\">item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.<span class=\"property\">nodeType</span> == <span class=\"number\">1</span> &amp;&amp; item.<span class=\"property\">nodeName</span> == <span class=\"string\">&#x27;LI&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">lis.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    item.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index);</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十一、代码题：实现get函数\"><a href=\"#十一、代码题：实现get函数\" class=\"headerlink\" title=\"十一、代码题：实现get函数\"></a>十一、代码题：实现get函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 实现效果</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">foo</span>: &#123;<span class=\"attr\">bar</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;biz&#x27;</span>&#125;&#125;&#125;;</span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>); <span class=\"comment\">// 输出 biz</span></span><br><span class=\"line\">obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>); <span class=\"comment\">// 输出 undefined</span></span><br><span class=\"line\"><span class=\"title function_\">get</span>(obj, <span class=\"string\">&#x27;foo.bar.name&#x27;</span>, <span class=\"string\">&#x27;biz&#x27;</span>); <span class=\"comment\">// 输出 biz</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 代码</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">get</span>(<span class=\"params\">obj, path, def</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> path == <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        path = path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> attr = path.<span class=\"title function_\">splice</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    obj = obj[attr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(path.<span class=\"property\">length</span> &amp;&amp; obj) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">get</span>(obj, path, def);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj || def;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十二、代码题：请解码被多次编码的-URL\"><a href=\"#十二、代码题：请解码被多次编码的-URL\" class=\"headerlink\" title=\"十二、代码题：请解码被多次编码的 URL\"></a>十二、代码题：请解码被多次编码的 URL</h4><p>例子： https%25253A%25252F%25252F<a href=\"http://www.baidu.com%25252F%25253Ftest%25253D1\">www.baidu.com%25252F%25253Ftest%25253D1</a><br>条件： 被编码次数未知<br>结果： <a href=\"https://www.baidu.com/?test=1\">https://www.baidu.com/?test=1</a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dec</span>(<span class=\"params\">url</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = <span class=\"built_in\">decodeURIComponent</span>(url);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp == url ? temp : <span class=\"title function_\">dec</span>(temp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"十三、代码题\"><a href=\"#十三、代码题\" class=\"headerlink\" title=\"十三、代码题\"></a>十三、代码题</h4><p>下面的数据结构中，不同层级的key可能会相同，实现一个方法，调用时更新上面数组的key值，是所有的key对应的值变更为新的随机数，并保证更新前相同的key更新为新值后也依然相同即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [&#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">    <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">key</span>: <span class=\"number\">0.3213313</span>,</span><br><span class=\"line\">        <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">            <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">key</span>: <span class=\"number\">0.723793</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"number\">0.788798</span>,</span><br><span class=\"line\">    <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">key</span>: <span class=\"number\">0.312308</span>,</span><br><span class=\"line\">        <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"number\">0.123123</span>,</span><br><span class=\"line\">            <span class=\"attr\">child</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">key</span>: <span class=\"number\">0.866668</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;];</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 答案</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">updateKey</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> updateObj = <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> key = obj[<span class=\"string\">&#x27;key&#x27;</span>];</span><br><span class=\"line\">        temp[key] = temp[key] || <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>();</span><br><span class=\"line\">        obj[<span class=\"string\">&#x27;key&#x27;</span>] = temp[key];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj[<span class=\"string\">&#x27;child&#x27;</span>]) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">updateObj</span>(obj[<span class=\"string\">&#x27;child&#x27;</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">updateObj</span>(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"浅谈js中对象的赋值、深拷贝、浅拷贝","date":"2018-10-07T16:00:00.000Z","_content":"\n在js中，万物皆对象...\n<!-- more -->\n\n所以日常编码中会经常跟对象打交道，一个比较常用的案例就是对象的拷贝，下面就遇到的一些拷贝问题做简单解析，随时补充。\n\n## 一、基本数据类型 的拷贝\n基本数据类型（Number,String,Boolean,Undefined,Null）的拷贝就很简单了，直接用 = 就行，无论你什么姿势，都OK。\n```js\n// Number\na = 1.1;b = a;b = 2; console.log(a,b)\n// String\na = 'hello';b = a;b = 3; console.log(a,b)\n// Boolean\na = false;b = a;b = 'sss'; console.log(a,b)\n// Undefined\na = undefined;b = a;b = false; console.log(a,b)\n// Null\na = null;b = a;b = undefined; console.log(a,b)\n```\n经过实践我们会发现，无论如何修改b的值，a还是一动不动，保持初心。\n\n## 二、复杂数据类型（object） 的拷贝\n常用的复杂数据类型包括：{} 、[] 、function(){} 、Date 、RegExp 、null（这个比较特殊）等\n\n#### 1、我们依然用一的简单赋值（=）来进行一遍操作（赋值）\n```js\n// {}\na = {name: 'abc'};b = a;b.name = 'sss'; console.log(a,b)\n// []\na = ['a','b','c'];b = a;b[1] = 'd'; console.log(a,b)\n// function\na = function(){ alert('aaa'); };b = a;b = function(){ alert('bbb'); }; console.log(a.toString(),b.toString())\n// Date\na = new Date('2018-10-11 00:00:00');b = a;b = new Date('1970-01-01 00:00:00');console.log(a,b)\n// RegExp\na = new RegExp('abc');b = a;b = new RegExp('aaa'); console.log(a,b)\n```\n经过实践我们会发现：\n1、当类型为{}、[]的时候，改变b的值，a也会跟着一起变化。\n2、当类型为Date、function、RegExp的时候，a保持不变。\n总结：\n我们发现{}或者[]时，简单的赋值操作并不能实现它们的拷贝，只是改了b的指向，使a和b都指向同一个引用，随意改变一个，都会影响另外一个的值。\n\n#### 2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）\n```js\n// Object.assign\na = {name: 'aaa'};b = Object.assign({}, a);b.name = 'bbb';  console.log(a,b)\na = [1,2,3];b = Object.assign([], a);b[1] = 4;  console.log(a,b)\n// for in\nvar copy = function(a) {\n var res = a.constructor();\n for(var key in a) {\n  if(a.hasOwnProperty(key)) {\n    res[key] = a[key];\n  }\n }\n return res;\n}\na = {name: 'aaa'};b = copy(a);b.name = 'bbb';  console.log(a,b)\na = [1,2,3];b = copy(a);b[1] = 4;  console.log(a,b)\n```\n我们惊奇的发现，貌似这俩方法挺好使，不禁心中暗自惊喜。但是如果我们进一步测试，把a改的更复杂点。\na = {name:'aaa',people:{name: 'abc'}};b = Object.assign({}, a);b.people.name = 'def';  console.log(a,b)\na = {name:'aaa',people:{name: 'abc'}};b = copy(a);b.people.name = 'def';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = Object.assign([], a);b[2].name = 'bbb';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = copy(a);b[2].name = 'bbb';  console.log(a,b)\n哇喔，这样就嗝屁了。\n\n#### 3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）\n```js\nvar deepCopy = function(a) {\n  return JSON.parse(JSON.stringify(a));\n}\na = {name:'aaa',people:{name: 'abc'}};b = deepCopy(a);b.people.name = 'def';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = deepCopy(a);b[2].name = 'bbb';  console.log(a,b)\n```\n酱紫试验了下，貌似还不错，但仔细研究就会发现：\n1.上述的方法会忽略值为function以及undefined的字段，而且对date类型的支持也不太友好\na = {name:'aaa',fun:function(){console.log('fun');},nn: undefined};b = deepCopy(a); console.log(a.fun,b.fun) // b.fun会输出undefined,并且b.nn也会不存在\n2.上述方法只能克隆原始对象自身的值，不能克隆它继承的值\nfunction Person (name) {\n    this.name = name\n}\nvar a = new Person('王二');\nvar b = deepCopy(a);\na.constructor == Person; // true\nb.constructor == Object; // true\n\n#### 4、for in实现比较完美的深拷贝方法（深拷贝，完美）\nfunction realCopy(obj) {\n  // 简单数据类型或者null直接return obj\n  if (obj == null || typeof (obj) != 'object') { return obj; }\n\n  var type = obj.constructor;\n  // Date或RegExp也直接return对应值\n  if(type == Date) { return new Date(obj); }\n  if(type == RegExp) { return new RegExp(obj); }\n\n  var temp = obj.constructor();\n  for (var key in obj) {\n    // 不遍历其原型链上的属性\n    if (obj.hasOwnProperty(key)) {\n      // 注意这里的递归调用\n      temp[key] = realCopy(obj[key]);\n    }\n  }\n  return temp;\n}\n至此，方法4算是比较完美的一个深拷贝方案了。","source":"_posts/浅谈js中对象的赋值、深拷贝、浅拷贝.md","raw":"---\ntitle: 浅谈js中对象的赋值、深拷贝、浅拷贝\ndate: 2018-10-08\ncategories: JS\ntags: \n    - JS\n#description: \n---\n\n在js中，万物皆对象...\n<!-- more -->\n\n所以日常编码中会经常跟对象打交道，一个比较常用的案例就是对象的拷贝，下面就遇到的一些拷贝问题做简单解析，随时补充。\n\n## 一、基本数据类型 的拷贝\n基本数据类型（Number,String,Boolean,Undefined,Null）的拷贝就很简单了，直接用 = 就行，无论你什么姿势，都OK。\n```js\n// Number\na = 1.1;b = a;b = 2; console.log(a,b)\n// String\na = 'hello';b = a;b = 3; console.log(a,b)\n// Boolean\na = false;b = a;b = 'sss'; console.log(a,b)\n// Undefined\na = undefined;b = a;b = false; console.log(a,b)\n// Null\na = null;b = a;b = undefined; console.log(a,b)\n```\n经过实践我们会发现，无论如何修改b的值，a还是一动不动，保持初心。\n\n## 二、复杂数据类型（object） 的拷贝\n常用的复杂数据类型包括：{} 、[] 、function(){} 、Date 、RegExp 、null（这个比较特殊）等\n\n#### 1、我们依然用一的简单赋值（=）来进行一遍操作（赋值）\n```js\n// {}\na = {name: 'abc'};b = a;b.name = 'sss'; console.log(a,b)\n// []\na = ['a','b','c'];b = a;b[1] = 'd'; console.log(a,b)\n// function\na = function(){ alert('aaa'); };b = a;b = function(){ alert('bbb'); }; console.log(a.toString(),b.toString())\n// Date\na = new Date('2018-10-11 00:00:00');b = a;b = new Date('1970-01-01 00:00:00');console.log(a,b)\n// RegExp\na = new RegExp('abc');b = a;b = new RegExp('aaa'); console.log(a,b)\n```\n经过实践我们会发现：\n1、当类型为{}、[]的时候，改变b的值，a也会跟着一起变化。\n2、当类型为Date、function、RegExp的时候，a保持不变。\n总结：\n我们发现{}或者[]时，简单的赋值操作并不能实现它们的拷贝，只是改了b的指向，使a和b都指向同一个引用，随意改变一个，都会影响另外一个的值。\n\n#### 2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）\n```js\n// Object.assign\na = {name: 'aaa'};b = Object.assign({}, a);b.name = 'bbb';  console.log(a,b)\na = [1,2,3];b = Object.assign([], a);b[1] = 4;  console.log(a,b)\n// for in\nvar copy = function(a) {\n var res = a.constructor();\n for(var key in a) {\n  if(a.hasOwnProperty(key)) {\n    res[key] = a[key];\n  }\n }\n return res;\n}\na = {name: 'aaa'};b = copy(a);b.name = 'bbb';  console.log(a,b)\na = [1,2,3];b = copy(a);b[1] = 4;  console.log(a,b)\n```\n我们惊奇的发现，貌似这俩方法挺好使，不禁心中暗自惊喜。但是如果我们进一步测试，把a改的更复杂点。\na = {name:'aaa',people:{name: 'abc'}};b = Object.assign({}, a);b.people.name = 'def';  console.log(a,b)\na = {name:'aaa',people:{name: 'abc'}};b = copy(a);b.people.name = 'def';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = Object.assign([], a);b[2].name = 'bbb';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = copy(a);b[2].name = 'bbb';  console.log(a,b)\n哇喔，这样就嗝屁了。\n\n#### 3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）\n```js\nvar deepCopy = function(a) {\n  return JSON.parse(JSON.stringify(a));\n}\na = {name:'aaa',people:{name: 'abc'}};b = deepCopy(a);b.people.name = 'def';  console.log(a,b)\na = [1,2, {name: 'aaa'}];b = deepCopy(a);b[2].name = 'bbb';  console.log(a,b)\n```\n酱紫试验了下，貌似还不错，但仔细研究就会发现：\n1.上述的方法会忽略值为function以及undefined的字段，而且对date类型的支持也不太友好\na = {name:'aaa',fun:function(){console.log('fun');},nn: undefined};b = deepCopy(a); console.log(a.fun,b.fun) // b.fun会输出undefined,并且b.nn也会不存在\n2.上述方法只能克隆原始对象自身的值，不能克隆它继承的值\nfunction Person (name) {\n    this.name = name\n}\nvar a = new Person('王二');\nvar b = deepCopy(a);\na.constructor == Person; // true\nb.constructor == Object; // true\n\n#### 4、for in实现比较完美的深拷贝方法（深拷贝，完美）\nfunction realCopy(obj) {\n  // 简单数据类型或者null直接return obj\n  if (obj == null || typeof (obj) != 'object') { return obj; }\n\n  var type = obj.constructor;\n  // Date或RegExp也直接return对应值\n  if(type == Date) { return new Date(obj); }\n  if(type == RegExp) { return new RegExp(obj); }\n\n  var temp = obj.constructor();\n  for (var key in obj) {\n    // 不遍历其原型链上的属性\n    if (obj.hasOwnProperty(key)) {\n      // 注意这里的递归调用\n      temp[key] = realCopy(obj[key]);\n    }\n  }\n  return temp;\n}\n至此，方法4算是比较完美的一个深拷贝方案了。","slug":"浅谈js中对象的赋值、深拷贝、浅拷贝","published":1,"updated":"2022-06-15T08:24:50.558Z","_id":"cl4e3az0w004fk4rqou6fmyl1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在js中，万物皆对象…</p>\n<span id=\"more\"></span>\n\n<p>所以日常编码中会经常跟对象打交道，一个比较常用的案例就是对象的拷贝，下面就遇到的一些拷贝问题做简单解析，随时补充。</p>\n<h2 id=\"一、基本数据类型-的拷贝\"><a href=\"#一、基本数据类型-的拷贝\" class=\"headerlink\" title=\"一、基本数据类型 的拷贝\"></a>一、基本数据类型 的拷贝</h2><p>基本数据类型（Number,String,Boolean,Undefined,Null）的拷贝就很简单了，直接用 &#x3D; 就行，无论你什么姿势，都OK。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Number</span></span><br><span class=\"line\">a = <span class=\"number\">1.1</span>;b = a;b = <span class=\"number\">2</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">a = <span class=\"string\">&#x27;hello&#x27;</span>;b = a;b = <span class=\"number\">3</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Boolean</span></span><br><span class=\"line\">a = <span class=\"literal\">false</span>;b = a;b = <span class=\"string\">&#x27;sss&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Undefined</span></span><br><span class=\"line\">a = <span class=\"literal\">undefined</span>;b = a;b = <span class=\"literal\">false</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Null</span></span><br><span class=\"line\">a = <span class=\"literal\">null</span>;b = a;b = <span class=\"literal\">undefined</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>经过实践我们会发现，无论如何修改b的值，a还是一动不动，保持初心。</p>\n<h2 id=\"二、复杂数据类型（object）-的拷贝\"><a href=\"#二、复杂数据类型（object）-的拷贝\" class=\"headerlink\" title=\"二、复杂数据类型（object） 的拷贝\"></a>二、复杂数据类型（object） 的拷贝</h2><p>常用的复杂数据类型包括：{} 、[] 、function(){} 、Date 、RegExp 、null（这个比较特殊）等</p>\n<h4 id=\"1、我们依然用一的简单赋值（-x3D-）来进行一遍操作（赋值）\"><a href=\"#1、我们依然用一的简单赋值（-x3D-）来进行一遍操作（赋值）\" class=\"headerlink\" title=\"1、我们依然用一的简单赋值（&#x3D;）来进行一遍操作（赋值）\"></a>1、我们依然用一的简单赋值（&#x3D;）来进行一遍操作（赋值）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;abc&#x27;</span>&#125;;b = a;b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;sss&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// []</span></span><br><span class=\"line\">a = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>];b = a;b[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;d&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// function</span></span><br><span class=\"line\">a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;aaa&#x27;</span>); &#125;;b = a;b = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;bbb&#x27;</span>); &#125;; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a.<span class=\"title function_\">toString</span>(),b.<span class=\"title function_\">toString</span>())</span><br><span class=\"line\"><span class=\"comment\">// Date</span></span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;2018-10-11 00:00:00&#x27;</span>);b = a;b = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;1970-01-01 00:00:00&#x27;</span>);<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// RegExp</span></span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;abc&#x27;</span>);b = a;b = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>经过实践我们会发现：<br>1、当类型为{}、[]的时候，改变b的值，a也会跟着一起变化。<br>2、当类型为Date、function、RegExp的时候，a保持不变。<br>总结：<br>我们发现{}或者[]时，简单的赋值操作并不能实现它们的拷贝，只是改了b的指向，使a和b都指向同一个引用，随意改变一个，都会影响另外一个的值。</p>\n<h4 id=\"2、Object-assign-和-for-in进行-和-的拷贝（浅拷贝）\"><a href=\"#2、Object-assign-和-for-in进行-和-的拷贝（浅拷贝）\" class=\"headerlink\" title=\"2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）\"></a>2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Object.assign</span></span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;;b = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, a);b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];b = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>([], a);b[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// for in</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"keyword\">function</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> res = a.<span class=\"title function_\">constructor</span>(<span class=\"params\"></span>);</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(a.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">    res[key] = a[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;;b = <span class=\"title function_\">copy</span>(a);b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];b = <span class=\"title function_\">copy</span>(a);b[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>我们惊奇的发现，貌似这俩方法挺好使，不禁心中暗自惊喜。但是如果我们进一步测试，把a改的更复杂点。<br>a &#x3D; {name:’aaa’,people:{name: ‘abc’}};b &#x3D; Object.assign({}, a);b.people.name &#x3D; ‘def’;  console.log(a,b)<br>a &#x3D; {name:’aaa’,people:{name: ‘abc’}};b &#x3D; copy(a);b.people.name &#x3D; ‘def’;  console.log(a,b)<br>a &#x3D; [1,2, {name: ‘aaa’}];b &#x3D; Object.assign([], a);b[2].name &#x3D; ‘bbb’;  console.log(a,b)<br>a &#x3D; [1,2, {name: ‘aaa’}];b &#x3D; copy(a);b[2].name &#x3D; ‘bbb’;  console.log(a,b)<br>哇喔，这样就嗝屁了。</p>\n<h4 id=\"3、使用JSON-parse（）与JSON-stringify（）对对象进行拷贝（深拷贝，不完美）\"><a href=\"#3、使用JSON-parse（）与JSON-stringify（）对对象进行拷贝（深拷贝，不完美）\" class=\"headerlink\" title=\"3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）\"></a>3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy = <span class=\"keyword\">function</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(a));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;aaa&#x27;</span>,<span class=\"attr\">people</span>:&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;abc&#x27;</span>&#125;&#125;;b = <span class=\"title function_\">deepCopy</span>(a);b.<span class=\"property\">people</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;def&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;];b = <span class=\"title function_\">deepCopy</span>(a);b[<span class=\"number\">2</span>].<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>酱紫试验了下，貌似还不错，但仔细研究就会发现：<br>1.上述的方法会忽略值为function以及undefined的字段，而且对date类型的支持也不太友好<br>a &#x3D; {name:’aaa’,fun:function(){console.log(‘fun’);},nn: undefined};b &#x3D; deepCopy(a); console.log(a.fun,b.fun) &#x2F;&#x2F; b.fun会输出undefined,并且b.nn也会不存在<br>2.上述方法只能克隆原始对象自身的值，不能克隆它继承的值<br>function Person (name) {<br>    this.name &#x3D; name<br>}<br>var a &#x3D; new Person(‘王二’);<br>var b &#x3D; deepCopy(a);<br>a.constructor &#x3D;&#x3D; Person; &#x2F;&#x2F; true<br>b.constructor &#x3D;&#x3D; Object; &#x2F;&#x2F; true</p>\n<h4 id=\"4、for-in实现比较完美的深拷贝方法（深拷贝，完美）\"><a href=\"#4、for-in实现比较完美的深拷贝方法（深拷贝，完美）\" class=\"headerlink\" title=\"4、for in实现比较完美的深拷贝方法（深拷贝，完美）\"></a>4、for in实现比较完美的深拷贝方法（深拷贝，完美）</h4><p>function realCopy(obj) {<br>  &#x2F;&#x2F; 简单数据类型或者null直接return obj<br>  if (obj &#x3D;&#x3D; null || typeof (obj) !&#x3D; ‘object’) { return obj; }</p>\n<p>  var type &#x3D; obj.constructor;<br>  &#x2F;&#x2F; Date或RegExp也直接return对应值<br>  if(type &#x3D;&#x3D; Date) { return new Date(obj); }<br>  if(type &#x3D;&#x3D; RegExp) { return new RegExp(obj); }</p>\n<p>  var temp &#x3D; obj.constructor();<br>  for (var key in obj) {<br>    &#x2F;&#x2F; 不遍历其原型链上的属性<br>    if (obj.hasOwnProperty(key)) {<br>      &#x2F;&#x2F; 注意这里的递归调用<br>      temp[key] &#x3D; realCopy(obj[key]);<br>    }<br>  }<br>  return temp;<br>}<br>至此，方法4算是比较完美的一个深拷贝方案了。</p>\n","site":{"data":{}},"excerpt":"<p>在js中，万物皆对象…</p>","more":"<p>所以日常编码中会经常跟对象打交道，一个比较常用的案例就是对象的拷贝，下面就遇到的一些拷贝问题做简单解析，随时补充。</p>\n<h2 id=\"一、基本数据类型-的拷贝\"><a href=\"#一、基本数据类型-的拷贝\" class=\"headerlink\" title=\"一、基本数据类型 的拷贝\"></a>一、基本数据类型 的拷贝</h2><p>基本数据类型（Number,String,Boolean,Undefined,Null）的拷贝就很简单了，直接用 &#x3D; 就行，无论你什么姿势，都OK。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Number</span></span><br><span class=\"line\">a = <span class=\"number\">1.1</span>;b = a;b = <span class=\"number\">2</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// String</span></span><br><span class=\"line\">a = <span class=\"string\">&#x27;hello&#x27;</span>;b = a;b = <span class=\"number\">3</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Boolean</span></span><br><span class=\"line\">a = <span class=\"literal\">false</span>;b = a;b = <span class=\"string\">&#x27;sss&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Undefined</span></span><br><span class=\"line\">a = <span class=\"literal\">undefined</span>;b = a;b = <span class=\"literal\">false</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// Null</span></span><br><span class=\"line\">a = <span class=\"literal\">null</span>;b = a;b = <span class=\"literal\">undefined</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>经过实践我们会发现，无论如何修改b的值，a还是一动不动，保持初心。</p>\n<h2 id=\"二、复杂数据类型（object）-的拷贝\"><a href=\"#二、复杂数据类型（object）-的拷贝\" class=\"headerlink\" title=\"二、复杂数据类型（object） 的拷贝\"></a>二、复杂数据类型（object） 的拷贝</h2><p>常用的复杂数据类型包括：{} 、[] 、function(){} 、Date 、RegExp 、null（这个比较特殊）等</p>\n<h4 id=\"1、我们依然用一的简单赋值（-x3D-）来进行一遍操作（赋值）\"><a href=\"#1、我们依然用一的简单赋值（-x3D-）来进行一遍操作（赋值）\" class=\"headerlink\" title=\"1、我们依然用一的简单赋值（&#x3D;）来进行一遍操作（赋值）\"></a>1、我们依然用一的简单赋值（&#x3D;）来进行一遍操作（赋值）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123;&#125;</span></span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;abc&#x27;</span>&#125;;b = a;b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;sss&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// []</span></span><br><span class=\"line\">a = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>];b = a;b[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;d&#x27;</span>; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// function</span></span><br><span class=\"line\">a = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;aaa&#x27;</span>); &#125;;b = a;b = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;bbb&#x27;</span>); &#125;; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a.<span class=\"title function_\">toString</span>(),b.<span class=\"title function_\">toString</span>())</span><br><span class=\"line\"><span class=\"comment\">// Date</span></span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;2018-10-11 00:00:00&#x27;</span>);b = a;b = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;1970-01-01 00:00:00&#x27;</span>);<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// RegExp</span></span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;abc&#x27;</span>);b = a;b = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>经过实践我们会发现：<br>1、当类型为{}、[]的时候，改变b的值，a也会跟着一起变化。<br>2、当类型为Date、function、RegExp的时候，a保持不变。<br>总结：<br>我们发现{}或者[]时，简单的赋值操作并不能实现它们的拷贝，只是改了b的指向，使a和b都指向同一个引用，随意改变一个，都会影响另外一个的值。</p>\n<h4 id=\"2、Object-assign-和-for-in进行-和-的拷贝（浅拷贝）\"><a href=\"#2、Object-assign-和-for-in进行-和-的拷贝（浅拷贝）\" class=\"headerlink\" title=\"2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）\"></a>2、Object.assign 和 for in进行{}和[]的拷贝（浅拷贝）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Object.assign</span></span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;;b = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, a);b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];b = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>([], a);b[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\"><span class=\"comment\">// for in</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"keyword\">function</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> res = a.<span class=\"title function_\">constructor</span>(<span class=\"params\"></span>);</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(a.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">    res[key] = a[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;;b = <span class=\"title function_\">copy</span>(a);b.<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];b = <span class=\"title function_\">copy</span>(a);b[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>我们惊奇的发现，貌似这俩方法挺好使，不禁心中暗自惊喜。但是如果我们进一步测试，把a改的更复杂点。<br>a &#x3D; {name:’aaa’,people:{name: ‘abc’}};b &#x3D; Object.assign({}, a);b.people.name &#x3D; ‘def’;  console.log(a,b)<br>a &#x3D; {name:’aaa’,people:{name: ‘abc’}};b &#x3D; copy(a);b.people.name &#x3D; ‘def’;  console.log(a,b)<br>a &#x3D; [1,2, {name: ‘aaa’}];b &#x3D; Object.assign([], a);b[2].name &#x3D; ‘bbb’;  console.log(a,b)<br>a &#x3D; [1,2, {name: ‘aaa’}];b &#x3D; copy(a);b[2].name &#x3D; ‘bbb’;  console.log(a,b)<br>哇喔，这样就嗝屁了。</p>\n<h4 id=\"3、使用JSON-parse（）与JSON-stringify（）对对象进行拷贝（深拷贝，不完美）\"><a href=\"#3、使用JSON-parse（）与JSON-stringify（）对对象进行拷贝（深拷贝，不完美）\" class=\"headerlink\" title=\"3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）\"></a>3、使用JSON.parse（）与JSON.stringify（）对对象进行拷贝（深拷贝，不完美）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy = <span class=\"keyword\">function</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(a));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;aaa&#x27;</span>,<span class=\"attr\">people</span>:&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;abc&#x27;</span>&#125;&#125;;b = <span class=\"title function_\">deepCopy</span>(a);b.<span class=\"property\">people</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;def&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;aaa&#x27;</span>&#125;];b = <span class=\"title function_\">deepCopy</span>(a);b[<span class=\"number\">2</span>].<span class=\"property\">name</span> = <span class=\"string\">&#x27;bbb&#x27;</span>;  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b)</span><br></pre></td></tr></table></figure>\n<p>酱紫试验了下，貌似还不错，但仔细研究就会发现：<br>1.上述的方法会忽略值为function以及undefined的字段，而且对date类型的支持也不太友好<br>a &#x3D; {name:’aaa’,fun:function(){console.log(‘fun’);},nn: undefined};b &#x3D; deepCopy(a); console.log(a.fun,b.fun) &#x2F;&#x2F; b.fun会输出undefined,并且b.nn也会不存在<br>2.上述方法只能克隆原始对象自身的值，不能克隆它继承的值<br>function Person (name) {<br>    this.name &#x3D; name<br>}<br>var a &#x3D; new Person(‘王二’);<br>var b &#x3D; deepCopy(a);<br>a.constructor &#x3D;&#x3D; Person; &#x2F;&#x2F; true<br>b.constructor &#x3D;&#x3D; Object; &#x2F;&#x2F; true</p>\n<h4 id=\"4、for-in实现比较完美的深拷贝方法（深拷贝，完美）\"><a href=\"#4、for-in实现比较完美的深拷贝方法（深拷贝，完美）\" class=\"headerlink\" title=\"4、for in实现比较完美的深拷贝方法（深拷贝，完美）\"></a>4、for in实现比较完美的深拷贝方法（深拷贝，完美）</h4><p>function realCopy(obj) {<br>  &#x2F;&#x2F; 简单数据类型或者null直接return obj<br>  if (obj &#x3D;&#x3D; null || typeof (obj) !&#x3D; ‘object’) { return obj; }</p>\n<p>  var type &#x3D; obj.constructor;<br>  &#x2F;&#x2F; Date或RegExp也直接return对应值<br>  if(type &#x3D;&#x3D; Date) { return new Date(obj); }<br>  if(type &#x3D;&#x3D; RegExp) { return new RegExp(obj); }</p>\n<p>  var temp &#x3D; obj.constructor();<br>  for (var key in obj) {<br>    &#x2F;&#x2F; 不遍历其原型链上的属性<br>    if (obj.hasOwnProperty(key)) {<br>      &#x2F;&#x2F; 注意这里的递归调用<br>      temp[key] &#x3D; realCopy(obj[key]);<br>    }<br>  }<br>  return temp;<br>}<br>至此，方法4算是比较完美的一个深拷贝方案了。</p>"},{"title":"从0开始搭建日志分析系统（一）","date":"2018-01-08T16:00:00.000Z","_content":"\n从0开始搭建日志分析系统（一）：日志收集\n<!-- more -->\n\n### 一、在服务器上搭建日志收集系统\n+ 安装需要的环境：nodejs pm2\n\n+ 部署项目\n  <https://github.com/17it/lempb.git>\n+ 配置nginx(一般是在conf.d目录下加上一个配置文件，如pb.conf pbhttps.conf)\n```bash\nserver {\n    listen  80;\n    root  /;\n    charset  utf-8;\n\n    location ~ ^/lempb {\n            #proxy_redirect  off;\n            proxy_set_header        Host            $host;\n            proxy_set_header        X-Real-IP       $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass http://127.0.0.1:10086;\n            break;\n    }\n}\n```\n如果有添加证书，可以加上https的配置\n```bash\nserver {\n    listen  443;\n    root  /;\n    charset  utf-8;\n    ssl on;\n    ssl_certificate  /etc/nginx/conf.d/fullchain.pem;\n    ssl_certificate_key  /etc/nginx/conf.d/privkey.pem;\n\n    location ~ ^/lempb {\n            # 不用缓存\n            proxy_pass http://127.0.0.1:10086;\n    }\n}\n```\n\n### 二、logrotate自动切割日志文件\n+ 安装logrotate\n参照：<https://www.cnblogs.com/cainiaoliu/p/6259640.html>\n+ 配置切割服务\n在/etc/logrotate.d/目录下新建一配置文件lempb并配置(其中日志名为需要切割的日志所在目录，记得写全路径)\n```bash\n/letv/logs/lempb/out_log.log{\n    daily\n    rotate 10\n    dateext\n    dateyesterday\n    compress\n    copytruncate\n    missingok\n    notifempty\n    create\n}\n```\n\n### 三、crontab定时执行切割服务\n+ crontab -e 配置定时任务(每天凌晨0点0分执行)\n```bash\n0 0 * * * /usr/sbin/logrotate -vf /etc/logrotate.d/lempb\n```\n** 注意配置时候脚本或命令需要写全路径 **\n** 一般crontab编辑后不用重新启动就会生效，但需要注意crontab之前是否已启动 **\n\n#### 访问测试\n到此，第一步大功告成，可以在需要的地方上报日志到该服务器上，服务器会自动收集上报的日志到步骤一项目里配置的路径\n\n","source":"_posts/从0开始搭建日志分析系统（一）.md","raw":"---\ntitle: 从0开始搭建日志分析系统（一）\ndate: 2018-01-09\ncategories: Nginx\ntags: \n    - Linux\n    - Nginx\n#description: \n---\n\n从0开始搭建日志分析系统（一）：日志收集\n<!-- more -->\n\n### 一、在服务器上搭建日志收集系统\n+ 安装需要的环境：nodejs pm2\n\n+ 部署项目\n  <https://github.com/17it/lempb.git>\n+ 配置nginx(一般是在conf.d目录下加上一个配置文件，如pb.conf pbhttps.conf)\n```bash\nserver {\n    listen  80;\n    root  /;\n    charset  utf-8;\n\n    location ~ ^/lempb {\n            #proxy_redirect  off;\n            proxy_set_header        Host            $host;\n            proxy_set_header        X-Real-IP       $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass http://127.0.0.1:10086;\n            break;\n    }\n}\n```\n如果有添加证书，可以加上https的配置\n```bash\nserver {\n    listen  443;\n    root  /;\n    charset  utf-8;\n    ssl on;\n    ssl_certificate  /etc/nginx/conf.d/fullchain.pem;\n    ssl_certificate_key  /etc/nginx/conf.d/privkey.pem;\n\n    location ~ ^/lempb {\n            # 不用缓存\n            proxy_pass http://127.0.0.1:10086;\n    }\n}\n```\n\n### 二、logrotate自动切割日志文件\n+ 安装logrotate\n参照：<https://www.cnblogs.com/cainiaoliu/p/6259640.html>\n+ 配置切割服务\n在/etc/logrotate.d/目录下新建一配置文件lempb并配置(其中日志名为需要切割的日志所在目录，记得写全路径)\n```bash\n/letv/logs/lempb/out_log.log{\n    daily\n    rotate 10\n    dateext\n    dateyesterday\n    compress\n    copytruncate\n    missingok\n    notifempty\n    create\n}\n```\n\n### 三、crontab定时执行切割服务\n+ crontab -e 配置定时任务(每天凌晨0点0分执行)\n```bash\n0 0 * * * /usr/sbin/logrotate -vf /etc/logrotate.d/lempb\n```\n** 注意配置时候脚本或命令需要写全路径 **\n** 一般crontab编辑后不用重新启动就会生效，但需要注意crontab之前是否已启动 **\n\n#### 访问测试\n到此，第一步大功告成，可以在需要的地方上报日志到该服务器上，服务器会自动收集上报的日志到步骤一项目里配置的路径\n\n","slug":"从0开始搭建日志分析系统（一）","published":1,"updated":"2022-06-15T08:20:35.024Z","_id":"cl4e3az0w004ik4rqnpti0m34","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从0开始搭建日志分析系统（一）：日志收集</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、在服务器上搭建日志收集系统\"><a href=\"#一、在服务器上搭建日志收集系统\" class=\"headerlink\" title=\"一、在服务器上搭建日志收集系统\"></a>一、在服务器上搭建日志收集系统</h3><ul>\n<li><p>安装需要的环境：nodejs pm2</p>\n</li>\n<li><p>部署项目<br><a href=\"https://github.com/17it/lempb.git\">https://github.com/17it/lempb.git</a></p>\n</li>\n<li><p>配置nginx(一般是在conf.d目录下加上一个配置文件，如pb.conf pbhttps.conf)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    root  /;</span><br><span class=\"line\">    charset  utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ ^/lempb &#123;</span><br><span class=\"line\">            <span class=\"comment\">#proxy_redirect  off;</span></span><br><span class=\"line\">            proxy_set_header        Host            <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            proxy_set_header        X-Real-IP       <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">            proxy_pass http://127.0.0.1:10086;</span><br><span class=\"line\">            <span class=\"built_in\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果有添加证书，可以加上https的配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  443;</span><br><span class=\"line\">    root  /;</span><br><span class=\"line\">    charset  utf-8;</span><br><span class=\"line\">    ssl on;</span><br><span class=\"line\">    ssl_certificate  /etc/nginx/conf.d/fullchain.pem;</span><br><span class=\"line\">    ssl_certificate_key  /etc/nginx/conf.d/privkey.pem;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ ^/lempb &#123;</span><br><span class=\"line\">            <span class=\"comment\"># 不用缓存</span></span><br><span class=\"line\">            proxy_pass http://127.0.0.1:10086;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、logrotate自动切割日志文件\"><a href=\"#二、logrotate自动切割日志文件\" class=\"headerlink\" title=\"二、logrotate自动切割日志文件\"></a>二、logrotate自动切割日志文件</h3><ul>\n<li>安装logrotate<br>参照：<a href=\"https://www.cnblogs.com/cainiaoliu/p/6259640.html\">https://www.cnblogs.com/cainiaoliu/p/6259640.html</a></li>\n<li>配置切割服务<br>在&#x2F;etc&#x2F;logrotate.d&#x2F;目录下新建一配置文件lempb并配置(其中日志名为需要切割的日志所在目录，记得写全路径)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/letv/logs/lempb/out_log.log&#123;</span><br><span class=\"line\">    daily</span><br><span class=\"line\">    rotate 10</span><br><span class=\"line\">    dateext</span><br><span class=\"line\">    dateyesterday</span><br><span class=\"line\">    compress</span><br><span class=\"line\">    copytruncate</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    notifempty</span><br><span class=\"line\">    create</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"三、crontab定时执行切割服务\"><a href=\"#三、crontab定时执行切割服务\" class=\"headerlink\" title=\"三、crontab定时执行切割服务\"></a>三、crontab定时执行切割服务</h3><ul>\n<li>crontab -e 配置定时任务(每天凌晨0点0分执行)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 0 * * * /usr/sbin/logrotate -vf /etc/logrotate.d/lempb</span><br></pre></td></tr></table></figure>\n** 注意配置时候脚本或命令需要写全路径 **<br>** 一般crontab编辑后不用重新启动就会生效，但需要注意crontab之前是否已启动 **</li>\n</ul>\n<h4 id=\"访问测试\"><a href=\"#访问测试\" class=\"headerlink\" title=\"访问测试\"></a>访问测试</h4><p>到此，第一步大功告成，可以在需要的地方上报日志到该服务器上，服务器会自动收集上报的日志到步骤一项目里配置的路径</p>\n","site":{"data":{}},"excerpt":"<p>从0开始搭建日志分析系统（一）：日志收集</p>","more":"<h3 id=\"一、在服务器上搭建日志收集系统\"><a href=\"#一、在服务器上搭建日志收集系统\" class=\"headerlink\" title=\"一、在服务器上搭建日志收集系统\"></a>一、在服务器上搭建日志收集系统</h3><ul>\n<li><p>安装需要的环境：nodejs pm2</p>\n</li>\n<li><p>部署项目<br><a href=\"https://github.com/17it/lempb.git\">https://github.com/17it/lempb.git</a></p>\n</li>\n<li><p>配置nginx(一般是在conf.d目录下加上一个配置文件，如pb.conf pbhttps.conf)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    root  /;</span><br><span class=\"line\">    charset  utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ ^/lempb &#123;</span><br><span class=\"line\">            <span class=\"comment\">#proxy_redirect  off;</span></span><br><span class=\"line\">            proxy_set_header        Host            <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            proxy_set_header        X-Real-IP       <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">            proxy_pass http://127.0.0.1:10086;</span><br><span class=\"line\">            <span class=\"built_in\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果有添加证书，可以加上https的配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  443;</span><br><span class=\"line\">    root  /;</span><br><span class=\"line\">    charset  utf-8;</span><br><span class=\"line\">    ssl on;</span><br><span class=\"line\">    ssl_certificate  /etc/nginx/conf.d/fullchain.pem;</span><br><span class=\"line\">    ssl_certificate_key  /etc/nginx/conf.d/privkey.pem;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ ^/lempb &#123;</span><br><span class=\"line\">            <span class=\"comment\"># 不用缓存</span></span><br><span class=\"line\">            proxy_pass http://127.0.0.1:10086;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"二、logrotate自动切割日志文件\"><a href=\"#二、logrotate自动切割日志文件\" class=\"headerlink\" title=\"二、logrotate自动切割日志文件\"></a>二、logrotate自动切割日志文件</h3><ul>\n<li>安装logrotate<br>参照：<a href=\"https://www.cnblogs.com/cainiaoliu/p/6259640.html\">https://www.cnblogs.com/cainiaoliu/p/6259640.html</a></li>\n<li>配置切割服务<br>在&#x2F;etc&#x2F;logrotate.d&#x2F;目录下新建一配置文件lempb并配置(其中日志名为需要切割的日志所在目录，记得写全路径)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/letv/logs/lempb/out_log.log&#123;</span><br><span class=\"line\">    daily</span><br><span class=\"line\">    rotate 10</span><br><span class=\"line\">    dateext</span><br><span class=\"line\">    dateyesterday</span><br><span class=\"line\">    compress</span><br><span class=\"line\">    copytruncate</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    notifempty</span><br><span class=\"line\">    create</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"三、crontab定时执行切割服务\"><a href=\"#三、crontab定时执行切割服务\" class=\"headerlink\" title=\"三、crontab定时执行切割服务\"></a>三、crontab定时执行切割服务</h3><ul>\n<li>crontab -e 配置定时任务(每天凌晨0点0分执行)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 0 * * * /usr/sbin/logrotate -vf /etc/logrotate.d/lempb</span><br></pre></td></tr></table></figure>\n** 注意配置时候脚本或命令需要写全路径 **<br>** 一般crontab编辑后不用重新启动就会生效，但需要注意crontab之前是否已启动 **</li>\n</ul>\n<h4 id=\"访问测试\"><a href=\"#访问测试\" class=\"headerlink\" title=\"访问测试\"></a>访问测试</h4><p>到此，第一步大功告成，可以在需要的地方上报日志到该服务器上，服务器会自动收集上报的日志到步骤一项目里配置的路径</p>"},{"title":"M1芯片Mac隐私权限不显示应用的解决办法","date":"2022-06-14T16:00:00.000Z","_content":"\n初识M1，确实比较强悍，续航长还静音，但是遇到个问题，飞书和腾讯会议的麦克风和摄像头权限没法开启。\n<!-- more -->\n\n## 表现：\n\n在隐私设置里，选择麦克风和摄像头，里面没有飞书和腾讯会议，并且应用列表下面也没有手动添加应用的 + 号，问了apple客服，说是M1芯片对这种比较敏感的权限不开放给用户手动添加应用的功能。\n\n## 一、进入安全模式，关闭SIP\n\n关机长按电源键，选择选项，然后左上角的终端，输入命令，然后重启。\n\n```bash\ncsrutil disable\n```\n\n## 二、在权限db里手动插入数据\n\nsql格式如：INSERT or REPLACE INTO access VALUES(权限名,应用包名,0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,时间戳)\n\n```bash\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceMicrophone','com.tencent.meeting',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceMicrophone','com.bytedance.macos.feishu',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceCamera','com.tencent.meeting',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceCamera','com.bytedance.macos.feishu',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\n```\n\n## 三、常用权限解释\n\n#### 权限：\n+ 辅助功能 kTCCServiceAccessibility\n+ 摄像头 kTCCServiceCamera\n+ 输入监听 kTCCServiceListenEvent\n+ 麦克风 kTCCServiceMicrophone\n+ 录制屏幕 kTCCServiceScreenCapture\n+ 完全磁盘访问权限 kTCCServiceSystemPolicyAllFiles\n\n#### 查看包名：\n在访达中找到应用程序文件后（一般位于应用程序），右键选择显示包内容，使用文本编辑器打开Contents/Info.plist，找到<key>CFBundleIdentifier</key>，下面一行在<string>和</string>中间的便是包名\n\n* 参考链接：https://blog.csdn.net/weixin_43917335/article/details/109245795\n* 参考链接：https://www.jianshu.com/p/105c88194350\n* 参考链接：https://juejin.cn/post/7033792167362035749","source":"_posts/M1芯片Mac隐私权限不显示应用的解决办法.md","raw":"---\ntitle: M1芯片Mac隐私权限不显示应用的解决办法\ndate: 2022-06-15\ncategories: Macos\ntags:\n- Macos\n#description:\n---\n\n初识M1，确实比较强悍，续航长还静音，但是遇到个问题，飞书和腾讯会议的麦克风和摄像头权限没法开启。\n<!-- more -->\n\n## 表现：\n\n在隐私设置里，选择麦克风和摄像头，里面没有飞书和腾讯会议，并且应用列表下面也没有手动添加应用的 + 号，问了apple客服，说是M1芯片对这种比较敏感的权限不开放给用户手动添加应用的功能。\n\n## 一、进入安全模式，关闭SIP\n\n关机长按电源键，选择选项，然后左上角的终端，输入命令，然后重启。\n\n```bash\ncsrutil disable\n```\n\n## 二、在权限db里手动插入数据\n\nsql格式如：INSERT or REPLACE INTO access VALUES(权限名,应用包名,0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,时间戳)\n\n```bash\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceMicrophone','com.tencent.meeting',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceMicrophone','com.bytedance.macos.feishu',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceCamera','com.tencent.meeting',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\nsudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db \"INSERT or REPLACE INTO access VALUES('kTCCServiceCamera','com.bytedance.macos.feishu',0,0,4,1,NULL,NULL,0,'UNUSED',NULL,0,1622199671);\"\n```\n\n## 三、常用权限解释\n\n#### 权限：\n+ 辅助功能 kTCCServiceAccessibility\n+ 摄像头 kTCCServiceCamera\n+ 输入监听 kTCCServiceListenEvent\n+ 麦克风 kTCCServiceMicrophone\n+ 录制屏幕 kTCCServiceScreenCapture\n+ 完全磁盘访问权限 kTCCServiceSystemPolicyAllFiles\n\n#### 查看包名：\n在访达中找到应用程序文件后（一般位于应用程序），右键选择显示包内容，使用文本编辑器打开Contents/Info.plist，找到<key>CFBundleIdentifier</key>，下面一行在<string>和</string>中间的便是包名\n\n* 参考链接：https://blog.csdn.net/weixin_43917335/article/details/109245795\n* 参考链接：https://www.jianshu.com/p/105c88194350\n* 参考链接：https://juejin.cn/post/7033792167362035749","slug":"M1芯片Mac隐私权限不显示应用的解决办法","published":1,"updated":"2022-06-15T08:37:38.083Z","_id":"cl4eymfoj0051k4rq6y85kjj2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>初识M1，确实比较强悍，续航长还静音，但是遇到个问题，飞书和腾讯会议的麦克风和摄像头权限没法开启。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"表现：\"><a href=\"#表现：\" class=\"headerlink\" title=\"表现：\"></a>表现：</h2><p>在隐私设置里，选择麦克风和摄像头，里面没有飞书和腾讯会议，并且应用列表下面也没有手动添加应用的 + 号，问了apple客服，说是M1芯片对这种比较敏感的权限不开放给用户手动添加应用的功能。</p>\n<h2 id=\"一、进入安全模式，关闭SIP\"><a href=\"#一、进入安全模式，关闭SIP\" class=\"headerlink\" title=\"一、进入安全模式，关闭SIP\"></a>一、进入安全模式，关闭SIP</h2><p>关机长按电源键，选择选项，然后左上角的终端，输入命令，然后重启。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">csrutil <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、在权限db里手动插入数据\"><a href=\"#二、在权限db里手动插入数据\" class=\"headerlink\" title=\"二、在权限db里手动插入数据\"></a>二、在权限db里手动插入数据</h2><p>sql格式如：INSERT or REPLACE INTO access VALUES(权限名,应用包名,0,0,4,1,NULL,NULL,0,’UNUSED’,NULL,0,时间戳)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceMicrophone&#x27;,&#x27;com.tencent.meeting&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceMicrophone&#x27;,&#x27;com.bytedance.macos.feishu&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceCamera&#x27;,&#x27;com.tencent.meeting&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceCamera&#x27;,&#x27;com.bytedance.macos.feishu&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、常用权限解释\"><a href=\"#三、常用权限解释\" class=\"headerlink\" title=\"三、常用权限解释\"></a>三、常用权限解释</h2><h4 id=\"权限：\"><a href=\"#权限：\" class=\"headerlink\" title=\"权限：\"></a>权限：</h4><ul>\n<li>辅助功能 kTCCServiceAccessibility</li>\n<li>摄像头 kTCCServiceCamera</li>\n<li>输入监听 kTCCServiceListenEvent</li>\n<li>麦克风 kTCCServiceMicrophone</li>\n<li>录制屏幕 kTCCServiceScreenCapture</li>\n<li>完全磁盘访问权限 kTCCServiceSystemPolicyAllFiles</li>\n</ul>\n<h4 id=\"查看包名：\"><a href=\"#查看包名：\" class=\"headerlink\" title=\"查看包名：\"></a>查看包名：</h4><p>在访达中找到应用程序文件后（一般位于应用程序），右键选择显示包内容，使用文本编辑器打开Contents&#x2F;Info.plist，找到<key>CFBundleIdentifier</key>，下面一行在<string>和</string>中间的便是包名</p>\n<ul>\n<li>参考链接：<a href=\"https://blog.csdn.net/weixin_43917335/article/details/109245795\">https://blog.csdn.net/weixin_43917335/article/details/109245795</a></li>\n<li>参考链接：<a href=\"https://www.jianshu.com/p/105c88194350\">https://www.jianshu.com/p/105c88194350</a></li>\n<li>参考链接：<a href=\"https://juejin.cn/post/7033792167362035749\">https://juejin.cn/post/7033792167362035749</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>初识M1，确实比较强悍，续航长还静音，但是遇到个问题，飞书和腾讯会议的麦克风和摄像头权限没法开启。</p>","more":"<h2 id=\"表现：\"><a href=\"#表现：\" class=\"headerlink\" title=\"表现：\"></a>表现：</h2><p>在隐私设置里，选择麦克风和摄像头，里面没有飞书和腾讯会议，并且应用列表下面也没有手动添加应用的 + 号，问了apple客服，说是M1芯片对这种比较敏感的权限不开放给用户手动添加应用的功能。</p>\n<h2 id=\"一、进入安全模式，关闭SIP\"><a href=\"#一、进入安全模式，关闭SIP\" class=\"headerlink\" title=\"一、进入安全模式，关闭SIP\"></a>一、进入安全模式，关闭SIP</h2><p>关机长按电源键，选择选项，然后左上角的终端，输入命令，然后重启。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">csrutil <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、在权限db里手动插入数据\"><a href=\"#二、在权限db里手动插入数据\" class=\"headerlink\" title=\"二、在权限db里手动插入数据\"></a>二、在权限db里手动插入数据</h2><p>sql格式如：INSERT or REPLACE INTO access VALUES(权限名,应用包名,0,0,4,1,NULL,NULL,0,’UNUSED’,NULL,0,时间戳)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceMicrophone&#x27;,&#x27;com.tencent.meeting&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceMicrophone&#x27;,&#x27;com.bytedance.macos.feishu&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceCamera&#x27;,&#x27;com.tencent.meeting&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br><span class=\"line\">sudo sqlite3 ~/Library/Application\\ Support/com.apple.TCC/TCC.db <span class=\"string\">&quot;INSERT or REPLACE INTO access VALUES(&#x27;kTCCServiceCamera&#x27;,&#x27;com.bytedance.macos.feishu&#x27;,0,0,4,1,NULL,NULL,0,&#x27;UNUSED&#x27;,NULL,0,1622199671);&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、常用权限解释\"><a href=\"#三、常用权限解释\" class=\"headerlink\" title=\"三、常用权限解释\"></a>三、常用权限解释</h2><h4 id=\"权限：\"><a href=\"#权限：\" class=\"headerlink\" title=\"权限：\"></a>权限：</h4><ul>\n<li>辅助功能 kTCCServiceAccessibility</li>\n<li>摄像头 kTCCServiceCamera</li>\n<li>输入监听 kTCCServiceListenEvent</li>\n<li>麦克风 kTCCServiceMicrophone</li>\n<li>录制屏幕 kTCCServiceScreenCapture</li>\n<li>完全磁盘访问权限 kTCCServiceSystemPolicyAllFiles</li>\n</ul>\n<h4 id=\"查看包名：\"><a href=\"#查看包名：\" class=\"headerlink\" title=\"查看包名：\"></a>查看包名：</h4><p>在访达中找到应用程序文件后（一般位于应用程序），右键选择显示包内容，使用文本编辑器打开Contents&#x2F;Info.plist，找到<key>CFBundleIdentifier</key>，下面一行在<string>和</string>中间的便是包名</p>\n<ul>\n<li>参考链接：<a href=\"https://blog.csdn.net/weixin_43917335/article/details/109245795\">https://blog.csdn.net/weixin_43917335/article/details/109245795</a></li>\n<li>参考链接：<a href=\"https://www.jianshu.com/p/105c88194350\">https://www.jianshu.com/p/105c88194350</a></li>\n<li>参考链接：<a href=\"https://juejin.cn/post/7033792167362035749\">https://juejin.cn/post/7033792167362035749</a></li>\n</ul>"},{"title":"letv","date":"2017-04-16T16:00:00.000Z","_content":"\n### components里form和table新加的功能以及vue route\n<!-- more -->\n\n### 一、只url中的参数改变时，vue route的使用\n+ 问题描述：vue单页应用中，点击左侧栏菜单，当仅url参数改变，路径不变时，默认不会走主组件（Logic）里面的create方法的，会导致页面不能刷新（或者获取新数据）。\n+ 解决办法：可以在主组件（Logic）里面挂上vue route的钩子，在里面捕获参数的改变，然后改页面state里面的值，来触发对应的刷新（或者获取新数据）的方法。\n\n#### 1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/11.png\">\n#### 2.在state.js里的方法pageList_resetState中改变面包屑 和 改变state的值（如pageNum,hasParamChange）.\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/22.png\">\n#### 3.在页面里对应的组件中监听state的值改变，再调用对应的ajax获取新数据。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/33.png\">\n\n### 二、form组件扩展\n#### 1.input后支持增加颜色选择器\n+ 示例：\n```js\n{\n    prop:’bgColor’,\n    type:’colorPicker’,\n    colorChange: function(){},\n    colorPickerStyle: 'line-height: normal;position: absolute;font-size: 0;margin-left:10px;'\n}\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/1.png\">\n\n#### 2.form表单支持检测链接类型的输入框\n+ 示例:\n```js\nvar preObj = {\n    key: 'movie',\n    value: 'http://movie.le.com'\n};\n\nattributes:[\n{\n    prop: 'publishAddress',\n    label: '发布地址',\n    type: 'require_checkUrl',\n    placeholder: '页面URL',\n    style: 'width:370px;margin-right:10px;',\n    preLabel: preObj\n}]\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/3.png\">\n\n### 三、table组件扩展\n#### 1.table里按钮支持自定义样式\n示例：\n```js\nattributes:[\n{\n    prop: '',\n    title: '',\n    value: 1,\n    disabled: false,\n    onclick: this.closeStatus,\n    style: 'color:red'\n}\n]\n```\n#### 2.table里普通显示文字支持自定义样式\n#### 3.table的custom类型支持传入disabled\n示例：\n```js\nattributes:[{\n    prop: 'modManage',\n    label: '模块管理',\n    type: 'ifelsetext',\n    width: '100',\n    options: [\n        {\n    \t    prop: 'isEditing',\n        \tvalue: false,\n            style: 'color:blue;cursor:pointer;text-align:center',\n            onclick: this.manageModule\n        },\n        {\n        \tprop: 'isEditing',\n            value: true,\n            style: 'color:red;cursor:pointer;text-align:center',\n            onclick: this.unlockPage\n        }\n    ]\n}]\n```\n#### 4.table里支持列排序\n示例：\n```js\nattributes: [\n{\n    prop: 'id',\n    label: '页面ID',\n    width: '100',\n    sortable: true\n}\n]\n```\n#### 5.table新增ifelsetext类型\n示例：\n```js\nattributes:[{\n    prop: 'modManage',\n    label: '模块管理',\n    type: 'ifelsetext',\n    width: '100',\n    options: [\n        {\n    \t    prop: 'isEditing',\n        \tvalue: false,\n            style: 'color:blue;cursor:pointer;text-align:center',\n            onclick: this.manageModule\n        },\n        {\n        \tprop: 'isEditing',\n            value: true,\n            style: 'color:red;cursor:pointer;text-align:center',\n            onclick: this.unlockPage\n        }\n    ]\n}]\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/4.png\">","source":"_posts/letv.md","raw":"---\ntitle: letv\ndate: 2017-04-17\ntags:\n- dialry\n---\n\n### components里form和table新加的功能以及vue route\n<!-- more -->\n\n### 一、只url中的参数改变时，vue route的使用\n+ 问题描述：vue单页应用中，点击左侧栏菜单，当仅url参数改变，路径不变时，默认不会走主组件（Logic）里面的create方法的，会导致页面不能刷新（或者获取新数据）。\n+ 解决办法：可以在主组件（Logic）里面挂上vue route的钩子，在里面捕获参数的改变，然后改页面state里面的值，来触发对应的刷新（或者获取新数据）的方法。\n\n#### 1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/11.png\">\n#### 2.在state.js里的方法pageList_resetState中改变面包屑 和 改变state的值（如pageNum,hasParamChange）.\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/22.png\">\n#### 3.在页面里对应的组件中监听state的值改变，再调用对应的ajax获取新数据。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/33.png\">\n\n### 二、form组件扩展\n#### 1.input后支持增加颜色选择器\n+ 示例：\n```js\n{\n    prop:’bgColor’,\n    type:’colorPicker’,\n    colorChange: function(){},\n    colorPickerStyle: 'line-height: normal;position: absolute;font-size: 0;margin-left:10px;'\n}\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/1.png\">\n\n#### 2.form表单支持检测链接类型的输入框\n+ 示例:\n```js\nvar preObj = {\n    key: 'movie',\n    value: 'http://movie.le.com'\n};\n\nattributes:[\n{\n    prop: 'publishAddress',\n    label: '发布地址',\n    type: 'require_checkUrl',\n    placeholder: '页面URL',\n    style: 'width:370px;margin-right:10px;',\n    preLabel: preObj\n}]\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/3.png\">\n\n### 三、table组件扩展\n#### 1.table里按钮支持自定义样式\n示例：\n```js\nattributes:[\n{\n    prop: '',\n    title: '',\n    value: 1,\n    disabled: false,\n    onclick: this.closeStatus,\n    style: 'color:red'\n}\n]\n```\n#### 2.table里普通显示文字支持自定义样式\n#### 3.table的custom类型支持传入disabled\n示例：\n```js\nattributes:[{\n    prop: 'modManage',\n    label: '模块管理',\n    type: 'ifelsetext',\n    width: '100',\n    options: [\n        {\n    \t    prop: 'isEditing',\n        \tvalue: false,\n            style: 'color:blue;cursor:pointer;text-align:center',\n            onclick: this.manageModule\n        },\n        {\n        \tprop: 'isEditing',\n            value: true,\n            style: 'color:red;cursor:pointer;text-align:center',\n            onclick: this.unlockPage\n        }\n    ]\n}]\n```\n#### 4.table里支持列排序\n示例：\n```js\nattributes: [\n{\n    prop: 'id',\n    label: '页面ID',\n    width: '100',\n    sortable: true\n}\n]\n```\n#### 5.table新增ifelsetext类型\n示例：\n```js\nattributes:[{\n    prop: 'modManage',\n    label: '模块管理',\n    type: 'ifelsetext',\n    width: '100',\n    options: [\n        {\n    \t    prop: 'isEditing',\n        \tvalue: false,\n            style: 'color:blue;cursor:pointer;text-align:center',\n            onclick: this.manageModule\n        },\n        {\n        \tprop: 'isEditing',\n            value: true,\n            style: 'color:red;cursor:pointer;text-align:center',\n            onclick: this.unlockPage\n        }\n    ]\n}]\n```\n+ 效果图：\n  <img src=\"http://onm9ileaw.bkt.clouddn.com/letv/4.png\">","slug":"letv","published":1,"updated":"2022-06-15T08:36:35.010Z","_id":"cl4fbmovm0000zfrqha87h154","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"components里form和table新加的功能以及vue-route\"><a href=\"#components里form和table新加的功能以及vue-route\" class=\"headerlink\" title=\"components里form和table新加的功能以及vue route\"></a>components里form和table新加的功能以及vue route</h3><span id=\"more\"></span>\n\n<h3 id=\"一、只url中的参数改变时，vue-route的使用\"><a href=\"#一、只url中的参数改变时，vue-route的使用\" class=\"headerlink\" title=\"一、只url中的参数改变时，vue route的使用\"></a>一、只url中的参数改变时，vue route的使用</h3><ul>\n<li>问题描述：vue单页应用中，点击左侧栏菜单，当仅url参数改变，路径不变时，默认不会走主组件（Logic）里面的create方法的，会导致页面不能刷新（或者获取新数据）。</li>\n<li>解决办法：可以在主组件（Logic）里面挂上vue route的钩子，在里面捕获参数的改变，然后改页面state里面的值，来触发对应的刷新（或者获取新数据）的方法。</li>\n</ul>\n<h4 id=\"1-在页面里的主组件Logic里面挂上vue-route的钩子函数-beforeRouteUpdate-当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法-pageList-resetState。\"><a href=\"#1-在页面里的主组件Logic里面挂上vue-route的钩子函数-beforeRouteUpdate-当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法-pageList-resetState。\" class=\"headerlink\" title=\"1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。\"></a>1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。</h4><img src=\"http://onm9ileaw.bkt.clouddn.com/letv/11.png\">\n#### 2.在state.js里的方法pageList_resetState中改变面包屑 和 改变state的值（如pageNum,hasParamChange）.\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/22.png\">\n#### 3.在页面里对应的组件中监听state的值改变，再调用对应的ajax获取新数据。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/33.png\">\n\n<h3 id=\"二、form组件扩展\"><a href=\"#二、form组件扩展\" class=\"headerlink\" title=\"二、form组件扩展\"></a>二、form组件扩展</h3><h4 id=\"1-input后支持增加颜色选择器\"><a href=\"#1-input后支持增加颜色选择器\" class=\"headerlink\" title=\"1.input后支持增加颜色选择器\"></a>1.input后支持增加颜色选择器</h4><ul>\n<li>示例：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>:’bgColor’,</span><br><span class=\"line\">    <span class=\"attr\">type</span>:’colorPicker’,</span><br><span class=\"line\">    <span class=\"attr\">colorChange</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">colorPickerStyle</span>: <span class=\"string\">&#x27;line-height: normal;position: absolute;font-size: 0;margin-left:10px;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/1.png\"></li>\n</ul>\n<h4 id=\"2-form表单支持检测链接类型的输入框\"><a href=\"#2-form表单支持检测链接类型的输入框\" class=\"headerlink\" title=\"2.form表单支持检测链接类型的输入框\"></a>2.form表单支持检测链接类型的输入框</h4><ul>\n<li>示例:<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> preObj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"string\">&#x27;movie&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"string\">&#x27;http://movie.le.com&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">attributes</span>:[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;publishAddress&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;发布地址&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;require_checkUrl&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">placeholder</span>: <span class=\"string\">&#x27;页面URL&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">style</span>: <span class=\"string\">&#x27;width:370px;margin-right:10px;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">preLabel</span>: preObj</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></li>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/3.png\"></li>\n</ul>\n<h3 id=\"三、table组件扩展\"><a href=\"#三、table组件扩展\" class=\"headerlink\" title=\"三、table组件扩展\"></a>三、table组件扩展</h3><h4 id=\"1-table里按钮支持自定义样式\"><a href=\"#1-table里按钮支持自定义样式\" class=\"headerlink\" title=\"1.table里按钮支持自定义样式\"></a>1.table里按钮支持自定义样式</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">closeStatus</span>,</span><br><span class=\"line\">    <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-table里普通显示文字支持自定义样式\"><a href=\"#2-table里普通显示文字支持自定义样式\" class=\"headerlink\" title=\"2.table里普通显示文字支持自定义样式\"></a>2.table里普通显示文字支持自定义样式</h4><h4 id=\"3-table的custom类型支持传入disabled\"><a href=\"#3-table的custom类型支持传入disabled\" class=\"headerlink\" title=\"3.table的custom类型支持传入disabled\"></a>3.table的custom类型支持传入disabled</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;modManage&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;模块管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;ifelsetext&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    \t    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">        \t<span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:blue;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">manageModule</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        \t<span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">unlockPage</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-table里支持列排序\"><a href=\"#4-table里支持列排序\" class=\"headerlink\" title=\"4.table里支持列排序\"></a>4.table里支持列排序</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>: [</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;页面ID&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sortable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-table新增ifelsetext类型\"><a href=\"#5-table新增ifelsetext类型\" class=\"headerlink\" title=\"5.table新增ifelsetext类型\"></a>5.table新增ifelsetext类型</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;modManage&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;模块管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;ifelsetext&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    \t    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">        \t<span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:blue;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">manageModule</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        \t<span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">unlockPage</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/4.png\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"components里form和table新加的功能以及vue-route\"><a href=\"#components里form和table新加的功能以及vue-route\" class=\"headerlink\" title=\"components里form和table新加的功能以及vue route\"></a>components里form和table新加的功能以及vue route</h3>","more":"<h3 id=\"一、只url中的参数改变时，vue-route的使用\"><a href=\"#一、只url中的参数改变时，vue-route的使用\" class=\"headerlink\" title=\"一、只url中的参数改变时，vue route的使用\"></a>一、只url中的参数改变时，vue route的使用</h3><ul>\n<li>问题描述：vue单页应用中，点击左侧栏菜单，当仅url参数改变，路径不变时，默认不会走主组件（Logic）里面的create方法的，会导致页面不能刷新（或者获取新数据）。</li>\n<li>解决办法：可以在主组件（Logic）里面挂上vue route的钩子，在里面捕获参数的改变，然后改页面state里面的值，来触发对应的刷新（或者获取新数据）的方法。</li>\n</ul>\n<h4 id=\"1-在页面里的主组件Logic里面挂上vue-route的钩子函数-beforeRouteUpdate-当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法-pageList-resetState。\"><a href=\"#1-在页面里的主组件Logic里面挂上vue-route的钩子函数-beforeRouteUpdate-当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法-pageList-resetState。\" class=\"headerlink\" title=\"1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。\"></a>1.在页面里的主组件Logic里面挂上vue route的钩子函数 beforeRouteUpdate,当页面url中的参数变化时，会进入这里。在函数里面调用state里的方法 pageList_resetState。</h4><img src=\"http://onm9ileaw.bkt.clouddn.com/letv/11.png\">\n#### 2.在state.js里的方法pageList_resetState中改变面包屑 和 改变state的值（如pageNum,hasParamChange）.\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/22.png\">\n#### 3.在页面里对应的组件中监听state的值改变，再调用对应的ajax获取新数据。\n<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/33.png\">\n\n<h3 id=\"二、form组件扩展\"><a href=\"#二、form组件扩展\" class=\"headerlink\" title=\"二、form组件扩展\"></a>二、form组件扩展</h3><h4 id=\"1-input后支持增加颜色选择器\"><a href=\"#1-input后支持增加颜色选择器\" class=\"headerlink\" title=\"1.input后支持增加颜色选择器\"></a>1.input后支持增加颜色选择器</h4><ul>\n<li>示例：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>:’bgColor’,</span><br><span class=\"line\">    <span class=\"attr\">type</span>:’colorPicker’,</span><br><span class=\"line\">    <span class=\"attr\">colorChange</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">colorPickerStyle</span>: <span class=\"string\">&#x27;line-height: normal;position: absolute;font-size: 0;margin-left:10px;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/1.png\"></li>\n</ul>\n<h4 id=\"2-form表单支持检测链接类型的输入框\"><a href=\"#2-form表单支持检测链接类型的输入框\" class=\"headerlink\" title=\"2.form表单支持检测链接类型的输入框\"></a>2.form表单支持检测链接类型的输入框</h4><ul>\n<li>示例:<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> preObj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"string\">&#x27;movie&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"string\">&#x27;http://movie.le.com&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">attributes</span>:[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;publishAddress&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;发布地址&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;require_checkUrl&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">placeholder</span>: <span class=\"string\">&#x27;页面URL&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">style</span>: <span class=\"string\">&#x27;width:370px;margin-right:10px;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">preLabel</span>: preObj</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></li>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/3.png\"></li>\n</ul>\n<h3 id=\"三、table组件扩展\"><a href=\"#三、table组件扩展\" class=\"headerlink\" title=\"三、table组件扩展\"></a>三、table组件扩展</h3><h4 id=\"1-table里按钮支持自定义样式\"><a href=\"#1-table里按钮支持自定义样式\" class=\"headerlink\" title=\"1.table里按钮支持自定义样式\"></a>1.table里按钮支持自定义样式</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">closeStatus</span>,</span><br><span class=\"line\">    <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-table里普通显示文字支持自定义样式\"><a href=\"#2-table里普通显示文字支持自定义样式\" class=\"headerlink\" title=\"2.table里普通显示文字支持自定义样式\"></a>2.table里普通显示文字支持自定义样式</h4><h4 id=\"3-table的custom类型支持传入disabled\"><a href=\"#3-table的custom类型支持传入disabled\" class=\"headerlink\" title=\"3.table的custom类型支持传入disabled\"></a>3.table的custom类型支持传入disabled</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;modManage&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;模块管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;ifelsetext&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    \t    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">        \t<span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:blue;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">manageModule</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        \t<span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">unlockPage</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-table里支持列排序\"><a href=\"#4-table里支持列排序\" class=\"headerlink\" title=\"4.table里支持列排序\"></a>4.table里支持列排序</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>: [</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;页面ID&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sortable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-table新增ifelsetext类型\"><a href=\"#5-table新增ifelsetext类型\" class=\"headerlink\" title=\"5.table新增ifelsetext类型\"></a>5.table新增ifelsetext类型</h4><p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">attributes</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;modManage&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;模块管理&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;ifelsetext&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    \t    <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">        \t<span class=\"attr\">value</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:blue;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">manageModule</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        \t<span class=\"attr\">prop</span>: <span class=\"string\">&#x27;isEditing&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">style</span>: <span class=\"string\">&#x27;color:red;cursor:pointer;text-align:center&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">onclick</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">unlockPage</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果图：<img src=\"http://onm9ileaw.bkt.clouddn.com/letv/4.png\"></li>\n</ul>"},{"title":"乐必中项目打包上线流程","date":"2018-06-21T16:00:00.000Z","_content":"\n乐必中项目打包上线流程\n<!-- more -->\n\n### 一、gameStatic项目打包流程：\n##### 0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\n##### 1.SecureCRT连接到两台服务器（参照：<http://wiki.letv.cn/pages/viewpage.action?pageId=65143852>）\n##### 2.分别都cd到gameStatic目录下\n```js\n  cd /letv/gameStatic\n```\n##### 3.在226上执行打包脚本（不要在159上执行）\n```js\n  sh build.sh\n```\n##### 4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\n```js\n  sh 159copy.sh\n```\n##### 5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\n```js\n  ll /letv/www\n```\n##### 6.可以在浏览器上分别打开：http://10.110.176.226/  和  http://10.110.154.159/ 多刷新几次，看控制台有没有报错\n\n\n### 二、storeClient项目打包流程：\n##### 0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\n##### 1.SecureCRT连接到两台服务器（参照：<http://wiki.letv.cn/pages/viewpage.action?pageId=65143852>）\n##### 2.分别都cd到storeClient目录下\n```js\n  cd /letv/storeClient\n```\n##### 3.在226上执行打包脚本（不要在159上执行）\n```js\n  sh build.sh\n```\n##### 4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\n```js\n  sh 159copy.sh\n```\n##### 5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\n```js\n  ll /letv/storeClient/.nuxt/\n```\n##### 6.可以在浏览器上分别打开：http://10.110.176.226/store  和  http://10.110.154.159/store 多刷新几次，看有没有报错\n##### 7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\n```js\n  pm2 reload store\n```","source":"_posts/乐必中项目打包上线流程.md","raw":"---\ntitle: 乐必中项目打包上线流程\ndate: 2018-06-22\ncategories: Lbz\ntags:\n- Lbz\n- 打包\n#description:\n---\n\n乐必中项目打包上线流程\n<!-- more -->\n\n### 一、gameStatic项目打包流程：\n##### 0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\n##### 1.SecureCRT连接到两台服务器（参照：<http://wiki.letv.cn/pages/viewpage.action?pageId=65143852>）\n##### 2.分别都cd到gameStatic目录下\n```js\n  cd /letv/gameStatic\n```\n##### 3.在226上执行打包脚本（不要在159上执行）\n```js\n  sh build.sh\n```\n##### 4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\n```js\n  sh 159copy.sh\n```\n##### 5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\n```js\n  ll /letv/www\n```\n##### 6.可以在浏览器上分别打开：http://10.110.176.226/  和  http://10.110.154.159/ 多刷新几次，看控制台有没有报错\n\n\n### 二、storeClient项目打包流程：\n##### 0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\n##### 1.SecureCRT连接到两台服务器（参照：<http://wiki.letv.cn/pages/viewpage.action?pageId=65143852>）\n##### 2.分别都cd到storeClient目录下\n```js\n  cd /letv/storeClient\n```\n##### 3.在226上执行打包脚本（不要在159上执行）\n```js\n  sh build.sh\n```\n##### 4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\n```js\n  sh 159copy.sh\n```\n##### 5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\n```js\n  ll /letv/storeClient/.nuxt/\n```\n##### 6.可以在浏览器上分别打开：http://10.110.176.226/store  和  http://10.110.154.159/store 多刷新几次，看有没有报错\n##### 7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\n```js\n  pm2 reload store\n```","slug":"乐必中项目打包上线流程","published":1,"updated":"2022-06-15T08:31:12.353Z","_id":"cl4fbs1np0001zfrqhv1m3dv3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>乐必中项目打包上线流程</p>\n<span id=\"more\"></span>\n\n<h3 id=\"一、gameStatic项目打包流程：\"><a href=\"#一、gameStatic项目打包流程：\" class=\"headerlink\" title=\"一、gameStatic项目打包流程：\"></a>一、gameStatic项目打包流程：</h3><h5 id=\"0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）\"><a href=\"#0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）\" class=\"headerlink\" title=\"0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\"></a>0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）</h5><h5 id=\"1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）\"><a href=\"#1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）\" class=\"headerlink\" title=\"1.SecureCRT连接到两台服务器（参照：http://wiki.letv.cn/pages/viewpage.action?pageId=65143852）\"></a>1.SecureCRT连接到两台服务器（参照：<a href=\"http://wiki.letv.cn/pages/viewpage.action?pageId=65143852\">http://wiki.letv.cn/pages/viewpage.action?pageId=65143852</a>）</h5><h5 id=\"2-分别都cd到gameStatic目录下\"><a href=\"#2-分别都cd到gameStatic目录下\" class=\"headerlink\" title=\"2.分别都cd到gameStatic目录下\"></a>2.分别都cd到gameStatic目录下</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /letv/gameStatic</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在226上执行打包脚本（不要在159上执行）\"><a href=\"#3-在226上执行打包脚本（不要在159上执行）\" class=\"headerlink\" title=\"3.在226上执行打包脚本（不要在159上执行）\"></a>3.在226上执行打包脚本（不要在159上执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh build.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"><a href=\"#4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\" class=\"headerlink\" title=\"4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"></a>4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh 159copy.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致\"><a href=\"#5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致\" class=\"headerlink\" title=\"5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\"></a>5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /letv/www</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-可以在浏览器上分别打开：http-10-110-176-226-和-http-10-110-154-159-多刷新几次，看控制台有没有报错\"><a href=\"#6-可以在浏览器上分别打开：http-10-110-176-226-和-http-10-110-154-159-多刷新几次，看控制台有没有报错\" class=\"headerlink\" title=\"6.可以在浏览器上分别打开：http://10.110.176.226/  和  http://10.110.154.159/ 多刷新几次，看控制台有没有报错\"></a>6.可以在浏览器上分别打开：<a href=\"http://10.110.176.226/\">http://10.110.176.226/</a>  和  <a href=\"http://10.110.154.159/\">http://10.110.154.159/</a> 多刷新几次，看控制台有没有报错</h5><h3 id=\"二、storeClient项目打包流程：\"><a href=\"#二、storeClient项目打包流程：\" class=\"headerlink\" title=\"二、storeClient项目打包流程：\"></a>二、storeClient项目打包流程：</h3><h5 id=\"0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）-1\"><a href=\"#0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）-1\" class=\"headerlink\" title=\"0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\"></a>0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）</h5><h5 id=\"1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）-1\"><a href=\"#1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）-1\" class=\"headerlink\" title=\"1.SecureCRT连接到两台服务器（参照：http://wiki.letv.cn/pages/viewpage.action?pageId=65143852）\"></a>1.SecureCRT连接到两台服务器（参照：<a href=\"http://wiki.letv.cn/pages/viewpage.action?pageId=65143852\">http://wiki.letv.cn/pages/viewpage.action?pageId=65143852</a>）</h5><h5 id=\"2-分别都cd到storeClient目录下\"><a href=\"#2-分别都cd到storeClient目录下\" class=\"headerlink\" title=\"2.分别都cd到storeClient目录下\"></a>2.分别都cd到storeClient目录下</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /letv/storeClient</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在226上执行打包脚本（不要在159上执行）-1\"><a href=\"#3-在226上执行打包脚本（不要在159上执行）-1\" class=\"headerlink\" title=\"3.在226上执行打包脚本（不要在159上执行）\"></a>3.在226上执行打包脚本（不要在159上执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh build.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本-1\"><a href=\"#4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本-1\" class=\"headerlink\" title=\"4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"></a>4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh 159copy.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致-1\"><a href=\"#5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致-1\" class=\"headerlink\" title=\"5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\"></a>5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /letv/storeClient/.<span class=\"property\">nuxt</span>/</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-可以在浏览器上分别打开：http-10-110-176-226-store-和-http-10-110-154-159-store-多刷新几次，看有没有报错\"><a href=\"#6-可以在浏览器上分别打开：http-10-110-176-226-store-和-http-10-110-154-159-store-多刷新几次，看有没有报错\" class=\"headerlink\" title=\"6.可以在浏览器上分别打开：http://10.110.176.226/store  和  http://10.110.154.159/store 多刷新几次，看有没有报错\"></a>6.可以在浏览器上分别打开：<a href=\"http://10.110.176.226/store\">http://10.110.176.226/store</a>  和  <a href=\"http://10.110.154.159/store\">http://10.110.154.159/store</a> 多刷新几次，看有没有报错</h5><h5 id=\"7-如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\"><a href=\"#7-如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\" class=\"headerlink\" title=\"7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\"></a>7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 reload store</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>乐必中项目打包上线流程</p>","more":"<h3 id=\"一、gameStatic项目打包流程：\"><a href=\"#一、gameStatic项目打包流程：\" class=\"headerlink\" title=\"一、gameStatic项目打包流程：\"></a>一、gameStatic项目打包流程：</h3><h5 id=\"0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）\"><a href=\"#0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）\" class=\"headerlink\" title=\"0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\"></a>0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）</h5><h5 id=\"1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）\"><a href=\"#1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）\" class=\"headerlink\" title=\"1.SecureCRT连接到两台服务器（参照：http://wiki.letv.cn/pages/viewpage.action?pageId=65143852）\"></a>1.SecureCRT连接到两台服务器（参照：<a href=\"http://wiki.letv.cn/pages/viewpage.action?pageId=65143852\">http://wiki.letv.cn/pages/viewpage.action?pageId=65143852</a>）</h5><h5 id=\"2-分别都cd到gameStatic目录下\"><a href=\"#2-分别都cd到gameStatic目录下\" class=\"headerlink\" title=\"2.分别都cd到gameStatic目录下\"></a>2.分别都cd到gameStatic目录下</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /letv/gameStatic</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在226上执行打包脚本（不要在159上执行）\"><a href=\"#3-在226上执行打包脚本（不要在159上执行）\" class=\"headerlink\" title=\"3.在226上执行打包脚本（不要在159上执行）\"></a>3.在226上执行打包脚本（不要在159上执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh build.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"><a href=\"#4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\" class=\"headerlink\" title=\"4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"></a>4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh 159copy.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致\"><a href=\"#5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致\" class=\"headerlink\" title=\"5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\"></a>5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /letv/www</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-可以在浏览器上分别打开：http-10-110-176-226-和-http-10-110-154-159-多刷新几次，看控制台有没有报错\"><a href=\"#6-可以在浏览器上分别打开：http-10-110-176-226-和-http-10-110-154-159-多刷新几次，看控制台有没有报错\" class=\"headerlink\" title=\"6.可以在浏览器上分别打开：http://10.110.176.226/  和  http://10.110.154.159/ 多刷新几次，看控制台有没有报错\"></a>6.可以在浏览器上分别打开：<a href=\"http://10.110.176.226/\">http://10.110.176.226/</a>  和  <a href=\"http://10.110.154.159/\">http://10.110.154.159/</a> 多刷新几次，看控制台有没有报错</h5><h3 id=\"二、storeClient项目打包流程：\"><a href=\"#二、storeClient项目打包流程：\" class=\"headerlink\" title=\"二、storeClient项目打包流程：\"></a>二、storeClient项目打包流程：</h3><h5 id=\"0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）-1\"><a href=\"#0-合并代码到master-（记得合并时候仔细检查下有没有不能提交的代码）-1\" class=\"headerlink\" title=\"0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）\"></a>0.合并代码到master （记得合并时候仔细检查下有没有不能提交的代码）</h5><h5 id=\"1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）-1\"><a href=\"#1-SecureCRT连接到两台服务器（参照：http-wiki-letv-cn-pages-viewpage-action-pageId-65143852）-1\" class=\"headerlink\" title=\"1.SecureCRT连接到两台服务器（参照：http://wiki.letv.cn/pages/viewpage.action?pageId=65143852）\"></a>1.SecureCRT连接到两台服务器（参照：<a href=\"http://wiki.letv.cn/pages/viewpage.action?pageId=65143852\">http://wiki.letv.cn/pages/viewpage.action?pageId=65143852</a>）</h5><h5 id=\"2-分别都cd到storeClient目录下\"><a href=\"#2-分别都cd到storeClient目录下\" class=\"headerlink\" title=\"2.分别都cd到storeClient目录下\"></a>2.分别都cd到storeClient目录下</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /letv/storeClient</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在226上执行打包脚本（不要在159上执行）-1\"><a href=\"#3-在226上执行打包脚本（不要在159上执行）-1\" class=\"headerlink\" title=\"3.在226上执行打包脚本（不要在159上执行）\"></a>3.在226上执行打包脚本（不要在159上执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh build.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本-1\"><a href=\"#4-等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本-1\" class=\"headerlink\" title=\"4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本\"></a>4.等待226执行完成后（切记一定要执行完成），在159服务器上执行脚本</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh 159copy.<span class=\"property\">sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致-1\"><a href=\"#5-等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令-，查看两台服务器上文件修改时间是否一致-1\" class=\"headerlink\" title=\"5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致\"></a>5.等159服务器脚本执行完毕，为了确保没问题，可以分别执行下面命令 ，查看两台服务器上文件修改时间是否一致</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /letv/storeClient/.<span class=\"property\">nuxt</span>/</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-可以在浏览器上分别打开：http-10-110-176-226-store-和-http-10-110-154-159-store-多刷新几次，看有没有报错\"><a href=\"#6-可以在浏览器上分别打开：http-10-110-176-226-store-和-http-10-110-154-159-store-多刷新几次，看有没有报错\" class=\"headerlink\" title=\"6.可以在浏览器上分别打开：http://10.110.176.226/store  和  http://10.110.154.159/store 多刷新几次，看有没有报错\"></a>6.可以在浏览器上分别打开：<a href=\"http://10.110.176.226/store\">http://10.110.176.226/store</a>  和  <a href=\"http://10.110.154.159/store\">http://10.110.154.159/store</a> 多刷新几次，看有没有报错</h5><h5 id=\"7-如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\"><a href=\"#7-如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\" class=\"headerlink\" title=\"7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）\"></a>7.如果上面某个地址报错502，需要再对应服务器上走一遍下面的命令（没问题的服务器不用执行）</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 reload store</span><br></pre></td></tr></table></figure>"},{"title":"eslint实践","date":"2022-07-07T16:00:00.000Z","_content":"\neslint实践\n<!-- more -->\n\n#### 一、安装\n\n```bash\nnpm i eslint --D\n```\n\n#### 二、配置文件\n\n一个可参考的配置如下（注：由于项目是基于Uni-app的小程序项目，所以globals里需要加上uni、wx）\n\n.eslintrc.js\n```js\n/* eslint-disable */\nmodule.exports = {\n    root: true,\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    globals: {\n        uni: 'readonly',\n        plus: 'readonly',\n        wx: 'readonly',\n    },\n    extends: ['plugin:vue/recommended', 'standard'],\n    parserOptions: {\n        parser: '@babel/eslint-parser',\n        sourceType: 'module'\n    },\n    //自定义规则，当与基础规则发生冲突时，覆盖基础规则\n    //\"off\"或0-关闭规则;\n    //\"warn\"或1-开启规则，使用警告级别的错误;\n    //\"error\"或2-开启规则，使用错误级别的错误\n    rules: {\n        // 每行最大属性个数，如果是多行，每行最多一个属性\n        'vue/max-attributes-per-line': [\n            'error',\n            {\n                singleline: 10,\n                multiline: {\n                    max: 1\n                }\n            }\n        ],\n        // 忽略html标签自闭合 vue中html自终止标签是否写‘/’\n        'vue/html-self-closing': 'off',\n        'no-undef': 'off',\n        // 关闭禁用混合操作符\n        'no-mixed-operators': 'off',\n        // 单行html元素内容在新的一行\n        'vue/singleline-html-element-content-newline': 'off',\n        // 多行html元素内容在新的一行\n        'vue/multiline-html-element-content-newline': 'off',\n        // 关闭v-html的校验，因为我们可能会用到富文本编辑器\n        'vue/no-v-html': 'off',\n        'vue/multi-word-component-names': 'off',\n        'vue/component-definition-name-casing': 'off',\n        'vue/html-closing-bracket-newline': [\n            'error',\n            {\n                singleline: 'never',\n                multiline: 'always'\n            }\n        ],\n        // 一行内容最长有多少字符\n        'max-len': ['error', { code: 400 }],\n        //函数名称或function关键字与开始参数之间允许有空格:关 默认为开 与prettier冲突\n        'space-before-function-paren': ['error', 'never'],\n        //语句末尾不允许有';'：开\n        semi: ['error', 'never'],\n        //不允许使用var\n        'no-var': 2,\n        // 禁用tab\n        'no-tabs': 'off',\n        //是否允许promise中reject()内无内容\n        'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }]\n        // 不允许对象嵌套对象的大括号之间有空格 例如：{ query: { id: row.id }[这里]}\n        // 某些框架下会使用下边的配置，比如elementUI-admin\n        // 'object-curly-spacing': [\n        //   2,\n        //   'always',\n        //   {\n        //     objectsInObjects: false\n        //   }\n        // ]\n    }\n}\n```\n\n#### 三、使用\n\npackage.json里加上命令\n```bash\n\"scripts\": {\n    \"lint\": \"eslint --fix --ext .js,.vue ./src\"\n}\n```\n\n#### 四、配置规则\n\n除了最基础的eslint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)\n\n```bash\nnpm i @babel/eslint-parser -D\nnpm i eslint-config-standard -D\nnpm i eslint-plugin-standard -D\nnpm i eslint-plugin-vue -D\n\nnpm i eslint-plugin-import -D\nnpm i eslint-plugin-node -D\nnpm i eslint-plugin-prettier -D\nnpm i eslint-plugin-promise -D\n```\n\n#### 五、忽略lint文件\n\n.eslintignore\n```bash\n# 忽略打包的文件\ndist\n# 忽略uni-app官方的组件库错误和警告，官方的竟然通不过...\nsrc/components/uni-lechart\nsrc/components/uni-echarts\nsrc/uni_modules\n```\n\n#### 六、自动格式化\n\n##### webstorm\n\n1、在Preferences -> Languages & Frameworks -> JavaScript -> Code Quality Tools -> ESLint里启用\n\n2、在代码里右键，Fix Eslint Problems（还可以自己设置快捷键进行格式化）\n","source":"_posts/eslint实践.md","raw":"---\ntitle: eslint实践\ndate: 2022-07-08\ncategories: NODE JS\ntags: \n    - NODE\n    - JS\n#description: \n---\n\neslint实践\n<!-- more -->\n\n#### 一、安装\n\n```bash\nnpm i eslint --D\n```\n\n#### 二、配置文件\n\n一个可参考的配置如下（注：由于项目是基于Uni-app的小程序项目，所以globals里需要加上uni、wx）\n\n.eslintrc.js\n```js\n/* eslint-disable */\nmodule.exports = {\n    root: true,\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    globals: {\n        uni: 'readonly',\n        plus: 'readonly',\n        wx: 'readonly',\n    },\n    extends: ['plugin:vue/recommended', 'standard'],\n    parserOptions: {\n        parser: '@babel/eslint-parser',\n        sourceType: 'module'\n    },\n    //自定义规则，当与基础规则发生冲突时，覆盖基础规则\n    //\"off\"或0-关闭规则;\n    //\"warn\"或1-开启规则，使用警告级别的错误;\n    //\"error\"或2-开启规则，使用错误级别的错误\n    rules: {\n        // 每行最大属性个数，如果是多行，每行最多一个属性\n        'vue/max-attributes-per-line': [\n            'error',\n            {\n                singleline: 10,\n                multiline: {\n                    max: 1\n                }\n            }\n        ],\n        // 忽略html标签自闭合 vue中html自终止标签是否写‘/’\n        'vue/html-self-closing': 'off',\n        'no-undef': 'off',\n        // 关闭禁用混合操作符\n        'no-mixed-operators': 'off',\n        // 单行html元素内容在新的一行\n        'vue/singleline-html-element-content-newline': 'off',\n        // 多行html元素内容在新的一行\n        'vue/multiline-html-element-content-newline': 'off',\n        // 关闭v-html的校验，因为我们可能会用到富文本编辑器\n        'vue/no-v-html': 'off',\n        'vue/multi-word-component-names': 'off',\n        'vue/component-definition-name-casing': 'off',\n        'vue/html-closing-bracket-newline': [\n            'error',\n            {\n                singleline: 'never',\n                multiline: 'always'\n            }\n        ],\n        // 一行内容最长有多少字符\n        'max-len': ['error', { code: 400 }],\n        //函数名称或function关键字与开始参数之间允许有空格:关 默认为开 与prettier冲突\n        'space-before-function-paren': ['error', 'never'],\n        //语句末尾不允许有';'：开\n        semi: ['error', 'never'],\n        //不允许使用var\n        'no-var': 2,\n        // 禁用tab\n        'no-tabs': 'off',\n        //是否允许promise中reject()内无内容\n        'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }]\n        // 不允许对象嵌套对象的大括号之间有空格 例如：{ query: { id: row.id }[这里]}\n        // 某些框架下会使用下边的配置，比如elementUI-admin\n        // 'object-curly-spacing': [\n        //   2,\n        //   'always',\n        //   {\n        //     objectsInObjects: false\n        //   }\n        // ]\n    }\n}\n```\n\n#### 三、使用\n\npackage.json里加上命令\n```bash\n\"scripts\": {\n    \"lint\": \"eslint --fix --ext .js,.vue ./src\"\n}\n```\n\n#### 四、配置规则\n\n除了最基础的eslint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)\n\n```bash\nnpm i @babel/eslint-parser -D\nnpm i eslint-config-standard -D\nnpm i eslint-plugin-standard -D\nnpm i eslint-plugin-vue -D\n\nnpm i eslint-plugin-import -D\nnpm i eslint-plugin-node -D\nnpm i eslint-plugin-prettier -D\nnpm i eslint-plugin-promise -D\n```\n\n#### 五、忽略lint文件\n\n.eslintignore\n```bash\n# 忽略打包的文件\ndist\n# 忽略uni-app官方的组件库错误和警告，官方的竟然通不过...\nsrc/components/uni-lechart\nsrc/components/uni-echarts\nsrc/uni_modules\n```\n\n#### 六、自动格式化\n\n##### webstorm\n\n1、在Preferences -> Languages & Frameworks -> JavaScript -> Code Quality Tools -> ESLint里启用\n\n2、在代码里右键，Fix Eslint Problems（还可以自己设置快捷键进行格式化）\n","slug":"eslint实践","published":1,"updated":"2022-07-07T18:30:11.755Z","_id":"cl5bb2bqu0000bks65fmmacr2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>eslint实践</p>\n<span id=\"more\"></span>\n\n<h4 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i eslint --D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二、配置文件\"><a href=\"#二、配置文件\" class=\"headerlink\" title=\"二、配置文件\"></a>二、配置文件</h4><p>一个可参考的配置如下（注：由于项目是基于Uni-app的小程序项目，所以globals里需要加上uni、wx）</p>\n<p>.eslintrc.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">root</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">env</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">browser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">node</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">es6</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">globals</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">uni</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">plus</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">wx</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">extends</span>: [<span class=\"string\">&#x27;plugin:vue/recommended&#x27;</span>, <span class=\"string\">&#x27;standard&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">parserOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">parser</span>: <span class=\"string\">&#x27;@babel/eslint-parser&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">sourceType</span>: <span class=\"string\">&#x27;module&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//自定义规则，当与基础规则发生冲突时，覆盖基础规则</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;off&quot;或0-关闭规则;</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;warn&quot;或1-开启规则，使用警告级别的错误;</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;error&quot;或2-开启规则，使用错误级别的错误</span></span><br><span class=\"line\">    <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 每行最大属性个数，如果是多行，每行最多一个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/max-attributes-per-line&#x27;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">singleline</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">multiline</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">max</span>: <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"comment\">// 忽略html标签自闭合 vue中html自终止标签是否写‘/’</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/html-self-closing&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;no-undef&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 关闭禁用混合操作符</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-mixed-operators&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 单行html元素内容在新的一行</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/singleline-html-element-content-newline&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 多行html元素内容在新的一行</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/multiline-html-element-content-newline&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 关闭v-html的校验，因为我们可能会用到富文本编辑器</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/no-v-html&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/multi-word-component-names&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/component-definition-name-casing&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/html-closing-bracket-newline&#x27;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">singleline</span>: <span class=\"string\">&#x27;never&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">multiline</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"comment\">// 一行内容最长有多少字符</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;max-len&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"attr\">code</span>: <span class=\"number\">400</span> &#125;],</span><br><span class=\"line\">        <span class=\"comment\">//函数名称或function关键字与开始参数之间允许有空格:关 默认为开 与prettier冲突</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;space-before-function-paren&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">        <span class=\"comment\">//语句末尾不允许有&#x27;;&#x27;：开</span></span><br><span class=\"line\">        <span class=\"attr\">semi</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">        <span class=\"comment\">//不允许使用var</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-var&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 禁用tab</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-tabs&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">//是否允许promise中reject()内无内容</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;prefer-promise-reject-errors&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"attr\">allowEmptyReject</span>: <span class=\"literal\">true</span> &#125;]</span><br><span class=\"line\">        <span class=\"comment\">// 不允许对象嵌套对象的大括号之间有空格 例如：&#123; query: &#123; id: row.id &#125;[这里]&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// 某些框架下会使用下边的配置，比如elementUI-admin</span></span><br><span class=\"line\">        <span class=\"comment\">// &#x27;object-curly-spacing&#x27;: [</span></span><br><span class=\"line\">        <span class=\"comment\">//   2,</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;always&#x27;,</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//     objectsInObjects: false</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// ]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"三、使用\"><a href=\"#三、使用\" class=\"headerlink\" title=\"三、使用\"></a>三、使用</h4><p>package.json里加上命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lint&quot;</span>: <span class=\"string\">&quot;eslint --fix --ext .js,.vue ./src&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"四、配置规则\"><a href=\"#四、配置规则\" class=\"headerlink\" title=\"四、配置规则\"></a>四、配置规则</h4><p>除了最基础的eslint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @babel/eslint-parser -D</span><br><span class=\"line\">npm i eslint-config-standard -D</span><br><span class=\"line\">npm i eslint-plugin-standard -D</span><br><span class=\"line\">npm i eslint-plugin-vue -D</span><br><span class=\"line\"></span><br><span class=\"line\">npm i eslint-plugin-import -D</span><br><span class=\"line\">npm i eslint-plugin-node -D</span><br><span class=\"line\">npm i eslint-plugin-prettier -D</span><br><span class=\"line\">npm i eslint-plugin-promise -D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"五、忽略lint文件\"><a href=\"#五、忽略lint文件\" class=\"headerlink\" title=\"五、忽略lint文件\"></a>五、忽略lint文件</h4><p>.eslintignore</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略打包的文件</span></span><br><span class=\"line\">dist</span><br><span class=\"line\"><span class=\"comment\"># 忽略uni-app官方的组件库错误和警告，官方的竟然通不过...</span></span><br><span class=\"line\">src/components/uni-lechart</span><br><span class=\"line\">src/components/uni-echarts</span><br><span class=\"line\">src/uni_modules</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"六、自动格式化\"><a href=\"#六、自动格式化\" class=\"headerlink\" title=\"六、自动格式化\"></a>六、自动格式化</h4><h5 id=\"webstorm\"><a href=\"#webstorm\" class=\"headerlink\" title=\"webstorm\"></a>webstorm</h5><p>1、在Preferences -&gt; Languages &amp; Frameworks -&gt; JavaScript -&gt; Code Quality Tools -&gt; ESLint里启用</p>\n<p>2、在代码里右键，Fix Eslint Problems（还可以自己设置快捷键进行格式化）</p>\n","site":{"data":{}},"excerpt":"<p>eslint实践</p>","more":"<h4 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i eslint --D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二、配置文件\"><a href=\"#二、配置文件\" class=\"headerlink\" title=\"二、配置文件\"></a>二、配置文件</h4><p>一个可参考的配置如下（注：由于项目是基于Uni-app的小程序项目，所以globals里需要加上uni、wx）</p>\n<p>.eslintrc.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">root</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">env</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">browser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">node</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">es6</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">globals</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">uni</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">plus</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">wx</span>: <span class=\"string\">&#x27;readonly&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">extends</span>: [<span class=\"string\">&#x27;plugin:vue/recommended&#x27;</span>, <span class=\"string\">&#x27;standard&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">parserOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">parser</span>: <span class=\"string\">&#x27;@babel/eslint-parser&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">sourceType</span>: <span class=\"string\">&#x27;module&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//自定义规则，当与基础规则发生冲突时，覆盖基础规则</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;off&quot;或0-关闭规则;</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;warn&quot;或1-开启规则，使用警告级别的错误;</span></span><br><span class=\"line\">    <span class=\"comment\">//&quot;error&quot;或2-开启规则，使用错误级别的错误</span></span><br><span class=\"line\">    <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 每行最大属性个数，如果是多行，每行最多一个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/max-attributes-per-line&#x27;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">singleline</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">multiline</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">max</span>: <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"comment\">// 忽略html标签自闭合 vue中html自终止标签是否写‘/’</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/html-self-closing&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;no-undef&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 关闭禁用混合操作符</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-mixed-operators&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 单行html元素内容在新的一行</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/singleline-html-element-content-newline&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 多行html元素内容在新的一行</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/multiline-html-element-content-newline&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 关闭v-html的校验，因为我们可能会用到富文本编辑器</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/no-v-html&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/multi-word-component-names&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/component-definition-name-casing&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue/html-closing-bracket-newline&#x27;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">singleline</span>: <span class=\"string\">&#x27;never&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">multiline</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"comment\">// 一行内容最长有多少字符</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;max-len&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"attr\">code</span>: <span class=\"number\">400</span> &#125;],</span><br><span class=\"line\">        <span class=\"comment\">//函数名称或function关键字与开始参数之间允许有空格:关 默认为开 与prettier冲突</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;space-before-function-paren&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">        <span class=\"comment\">//语句末尾不允许有&#x27;;&#x27;：开</span></span><br><span class=\"line\">        <span class=\"attr\">semi</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">        <span class=\"comment\">//不允许使用var</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-var&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 禁用tab</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;no-tabs&#x27;</span>: <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">//是否允许promise中reject()内无内容</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;prefer-promise-reject-errors&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"attr\">allowEmptyReject</span>: <span class=\"literal\">true</span> &#125;]</span><br><span class=\"line\">        <span class=\"comment\">// 不允许对象嵌套对象的大括号之间有空格 例如：&#123; query: &#123; id: row.id &#125;[这里]&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// 某些框架下会使用下边的配置，比如elementUI-admin</span></span><br><span class=\"line\">        <span class=\"comment\">// &#x27;object-curly-spacing&#x27;: [</span></span><br><span class=\"line\">        <span class=\"comment\">//   2,</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;always&#x27;,</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//     objectsInObjects: false</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// ]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"三、使用\"><a href=\"#三、使用\" class=\"headerlink\" title=\"三、使用\"></a>三、使用</h4><p>package.json里加上命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lint&quot;</span>: <span class=\"string\">&quot;eslint --fix --ext .js,.vue ./src&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"四、配置规则\"><a href=\"#四、配置规则\" class=\"headerlink\" title=\"四、配置规则\"></a>四、配置规则</h4><p>除了最基础的eslint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @babel/eslint-parser -D</span><br><span class=\"line\">npm i eslint-config-standard -D</span><br><span class=\"line\">npm i eslint-plugin-standard -D</span><br><span class=\"line\">npm i eslint-plugin-vue -D</span><br><span class=\"line\"></span><br><span class=\"line\">npm i eslint-plugin-import -D</span><br><span class=\"line\">npm i eslint-plugin-node -D</span><br><span class=\"line\">npm i eslint-plugin-prettier -D</span><br><span class=\"line\">npm i eslint-plugin-promise -D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"五、忽略lint文件\"><a href=\"#五、忽略lint文件\" class=\"headerlink\" title=\"五、忽略lint文件\"></a>五、忽略lint文件</h4><p>.eslintignore</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略打包的文件</span></span><br><span class=\"line\">dist</span><br><span class=\"line\"><span class=\"comment\"># 忽略uni-app官方的组件库错误和警告，官方的竟然通不过...</span></span><br><span class=\"line\">src/components/uni-lechart</span><br><span class=\"line\">src/components/uni-echarts</span><br><span class=\"line\">src/uni_modules</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"六、自动格式化\"><a href=\"#六、自动格式化\" class=\"headerlink\" title=\"六、自动格式化\"></a>六、自动格式化</h4><h5 id=\"webstorm\"><a href=\"#webstorm\" class=\"headerlink\" title=\"webstorm\"></a>webstorm</h5><p>1、在Preferences -&gt; Languages &amp; Frameworks -&gt; JavaScript -&gt; Code Quality Tools -&gt; ESLint里启用</p>\n<p>2、在代码里右键，Fix Eslint Problems（还可以自己设置快捷键进行格式化）</p>"},{"title":"husky+lint-staged实现代码提交前校验","date":"2022-07-07T16:00:00.000Z","_content":"\nhusky+lint-staged实现代码提交前校验\n<!-- more -->\n    \n依赖：此文依赖于《eslint实践》和《stylelint实践》，假设项目里已经加上了eslint和stylelint的功能~\n\n#### 一、概念\n\n + husky: husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commitmsg、pre-push等\n + lint-staged: husky可以实现在pre-commit时校验代码，但整个项目校验会很慢，lint-staged能够让lint只检测暂存区的文件，所以速度很快\n\n#### 二、husky\n\n##### 1.安装husky\n```bash\nnpm install husky -D\n```\n\n##### 2.下面命令第一次执行一次就行\n```bash\nnpm set-script prepare \"husky install\"\nnpm run prepare\n```\n\n##### 3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）\n```bash\n\"scripts\": {\n  \"lint\": \"eslint --fix --ext .js,.vue ./src\",\n  \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-html\"\n}\n```\n\n##### 4.初始化husky\n```bash\nnpx husky add .husky/pre-commit \"npm test\"\n```\n\n执行完这步，我们会发现在项目根目录下会生存一个新的目录 .husky，并且目录下会生成一个文件 pre-commit，文件里有一条命令 npm test。\n其实到此，我们已经完成了husky的安装和初始化，也就是现在我们就可以验证husky了。\n\n```bash\ngit add .\ngit commit -m 'some message'\n```\n执行上面git命令，紧接着，我们在终端会看到在commit之前会先执行\"npm test\"。\n\n##### 5.修改 .husky/pre-commit 里命令\"npm test\"为如下lint命令\n```bash\nnpm run lint\nnpm run lintcss\n```\n再次执行git commit -m 'xxx'，此时会先npm run lint校验js，然后 npm run lintcss校验scss\\css\\sass等，如果有书写不规范，会提示失败，终止commit操作。\n\n#### 三、lint-staged\n\n上面已经实现了git commit之前对css和js进行书写规范校验，但是有个弊端：每次commit之前都会校验整个项目下的文件（当然排除.eslitignore和.stylelintignore里排除掉的），所以我们就需要借助 lint-staged，让其只校验本次有更改的文件，也就是本次git stage的文件。\n\n##### 1.安装 lint-staged\n```bash\nnpm install lint-staged --save-dev\n```\n\n_** 这里可能会出现错误提示『Cannot use import statement outside a module』，原因是因为默认安装的 lint-staged是 13.x版本，此版本需要nodejs版本为 12.20.x以上，而本地node版本为 12.14.1 **_\n_** 对lint-staged降级即可，最后实验出node 12.14.1环境下可以用的版本为 11.x，参照：https://github.com/okonet/lint-staged/issues/1084 **_\n```bash\nnpm install lint-staged@11 --save-dev\n```\n\n##### 2.package.json里配置 lint-staged\n```bash\n\"lint-staged\": {\n  \"*.{js,vue}\": [\n    \"eslint --fix\",\n    \"git add\"\n  ],\n  \"*.{scss,vue}\": [\n    \"stylelint --custom-syntax postcss-html\",\n    \"git add\"\n  ]\n}\n```\n\n##### 3.修改 .husky/pre-commit 为如下命令\n```bash\nnpx lint-staged\n```\n\n至此，再次git commit的时候，eslit和stylelint就只会校验本次修改的文件，大大提升校验速度。\n","source":"_posts/husky+lint-staged实现代码提交前校验.md","raw":"---\ntitle: husky+lint-staged实现代码提交前校验\ndate: 2022-07-08\ncategories: GIT\ntags: \n    - CI/CD\n    - GIT\n#description: \n---\n\nhusky+lint-staged实现代码提交前校验\n<!-- more -->\n    \n依赖：此文依赖于《eslint实践》和《stylelint实践》，假设项目里已经加上了eslint和stylelint的功能~\n\n#### 一、概念\n\n + husky: husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commitmsg、pre-push等\n + lint-staged: husky可以实现在pre-commit时校验代码，但整个项目校验会很慢，lint-staged能够让lint只检测暂存区的文件，所以速度很快\n\n#### 二、husky\n\n##### 1.安装husky\n```bash\nnpm install husky -D\n```\n\n##### 2.下面命令第一次执行一次就行\n```bash\nnpm set-script prepare \"husky install\"\nnpm run prepare\n```\n\n##### 3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）\n```bash\n\"scripts\": {\n  \"lint\": \"eslint --fix --ext .js,.vue ./src\",\n  \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-html\"\n}\n```\n\n##### 4.初始化husky\n```bash\nnpx husky add .husky/pre-commit \"npm test\"\n```\n\n执行完这步，我们会发现在项目根目录下会生存一个新的目录 .husky，并且目录下会生成一个文件 pre-commit，文件里有一条命令 npm test。\n其实到此，我们已经完成了husky的安装和初始化，也就是现在我们就可以验证husky了。\n\n```bash\ngit add .\ngit commit -m 'some message'\n```\n执行上面git命令，紧接着，我们在终端会看到在commit之前会先执行\"npm test\"。\n\n##### 5.修改 .husky/pre-commit 里命令\"npm test\"为如下lint命令\n```bash\nnpm run lint\nnpm run lintcss\n```\n再次执行git commit -m 'xxx'，此时会先npm run lint校验js，然后 npm run lintcss校验scss\\css\\sass等，如果有书写不规范，会提示失败，终止commit操作。\n\n#### 三、lint-staged\n\n上面已经实现了git commit之前对css和js进行书写规范校验，但是有个弊端：每次commit之前都会校验整个项目下的文件（当然排除.eslitignore和.stylelintignore里排除掉的），所以我们就需要借助 lint-staged，让其只校验本次有更改的文件，也就是本次git stage的文件。\n\n##### 1.安装 lint-staged\n```bash\nnpm install lint-staged --save-dev\n```\n\n_** 这里可能会出现错误提示『Cannot use import statement outside a module』，原因是因为默认安装的 lint-staged是 13.x版本，此版本需要nodejs版本为 12.20.x以上，而本地node版本为 12.14.1 **_\n_** 对lint-staged降级即可，最后实验出node 12.14.1环境下可以用的版本为 11.x，参照：https://github.com/okonet/lint-staged/issues/1084 **_\n```bash\nnpm install lint-staged@11 --save-dev\n```\n\n##### 2.package.json里配置 lint-staged\n```bash\n\"lint-staged\": {\n  \"*.{js,vue}\": [\n    \"eslint --fix\",\n    \"git add\"\n  ],\n  \"*.{scss,vue}\": [\n    \"stylelint --custom-syntax postcss-html\",\n    \"git add\"\n  ]\n}\n```\n\n##### 3.修改 .husky/pre-commit 为如下命令\n```bash\nnpx lint-staged\n```\n\n至此，再次git commit的时候，eslit和stylelint就只会校验本次修改的文件，大大提升校验速度。\n","slug":"husky+lint-staged实现代码提交前校验","published":1,"updated":"2022-07-07T17:36:36.882Z","_id":"cl5bb2br90004bks6d9mfcptn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>husky+lint-staged实现代码提交前校验</p>\n<span id=\"more\"></span>\n<p>依赖：此文依赖于《eslint实践》和《stylelint实践》，假设项目里已经加上了eslint和stylelint的功能~</p>\n<h4 id=\"一、概念\"><a href=\"#一、概念\" class=\"headerlink\" title=\"一、概念\"></a>一、概念</h4><ul>\n<li>husky: husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commitmsg、pre-push等</li>\n<li>lint-staged: husky可以实现在pre-commit时校验代码，但整个项目校验会很慢，lint-staged能够让lint只检测暂存区的文件，所以速度很快</li>\n</ul>\n<h4 id=\"二、husky\"><a href=\"#二、husky\" class=\"headerlink\" title=\"二、husky\"></a>二、husky</h4><h5 id=\"1-安装husky\"><a href=\"#1-安装husky\" class=\"headerlink\" title=\"1.安装husky\"></a>1.安装husky</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install husky -D</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-下面命令第一次执行一次就行\"><a href=\"#2-下面命令第一次执行一次就行\" class=\"headerlink\" title=\"2.下面命令第一次执行一次就行\"></a>2.下面命令第一次执行一次就行</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm set-script prepare <span class=\"string\">&quot;husky install&quot;</span></span><br><span class=\"line\">npm run prepare</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-在package-json里面添加lint命令（下例中添加了eslint和stylelint）\"><a href=\"#3-在package-json里面添加lint命令（下例中添加了eslint和stylelint）\" class=\"headerlink\" title=\"3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）\"></a>3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;lint&quot;</span>: <span class=\"string\">&quot;eslint --fix --ext .js,.vue ./src&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-html&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-初始化husky\"><a href=\"#4-初始化husky\" class=\"headerlink\" title=\"4.初始化husky\"></a>4.初始化husky</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx husky add .husky/pre-commit <span class=\"string\">&quot;npm test&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>执行完这步，我们会发现在项目根目录下会生存一个新的目录 .husky，并且目录下会生成一个文件 pre-commit，文件里有一条命令 npm test。<br>其实到此，我们已经完成了husky的安装和初始化，也就是现在我们就可以验证husky了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;some message&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>执行上面git命令，紧接着，我们在终端会看到在commit之前会先执行”npm test”。</p>\n<h5 id=\"5-修改-husky-x2F-pre-commit-里命令”npm-test”为如下lint命令\"><a href=\"#5-修改-husky-x2F-pre-commit-里命令”npm-test”为如下lint命令\" class=\"headerlink\" title=\"5.修改 .husky&#x2F;pre-commit 里命令”npm test”为如下lint命令\"></a>5.修改 .husky&#x2F;pre-commit 里命令”npm test”为如下lint命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run lint</span><br><span class=\"line\">npm run lintcss</span><br></pre></td></tr></table></figure>\n<p>再次执行git commit -m ‘xxx’，此时会先npm run lint校验js，然后 npm run lintcss校验scss\\css\\sass等，如果有书写不规范，会提示失败，终止commit操作。</p>\n<h4 id=\"三、lint-staged\"><a href=\"#三、lint-staged\" class=\"headerlink\" title=\"三、lint-staged\"></a>三、lint-staged</h4><p>上面已经实现了git commit之前对css和js进行书写规范校验，但是有个弊端：每次commit之前都会校验整个项目下的文件（当然排除.eslitignore和.stylelintignore里排除掉的），所以我们就需要借助 lint-staged，让其只校验本次有更改的文件，也就是本次git stage的文件。</p>\n<h5 id=\"1-安装-lint-staged\"><a href=\"#1-安装-lint-staged\" class=\"headerlink\" title=\"1.安装 lint-staged\"></a>1.安装 lint-staged</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lint-staged --save-dev</span><br></pre></td></tr></table></figure>\n\n<p><em>** 这里可能会出现错误提示『Cannot use import statement outside a module』，原因是因为默认安装的 lint-staged是 13.x版本，此版本需要nodejs版本为 12.20.x以上，而本地node版本为 12.14.1 **</em><br><em>** 对lint-staged降级即可，最后实验出node 12.14.1环境下可以用的版本为 11.x，参照：<a href=\"https://github.com/okonet/lint-staged/issues/1084\">https://github.com/okonet/lint-staged/issues/1084</a> **</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lint-staged@11 --save-dev</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-package-json里配置-lint-staged\"><a href=\"#2-package-json里配置-lint-staged\" class=\"headerlink\" title=\"2.package.json里配置 lint-staged\"></a>2.package.json里配置 lint-staged</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;lint-staged&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;*.&#123;js,vue&#125;&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;eslint --fix&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">&quot;*.&#123;scss,vue&#125;&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;stylelint --custom-syntax postcss-html&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-修改-husky-x2F-pre-commit-为如下命令\"><a href=\"#3-修改-husky-x2F-pre-commit-为如下命令\" class=\"headerlink\" title=\"3.修改 .husky&#x2F;pre-commit 为如下命令\"></a>3.修改 .husky&#x2F;pre-commit 为如下命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx lint-staged</span><br></pre></td></tr></table></figure>\n\n<p>至此，再次git commit的时候，eslit和stylelint就只会校验本次修改的文件，大大提升校验速度。</p>\n","site":{"data":{}},"excerpt":"<p>husky+lint-staged实现代码提交前校验</p>","more":"<p>依赖：此文依赖于《eslint实践》和《stylelint实践》，假设项目里已经加上了eslint和stylelint的功能~</p>\n<h4 id=\"一、概念\"><a href=\"#一、概念\" class=\"headerlink\" title=\"一、概念\"></a>一、概念</h4><ul>\n<li>husky: husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commitmsg、pre-push等</li>\n<li>lint-staged: husky可以实现在pre-commit时校验代码，但整个项目校验会很慢，lint-staged能够让lint只检测暂存区的文件，所以速度很快</li>\n</ul>\n<h4 id=\"二、husky\"><a href=\"#二、husky\" class=\"headerlink\" title=\"二、husky\"></a>二、husky</h4><h5 id=\"1-安装husky\"><a href=\"#1-安装husky\" class=\"headerlink\" title=\"1.安装husky\"></a>1.安装husky</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install husky -D</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-下面命令第一次执行一次就行\"><a href=\"#2-下面命令第一次执行一次就行\" class=\"headerlink\" title=\"2.下面命令第一次执行一次就行\"></a>2.下面命令第一次执行一次就行</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm set-script prepare <span class=\"string\">&quot;husky install&quot;</span></span><br><span class=\"line\">npm run prepare</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-在package-json里面添加lint命令（下例中添加了eslint和stylelint）\"><a href=\"#3-在package-json里面添加lint命令（下例中添加了eslint和stylelint）\" class=\"headerlink\" title=\"3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）\"></a>3.在package.json里面添加lint命令（下例中添加了eslint和stylelint）</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;lint&quot;</span>: <span class=\"string\">&quot;eslint --fix --ext .js,.vue ./src&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-html&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-初始化husky\"><a href=\"#4-初始化husky\" class=\"headerlink\" title=\"4.初始化husky\"></a>4.初始化husky</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx husky add .husky/pre-commit <span class=\"string\">&quot;npm test&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>执行完这步，我们会发现在项目根目录下会生存一个新的目录 .husky，并且目录下会生成一个文件 pre-commit，文件里有一条命令 npm test。<br>其实到此，我们已经完成了husky的安装和初始化，也就是现在我们就可以验证husky了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;some message&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>执行上面git命令，紧接着，我们在终端会看到在commit之前会先执行”npm test”。</p>\n<h5 id=\"5-修改-husky-x2F-pre-commit-里命令”npm-test”为如下lint命令\"><a href=\"#5-修改-husky-x2F-pre-commit-里命令”npm-test”为如下lint命令\" class=\"headerlink\" title=\"5.修改 .husky&#x2F;pre-commit 里命令”npm test”为如下lint命令\"></a>5.修改 .husky&#x2F;pre-commit 里命令”npm test”为如下lint命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run lint</span><br><span class=\"line\">npm run lintcss</span><br></pre></td></tr></table></figure>\n<p>再次执行git commit -m ‘xxx’，此时会先npm run lint校验js，然后 npm run lintcss校验scss\\css\\sass等，如果有书写不规范，会提示失败，终止commit操作。</p>\n<h4 id=\"三、lint-staged\"><a href=\"#三、lint-staged\" class=\"headerlink\" title=\"三、lint-staged\"></a>三、lint-staged</h4><p>上面已经实现了git commit之前对css和js进行书写规范校验，但是有个弊端：每次commit之前都会校验整个项目下的文件（当然排除.eslitignore和.stylelintignore里排除掉的），所以我们就需要借助 lint-staged，让其只校验本次有更改的文件，也就是本次git stage的文件。</p>\n<h5 id=\"1-安装-lint-staged\"><a href=\"#1-安装-lint-staged\" class=\"headerlink\" title=\"1.安装 lint-staged\"></a>1.安装 lint-staged</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lint-staged --save-dev</span><br></pre></td></tr></table></figure>\n\n<p><em>** 这里可能会出现错误提示『Cannot use import statement outside a module』，原因是因为默认安装的 lint-staged是 13.x版本，此版本需要nodejs版本为 12.20.x以上，而本地node版本为 12.14.1 **</em><br><em>** 对lint-staged降级即可，最后实验出node 12.14.1环境下可以用的版本为 11.x，参照：<a href=\"https://github.com/okonet/lint-staged/issues/1084\">https://github.com/okonet/lint-staged/issues/1084</a> **</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lint-staged@11 --save-dev</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-package-json里配置-lint-staged\"><a href=\"#2-package-json里配置-lint-staged\" class=\"headerlink\" title=\"2.package.json里配置 lint-staged\"></a>2.package.json里配置 lint-staged</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;lint-staged&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;*.&#123;js,vue&#125;&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;eslint --fix&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">&quot;*.&#123;scss,vue&#125;&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;stylelint --custom-syntax postcss-html&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-修改-husky-x2F-pre-commit-为如下命令\"><a href=\"#3-修改-husky-x2F-pre-commit-为如下命令\" class=\"headerlink\" title=\"3.修改 .husky&#x2F;pre-commit 为如下命令\"></a>3.修改 .husky&#x2F;pre-commit 为如下命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx lint-staged</span><br></pre></td></tr></table></figure>\n\n<p>至此，再次git commit的时候，eslit和stylelint就只会校验本次修改的文件，大大提升校验速度。</p>"},{"title":"stylelint实践","date":"2022-07-07T16:00:00.000Z","_content":"\nstylelint是一个强大的，现代的代码检查工具，可以帮助你在团队合作中强制执行样式约定.\n\n<!-- more -->\n\n#### 一、安装\n\n```bash\nnpm i stylelint --D\n```\n\n#### 二、配置文件\n\n可以有以下三种方式配置stylelint规则(一旦发现它们中的任何一个，将不再继续进行查找，进行解析，将使用解析后的对象)，下面以第三种举例：\n\n+ package.json 中的stylelint 属性\n+ .stylelintrc.js 文件\n+ stylelint.config.js 文件\n\n一个可参考的配置如下，另附常用配置释义：https://blog.csdn.net/BigChicken3/article/details/107151209/\n\n.stylelintrc.js\n```js\nmodule.exports = {\n  root: true,\n  extends: [\n    'stylelint-config-standard',\n    'stylelint-config-standard-scss',\n    'stylelint-config-recommended-vue',\n    'stylelint-config-rational-order',\n    'stylelint-config-prettier'\n  ],\n  plugins: ['stylelint-order', 'stylelint-scss'],\n  // https://stylelint.docschina.org/user-guide/rules/\n  rules: {\n    indentation: [2, { severity: 'warning' }],\n    'number-leading-zero': null,\n    'declaration-colon-space-after': 'always-single-line',\n    'declaration-block-no-redundant-longhand-properties': null,\n    'no-descending-specificity': null,\n    'no-empty-source': null,\n    'no-duplicate-selectors': null,\n    'selector-type-no-unknown': null,\n    'selector-descendant-combinator-no-non-space': null,\n    // 允许嵌套的深度最多 10 层\n    'max-nesting-depth': 10,\n    // 防止::deep报错\n    'selector-pseudo-element-no-unknown': null,\n    // 防止类似@mixin报错\n    'at-rule-no-unknown': null,\n    // 支持rpx\n    'unit-no-unknown': [true, { ignoreUnits: ['rpx'] }],\n    // 支持import引入scss\n    'scss/at-import-partial-extension': ['always', { except: ['scss'] }],\n    'selector-class-pattern': null,\n    'font-family-no-missing-generic-family-keyword': null\n  }\n}\n```\n\n#### 三、使用\n\npackage.json里加上命令\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix\"\n}\n```\n\n#### 四、scss\n\n##### 1、支持scss\n~~上面的命令只能支持校验css文件，由于项目中使用到的是scss，所以需要另外安装postcss-scss，并使用customSyntax，如下：~~\n\n```bash\nnpm i postcss-scss -D\n```\n\n~~package.json里命令修改为~~\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-scss\"\n}\n```\n\n##### 2、避坑\n\n** 划重点划重点划重点 **\n\n一番实验下来，发现这样配置后发现：vue文件里除了scss和template代码块，还有script代码块，如果此时用 stylelint 校验，会同时校验script代码，嗷~~~\n所以果断舍弃 postcss-scss，换成 postcss-html，修改后配置如下：\n\n```bash\nnpm i postcss-html -D\n```\npackage.json里命令修改为\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-html\"\n}\n```\n\n#### 五、配置规则\n\n除了最基础的stylelint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)\n\n```bash\nnpm i stylelint-config-standard -D // stylelint的推荐配置\nnpm i stylelint-order -D // 格式化css文件时对代码的属性进行排序\nnpm i stylelint-config-standard-scss -D // stylelint的推荐scss配置\n\nnpm i stylelint-config-prettier -D\nnpm i stylelint-config-rational-order -D\nnpm i stylelint-config-recommended-vue -D\nnpm i stylelint-scss -D\n```\n\n#### 六、忽略lint文件\n\n同样有三种方式可以配置忽略文件，如果是忽略目录或者文件，推荐方法2\n\n+ .stylelintrc.js中配置ignoreFiles\n+ .stylelintignore 文件\n+ 在代码块上加 /* stylelint-disable */\n\n.stylelintignore\n```bash\nsrc/uni_*\nsrc/components/uni-*\nsrc/wxcomponent\n```\n\n#### 七、自动格式化\n\n据说vscode里有stylelint的插件，安装后可以实现快捷键快速格式化~，然而对于webstorm用户，也有办法：\n\n##### 1、可以在webpack里配置，热更新的时候自动stylelint格式化\n\n此时就需要用到库 stylelint-webpack-plugin\n\n```bash\nnpm i stylelint-webpack-plugin -D\n```\n\nvue.config.js\n```bash\nmodule.exports = {\n  configureWebpack: {\n    plugins: [\n      new StyleLintPlugin({\n        files: ['src/**/*.{vue,css,sass,scss}'],\n        fix: false, // 是否自动修复，自动修复并不能修复全部问题，所以前期建议设置成false，自己手动解决\n        cache: true\n      })\n    ]\n  }\n}\n```\n\n##### 2、在webstorm里配置 External tools\n\n请参照：https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm\n","source":"_posts/stylelint实践.md","raw":"---\ntitle: stylelint实践\ndate: 2022-07-08\ncategories: NODE CSS\ntags: \n    - NODE\n    - CSS\n#description: \n---\n\nstylelint是一个强大的，现代的代码检查工具，可以帮助你在团队合作中强制执行样式约定.\n\n<!-- more -->\n\n#### 一、安装\n\n```bash\nnpm i stylelint --D\n```\n\n#### 二、配置文件\n\n可以有以下三种方式配置stylelint规则(一旦发现它们中的任何一个，将不再继续进行查找，进行解析，将使用解析后的对象)，下面以第三种举例：\n\n+ package.json 中的stylelint 属性\n+ .stylelintrc.js 文件\n+ stylelint.config.js 文件\n\n一个可参考的配置如下，另附常用配置释义：https://blog.csdn.net/BigChicken3/article/details/107151209/\n\n.stylelintrc.js\n```js\nmodule.exports = {\n  root: true,\n  extends: [\n    'stylelint-config-standard',\n    'stylelint-config-standard-scss',\n    'stylelint-config-recommended-vue',\n    'stylelint-config-rational-order',\n    'stylelint-config-prettier'\n  ],\n  plugins: ['stylelint-order', 'stylelint-scss'],\n  // https://stylelint.docschina.org/user-guide/rules/\n  rules: {\n    indentation: [2, { severity: 'warning' }],\n    'number-leading-zero': null,\n    'declaration-colon-space-after': 'always-single-line',\n    'declaration-block-no-redundant-longhand-properties': null,\n    'no-descending-specificity': null,\n    'no-empty-source': null,\n    'no-duplicate-selectors': null,\n    'selector-type-no-unknown': null,\n    'selector-descendant-combinator-no-non-space': null,\n    // 允许嵌套的深度最多 10 层\n    'max-nesting-depth': 10,\n    // 防止::deep报错\n    'selector-pseudo-element-no-unknown': null,\n    // 防止类似@mixin报错\n    'at-rule-no-unknown': null,\n    // 支持rpx\n    'unit-no-unknown': [true, { ignoreUnits: ['rpx'] }],\n    // 支持import引入scss\n    'scss/at-import-partial-extension': ['always', { except: ['scss'] }],\n    'selector-class-pattern': null,\n    'font-family-no-missing-generic-family-keyword': null\n  }\n}\n```\n\n#### 三、使用\n\npackage.json里加上命令\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix\"\n}\n```\n\n#### 四、scss\n\n##### 1、支持scss\n~~上面的命令只能支持校验css文件，由于项目中使用到的是scss，所以需要另外安装postcss-scss，并使用customSyntax，如下：~~\n\n```bash\nnpm i postcss-scss -D\n```\n\n~~package.json里命令修改为~~\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-scss\"\n}\n```\n\n##### 2、避坑\n\n** 划重点划重点划重点 **\n\n一番实验下来，发现这样配置后发现：vue文件里除了scss和template代码块，还有script代码块，如果此时用 stylelint 校验，会同时校验script代码，嗷~~~\n所以果断舍弃 postcss-scss，换成 postcss-html，修改后配置如下：\n\n```bash\nnpm i postcss-html -D\n```\npackage.json里命令修改为\n```bash\n\"scripts\": {\n    \"lintcss\": \"stylelint src/**/*.{scss,vue} --fix --custom-syntax postcss-html\"\n}\n```\n\n#### 五、配置规则\n\n除了最基础的stylelint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)\n\n```bash\nnpm i stylelint-config-standard -D // stylelint的推荐配置\nnpm i stylelint-order -D // 格式化css文件时对代码的属性进行排序\nnpm i stylelint-config-standard-scss -D // stylelint的推荐scss配置\n\nnpm i stylelint-config-prettier -D\nnpm i stylelint-config-rational-order -D\nnpm i stylelint-config-recommended-vue -D\nnpm i stylelint-scss -D\n```\n\n#### 六、忽略lint文件\n\n同样有三种方式可以配置忽略文件，如果是忽略目录或者文件，推荐方法2\n\n+ .stylelintrc.js中配置ignoreFiles\n+ .stylelintignore 文件\n+ 在代码块上加 /* stylelint-disable */\n\n.stylelintignore\n```bash\nsrc/uni_*\nsrc/components/uni-*\nsrc/wxcomponent\n```\n\n#### 七、自动格式化\n\n据说vscode里有stylelint的插件，安装后可以实现快捷键快速格式化~，然而对于webstorm用户，也有办法：\n\n##### 1、可以在webpack里配置，热更新的时候自动stylelint格式化\n\n此时就需要用到库 stylelint-webpack-plugin\n\n```bash\nnpm i stylelint-webpack-plugin -D\n```\n\nvue.config.js\n```bash\nmodule.exports = {\n  configureWebpack: {\n    plugins: [\n      new StyleLintPlugin({\n        files: ['src/**/*.{vue,css,sass,scss}'],\n        fix: false, // 是否自动修复，自动修复并不能修复全部问题，所以前期建议设置成false，自己手动解决\n        cache: true\n      })\n    ]\n  }\n}\n```\n\n##### 2、在webstorm里配置 External tools\n\n请参照：https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm\n","slug":"stylelint实践","published":1,"updated":"2022-07-07T18:13:48.528Z","_id":"cl5bb2bs4000bbks63u9uhosg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>stylelint是一个强大的，现代的代码检查工具，可以帮助你在团队合作中强制执行样式约定.</p>\n<span id=\"more\"></span>\n\n<h4 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint --D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二、配置文件\"><a href=\"#二、配置文件\" class=\"headerlink\" title=\"二、配置文件\"></a>二、配置文件</h4><p>可以有以下三种方式配置stylelint规则(一旦发现它们中的任何一个，将不再继续进行查找，进行解析，将使用解析后的对象)，下面以第三种举例：</p>\n<ul>\n<li>package.json 中的stylelint 属性</li>\n<li>.stylelintrc.js 文件</li>\n<li>stylelint.config.js 文件</li>\n</ul>\n<p>一个可参考的配置如下，另附常用配置释义：<a href=\"https://blog.csdn.net/BigChicken3/article/details/107151209/\">https://blog.csdn.net/BigChicken3/article/details/107151209/</a></p>\n<p>.stylelintrc.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">root</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">extends</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-standard&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-standard-scss&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-recommended-vue&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-rational-order&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-prettier&#x27;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;stylelint-order&#x27;</span>, <span class=\"string\">&#x27;stylelint-scss&#x27;</span>],</span><br><span class=\"line\">  <span class=\"comment\">// https://stylelint.docschina.org/user-guide/rules/</span></span><br><span class=\"line\">  <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">indentation</span>: [<span class=\"number\">2</span>, &#123; <span class=\"attr\">severity</span>: <span class=\"string\">&#x27;warning&#x27;</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;number-leading-zero&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;declaration-colon-space-after&#x27;</span>: <span class=\"string\">&#x27;always-single-line&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;declaration-block-no-redundant-longhand-properties&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-descending-specificity&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-empty-source&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-duplicate-selectors&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-type-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-descendant-combinator-no-non-space&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 允许嵌套的深度最多 10 层</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;max-nesting-depth&#x27;</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 防止::deep报错</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-pseudo-element-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 防止类似@mixin报错</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;at-rule-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 支持rpx</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;unit-no-unknown&#x27;</span>: [<span class=\"literal\">true</span>, &#123; <span class=\"attr\">ignoreUnits</span>: [<span class=\"string\">&#x27;rpx&#x27;</span>] &#125;],</span><br><span class=\"line\">    <span class=\"comment\">// 支持import引入scss</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;scss/at-import-partial-extension&#x27;</span>: [<span class=\"string\">&#x27;always&#x27;</span>, &#123; <span class=\"attr\">except</span>: [<span class=\"string\">&#x27;scss&#x27;</span>] &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-class-pattern&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;font-family-no-missing-generic-family-keyword&#x27;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"三、使用\"><a href=\"#三、使用\" class=\"headerlink\" title=\"三、使用\"></a>三、使用</h4><p>package.json里加上命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"四、scss\"><a href=\"#四、scss\" class=\"headerlink\" title=\"四、scss\"></a>四、scss</h4><h5 id=\"1、支持scss\"><a href=\"#1、支持scss\" class=\"headerlink\" title=\"1、支持scss\"></a>1、支持scss</h5><p><del>上面的命令只能支持校验css文件，由于项目中使用到的是scss，所以需要另外安装postcss-scss，并使用customSyntax，如下：</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i postcss-scss -D</span><br></pre></td></tr></table></figure>\n\n<p><del>package.json里命令修改为</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-scss&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2、避坑\"><a href=\"#2、避坑\" class=\"headerlink\" title=\"2、避坑\"></a>2、避坑</h5><p>** 划重点划重点划重点 **</p>\n<p>一番实验下来，发现这样配置后发现：vue文件里除了scss和template代码块，还有script代码块，如果此时用 stylelint 校验，会同时校验script代码，嗷~~~<br>所以果断舍弃 postcss-scss，换成 postcss-html，修改后配置如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i postcss-html -D</span><br></pre></td></tr></table></figure>\n<p>package.json里命令修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-html&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"五、配置规则\"><a href=\"#五、配置规则\" class=\"headerlink\" title=\"五、配置规则\"></a>五、配置规则</h4><p>除了最基础的stylelint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint-config-standard -D // stylelint的推荐配置</span><br><span class=\"line\">npm i stylelint-order -D // 格式化css文件时对代码的属性进行排序</span><br><span class=\"line\">npm i stylelint-config-standard-scss -D // stylelint的推荐scss配置</span><br><span class=\"line\"></span><br><span class=\"line\">npm i stylelint-config-prettier -D</span><br><span class=\"line\">npm i stylelint-config-rational-order -D</span><br><span class=\"line\">npm i stylelint-config-recommended-vue -D</span><br><span class=\"line\">npm i stylelint-scss -D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"六、忽略lint文件\"><a href=\"#六、忽略lint文件\" class=\"headerlink\" title=\"六、忽略lint文件\"></a>六、忽略lint文件</h4><p>同样有三种方式可以配置忽略文件，如果是忽略目录或者文件，推荐方法2</p>\n<ul>\n<li>.stylelintrc.js中配置ignoreFiles</li>\n<li>.stylelintignore 文件</li>\n<li>在代码块上加 &#x2F;* stylelint-disable *&#x2F;</li>\n</ul>\n<p>.stylelintignore</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/uni_*</span><br><span class=\"line\">src/components/uni-*</span><br><span class=\"line\">src/wxcomponent</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"七、自动格式化\"><a href=\"#七、自动格式化\" class=\"headerlink\" title=\"七、自动格式化\"></a>七、自动格式化</h4><p>据说vscode里有stylelint的插件，安装后可以实现快捷键快速格式化~，然而对于webstorm用户，也有办法：</p>\n<h5 id=\"1、可以在webpack里配置，热更新的时候自动stylelint格式化\"><a href=\"#1、可以在webpack里配置，热更新的时候自动stylelint格式化\" class=\"headerlink\" title=\"1、可以在webpack里配置，热更新的时候自动stylelint格式化\"></a>1、可以在webpack里配置，热更新的时候自动stylelint格式化</h5><p>此时就需要用到库 stylelint-webpack-plugin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>vue.config.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  configureWebpack: &#123;</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">      new StyleLintPlugin(&#123;</span><br><span class=\"line\">        files: [<span class=\"string\">&#x27;src/**/*.&#123;vue,css,sass,scss&#125;&#x27;</span>],</span><br><span class=\"line\">        fix: <span class=\"literal\">false</span>, // 是否自动修复，自动修复并不能修复全部问题，所以前期建议设置成<span class=\"literal\">false</span>，自己手动解决</span><br><span class=\"line\">        cache: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2、在webstorm里配置-External-tools\"><a href=\"#2、在webstorm里配置-External-tools\" class=\"headerlink\" title=\"2、在webstorm里配置 External tools\"></a>2、在webstorm里配置 External tools</h5><p>请参照：<a href=\"https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm\">https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm</a></p>\n","site":{"data":{}},"excerpt":"<p>stylelint是一个强大的，现代的代码检查工具，可以帮助你在团队合作中强制执行样式约定.</p>","more":"<h4 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint --D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二、配置文件\"><a href=\"#二、配置文件\" class=\"headerlink\" title=\"二、配置文件\"></a>二、配置文件</h4><p>可以有以下三种方式配置stylelint规则(一旦发现它们中的任何一个，将不再继续进行查找，进行解析，将使用解析后的对象)，下面以第三种举例：</p>\n<ul>\n<li>package.json 中的stylelint 属性</li>\n<li>.stylelintrc.js 文件</li>\n<li>stylelint.config.js 文件</li>\n</ul>\n<p>一个可参考的配置如下，另附常用配置释义：<a href=\"https://blog.csdn.net/BigChicken3/article/details/107151209/\">https://blog.csdn.net/BigChicken3/article/details/107151209/</a></p>\n<p>.stylelintrc.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">root</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">extends</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-standard&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-standard-scss&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-recommended-vue&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-rational-order&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;stylelint-config-prettier&#x27;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;stylelint-order&#x27;</span>, <span class=\"string\">&#x27;stylelint-scss&#x27;</span>],</span><br><span class=\"line\">  <span class=\"comment\">// https://stylelint.docschina.org/user-guide/rules/</span></span><br><span class=\"line\">  <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">indentation</span>: [<span class=\"number\">2</span>, &#123; <span class=\"attr\">severity</span>: <span class=\"string\">&#x27;warning&#x27;</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;number-leading-zero&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;declaration-colon-space-after&#x27;</span>: <span class=\"string\">&#x27;always-single-line&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;declaration-block-no-redundant-longhand-properties&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-descending-specificity&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-empty-source&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-duplicate-selectors&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-type-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-descendant-combinator-no-non-space&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 允许嵌套的深度最多 10 层</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;max-nesting-depth&#x27;</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 防止::deep报错</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-pseudo-element-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 防止类似@mixin报错</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;at-rule-no-unknown&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 支持rpx</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;unit-no-unknown&#x27;</span>: [<span class=\"literal\">true</span>, &#123; <span class=\"attr\">ignoreUnits</span>: [<span class=\"string\">&#x27;rpx&#x27;</span>] &#125;],</span><br><span class=\"line\">    <span class=\"comment\">// 支持import引入scss</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;scss/at-import-partial-extension&#x27;</span>: [<span class=\"string\">&#x27;always&#x27;</span>, &#123; <span class=\"attr\">except</span>: [<span class=\"string\">&#x27;scss&#x27;</span>] &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;selector-class-pattern&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;font-family-no-missing-generic-family-keyword&#x27;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"三、使用\"><a href=\"#三、使用\" class=\"headerlink\" title=\"三、使用\"></a>三、使用</h4><p>package.json里加上命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"四、scss\"><a href=\"#四、scss\" class=\"headerlink\" title=\"四、scss\"></a>四、scss</h4><h5 id=\"1、支持scss\"><a href=\"#1、支持scss\" class=\"headerlink\" title=\"1、支持scss\"></a>1、支持scss</h5><p><del>上面的命令只能支持校验css文件，由于项目中使用到的是scss，所以需要另外安装postcss-scss，并使用customSyntax，如下：</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i postcss-scss -D</span><br></pre></td></tr></table></figure>\n\n<p><del>package.json里命令修改为</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-scss&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2、避坑\"><a href=\"#2、避坑\" class=\"headerlink\" title=\"2、避坑\"></a>2、避坑</h5><p>** 划重点划重点划重点 **</p>\n<p>一番实验下来，发现这样配置后发现：vue文件里除了scss和template代码块，还有script代码块，如果此时用 stylelint 校验，会同时校验script代码，嗷~~~<br>所以果断舍弃 postcss-scss，换成 postcss-html，修改后配置如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i postcss-html -D</span><br></pre></td></tr></table></figure>\n<p>package.json里命令修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lintcss&quot;</span>: <span class=\"string\">&quot;stylelint src/**/*.&#123;scss,vue&#125; --fix --custom-syntax postcss-html&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"五、配置规则\"><a href=\"#五、配置规则\" class=\"headerlink\" title=\"五、配置规则\"></a>五、配置规则</h4><p>除了最基础的stylelint包，我们还需要如下库(后面几个有可能不需要，没一个一个删掉实验~)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint-config-standard -D // stylelint的推荐配置</span><br><span class=\"line\">npm i stylelint-order -D // 格式化css文件时对代码的属性进行排序</span><br><span class=\"line\">npm i stylelint-config-standard-scss -D // stylelint的推荐scss配置</span><br><span class=\"line\"></span><br><span class=\"line\">npm i stylelint-config-prettier -D</span><br><span class=\"line\">npm i stylelint-config-rational-order -D</span><br><span class=\"line\">npm i stylelint-config-recommended-vue -D</span><br><span class=\"line\">npm i stylelint-scss -D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"六、忽略lint文件\"><a href=\"#六、忽略lint文件\" class=\"headerlink\" title=\"六、忽略lint文件\"></a>六、忽略lint文件</h4><p>同样有三种方式可以配置忽略文件，如果是忽略目录或者文件，推荐方法2</p>\n<ul>\n<li>.stylelintrc.js中配置ignoreFiles</li>\n<li>.stylelintignore 文件</li>\n<li>在代码块上加 &#x2F;* stylelint-disable *&#x2F;</li>\n</ul>\n<p>.stylelintignore</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/uni_*</span><br><span class=\"line\">src/components/uni-*</span><br><span class=\"line\">src/wxcomponent</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"七、自动格式化\"><a href=\"#七、自动格式化\" class=\"headerlink\" title=\"七、自动格式化\"></a>七、自动格式化</h4><p>据说vscode里有stylelint的插件，安装后可以实现快捷键快速格式化~，然而对于webstorm用户，也有办法：</p>\n<h5 id=\"1、可以在webpack里配置，热更新的时候自动stylelint格式化\"><a href=\"#1、可以在webpack里配置，热更新的时候自动stylelint格式化\" class=\"headerlink\" title=\"1、可以在webpack里配置，热更新的时候自动stylelint格式化\"></a>1、可以在webpack里配置，热更新的时候自动stylelint格式化</h5><p>此时就需要用到库 stylelint-webpack-plugin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i stylelint-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n\n<p>vue.config.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  configureWebpack: &#123;</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">      new StyleLintPlugin(&#123;</span><br><span class=\"line\">        files: [<span class=\"string\">&#x27;src/**/*.&#123;vue,css,sass,scss&#125;&#x27;</span>],</span><br><span class=\"line\">        fix: <span class=\"literal\">false</span>, // 是否自动修复，自动修复并不能修复全部问题，所以前期建议设置成<span class=\"literal\">false</span>，自己手动解决</span><br><span class=\"line\">        cache: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2、在webstorm里配置-External-tools\"><a href=\"#2、在webstorm里配置-External-tools\" class=\"headerlink\" title=\"2、在webstorm里配置 External tools\"></a>2、在webstorm里配置 External tools</h5><p>请参照：<a href=\"https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm\">https://stackoverflow.com/questions/54304313/stylelint-fix-in-webstorm</a></p>"},{"title":"uni-app引用原生小程序组件","date":"2022-07-07T16:00:00.000Z","_content":"\nuni-app引用原生小程序组件 TODO\n<!-- more -->\n","source":"_posts/uni-app引用原生小程序组件.md","raw":"---\ntitle: uni-app引用原生小程序组件\ndate: 2022-07-08\ncategories: UniApp 小程序\ntags: \n    - 小程序\n    - UniApp\n#description: \n---\n\nuni-app引用原生小程序组件 TODO\n<!-- more -->\n","slug":"uni-app引用原生小程序组件","published":1,"updated":"2022-07-07T18:35:03.204Z","_id":"cl5bdaau9000ibks628mb5fsz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>uni-app引用原生小程序组件 TODO</p>\n<span id=\"more\"></span>\n","site":{"data":{}},"excerpt":"<p>uni-app引用原生小程序组件 TODO</p>","more":""},{"title":"uni-app项目往cli模式迁移","date":"2022-07-07T16:00:00.000Z","_content":"\nuni-app项目往cli模式迁移 TODO\n<!-- more -->\n\n1.cli模式run dev比run build后的包大的原因（watch？）\n2.cli模式run dev --minimize 后打包慢？ -  勾选『预览及真机调试时主包、分包体积上限调整为4M』来规预览慢的问题（思考：为啥hbuilder加上压缩后打包快？）\n3.往cli模式迁移步骤：https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli\n\n\ntodo:\n1.基于cli搭建的项目的分包直接在pages目录配置？\n2.zb-table和lime-charts注意事项（zb-table报错\"egenerator-runtime\"解决方案：https://article.itxueyuan.com/Owm5jb）\n","source":"_posts/uni-app项目往cli模式迁移.md","raw":"---\ntitle: uni-app项目往cli模式迁移\ndate: 2022-07-08\ncategories: UniApp 小程序\ntags: \n    - 小程序\n    - UniApp\n#description: \n---\n\nuni-app项目往cli模式迁移 TODO\n<!-- more -->\n\n1.cli模式run dev比run build后的包大的原因（watch？）\n2.cli模式run dev --minimize 后打包慢？ -  勾选『预览及真机调试时主包、分包体积上限调整为4M』来规预览慢的问题（思考：为啥hbuilder加上压缩后打包快？）\n3.往cli模式迁移步骤：https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli\n\n\ntodo:\n1.基于cli搭建的项目的分包直接在pages目录配置？\n2.zb-table和lime-charts注意事项（zb-table报错\"egenerator-runtime\"解决方案：https://article.itxueyuan.com/Owm5jb）\n","slug":"uni-app项目往cli模式迁移","published":1,"updated":"2022-07-07T18:44:10.037Z","_id":"cl5bdbycr000sbks6gmaj8vti","comments":1,"layout":"post","photos":[],"link":"","content":"<p>uni-app项目往cli模式迁移 TODO</p>\n<span id=\"more\"></span>\n\n<p>1.cli模式run dev比run build后的包大的原因（watch？）<br>2.cli模式run dev –minimize 后打包慢？ -  勾选『预览及真机调试时主包、分包体积上限调整为4M』来规预览慢的问题（思考：为啥hbuilder加上压缩后打包快？）<br>3.往cli模式迁移步骤：<a href=\"https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli\">https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli</a></p>\n<p>todo:<br>1.基于cli搭建的项目的分包直接在pages目录配置？<br>2.zb-table和lime-charts注意事项（zb-table报错”egenerator-runtime”解决方案：<a href=\"https://article.itxueyuan.com/Owm5jb%EF%BC%89\">https://article.itxueyuan.com/Owm5jb）</a></p>\n","site":{"data":{}},"excerpt":"<p>uni-app项目往cli模式迁移 TODO</p>","more":"<p>1.cli模式run dev比run build后的包大的原因（watch？）<br>2.cli模式run dev –minimize 后打包慢？ -  勾选『预览及真机调试时主包、分包体积上限调整为4M』来规预览慢的问题（思考：为啥hbuilder加上压缩后打包快？）<br>3.往cli模式迁移步骤：<a href=\"https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli\">https://uniapp.dcloud.io/quickstart-cli.html#install-vue-cli</a></p>\n<p>todo:<br>1.基于cli搭建的项目的分包直接在pages目录配置？<br>2.zb-table和lime-charts注意事项（zb-table报错”egenerator-runtime”解决方案：<a href=\"https://article.itxueyuan.com/Owm5jb%EF%BC%89\">https://article.itxueyuan.com/Owm5jb）</a></p>"}],"PostAsset":[{"_id":"source/_posts/proxy代理/图片1.png","slug":"图片1.png","post":"cl4e3aywc0011k4rqhexz86lw","modified":0,"renderable":0},{"_id":"source/_posts/proxy代理/图片2.png","slug":"图片2.png","post":"cl4e3aywc0011k4rqhexz86lw","modified":0,"renderable":0},{"_id":"source/_posts/proxy代理/图片3.png","slug":"图片3.png","post":"cl4e3aywc0011k4rqhexz86lw","modified":0,"renderable":0},{"_id":"source/_posts/proxy代理/图片4.png","slug":"图片4.png","post":"cl4e3aywc0011k4rqhexz86lw","modified":0,"renderable":0},{"_id":"source/_posts/正则/图片1.png","slug":"图片1.png","post":"cl4e3az0s003yk4rq66a3ejwm","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl4e3ayvu0000k4rqg4ve5aiv","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3ayw4000ak4rqpv29lkd6"},{"post_id":"cl4e3ayvz0001k4rq3lslezm3","category_id":"cl4e3ayw30007k4rq5q27pri6","_id":"cl4e3ayw6000hk4rqttnm9npk"},{"post_id":"cl4e3ayw20005k4rqd8xdmpd0","category_id":"cl4e3ayw30007k4rq5q27pri6","_id":"cl4e3ayw9000ok4rqrahrki7w"},{"post_id":"cl4e3ayw6000gk4rqjj512e3p","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3aywa000sk4rqdker81rj"},{"post_id":"cl4e3ayw7000lk4rq2tyng0f9","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3aywb000vk4rqvdwkncja"},{"post_id":"cl4e3ayw20006k4rquulgmw0p","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3aywb000zk4rqw35lb9z5"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3aywc0012k4rq1czwy0e7"},{"post_id":"cl4e3ayw30009k4rq3tb9w6c1","category_id":"cl4e3aywa000pk4rqgiis00zt","_id":"cl4e3aywd0015k4rqe1xsj964"},{"post_id":"cl4e3aywb000yk4rqxz70twim","category_id":"cl4e3ayw30007k4rq5q27pri6","_id":"cl4e3aywd0018k4rqrwt0kgej"},{"post_id":"cl4e3ayw4000bk4rqfkrfycv9","category_id":"cl4e3aywb000wk4rqhokjgazd","_id":"cl4e3aywe001ak4rqbkq5w31x"},{"post_id":"cl4e3ayw5000ek4rqmwjukauj","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3aywe001dk4rqx7ot736e"},{"post_id":"cl4e3ayw9000nk4rqvk13b23j","category_id":"cl4e3aywa000pk4rqgiis00zt","_id":"cl4e3aywf001hk4rqg4esikcm"},{"post_id":"cl4e3aywa000uk4rqswg5ul47","category_id":"cl4e3aywe001ek4rqcuyu2xuj","_id":"cl4e3aywf001lk4rq11fenovp"},{"post_id":"cl4e3aywc0011k4rqhexz86lw","category_id":"cl4e3aywf001ik4rqcvs4didy","_id":"cl4e3aywg001qk4rqdipuqag6"},{"post_id":"cl4e3aywc0013k4rq1lethby0","category_id":"cl4e3aywf001mk4rqd2z5bo4z","_id":"cl4e3aywg001tk4rqscw6ef82"},{"post_id":"cl4e3aywd0017k4rq2khspe2d","category_id":"cl4e3aywg001rk4rq2aohxrj8","_id":"cl4e3aywg001vk4rqkkp8ax2i"},{"post_id":"cl4e3az050034k4rq9053iyjf","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3az0j003bk4rqr4oasfcy"},{"post_id":"cl4e3az080036k4rq8q2zybtu","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0k003ek4rqv7kfrib7"},{"post_id":"cl4e3az0c0039k4rqujf7j8zc","category_id":"cl4e3aywg001rk4rq2aohxrj8","_id":"cl4e3az0l003hk4rq7o8mx9qo"},{"post_id":"cl4e3az0j003dk4rqxq5dp2oa","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0l003lk4rqoycr8r3a"},{"post_id":"cl4e3az0k003gk4rqjn9pl75i","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0m003ok4rqq0k33xhw"},{"post_id":"cl4e3az0l003jk4rq9852f1yb","category_id":"cl4e3aywg001rk4rq2aohxrj8","_id":"cl4e3az0n003rk4rq601sqgrj"},{"post_id":"cl4e3az0l003nk4rqaa3ow7gs","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3az0s003wk4rq8vqnqu4s"},{"post_id":"cl4e3az0s003yk4rq66a3ejwm","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0u0045k4rqc7z6e5nv"},{"post_id":"cl4e3az0t0040k4rqomrkyx4c","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0u0048k4rqd4kws671"},{"post_id":"cl4e3az0m003qk4rqsiidmujr","category_id":"cl4e3az0r003uk4rqxbp54yl1","_id":"cl4e3az0w004dk4rqfugkb20u"},{"post_id":"cl4e3az0u0047k4rqapyytbko","category_id":"cl4e3aywf001mk4rqd2z5bo4z","_id":"cl4e3az0w004gk4rq284ayosv"},{"post_id":"cl4e3az0o003tk4rqsz51vbwk","category_id":"cl4e3az0u0043k4rqiqf0epuv","_id":"cl4e3az0x004kk4rqtg2ghtvy"},{"post_id":"cl4e3az0u004ak4rq0py6lia2","category_id":"cl4e3aywg001rk4rq2aohxrj8","_id":"cl4e3az0x004mk4rqwnqdpqem"},{"post_id":"cl4e3az0w004fk4rqou6fmyl1","category_id":"cl4e3ayw6000jk4rq3qg4w01h","_id":"cl4e3az0x004ok4rq1tkfmvpx"},{"post_id":"cl4e3az0t0042k4rq0yqf43uv","category_id":"cl4e3az0v004bk4rqffsbt131","_id":"cl4e3az0y004qk4rqy21bvntj"},{"post_id":"cl4e3az0w004ik4rqnpti0m34","category_id":"cl4e3ayw00002k4rqv2u6ipsx","_id":"cl4e3az0y004sk4rq61lfnkpb"},{"post_id":"cl4eymfoj0051k4rq6y85kjj2","category_id":"cl4fa14ue0000kprqc23148n6","_id":"cl4fa14ug0003kprq0q6yg4l7"},{"post_id":"cl4fbs1np0001zfrqhv1m3dv3","category_id":"cl4fc376s0000jnrqhckd2kj4","_id":"cl4fc376v0003jnrq2omv2fb1"},{"post_id":"cl5bb2bqu0000bks65fmmacr2","category_id":"cl4e3aywf001mk4rqd2z5bo4z","_id":"cl5bb2br20003bks6ha2x7nlo"},{"post_id":"cl5bb2br90004bks6d9mfcptn","category_id":"cl5bb2bra0005bks6b8v7fq8v","_id":"cl5bb2brl0008bks62qdc962i"},{"post_id":"cl5bb2bs4000bbks63u9uhosg","category_id":"cl5bb7xnm000fbks643ri2vtj","_id":"cl5bb7xnt000hbks6az5ced9v"},{"post_id":"cl5bdaau9000ibks628mb5fsz","category_id":"cl5bdb2pn000mbks6fp3mgh64","_id":"cl5bdb2pq000pbks6gi92avq3"},{"post_id":"cl5bdbycr000sbks6gmaj8vti","category_id":"cl5bdb2pn000mbks6fp3mgh64","_id":"cl5bdbyct000vbks6b0ya3put"}],"PostTag":[{"post_id":"cl4e3ayvu0000k4rqg4ve5aiv","tag_id":"cl4e3ayw00003k4rqo6d2mfmi","_id":"cl4e3ayw6000fk4rqn6juqvjh"},{"post_id":"cl4e3ayvu0000k4rqg4ve5aiv","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3ayw6000ik4rqa9bkzo6t"},{"post_id":"cl4e3ayvz0001k4rq3lslezm3","tag_id":"cl4e3ayw4000dk4rqeb7kj0ws","_id":"cl4e3ayw7000mk4rqjtqww1uq"},{"post_id":"cl4e3ayw20005k4rqd8xdmpd0","tag_id":"cl4e3ayw4000dk4rqeb7kj0ws","_id":"cl4e3aywa000tk4rqwmlsggts"},{"post_id":"cl4e3ayw20006k4rquulgmw0p","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3aywc0010k4rqdd77d0eh"},{"post_id":"cl4e3ayw30009k4rq3tb9w6c1","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3aywe001ck4rqhl2let6u"},{"post_id":"cl4e3ayw30009k4rq3tb9w6c1","tag_id":"cl4e3aywd0016k4rq2yhvsu4h","_id":"cl4e3aywe001fk4rqnyhqfbi9"},{"post_id":"cl4e3ayw4000bk4rqfkrfycv9","tag_id":"cl4e3aywe001bk4rqvcsvfqdz","_id":"cl4e3aywf001kk4rq9pjndl92"},{"post_id":"cl4e3ayw4000bk4rqfkrfycv9","tag_id":"cl4e3aywe001gk4rq5vyeav5a","_id":"cl4e3aywf001nk4rqhzxa78kz"},{"post_id":"cl4e3ayw5000ek4rqmwjukauj","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3aywg001pk4rq4d8bohro"},{"post_id":"cl4e3ayw6000gk4rqjj512e3p","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3aywg001xk4rqei9x9uv1"},{"post_id":"cl4e3ayw6000gk4rqjj512e3p","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3aywg001yk4rqezwcprsa"},{"post_id":"cl4e3ayw6000gk4rqjj512e3p","tag_id":"cl4e3aywg001sk4rqiiaehzp1","_id":"cl4e3aywg0020k4rqfip4o22a"},{"post_id":"cl4e3ayw6000gk4rqjj512e3p","tag_id":"cl4e3aywg001uk4rqfkn4en9h","_id":"cl4e3aywh0021k4rqdb72kmlq"},{"post_id":"cl4e3ayw7000lk4rq2tyng0f9","tag_id":"cl4e3aywg001wk4rqy0gjk2up","_id":"cl4e3aywh0023k4rq6lsqs6zf"},{"post_id":"cl4e3ayw7000lk4rq2tyng0f9","tag_id":"cl4e3aywg001zk4rqwqfdiko8","_id":"cl4e3aywh0024k4rq4qwinyki"},{"post_id":"cl4e3ayw9000nk4rqvk13b23j","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3aywh0028k4rq04oa6evy"},{"post_id":"cl4e3ayw9000nk4rqvk13b23j","tag_id":"cl4e3aywh0025k4rq4ie04oba","_id":"cl4e3aywi0029k4rqlpqik73t"},{"post_id":"cl4e3ayw9000nk4rqvk13b23j","tag_id":"cl4e3aywh0026k4rqsltby2xl","_id":"cl4e3aywi002bk4rq14o9hpae"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3aywi002fk4rqqtgyl252"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3aywj002gk4rqjehjzo0y"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","tag_id":"cl4e3aywg001sk4rqiiaehzp1","_id":"cl4e3aywj002ik4rqknys3nu6"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","tag_id":"cl4e3aywg001uk4rqfkn4en9h","_id":"cl4e3aywj002jk4rqirmwf3i1"},{"post_id":"cl4e3aywa000rk4rqudygvq5q","tag_id":"cl4e3aywi002dk4rqs8qhqjwm","_id":"cl4e3aywj002lk4rqytqnxgat"},{"post_id":"cl4e3aywa000uk4rqswg5ul47","tag_id":"cl4e3aywi002ek4rqtctf4x9q","_id":"cl4e3aywj002mk4rqjtklisz0"},{"post_id":"cl4e3aywa000uk4rqswg5ul47","tag_id":"cl4e3aywj002hk4rqxdi50k3m","_id":"cl4e3aywj002ok4rqmuylxrx8"},{"post_id":"cl4e3aywb000yk4rqxz70twim","tag_id":"cl4e3ayw4000dk4rqeb7kj0ws","_id":"cl4e3aywj002rk4rqjpct47z1"},{"post_id":"cl4e3aywb000yk4rqxz70twim","tag_id":"cl4e3aywj002kk4rq9jp9vd8r","_id":"cl4e3aywj002sk4rq3vln3klk"},{"post_id":"cl4e3aywb000yk4rqxz70twim","tag_id":"cl4e3aywj002nk4rqc239893t","_id":"cl4e3aywk002uk4rqxsvx5mge"},{"post_id":"cl4e3aywb000yk4rqxz70twim","tag_id":"cl4e3aywj002pk4rqd668y7zv","_id":"cl4e3aywk002vk4rqyoccnjah"},{"post_id":"cl4e3aywc0011k4rqhexz86lw","tag_id":"cl4e3aywj002qk4rqcswih6fe","_id":"cl4e3aywk002xk4rqhlu1gqya"},{"post_id":"cl4e3aywc0011k4rqhexz86lw","tag_id":"cl4e3aywk002tk4rq3a2uvjlq","_id":"cl4e3aywk002yk4rq9apk9tb8"},{"post_id":"cl4e3aywc0013k4rq1lethby0","tag_id":"cl4e3aywk002wk4rqgksgiv9z","_id":"cl4e3aywk0030k4rqa35pc6x1"},{"post_id":"cl4e3aywc0013k4rq1lethby0","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3aywk0031k4rqfvtstff2"},{"post_id":"cl4e3aywd0017k4rq2khspe2d","tag_id":"cl4e3aywk002zk4rqgi0i9ma9","_id":"cl4e3aywk0032k4rqtp1nj4gr"},{"post_id":"cl4e3aywd0017k4rq2khspe2d","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3aywk0033k4rq5q4jssw6"},{"post_id":"cl4e3az050034k4rq9053iyjf","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3az0b0038k4rq1apvj3al"},{"post_id":"cl4e3az050034k4rq9053iyjf","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3az0j003ck4rqc4hvhi8a"},{"post_id":"cl4e3az080036k4rq8q2zybtu","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0k003fk4rq4f59nmjk"},{"post_id":"cl4e3az0c0039k4rqujf7j8zc","tag_id":"cl4e3aywk002zk4rqgi0i9ma9","_id":"cl4e3az0l003ik4rq6wjkd2sf"},{"post_id":"cl4e3az0c0039k4rqujf7j8zc","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0l003mk4rq6xvdyton"},{"post_id":"cl4e3az0j003dk4rqxq5dp2oa","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0m003pk4rqfe407cgc"},{"post_id":"cl4e3az0l003jk4rq9852f1yb","tag_id":"cl4e3aywk002zk4rqgi0i9ma9","_id":"cl4e3az0o003sk4rq53v6cg85"},{"post_id":"cl4e3az0l003jk4rq9852f1yb","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0s003xk4rq1u11g75u"},{"post_id":"cl4e3az0l003nk4rqaa3ow7gs","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3az0t003zk4rqewym2bkp"},{"post_id":"cl4e3az0l003nk4rqaa3ow7gs","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3az0t0041k4rqszop6agm"},{"post_id":"cl4e3az0k003gk4rqjn9pl75i","tag_id":"cl4e3az0l003kk4rqlkjt378u","_id":"cl4e3az0u0046k4rqj2r05emh"},{"post_id":"cl4e3az0s003yk4rq66a3ejwm","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0u0049k4rqtlr6cr2u"},{"post_id":"cl4e3az0t0040k4rqomrkyx4c","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0w004ek4rq99vaszvp"},{"post_id":"cl4e3az0u0047k4rqapyytbko","tag_id":"cl4e3aywk002wk4rqgksgiv9z","_id":"cl4e3az0w004hk4rq1m7pwsyw"},{"post_id":"cl4e3az0u0047k4rqapyytbko","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0x004lk4rqwmyk01db"},{"post_id":"cl4e3az0m003qk4rqsiidmujr","tag_id":"cl4e3az0s003vk4rqtvnakqxs","_id":"cl4e3az0x004nk4rqb7h7d3v9"},{"post_id":"cl4e3az0m003qk4rqsiidmujr","tag_id":"cl4e3az0u0044k4rqgeza175f","_id":"cl4e3az0x004pk4rqgrife3oc"},{"post_id":"cl4e3az0u004ak4rq0py6lia2","tag_id":"cl4e3aywk002zk4rqgi0i9ma9","_id":"cl4e3az0y004rk4rqwcq3fkl8"},{"post_id":"cl4e3az0u004ak4rq0py6lia2","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0y004tk4rq56bym9j6"},{"post_id":"cl4e3az0w004fk4rqou6fmyl1","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0y004uk4rquzfjkgqs"},{"post_id":"cl4e3az0o003tk4rqsz51vbwk","tag_id":"cl4e3az0w004ck4rqqkpwiqhq","_id":"cl4e3az0y004vk4rq3i37rumq"},{"post_id":"cl4e3az0o003tk4rqsz51vbwk","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl4e3az0y004wk4rqg36v8s2k"},{"post_id":"cl4e3az0w004ik4rqnpti0m34","tag_id":"cl4e3aywb000xk4rq3kntb6zr","_id":"cl4e3az0y004xk4rq4ov2cnnw"},{"post_id":"cl4e3az0w004ik4rqnpti0m34","tag_id":"cl4e3ayw30008k4rqsbfxhi2y","_id":"cl4e3az0y004yk4rqnfxqd0xp"},{"post_id":"cl4e3az0t0042k4rq0yqf43uv","tag_id":"cl4e3az0x004jk4rqrjyetdq7","_id":"cl4e3az0y004zk4rquf2swrzj"},{"post_id":"cl4eymfoj0051k4rq6y85kjj2","tag_id":"cl4fa14uf0001kprqd64i6fj8","_id":"cl4fa14ug0002kprqfadn1xu1"},{"post_id":"cl4fbs1np0001zfrqhv1m3dv3","tag_id":"cl4fbs9tk0004zfrqext95x0w","_id":"cl4fbs9tm0007zfrqc4aj481c"},{"post_id":"cl4fbs1np0001zfrqhv1m3dv3","tag_id":"cl4fc376u0001jnrq0vghgen2","_id":"cl4fc376u0002jnrq57tr8a7h"},{"post_id":"cl4fbmovm0000zfrqha87h154","tag_id":"cl4fca45l0000mirq78sv6bff","_id":"cl4fca45m0001mirqa4q0a309"},{"post_id":"cl5bb2bqu0000bks65fmmacr2","tag_id":"cl4e3aywk002wk4rqgksgiv9z","_id":"cl5bb2br20001bks6f5xr1jn3"},{"post_id":"cl5bb2bqu0000bks65fmmacr2","tag_id":"cl4e3aywa000qk4rqw17f3261","_id":"cl5bb2br20002bks69a2q5m9a"},{"post_id":"cl5bb2br90004bks6d9mfcptn","tag_id":"cl5bb2brj0006bks6e7hegy0c","_id":"cl5bb2brl0009bks674n06bjq"},{"post_id":"cl5bb2br90004bks6d9mfcptn","tag_id":"cl5bb2brl0007bks6hsq7c0pq","_id":"cl5bb2brl000abks68gd2hejr"},{"post_id":"cl5bb2bs4000bbks63u9uhosg","tag_id":"cl4e3aywk002wk4rqgksgiv9z","_id":"cl5bb2bsb000cbks6a2x126bw"},{"post_id":"cl5bb2bs4000bbks63u9uhosg","tag_id":"cl4e3az0x004jk4rqrjyetdq7","_id":"cl5bb7xnr000gbks6gui1dwmp"},{"post_id":"cl5bdaau9000ibks628mb5fsz","tag_id":"cl5bdb2po000nbks60g752tc9","_id":"cl5bdb2pq000qbks6aokga1qz"},{"post_id":"cl5bdaau9000ibks628mb5fsz","tag_id":"cl5bdb2po000obks61hzif6cg","_id":"cl5bdb2pq000rbks6dpel5rv7"},{"post_id":"cl5bdbycr000sbks6gmaj8vti","tag_id":"cl5bdb2po000nbks60g752tc9","_id":"cl5bdbyct000tbks68u6db4d3"},{"post_id":"cl5bdbycr000sbks6gmaj8vti","tag_id":"cl5bdb2po000obks61hzif6cg","_id":"cl5bdbyct000ubks65i3l97ni"}],"Tag":[{"name":"Aliyun","_id":"cl4e3ayw00003k4rqo6d2mfmi"},{"name":"Nginx","_id":"cl4e3ayw30008k4rqsbfxhi2y"},{"name":"H5","_id":"cl4e3ayw4000dk4rqeb7kj0ws"},{"name":"JS","_id":"cl4e3aywa000qk4rqw17f3261"},{"name":"Linux","_id":"cl4e3aywb000xk4rq3kntb6zr"},{"name":"hexo","_id":"cl4e3aywd0016k4rq2yhvsu4h"},{"name":"Mac","_id":"cl4e3aywe001bk4rqvcsvfqdz"},{"name":"模拟器","_id":"cl4e3aywe001gk4rq5vyeav5a"},{"name":"NodeJS","_id":"cl4e3aywg001sk4rqiiaehzp1"},{"name":"RabbitMQ","_id":"cl4e3aywg001uk4rqfkn4en9h"},{"name":"Vue","_id":"cl4e3aywg001wk4rqy0gjk2up"},{"name":"Vue-cli","_id":"cl4e3aywg001zk4rqwqfdiko8"},{"name":"mysql","_id":"cl4e3aywh0025k4rq4ie04oba"},{"name":"Navicat","_id":"cl4e3aywh0026k4rqsltby2xl"},{"name":"amqplib","_id":"cl4e3aywi002dk4rqs8qhqjwm"},{"name":"flutter","_id":"cl4e3aywi002ek4rqtctf4x9q"},{"name":"plugin","_id":"cl4e3aywj002hk4rqxdi50k3m"},{"name":"IOS","_id":"cl4e3aywj002kk4rq9jp9vd8r"},{"name":"Android","_id":"cl4e3aywj002nk4rqc239893t"},{"name":"sdk","_id":"cl4e3aywj002pk4rqd668y7zv"},{"name":"web","_id":"cl4e3aywj002qk4rqcswih6fe"},{"name":"proxy","_id":"cl4e3aywk002tk4rq3a2uvjlq"},{"name":"NODE","_id":"cl4e3aywk002wk4rqgksgiv9z"},{"name":"前端","_id":"cl4e3aywk002zk4rqgi0i9ma9"},{"name":"其他","_id":"cl4e3az0l003kk4rqlkjt378u"},{"name":"css","_id":"cl4e3az0s003vk4rqtvnakqxs"},{"name":"垂直居中","_id":"cl4e3az0u0044k4rqgeza175f"},{"name":"VUE","_id":"cl4e3az0w004ck4rqqkpwiqhq"},{"name":"CSS","_id":"cl4e3az0x004jk4rqrjyetdq7"},{"name":"Macos","_id":"cl4fa14uf0001kprqd64i6fj8"},{"name":"lbz","_id":"cl4fbs9th0003zfrq9ebr5v6z"},{"name":"打包","_id":"cl4fbs9tk0004zfrqext95x0w"},{"name":"Lbz","_id":"cl4fc376u0001jnrq0vghgen2"},{"name":"dialry","_id":"cl4fca45l0000mirq78sv6bff"},{"name":"CI/CD","_id":"cl5bb2brj0006bks6e7hegy0c"},{"name":"GIT","_id":"cl5bb2brl0007bks6hsq7c0pq"},{"name":"小程序","_id":"cl5bdb2po000nbks60g752tc9"},{"name":"UniApp","_id":"cl5bdb2po000obks61hzif6cg"}]}}